
Recno:: 0
URL:: http://blog.csdn.net/NoMasp/article/list/22

ParseText::
nomasp - 博客频道 - CSDN.NET nomasp Some people die at 20 and aren't buried until 80. 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 【SICP练习】5 练习1.9 ﻿﻿ 以下是第一个加起两个正整数的方法，其中inc将参数加1，dec将参数减1。 (define (+ a b)          (if(= a 0)             b             (inc (+ (dec a) b)))) 用代换模型展示(+ 4 5)如下： (+ 4 5) (inc (+ 3 5)) (inc ... 2015-02-05 12:56 阅读 (662) 评论 (0) 【SICP练习】4 练习1.8 如果对前面的内容理解透彻了，看到这个表达式就知道直接将y换成guess即可。博主写的函数如下: (define (improve guess x)          (/(+ (* guess guess)) (* 2 guess)) 3)) 但是如果中写到这里就认为完成了那就错了，如果还是用书中的good-enough?的话，那也应该将guess的平方变成立方。... 2015-02-05 12:00 阅读 (704) 评论 (0) 【SICP练习】3 练习1.7 练习1.7 这道题回应了第15页所说的good-enough?并不是一个很好的检测方法。 我们首先来按照题目要求用4组最大或最小的数来检测原文中的good-enough? (sqrt-iter 1.0 0.00000081)               0.0009 ;Value: 0.3125863108711088 (sqrt-iter 1.0 0.... 2015-02-05 11:10 阅读 (1179) 评论 (0) 【SICP练习】2 练习1.6 练习1.6 这道题通过由一个新版本的if来引出，主要讨论的还是应用序和正则序的问题。我看到“将if提供为一种特殊形式”时还满头雾水，并不太清楚什么特殊形式。当再返回看if的语法时才发现，这在第12页if的一般表达式下面一段。如果得到真值，解释器就去求值并返回其值。注意，在此处已经返回其值了，并没有进行后续运算。 而通过cond写出来的常规过程的if，在解释器采用应用序求值的... 2015-02-05 11:08 阅读 (835) 评论 (0) 【SICP练习】1 练习1.1-练习1.5 练习1.1 这道题主要是关于简单的数字运算，我们看完之后可以在MIT-Scheme中进行验算。如果环境不熟悉，可以参见【Scheme归纳】的第一篇博文。如果发现在MIT-Scheme等环境上的运算结果和自己算的不一样，也应该再仔细看看在书写代码的时候有没有手误。   练习1.2 这是一道将表达式转换成前缀形式的题目，博主最喜欢Lisp中的一大堆括号了。写完之后在... 2015-02-05 11:05 阅读 (910) 评论 (0) 425条数据 共22页 首页 上一页 ... 21 22 个人资料 NoMasp 访问： 577557次 积分： 12838 等级： 积分：12838 排名： 第505名 原创： 413篇 转载： 0篇 译文： 11篇 评论： 561条 Notice： ^ nomasp 博客导航 ^ 欢迎您访问我的更多博客文章 《 nomasp 博客导读 》 点击此处即可轻松导航喔 感谢您的支持，希望我的博客对您有所帮助 转载请联系本人 ^ 个人信息 ^ * 邮箱： kinhiox#gmail.com * 备用邮箱： nomasp#outlook.com * CSDN 博客专家、论坛版主 * 微软MSP Billboard * 欢迎入群交流 * 【UWP开发交流群】 523310660 * 【Android开发交流群】 303295519 * 【算法交流群】 376079805 微博 博客专栏 UWP通用应用开发 文章：6篇 阅读：9475 Android 开发 文章：6篇 阅读：5733 LeetCode 文章：27篇 阅读：18471 算法 文章：10篇 阅读：42943 万里征程——Windows App开发 文章：37篇 阅读：86176 欧拉工程 文章：0篇 阅读：0 OpenCV归纳 文章：5篇 阅读：14524 Scheme归纳 文章：13篇 阅读：45166 SICP练习 文章：151篇 阅读：179579 文章分类 nomasp 博客导读 (1) Algorithm (31) Books (2) C (1) C++ (9) C# (5) CampusLife (1) Data Structures (9) Fun (9) Git+Github (2) HTML5 (0) IT-Talk (7) Learning World (1) Mathematics (1) Music (1) OpenCV (6) OpenXML (1) Project Euler (9) Scheme & SICP (14) SICP Exercise (151) TCP/IP (3) TechLife (8) Useful gadgets (18) Windows 10 (30) WPF (4) Android Errors (5) Android Notes (11) Windows App (10) Linux Notes (5) LeetCode (42) Android (9) Java (3) UWP (10) Kinect (0) AOJ and POJ (5) 文章存档 2015年12月 (30) 2015年11月 (20) 2015年10月 (19) 2015年09月 (35) 2015年07月 (13) 2015年06月 (28) 2015年05月 (48) 2015年04月 (43) 2015年03月 (92) 2015年02月 (97) 阅读排行 【算法】1 由插入排序看如何分析和设计算法 (9405) 【算法】5 传说中的快排是怎样的 (7875) 怎样学习一门编程语言 (7072) 好玩的WPF第三弹：颤抖吧，地球！消失吧，地球！ (7048) nomasp 博客导读：UWP、Android、Algorithm、Lisp (6637) 【算法】4 五张图带你体会堆算法 (5690) 【SICP归纳】1 过程和代换模型 (5574) 【Scheme归纳】3 比较do, let, loop (5313) 【SICP归纳】2 高阶函数和数据抽象 (5112) 【万里征程——Windows App开发】页面布局和基本导航 (5006) 最新评论 【万字总结】图解堆算法、链表、栈与队列（多图预警） NoMasp : @superleexpert:可以加群以后一起刷LeetCode呐 【万字总结】图解堆算法、链表、栈与队列（多图预警） superleexpert : 详细且深入，又看了几篇LeeCode，学习学习！ 图论算法 有图有代码 万字总结 向前辈致敬 NoMasp : @turbo_mars_yang:哈哈 欢迎加入我博客侧边栏中的算法交流群来一块刷题呐 图论算法 有图有代码 万字总结 向前辈致敬 turbo_mars_yang : 收了收了！恰逢学数据结构的东西，很多东西都讲的通俗易懂，很受用！ nomasp的2015博客之星投票总结 NoMasp : @erlian1992:你的图标新换的么？ID我见过……共勉啦！ nomasp的2015博客之星投票总结 erlian1992 : 看了楼主这些，觉得自己差的好远，自己还的努力。 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @wu2304211:有的 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @CaidChen:可以加群交流喔 nomasp的2015博客之星投票总结 yamorn : @yamorn:good nomasp的2015博客之星投票总结 yamorn : @yamorn:good

Recno:: 1
URL:: http://blog.csdn.net/NoMasp/article/list/3

ParseText::
nomasp - 博客频道 - CSDN.NET nomasp Some people die at 20 and aren't buried until 80. 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 LeetCode 26 Remove Duplicates from Sorted Array（从已排序数组中移除重复元素） 翻译给定一个已排序的数组，删除重复的元素，这样每个元素只出现一次，并且返回新的数组长度。不允许为另一个数组使用额外的空间，你必须就地以常量空间执行这个操作。例如， 给定输入数组为 [1,1,2]你的函数应该返回length = 2， 其前两个元素分别是1和2。它不关心你离开后的新长度。原文Given a sorted array, remove the duplicates in place suc... 2015-11-13 22:41 阅读 (646) 评论 (0) LeetCode 25 Reverse Nodes in k-Group（在K组链表中反转结点） 原文给定一个链表，在一定时间内反转这个链表的结点，并返回修改后的链表。如果结点数不是K的倍数，那么剩余的结点就保持原样。你不应该在结点上修改它的值，只有结点自身可以修改。只允许使用常量空间。例如给定链表： 1->2->3->4->5对于 k = 2，你应该返回： 2->1->4->3->5对于 k = 3，你应该返回： 3->2->1->4->5翻译Given a linked list, reve... 2015-11-13 11:11 阅读 (507) 评论 (0) LeetCode 24 Swap Nodes in Pairs（交换序列中的结点） 翻译给定一个链表，调换每两个相邻节点，并返回其头部。例如， 给定 1->2->3->4， 你应该返回的链表是 2->1->4->3。你的算法必须使用唯一不变的空间。你也不能修改列表中的值，只有节点本身是可以改变的。原文Give a linked list, swap every two adjacent nodes and return its head.For example, Given 1-... 2015-11-12 18:43 阅读 (782) 评论 (0) LeetCode 23 Merge k Sorted Lists（合并K个已排序链表） 翻译合并K个已排序的链表，并且将其排序并返回。 分析和描述其复杂性。原文Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.代码我们采用分治的方法来解决这个问题，其有K个链表，不断将其划分（partition），再将其归并（merge）。划分的部分并不难，将... 2015-11-12 17:30 阅读 (927) 评论 (2) LeetCode 22 Generate Parentheses（生成括号） 翻译给定一个括号序列，写一个函数用于生成正确形式的括号组合。 例如，给定n = 3，一个解决方案集是： "((()))", "(()())", "(())()", "()(())", "()()()"原文Given n pairs of parentheses, write a function to generate all combinations of well-formed parenthe... 2015-11-10 22:41 阅读 (743) 评论 (0) LeetCode 21 Merge Two Sorted Lists（合并两个已排序的数组） 翻译合并两个排好序的链表，并返回这个新链表。 新链表应该由这两个链表的头部拼接而成。原文Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.代码/** * Defini... 2015-11-10 20:38 阅读 (630) 评论 (0) LeetCode 20 Valid Parentheses（有效的括号） 翻译给定一个只包含'(', ')', '{', '}', '[' 和']'的字符串，判断这个输入的字符串是否是有效的。括号必须在正确的形式下闭合，"()" 和"()[]{}" 是有效的，但是 "(]" 和"([)]" 则不是。原文Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determ... 2015-11-10 20:22 阅读 (630) 评论 (0) 如何在Fragment中使用findViewById呢？ 如果你为Fragment在XML文件中创建了什么控件，但findViewById方法却只能被用在Activity类中，所以，有没有办法在Fragment中使用它呢？当然可以，使用getView()方法就OK了，因为这个方法最终会返回当前fragment的根视图。Button btn = (Button) getView().findViewById(R.id.btn);但是你应该知道要在此之前使用o... 2015-11-09 18:49 阅读 (786) 评论 (0) 如何将数据从Activity返回到Fragment——onActivityResult 一段时间没有写了，背景是这样的：MainActivity中启动Fragment，Fragment启动OtherActivity，在OtherActivity中的数据需要返回到Fragment中。 关于数据是怎么传输的，可以看这里： 传送门：Android 学习之路 1：Activity之间传递数据的四种方式 方法其实很简单，只需要重载onActivityResult这个方法就可以了。... 2015-11-09 18:41 阅读 (664) 评论 (2) 嘿嘿嘿，微软创新秀倒计时2天咯 相信我的博客读者中一定大部分都是学生童鞋了，微软创新杯大家都知道吧？8号下午有微软的线上活动——微软创新秀，快添加收藏记得准时观看哈。以下是活动的相关信息咯：当当当！！！大神小菜们都看过来，距离大咖云集，干货满满的微软创新秀（Microsoft Imagine Show）还有两天时间！想知道Imagine Cup到底出过哪些精彩的作品吗？想知道Kinect、Cortana等技术能为你的创新带来什么样... 2015-11-06 20:10 阅读 (976) 评论 (1) 【UWP应用开发实战】第二弹 移动版秒变桌面版 实践：罗马数计算器 背景想想通用应用平台终于诞生了，正好又碰到两个挺有意思的题目：传送门：LeetCode 12 Integer to Roman（整型数到罗马数） 传送门：LeetCode 13 Roman to Integer（罗马数到整型数） 于是就打算将它们整合成个一个简单的App吧，虽然功能不多，但万一有用户需要呢？常规的计算器功能我没实现，系统自带的已经非常好了。个人是很喜欢Pivot控件的，可以左右滑... 2015-10-24 16:01 阅读 (1250) 评论 (3) 如何用两个栈实现一个队列，以及用两个队列实现一个栈 开始再开始开始实现之前，首先将定读者已经理解了栈和队列的区别（如果不理解的话，可以先看看这一篇，传送门：【算法】7 分不清栈和队列？一张图给你完整体会 ）用两个栈实现一个队列这本来就是一道面试题，所以如果你感兴趣的话可以先自己实现一遍。这是队列的声明：template class CQueue{ public: CQueue(void); ~CQueue(v... 2015-10-24 13:56 阅读 (921) 评论 (0) LeetCode 19 Remove Nth Node From End of List（从列表尾部删除第N个结点）（*） 翻译给定一个链表，移除从尾部起的第n个结点，并且返回它的头结点。例如，给定链表：1->2->3->4->5，n = 2。在移除尾部起第二个结点后，链表将变成：1->2->3->5。备注：给定的n是有效的，代码尽量一次通过。原文Given a linked list, remove the nth node from the end of list and return its head.For ex... 2015-10-21 15:32 阅读 (814) 评论 (0) LeetCode 18 4Sum（4个数的和） 翻译给定一个有n个数字的数组S，在S中是否存在元素a，b，c和d的和恰好满足a + b + c + d = target。找出数组中所有的不想等的这四个元素，其和等于target。备注：在（a，b，c，d）中的元素必须从小到大排列。（a ≤ b ≤ c ≤ d） 其结果必须不能够重复。例如，给定S = {1 0 -1 0 -2 2}，target = 0。 一个结果集为： (-1, 0, 0, 1... 2015-10-18 12:11 阅读 (621) 评论 (1) LeetCode 17 Letter Combinations of a Phone Number（电话号码的字母组合） 翻译给定一个数字字符串，返回所有这些数字可以表示的字母组合。一个数字到字母的映射（就像电话按钮）如下图所示。输入：数字字符串“23” 输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"]备注:尽管以上答案是无序的，如果你想的话你的答案可以是有序的。原图原文Given a digit string, return all possible... 2015-10-18 10:59 阅读 (608) 评论 (0) LeetCode 16 3Sum Closest（最接近的3个数的和） 翻译给定一个有n个整数的数组S，找出S中3个数，使其和等于一个给定的数，target。返回这3个数的和，你可以假定每个输入都有且只有一个结果。例如，给定S = {-1 2 1 -4}，和target = 1。那么最接近target的和是2。(-1 + 2 + 1 = 2)。原文Given an array S of n integers, find three integers in S such... 2015-10-18 09:59 阅读 (576) 评论 (0) LeetCode 15 3Sum（3个数的和） 翻译给定一个有n个整数的数组S，是否存在三个元素a,b,c使得a+b+c=0? 找出该数组中所有不重复的3个数，它们的和为0。备注： 这三个元素必须是从小到大进行排序。 结果中不能有重复的3个数。例如，给定数组S={-1 0 1 2 -1 4}，一个结果集为： (-1, 0, 1) (-1, -1, 2)原文Given an array S of n integers, are there ele... 2015-10-17 23:19 阅读 (766) 评论 (0) 【UWP应用开发实战】第一弹 使用剪切板 不知道是否还有童鞋记得我上半年写的一系列Windows App开发的博客，那时候Windows 10还处于预览版，UWP（Universal Windows Platform）当时也还处于雏形阶段。在当时的专栏的首篇中，我们就展望过UWP，而如今的UWP简直是更上百层楼了，定当让你刮目相看。不过，这一篇还是先来介绍一下剪切板的功能，因为之前的文章仅仅是介绍了从应用外剪切/复制到应用内，并没有介绍如何... 2015-10-17 20:55 阅读 (817) 评论 (0) LeetCode 14 Longest Common Prefix（最长公共前缀） 翻译写一个函数（或方法）来寻找一个字符串数组中的最长公共前缀。原文Write a function to find the longest common prefix string amongst an array of strings.释义"abcdefg" "abcdefghijk" "abcdfghijk" "abcef"上面的字符串数组的最长公共前缀就是"abc"。思考如下图所示，第一步就是... 2015-10-16 22:05 阅读 (752) 评论 (0) LeetCode 13 Roman to Integer（罗马数到整型数） 翻译给定一个罗马数字，将其转换到整型数值。输入被保证在1到3999之间。原文Given a roman numeral, convert it to an integer.Input is guaranteed to be within the range from 1 to 3999. 一开始就没有构思好，虽然按上一题的套路可以走下去，但结果就是像我下面这样……代码凌乱……public class... 2015-10-15 16:24 阅读 (621) 评论 (0) 425条数据 共22页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 NoMasp 访问： 577557次 积分： 12838 等级： 积分：12838 排名： 第505名 原创： 413篇 转载： 0篇 译文： 11篇 评论： 561条 Notice： ^ nomasp 博客导航 ^ 欢迎您访问我的更多博客文章 《 nomasp 博客导读 》 点击此处即可轻松导航喔 感谢您的支持，希望我的博客对您有所帮助 转载请联系本人 ^ 个人信息 ^ * 邮箱： kinhiox#gmail.com * 备用邮箱： nomasp#outlook.com * CSDN 博客专家、论坛版主 * 微软MSP Billboard * 欢迎入群交流 * 【UWP开发交流群】 523310660 * 【Android开发交流群】 303295519 * 【算法交流群】 376079805 微博 博客专栏 UWP通用应用开发 文章：6篇 阅读：9475 Android 开发 文章：6篇 阅读：5733 LeetCode 文章：27篇 阅读：18471 算法 文章：10篇 阅读：42943 万里征程——Windows App开发 文章：37篇 阅读：86176 欧拉工程 文章：0篇 阅读：0 OpenCV归纳 文章：5篇 阅读：14524 Scheme归纳 文章：13篇 阅读：45166 SICP练习 文章：151篇 阅读：179579 文章分类 nomasp 博客导读 (1) Algorithm (31) Books (2) C (1) C++ (9) C# (5) CampusLife (1) Data Structures (9) Fun (9) Git+Github (2) HTML5 (0) IT-Talk (7) Learning World (1) Mathematics (1) Music (1) OpenCV (6) OpenXML (1) Project Euler (9) Scheme & SICP (14) SICP Exercise (151) TCP/IP (3) TechLife (8) Useful gadgets (18) Windows 10 (30) WPF (4) Android Errors (5) Android Notes (11) Windows App (10) Linux Notes (5) LeetCode (42) Android (9) Java (3) UWP (10) Kinect (0) AOJ and POJ (5) 文章存档 2015年12月 (30) 2015年11月 (20) 2015年10月 (19) 2015年09月 (35) 2015年07月 (13) 2015年06月 (28) 2015年05月 (48) 2015年04月 (43) 2015年03月 (92) 2015年02月 (97) 阅读排行 【算法】1 由插入排序看如何分析和设计算法 (9405) 【算法】5 传说中的快排是怎样的 (7875) 怎样学习一门编程语言 (7072) 好玩的WPF第三弹：颤抖吧，地球！消失吧，地球！ (7048) nomasp 博客导读：UWP、Android、Algorithm、Lisp (6637) 【算法】4 五张图带你体会堆算法 (5690) 【SICP归纳】1 过程和代换模型 (5574) 【Scheme归纳】3 比较do, let, loop (5313) 【SICP归纳】2 高阶函数和数据抽象 (5112) 【万里征程——Windows App开发】页面布局和基本导航 (5006) 最新评论 【万字总结】图解堆算法、链表、栈与队列（多图预警） NoMasp : @superleexpert:可以加群以后一起刷LeetCode呐 【万字总结】图解堆算法、链表、栈与队列（多图预警） superleexpert : 详细且深入，又看了几篇LeeCode，学习学习！ 图论算法 有图有代码 万字总结 向前辈致敬 NoMasp : @turbo_mars_yang:哈哈 欢迎加入我博客侧边栏中的算法交流群来一块刷题呐 图论算法 有图有代码 万字总结 向前辈致敬 turbo_mars_yang : 收了收了！恰逢学数据结构的东西，很多东西都讲的通俗易懂，很受用！ nomasp的2015博客之星投票总结 NoMasp : @erlian1992:你的图标新换的么？ID我见过……共勉啦！ nomasp的2015博客之星投票总结 erlian1992 : 看了楼主这些，觉得自己差的好远，自己还的努力。 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @wu2304211:有的 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @CaidChen:可以加群交流喔 nomasp的2015博客之星投票总结 yamorn : @yamorn:good nomasp的2015博客之星投票总结 yamorn : @yamorn:good

Recno:: 2
URL:: http://blog.csdn.net/NoMasp/article/list/4

ParseText::
nomasp - 博客频道 - CSDN.NET nomasp Some people die at 20 and aren't buried until 80. 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 LeetCode 12 Integer to Roman（整型数到罗马数） 翻译给定一个整型数值，将其转换到罗马数字。输入被保证在1到3999之间。原文Given an integer, convert it to a roman numeral.Input is guaranteed to be within the range from 1 to 3999.我不会告诉你一开始我是用的无数个变量和ifif……后来实在受不了这么多变量就将其写成了枚举，那么接下来就迎刃而解了... 2015-10-15 14:46 阅读 (554) 评论 (5) LeetCode 11 Container With Most Water（最大水容器） 翻译给定n个非负整数a1,a2,...,an，其中每个代表一个点坐标（i,ai）。n个垂直线段例如线段的两个端点在（i,ai）和（i,0）。找到两个线段，与x轴形成一个容器，使其包含最多的水。备注：你不必倾倒容器。翻译Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate... 2015-10-12 22:11 阅读 (684) 评论 (0) LeetCode 10 Regular Expression Matching （正则表达式匹配） 翻译实现支持“.”和“*”的正则表达式匹配。“.” 匹配支持单个字符 “*” 匹配零个或多个前面的元素匹配应该覆盖到整个输入的字符串（而不是局部的）。该函数的原型应该是：bool isMatch(const char * s, const char * p)示例：isMatch("aa","a") → false isMatch("aa","aa") → true isMatch("aaa","aa... 2015-10-12 12:07 阅读 (775) 评论 (0) Android 学习之路一：Activity之间传递数据的四种方式 传递数据 新建 Activity 在项目中右键，选择 New，继续选择中下方的 Activity，最后是 Blank Activity。此时 Android Studio 会为我们自动添加一个对应的布局文件，为布局文件中的 TextView 添加 ID，以便后续使用。 用Intent 发送数据 在主布局文件中新建一个 Button 控件，并在主类中定义它，然后为它设置 Click 的监听事件。... 2015-10-11 00:40 阅读 (1231) 评论 (9) Android 学习之路 1：如何在Activity之间传递数据 传递数据 新建 Activity 在项目中右键，选择 New，继续选择中下方的 Activity，最后是 Blank Activity。此时 Android Studio 会为我们自动添加一个对应的布局文件，为布局文件中的 TextView 添加 ID，以便后续使用。 用Intent 发送数据 在主布局文件中新建一个 Button 控件，并在主类中定义它，然后为它设置 Click 的监听事件。... 2015-10-11 00:37 阅读 (854) 评论 (1) 如何调用有道翻译API（Java，HTTP） 申请Key 首先如图进入有道翻译，在下方点击“有道翻译API”。 紧接着来调用数据接口，按提示完成下列输入框。 如下图所示，已经申请成功了。 下图是官方给的示例，可以有xml和json、jsonp等三种数据格式。 public class Translator { public static void main(String[] args) {... 2015-10-09 21:33 阅读 (818) 评论 (2) Android 开发第七弹：简易时钟（秒表） 本文承接，Android 开发第五弹：简易时钟（闹钟） 和 Android 开发第六弹：简易时钟（计时器），这一部分是关于秒表的。 布局同样是新建一个类（StopWatchView）并扩展自LinearLayout，并将其用作布局。<myapplication.nomasp.com.clock.StopWatchView android : id = "@+id/tabStopWatch"... 2015-10-08 21:47 阅读 (800) 评论 (2) Android 开发第六弹：简易时钟（计时器） 接上篇Android 开发第五弹：简易时钟（闹钟） ，这次是一个时钟类应用，目前依旧是主要的功能，长得还是很挫。当然了，核心功能是有的……时钟先把简单的时钟给列出来吧，这里都写的很简单，即便要用世界各个城市的话，也只是相应的加上或减去几个小时。新建TimeView类，并扩展自LinearLayout，然后布局文件和上一篇中那么写就好了。<myapplication.nomasp.com.clock.... 2015-10-08 19:03 阅读 (733) 评论 (0) Android 开发第五弹：简易时钟（闹钟） 这次是一个时钟类应用，目前依旧是主要的功能，长得还是很挫。当然了，核心功能是有的……闹钟之前的准备布局的话，不管是采用FrameLayout或者LinearLayout都可以。我这里采用了FrameLayout，然后加上一个TabHost，之前在论坛看到有同学提问在WF中这种多个栏目的用什么控件，我的答案是在WF、WPF、Windows App、ASP.NET以及安卓上都是Tab开头的控件。<Fra... 2015-10-08 18:29 阅读 (923) 评论 (1) Java 文件操作 打开文件首先实例化JFileChoosers，可以用FileNameExtensionFilter来设置过滤器，showOpenDialog方法的返回值是int类型，因此定义一个value，最后如果value等于JFileChooser.APPROVE_OPTION就可以对文件进行操作，此处打印出文件路径。private JFileChooser chooser;FileNameExtensionF... 2015-09-28 23:28 阅读 (922) 评论 (0) LeetCode 9 Palindrome Number （回文数） 翻译确定一个整数是否是回文数。不能使用额外的空间。一些提示：负数能不能是回文数呢？（比如，-1）如果你想将整数转换成字符串，但要注意限制使用额外的空间。你也可以考虑翻转一个整数。 然而，如果你已经解决了问题“翻转整数（译者注：LeetCode 第七题）， 那么你应该知道翻转的整数可能会造成溢出。 你将如何处理这种情况？这是一个解决该问题更通用的方法。原文Determine whether an in... 2015-09-27 21:30 阅读 (698) 评论 (3) Android 开发第四弹：围住神经猫（简单Demo） 前言如下图所示，这篇文章要完成的就是这个简单的示例，后续会继续添加上动画和声音。这里主要包含了游戏的一些简单元素和逻辑。在我的多次尝试后发现想赢它还是挺难的……毕竟它的走法不是简简单单的Random而已。代码已经上传至Github，建议大家直接Fork而不是Download，毕竟开源的意义在于彼此分享代码，而且这个太简单了，后续肯定还会继续更新的，所以……游戏背景元素的定义由于代码还会继续更新，所以... 2015-09-26 12:50 阅读 (1184) 评论 (6) LeetCode 8 String to Integer (atoi)（转换到整型） 翻译实现“atoi”将字符串转换成整型数。提示：仔细考虑所有可能的输入。如你想要挑战，请不要参阅下面并问问自己都有哪些可能的输入请看。说明：模糊的指定（没有给定的输入规格）就是为了这个问题。你负责收集所有可能的输入。atoi的要求：函数首先放弃尽可能多的空字符直到找到一个非空白字符。然后从这个字符开始，带上可选的初始加/减字符，其后还可能跟着越多越好的数字，并将它们解释成一个数值。这个字符串可能在这... 2015-09-25 09:35 阅读 (644) 评论 (0) 用代码窥探Java支持的语言 一次偶然发现原来可以用如此简单的方式打印出Java支持的语言，用“窥探”一词嘛……标题党，哈哈。import java.util.Locale;public class Language { public static void main(String[] args) { Locale[] localList = Locale.getAvailableLocales();... 2015-09-24 22:03 阅读 (779) 评论 (1) 如何引入android-support-v4/Fragment 今天发现需要用到Fragment，但并不能直接import出来，找了一下原来它在这里：... 2015-09-24 14:02 阅读 (636) 评论 (2) Android 开发第三弹：自定义左右菜单（滑动动画+蒙版效果） 下面的截图……哎，因为1080P在Windows 10上虽然适配了，但大部分软件并没有跟上，比如某个录制GIF的软件，所以这里有一定的偏移导致画面不完整，但效果大概就是这么一个效果了。MainUI.java首先需要这么一个类，在这里一些UI的滑动呀之类的都会定义。首先吧，定义好这些变量，当然了，实际开发过程中肯定需要哪一个就添加上哪一个的。 private Context context;... 2015-09-24 13:30 阅读 (986) 评论 (2) LeetCode 7 Reverse Integer（翻转整数） 翻译翻转一个整型数例1：x = 123, 返回 321 例2：x = -123, 返回 -321原文Reverse digits of an integer.Example1: x = 123, return 321 Example2: x = -123, return -321Have you thought about this? （来自LeetCode官网）Here are some good... 2015-09-23 09:13 阅读 (642) 评论 (1) Android 开发第二弹：通讯录 MainActivity.javapackage myapplication.nomasp.com.addressbook;import android.app.Activity; import android.os.Bundle; import android.view.Menu; import android.view.MenuItem; import android.widget.ListVi... 2015-09-22 21:08 阅读 (812) 评论 (2) LeetCode 6 ZigZag Conversion（Z型转换） 翻译字符串“PAYPALISHIRING”通过一个给定的行数写成如下这种Z型模式： P A H N A P L S I I G Y I R然后一行一行的读取：“PAHNAPLSIIGYIR”写代码读入一个字符串并通过给定的行数做这个转换：string convert(string text, int nRows);调用convert("PAYPALISHIRING", 3)，应该... 2015-09-21 22:22 阅读 (793) 评论 (0) Android 开发第一弹：倒计时 好吧……我承认很尴尬……但毕竟作为开端，还是将这个贴出来，以后一定写出厉害的！<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent... 2015-09-21 21:27 阅读 (1096) 评论 (2) 425条数据 共22页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 NoMasp 访问： 577557次 积分： 12838 等级： 积分：12838 排名： 第505名 原创： 413篇 转载： 0篇 译文： 11篇 评论： 561条 Notice： ^ nomasp 博客导航 ^ 欢迎您访问我的更多博客文章 《 nomasp 博客导读 》 点击此处即可轻松导航喔 感谢您的支持，希望我的博客对您有所帮助 转载请联系本人 ^ 个人信息 ^ * 邮箱： kinhiox#gmail.com * 备用邮箱： nomasp#outlook.com * CSDN 博客专家、论坛版主 * 微软MSP Billboard * 欢迎入群交流 * 【UWP开发交流群】 523310660 * 【Android开发交流群】 303295519 * 【算法交流群】 376079805 微博 博客专栏 UWP通用应用开发 文章：6篇 阅读：9475 Android 开发 文章：6篇 阅读：5733 LeetCode 文章：27篇 阅读：18471 算法 文章：10篇 阅读：42943 万里征程——Windows App开发 文章：37篇 阅读：86176 欧拉工程 文章：0篇 阅读：0 OpenCV归纳 文章：5篇 阅读：14524 Scheme归纳 文章：13篇 阅读：45166 SICP练习 文章：151篇 阅读：179579 文章分类 nomasp 博客导读 (1) Algorithm (31) Books (2) C (1) C++ (9) C# (5) CampusLife (1) Data Structures (9) Fun (9) Git+Github (2) HTML5 (0) IT-Talk (7) Learning World (1) Mathematics (1) Music (1) OpenCV (6) OpenXML (1) Project Euler (9) Scheme & SICP (14) SICP Exercise (151) TCP/IP (3) TechLife (8) Useful gadgets (18) Windows 10 (30) WPF (4) Android Errors (5) Android Notes (11) Windows App (10) Linux Notes (5) LeetCode (42) Android (9) Java (3) UWP (10) Kinect (0) AOJ and POJ (5) 文章存档 2015年12月 (30) 2015年11月 (20) 2015年10月 (19) 2015年09月 (35) 2015年07月 (13) 2015年06月 (28) 2015年05月 (48) 2015年04月 (43) 2015年03月 (92) 2015年02月 (97) 阅读排行 【算法】1 由插入排序看如何分析和设计算法 (9405) 【算法】5 传说中的快排是怎样的 (7875) 怎样学习一门编程语言 (7072) 好玩的WPF第三弹：颤抖吧，地球！消失吧，地球！ (7048) nomasp 博客导读：UWP、Android、Algorithm、Lisp (6637) 【算法】4 五张图带你体会堆算法 (5690) 【SICP归纳】1 过程和代换模型 (5574) 【Scheme归纳】3 比较do, let, loop (5313) 【SICP归纳】2 高阶函数和数据抽象 (5112) 【万里征程——Windows App开发】页面布局和基本导航 (5006) 最新评论 【万字总结】图解堆算法、链表、栈与队列（多图预警） NoMasp : @superleexpert:可以加群以后一起刷LeetCode呐 【万字总结】图解堆算法、链表、栈与队列（多图预警） superleexpert : 详细且深入，又看了几篇LeeCode，学习学习！ 图论算法 有图有代码 万字总结 向前辈致敬 NoMasp : @turbo_mars_yang:哈哈 欢迎加入我博客侧边栏中的算法交流群来一块刷题呐 图论算法 有图有代码 万字总结 向前辈致敬 turbo_mars_yang : 收了收了！恰逢学数据结构的东西，很多东西都讲的通俗易懂，很受用！ nomasp的2015博客之星投票总结 NoMasp : @erlian1992:你的图标新换的么？ID我见过……共勉啦！ nomasp的2015博客之星投票总结 erlian1992 : 看了楼主这些，觉得自己差的好远，自己还的努力。 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @wu2304211:有的 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @CaidChen:可以加群交流喔 nomasp的2015博客之星投票总结 yamorn : @yamorn:good nomasp的2015博客之星投票总结 yamorn : @yamorn:good

Recno:: 3
URL:: http://blog.csdn.net/NoMasp/article/list/5

ParseText::
nomasp - 博客频道 - CSDN.NET nomasp Some people die at 20 and aren't buried until 80. 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 LeetCode 5 Longest Palindromic Substring（最大回文子字符串） 翻译给定一个字符串S，找出它的最大回文子字符串。 你可以假定S的最大长度为1000， 并且这里存在唯一一个最大回文子字符串。原文Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists on... 2015-09-20 13:46 阅读 (676) 评论 (12) LeetCode 4 Median of Two Sorted Arrays 翻译有两个给定的排好序的数组nums1和nums2，其大小分别为m和n。 找出这两个已排序数组的中位数。 总运行时间的复杂度应该是O(log(m+n))。原文There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The o... 2015-09-17 16:13 阅读 (623) 评论 (0) [置顶] nomasp 博客导读：UWP、Android、Algorithm、Lisp ProfileIntroduction to Blog 您能看到这篇博客导读是我的荣幸，本博客会持续更新，感谢您的支持，欢迎您的关注与留言。博客有多个专栏，分别是关于 Windows App开发 、 UWP（通用Windows平台）开发 、 SICP习题解 和 Scheme语言学习 、 算法解析 与 LeetCode等题解 、 Android应用开发 ，而最近会添加的文章将... 2015-09-17 12:28 阅读 (6655) 评论 (29) Eclipse 智能感知 大家都知道在输入了“.”后，Eclipse就会给出相关的提示。比如说我输入了：System再按下“.”就会提示出out等等。但是如果我想要输入Sys就可以提示出System这也是可以的。在下图所示的“Auto activation triggers for Java”中，本来是一个“.”，那么就在此处将“abcd……xyz”全部键入进去就好了。其他一些快捷键：F2：修复Ctrl+D：删除行Ctrl+... 2015-09-17 12:22 阅读 (769) 评论 (0) 从Hello World到defmacro，那些令人惊叹的代码！ 前言自从看到那个征文活动便灵感突现，这是个为大家介绍Lisp语言的机会，也是个赞扬最让我心动的语言的机会。毕竟还是学生党，还未有太多时间来学习它，但内心满满的都是热爱与兴奋。文中如有疏漏，还请各位指教！一次偶然在《黑客与画家》第二版中了解到这门神奇的语言，瞬间便被”洗脑“，立刻找到一大堆资料，前前后后的兴奋的学了几个月，无奈于就业压力，还是选择先将C++/Java等作为主力。这篇文章主要面向没见过L... 2015-09-16 16:08 阅读 (1031) 评论 (4) LeetCode 3 Longest Substring Without Repeating Characters 翻译 给定一个字符串，找出其没有重复字符的最大子序列的长度。 例如，“abcabcbb”的无重复字符的最大子序列是“abc”，它的长度是3。 “bbbbb”的最大子序列是“b”，它的长度是1。 原文 Given a string, find the length of the longest substring without repeating characters. For... 2015-09-16 12:09 阅读 (539) 评论 (0) LeetCode 2 Add Two Numbers 翻译：给你两个表示两个非负数字的链表。数字以相反的顺序存储，其节点包含单个数字。将这两个数字相加并将其作为一个链表返回。输入: (2 -> 4 -> 3) + (5 -> 6 -> 4) 输出: 7 -> 0 -> 8原题：You are given two linked lists representing two non-negative numbers. The digits are stor... 2015-09-14 22:20 阅读 (760) 评论 (0) How To Use the Windows Phone 8.1 GridView and ListView Controls TESTTESTTESTTESTTESTTESTTESTTEST... 2015-09-14 21:35 阅读 (642) 评论 (0) LeetCode 1 Two Sum 翻译：给定一个整型数组，找出能相加起来等于一个特定目标数字的两个数。函数twoSum返回这两个相加起来等于目标值的数字的索引，且index1必须小于index2。 请记住你返回的答案（包括index1和index2）都不是从0开始的。你可以假定每个输入都有且仅有一个解决方案。输入: numbers={2, 7, 11, 15}, target=9 输出: index1=1, index2=2原文：G... 2015-09-11 10:39 阅读 (666) 评论 (1) 如何在Android Studio上使用Github 快来将你的Android Studio项目Push到Github上吧！... 2015-09-05 19:07 阅读 (1367) 评论 (5) Android Studio 快捷键 Action Mac OS X Win/Linux 注释代码(//) Cmd + / Ctrl + / 注释代码(/**/) Cmd + Option + / Ctrl + Shift + / 格式化代码 Cmd + Option + L Ctrl + Alt + L 清除无效包引用 Option + Control + O Alt + Ctrl... 2015-09-05 18:17 阅读 (1128) 评论 (0) 如何使用Android命令 作为Windows用户，拥有着出色的图形化界面体验，但命令行则的图形化界面的根基，下面就来看看如何用命令行来执行android命令吧。首先你得进入你的Android SDK的安装目录的tools子目录，比如我这里如下图所见。然后在此处启动cmd，你不会用Win+R启动cmd，然后慢慢的cd到tools目录下吧？如果是的话……还请多多用命令行了。按住SHIFT键，然后单击鼠标右键，选择“在此处打开命令... 2015-09-04 21:10 阅读 (1137) 评论 (0) 修改Android Studio的字体 File-Settings-Editor-Colors&Fonts-Font点击Save As后命名新建一个，然后自己设置字体，字体大小等，最后Apply即可。... 2015-09-04 14:46 阅读 (711) 评论 (0) 修改Android Studio的Android SDK Path 为什么要修改路径呢……因为我之前装过Eclipse，也装过Android SDK，但是昨天装Android Studio的时候不小心又装了一个Android SDK，于是就重复了，所以希望将它们合并起来。·点击上面的红色方框内的图标。上面第三排就有一个Android SDK Location，于是乎，直接改路径就好了。然后点击下面的Launch Standalone SDK Manager。点击上面... 2015-09-04 14:43 阅读 (752) 评论 (1) 在Ubuntu（Linux）上安装Android Studio 安装JDK关于这一部分，请参考我之前的博文：在Ubuntu（Linux）上安装JDK。如果你已经完成了这一部分，可以直接跳到下一节。下载Android Studio1，首先到Android官网下载安装包，点击此处。2，将安装包移动到你想安装Android Studio的位置，比如我在Documents下，然后在终端中执行：sudo tar zxvf android-sdk_r24.3.4-linux... 2015-09-04 13:36 阅读 (666) 评论 (2) Linux：在处理时有错误发生： open-vm-tools，E: Sub-process /usr/bin/dpkg returned an error code (1) 今天遇到了这个错误……真是弄了好久……在处理时有错误发生： open-vm-tools open-vm-tools-dkms open-vm-dkms E: Sub-process /usr/bin/dpkg returned an error code (1)解决办法：sudo apt-get autoremove open-vm-dkms open-vm-tools --purge这大概就... 2015-09-04 13:11 阅读 (669) 评论 (1) VMware：锁定文件失败，未定启动虚拟机 如果VMware提示：锁定文件失败………………开启模块DiskEarly的操作失败。未能启动虚拟机。试了好多办法都不行，最终还得在虚拟机文件中找方法……在你的虚拟机磁盘存放的目录下搜索：*.lck不出意外的话会有3个文件，都以字母M开头，将它们统统删掉即可。（M后面的数字你我均不相同，所以我就不贴图了）... 2015-09-04 12:49 阅读 (539) 评论 (1) 如何在Ubuntu中安装JDK 下载JDK1，到Oracle官网下载相关的JDK2，在你的账户下新建文件夹，并命名为“Java”，当然了，名字你可以随意。也就是在/home/user/Java，我的位置是/home/nomasp/Java。然后将你下载的文件提取并拷贝到此处。3，打开终端（terminal），如果找不到就直接搜索好了。配置环境变量Tips：使用“Ctrl+H”可以显示隐藏文件。1，在终端中输入：sudo emacs... 2015-09-04 12:38 阅读 (566) 评论 (0) 在Ubuntu（Linux）上获取root权限 如果此时你还没有设置root密码，可以按如下方式设置。打开终端（terminal），输入：sudo passwd root它会提示输入“输入新的UNIX密码”，然后跟着输入即可。以后若要在终端中启用root，则直接输入：su root就会从当前账户提升到root账户。... 2015-09-04 12:18 阅读 (533) 评论 (0) Android : Done. Nothing was installed ……android-sdk\temp\build-tools_r20-windows.zip (拒绝访问。)拒绝访问，好吧，多试试呢？还是拒绝……那就用管理员权限吧！右键SDK Manager.exe，并选择“以管理员身份运行”，接着点击“是”……好吧，这时候你可能看到4Kib/s之类的……慢慢等吧，或者直接用VPN吧。祝好运。... 2015-09-03 20:54 阅读 (820) 评论 (0) 425条数据 共22页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 NoMasp 访问： 577557次 积分： 12838 等级： 积分：12838 排名： 第505名 原创： 413篇 转载： 0篇 译文： 11篇 评论： 561条 Notice： ^ nomasp 博客导航 ^ 欢迎您访问我的更多博客文章 《 nomasp 博客导读 》 点击此处即可轻松导航喔 感谢您的支持，希望我的博客对您有所帮助 转载请联系本人 ^ 个人信息 ^ * 邮箱： kinhiox#gmail.com * 备用邮箱： nomasp#outlook.com * CSDN 博客专家、论坛版主 * 微软MSP Billboard * 欢迎入群交流 * 【UWP开发交流群】 523310660 * 【Android开发交流群】 303295519 * 【算法交流群】 376079805 微博 博客专栏 UWP通用应用开发 文章：6篇 阅读：9475 Android 开发 文章：6篇 阅读：5733 LeetCode 文章：27篇 阅读：18471 算法 文章：10篇 阅读：42943 万里征程——Windows App开发 文章：37篇 阅读：86176 欧拉工程 文章：0篇 阅读：0 OpenCV归纳 文章：5篇 阅读：14524 Scheme归纳 文章：13篇 阅读：45166 SICP练习 文章：151篇 阅读：179579 文章分类 nomasp 博客导读 (1) Algorithm (31) Books (2) C (1) C++ (9) C# (5) CampusLife (1) Data Structures (9) Fun (9) Git+Github (2) HTML5 (0) IT-Talk (7) Learning World (1) Mathematics (1) Music (1) OpenCV (6) OpenXML (1) Project Euler (9) Scheme & SICP (14) SICP Exercise (151) TCP/IP (3) TechLife (8) Useful gadgets (18) Windows 10 (30) WPF (4) Android Errors (5) Android Notes (11) Windows App (10) Linux Notes (5) LeetCode (42) Android (9) Java (3) UWP (10) Kinect (0) AOJ and POJ (5) 阅读排行 【算法】1 由插入排序看如何分析和设计算法 (9405) 【算法】5 传说中的快排是怎样的 (7875) 怎样学习一门编程语言 (7072) 好玩的WPF第三弹：颤抖吧，地球！消失吧，地球！ (7048) nomasp 博客导读：UWP、Android、Algorithm、Lisp (6637) 【算法】4 五张图带你体会堆算法 (5690) 【SICP归纳】1 过程和代换模型 (5574) 【Scheme归纳】3 比较do, let, loop (5313) 【SICP归纳】2 高阶函数和数据抽象 (5112) 【万里征程——Windows App开发】页面布局和基本导航 (5006) 最新评论 【万字总结】图解堆算法、链表、栈与队列（多图预警） NoMasp : @superleexpert:可以加群以后一起刷LeetCode呐 【万字总结】图解堆算法、链表、栈与队列（多图预警） superleexpert : 详细且深入，又看了几篇LeeCode，学习学习！ 图论算法 有图有代码 万字总结 向前辈致敬 NoMasp : @turbo_mars_yang:哈哈 欢迎加入我博客侧边栏中的算法交流群来一块刷题呐 图论算法 有图有代码 万字总结 向前辈致敬 turbo_mars_yang : 收了收了！恰逢学数据结构的东西，很多东西都讲的通俗易懂，很受用！ nomasp的2015博客之星投票总结 NoMasp : @erlian1992:你的图标新换的么？ID我见过……共勉啦！ nomasp的2015博客之星投票总结 erlian1992 : 看了楼主这些，觉得自己差的好远，自己还的努力。 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @wu2304211:有的 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @CaidChen:可以加群交流喔 nomasp的2015博客之星投票总结 yamorn : @yamorn:good nomasp的2015博客之星投票总结 yamorn : @yamorn:good

Recno:: 4
URL:: http://blog.csdn.net/NoMasp/article/list/6

ParseText::
nomasp - 博客频道 - CSDN.NET nomasp Some people die at 20 and aren't buried until 80. 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android Version Android Version API Level Linux Kernel in AOSP 1.5 Cupcake 3 2.6.27 1.6 Donut 4 2.6.29 2.0/1 Eclair 5-7 2.6.29 2.2.x Froyo 8 2.6.32 2.3.x Gingerbread 9, 10 2.6.35... 2015-09-03 18:11 阅读 (758) 评论 (2) Android：Plug-in com.android.ide.eclipse.adt was unable to load class android 直接将Eclipse关掉，重新打开后也许就好了。如还没好，就执行如下步骤：1.如果还没有添加ADT，则：Help -> Add New Software -> Add在“Name”中填入ADT。2.如果已经安装了ADT，就直接将ADT的地址填写到此处。3.如果还有无法解决，尝试移除ADT后再重新安装。... 2015-09-03 15:52 阅读 (831) 评论 (0) Android：OnClickListener cannot be resolved to a type 在看国外大师写的C++/C#这种语言类的书籍时，往往会对要using些什么都写的很清楚，但国内某本安卓书籍就没写这些……好吧，这些都太基础了，确实没必要写。不过我还是不知道遇到如题的问题该怎么办，于是找了下资料……import android.view.View.OnClickListener;... 2015-09-03 15:50 阅读 (742) 评论 (0) Android：problem opening wizard the selected wizard could not be started 直接将Eclipse关掉，重新打开后也许就好了。如还没好，就执行如下步骤：1.如果还没有添加ADT，则：Help -> Add New Software -> Add在“Name”中填入ADT。2.如果已经安装了ADT，就直接将ADT的地址填写到此处。3.如果还有无法解决，尝试移除ADT后再重新安装。... 2015-09-03 15:47 阅读 (839) 评论 (0) 【征文】极客头条使用体验及改进建议 极客头条众所周知，”极客“一词源于美国俚语”Geek“的音译，它不仅代表着拥有非凡智慧与实力，更是代表着对计算机技术有着狂热兴趣且付诸实践的梦想。数十年过去了，Geek的含义更加广泛且深入人心，它代表着一种生活方式——尖端的技术与时尚的潮流，仿佛一夜间Geek一词从电气迈进了电子，从传统工业迈进了互联网。他们不分长幼、不分年龄，在新的经济环境下探索新的商业模式、从固有技术中引申与创新成新的技术、造就... 2015-07-30 07:41 阅读 (984) 评论 (7) 【征文】极客头条使用体验及改进建议 极客头条众所周知，”极客“一词源于美国俚语”Geek“的音译，它不仅代表着拥有非凡智慧与实力，更是代表着对计算机技术有着狂热兴趣且付诸实践的梦想。数十年过去了，Geek的含义更加广泛且深入人心，它代表着一种生活方式——尖端的技术与时尚的潮流，仿佛一夜间Geek一词从电气迈进了电子，从传统工业迈进了互联网。他们不分长幼、不分年龄，在新的经济环境下探索新的商业模式、从固有技术中引申与创新成新的技术、造就... 2015-07-30 07:40 阅读 (591) 评论 (1) Windows App开发之更多技巧 使用华丽丽的字体所有的TextBlock等都用的默认字体，大家是否会感觉很千篇一律很枯燥呢？对于FontFamily，我们见过一些可以用的字体，但这个属性不像Foreground等有下拉框，所以我们在应用中见过的许多有意思的字体却没法用，因为不知道名字。代码的话也贴张图示意一下吧。好了，我就不再多说废话啦，名字都是从这里来的——>>>>>注意： 1）除了微软雅黑外，大部分字体只能在Windows... 2015-07-27 07:34 阅读 (1265) 评论 (2) Windows App开发之使用通知与动态磁贴 使用Toast通知示例前面我们使用了MessageDialog来作为弹窗，这里来介绍一个更加高大上的Toast通知。Toast通知本质上动力是由XML来提供的，一开始我还不相信不知道XML原来有这么大的威力。现在就来看看和Toast相关的知识。1）实例化ToastNotification类。ToastNotification toast1 = new ToastNotification(xdoc);... 2015-07-27 07:30 阅读 (1350) 评论 (6) Windows App开发之集成设置、帮助、搜索和共享 应用设置和应用帮助”设置“合约上一节中我们学习了如何将应用设置保存到本地，这种方式是通过在App内添加设置选项，这里还有一种方式。微软将其称为“设置”合约，并且所有的Windows应用商店应用都将自动配合这种合约。但是应用自带的这种设置如果不做任何修改可谓毫无作用。而我们添加这些设置则可以让应用更加个性化哦。SettingsFlyout首先新建一个SettingsFlyout页面，也许很多童鞋会像我... 2015-07-23 08:07 阅读 (1279) 评论 (2) Windows App开发之文件与数据 读取文件和文件夹名这一节开始我们将陆续看到Windows App是怎样操作文件的。在Windows上读取文件名、文件夹名首先我们在XAML中定义一个Button和TextBlock，将读取文件/文件夹名的过程写在前者的click事件中，后者则用来显示文件信息。... 2015-07-23 07:59 阅读 (1603) 评论 (4) Windows App开发之集合控件与数据绑定 为ListView和GridView添加数据ListView采用垂直堆叠得方式显示数据，而GridView则采用水平堆叠得方式。长相的话嘛，它们都差不多。 <ListView x:Name="listView1... 2015-07-21 07:59 阅读 (885) 评论 (0) Windows App开发之集合控件与数据绑定 为ListView和GridView添加数据ListView采用垂直堆叠得方式显示数据，而GridView则采用水平堆叠得方式。长相的话嘛，它们都差不多。 <ListView x:Name="listView1... 2015-07-18 08:50 阅读 (846) 评论 (2) Windows App开发之编辑文本与绘制图形 编辑文本及键盘输入相信大家都会使用TextBox，但如果要让文本在TextBox中换行该怎么做呢？将TextWrapping属性设置为Wrap，将AcceptsReturn属性设置为True就好咯。PasswordBox很明显就是一个密码框了，和其他的控件相比其有2个特殊之处，一个是其可以用MaxLength来控制最大的长度，一个是用PasswordChanged来捕捉密码的改名。显然比如QQ密码的... 2015-07-18 08:44 阅读 (3093) 评论 (5) Windows App开发之常用控件与应用栏 控件的属性、事件与样式资源如何添加控件添加控件的方式有多种，大家更喜欢下面哪一种呢？1）使用诸如Blend for Visual Studio或Microsoft Visual Studio XAML设计器的设计工具。 2）在Visual Studio XAML编辑器中将控件添加到XAML代码中。 3）在代码中添加控件。 注意：当应用运行时会看到你在代码中添加的控件，但在 Visual Stud... 2015-07-17 07:52 阅读 (1674) 评论 (5) Windows App开发之应用布局与基本导航 简单示例看页面布局和导航首先按照上一篇博客中的顺序来新建一个项目。新建好之后就点开MainPage.xaml开始敲代码了。 <RowDefinition Height="100... 2015-07-17 07:32 阅读 (977) 评论 (2) Windows App开发之开发准备 操作系统及SDK操作系统显而易见，想要开发Windows App就得在Windows 8/8.1/10上进行，老旧的Windows XP/Vista/7已经不能满足时代的需要了。当然，在Windows App的发展过程中，其本身也有着较大的变动，为了使用新的特性，建议使用Windows 10。我在写这个教程时，Windows 10正式版并未面世，因此暂时未介绍Windows 10上的新特性，随后会继... 2015-07-17 07:26 阅读 (1368) 评论 (3) 【算法】1 由插入排序看如何分析和设计算法 插入排序及其解决思路算法的作用自然不用多说，无论是在校学生，还是已经工作多年，只要想在计算机这条道路走得更远，算法都是必不可少的。就像编程语言中的“Hello World！”程序一般，学习算法一开始学的便是排序算法。排序问题在日常生活中也是很常见的，说得专业点：输入是：n个数的一个序列 输出是：这n个数的一个全... 2015-07-01 13:17 阅读 (9416) 评论 (29) 【算法】8 图文搭配诠释三种链表及其哨兵 三种链表的介绍原谅我拙劣的绘图能力，花了半天终于还是决定从网上找来了这三张图，因为环形链表的弧形箭头难以完美的展现出来。以下3张图片来自Wikipedia。大家看着图片应该也都知道这分别是哪种链表了。那么链表到底是什么呢？它和前面的栈和队列一般，都是基本的数据结构，其中的各个对象按线性顺序排列。大家应该注意到了图中的大黑点，有些C/C++编程基础的同学肯定能够猜到链表是通过各个对象里的指针来指向下一... 2015-06-28 15:17 阅读 (3128) 评论 (7) 【算法】9 散列表【待补充】 上次写了四个多小时，但文章被荡掉了。暂时不想重写，先搁置下来，以后再补充。... 2015-06-28 14:51 阅读 (636) 评论 (2) 【音乐分享】Let Me Go LET ME GO Breathe it in Hold my breath I don’t have the heart To live without it It’s my fault It’s your fault If you don’t give a damn Forget about it I won’t call it bad You know I wante... 2015-06-26 21:26 阅读 (785) 评论 (1) 425条数据 共22页 首页 上一页 ... 6 7 8 9 10 ... 下一页 尾页 个人资料 NoMasp 访问： 577556次 积分： 12838 等级： 积分：12838 排名： 第505名 原创： 413篇 转载： 0篇 译文： 11篇 评论： 561条 Notice： ^ nomasp 博客导航 ^ 欢迎您访问我的更多博客文章 《 nomasp 博客导读 》 点击此处即可轻松导航喔 感谢您的支持，希望我的博客对您有所帮助 转载请联系本人 ^ 个人信息 ^ * 邮箱： kinhiox#gmail.com * 备用邮箱： nomasp#outlook.com * CSDN 博客专家、论坛版主 * 微软MSP Billboard * 欢迎入群交流 * 【UWP开发交流群】 523310660 * 【Android开发交流群】 303295519 * 【算法交流群】 376079805 微博 博客专栏 UWP通用应用开发 文章：6篇 阅读：9475 Android 开发 文章：6篇 阅读：5733 LeetCode 文章：27篇 阅读：18471 算法 文章：10篇 阅读：42943 万里征程——Windows App开发 文章：37篇 阅读：86176 欧拉工程 文章：0篇 阅读：0 OpenCV归纳 文章：5篇 阅读：14524 Scheme归纳 文章：13篇 阅读：45166 SICP练习 文章：151篇 阅读：179579 文章分类 nomasp 博客导读 (1) Algorithm (31) Books (2) C (1) C++ (9) C# (5) CampusLife (1) Data Structures (9) Fun (9) Git+Github (2) HTML5 (0) IT-Talk (7) Learning World (1) Mathematics (1) Music (1) OpenCV (6) OpenXML (1) Project Euler (9) Scheme & SICP (14) SICP Exercise (151) TCP/IP (3) TechLife (8) Useful gadgets (18) Windows 10 (30) WPF (4) Android Errors (5) Android Notes (11) Windows App (10) Linux Notes (5) LeetCode (42) Android (9) Java (3) UWP (10) Kinect (0) AOJ and POJ (5) 文章存档 2015年12月 (30) 2015年11月 (20) 2015年10月 (19) 2015年09月 (35) 2015年07月 (13) 2015年06月 (28) 2015年05月 (48) 2015年04月 (43) 2015年03月 (92) 2015年02月 (97) 阅读排行 【算法】1 由插入排序看如何分析和设计算法 (9405) 【算法】5 传说中的快排是怎样的 (7875) 怎样学习一门编程语言 (7072) 好玩的WPF第三弹：颤抖吧，地球！消失吧，地球！ (7048) nomasp 博客导读：UWP、Android、Algorithm、Lisp (6637) 【算法】4 五张图带你体会堆算法 (5690) 【SICP归纳】1 过程和代换模型 (5574) 【Scheme归纳】3 比较do, let, loop (5313) 【SICP归纳】2 高阶函数和数据抽象 (5112) 【万里征程——Windows App开发】页面布局和基本导航 (5006) 最新评论 【万字总结】图解堆算法、链表、栈与队列（多图预警） NoMasp : @superleexpert:可以加群以后一起刷LeetCode呐 【万字总结】图解堆算法、链表、栈与队列（多图预警） superleexpert : 详细且深入，又看了几篇LeeCode，学习学习！ 图论算法 有图有代码 万字总结 向前辈致敬 NoMasp : @turbo_mars_yang:哈哈 欢迎加入我博客侧边栏中的算法交流群来一块刷题呐 图论算法 有图有代码 万字总结 向前辈致敬 turbo_mars_yang : 收了收了！恰逢学数据结构的东西，很多东西都讲的通俗易懂，很受用！ nomasp的2015博客之星投票总结 NoMasp : @erlian1992:你的图标新换的么？ID我见过……共勉啦！ nomasp的2015博客之星投票总结 erlian1992 : 看了楼主这些，觉得自己差的好远，自己还的努力。 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @wu2304211:有的 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @CaidChen:可以加群交流喔 nomasp的2015博客之星投票总结 yamorn : @yamorn:good nomasp的2015博客之星投票总结 yamorn : @yamorn:good

Recno:: 5
URL:: http://blog.csdn.net/column/details/cssoftdev.html

ParseText::
专栏：C#软件开发实例 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > C#软件开发实例 分享到： 新浪微博 腾讯微博 C#软件开发实例 以软件开发实例的方式展现C#语言在应用程序、网站开发方面的使用技巧。 订阅 最新更新文章 [编程语言] c#TextBox输入框自动提示、自动完成、自动补全功能 功能概览相关属性TextBox.AutoCompleteCustomSource 属性获取或设置当 TextBox.AutoCompleteSource 属性设置为 [CustomSource] 时要使用的自定义 T:System.Collections.Specialized.StringCollection。TextBox.AutoCompleteMode 属性获取或设置一个选项，该选项控制自动... textbox 输入框 自动提示 自动完成 自动补全 testcs_dn 2015-04-26 22:05 阅读(3400) 评论(3) [编程语言] Data Url生成工具C#版 第二版 为什么有第二版  首先感谢 jenlynn 同学的留言“DATA URL两种生成方式，C#和HTML5 两者同一张生成的base64编码貌似不一样，能有什么方法让他们达成一致吗”。  其次，在研究这个问题时发现了Bug和异常。 Bug：图片编码判断问题，不管什么扩展名的都默认使用了PNG编码。 异常：检测到 ContextSwitchDeadlock界面预览针对相关问题的改进方法图片编码判断问题... DataUrl Data Url Image Base64 testcs_dn 2015-04-25 07:29 阅读(916) 评论(0) [编程语言] 检测到 ContextSwitchDeadlock 错误信息检测到 ContextSwitchDeadlock Message: CLR 无法从 COM 上下文 0x622b440 转换为 COM 上下文 0x622b5b0，这种状态已持续 60 秒。拥有目标上下文/单元的线程很有可能执行的是非泵式等待或者在不发送 Windows 消息的情况下处理一个运行时间非常长的操作。这种情况通常会影响到性能，甚至可能导致应用程序不响应或者使用的内存随时间不断... Context switch Deadlock 响应 操作 testcs_dn 2015-04-24 21:38 阅读(1043) 评论(0) [编程语言] MFC窗口风格 WS Window Styles中文说明及在c#中的定义使用 窗口风格(Window style)WS_BORDER 有边框窗口 WS_CAPTION 必须和WS_BORDER风格配合，但不能与WS_DLGFRAME风格一起使用。指示窗口包含标题要部分。 WS_CHILD 说明窗口为子窗口，不能应用于弹出式窗口风格(WS_POPUP)。 WS_CHILDWINDOW 同WS_CHILD。 WS_CLIPCHILDREN 绘制父窗口时... mfc 窗口风格 窗口样式 扩展风格 扩展样式 testcs_dn 2015-04-23 08:05 阅读(1619) 评论(1) [编程语言] C# Windows API应用之FlashWindowEx ——实现窗口闪烁的方法 Windows APIWindows 这个多作业系统除了协调应用程序的执行、分配内存、管理资源…之外， 它同时也是一个很大的服务中心，调用这个服务中心的各种服务（每一种服务就是一个函数），可以帮应用程式达到开启视窗、描绘图形、使用周边设备等目的，由于这些函数服务的对象是应用程序(Application)， 所以便称之为 Application Programming Interface，简称 API... c# WindowsAPI FlashWindo 窗口闪烁 方法 testcs_dn 2015-04-20 08:56 阅读(1134) 评论(0) [编程语言] 命名空间“System”中不存在类型或命名空间名称“Linq”。是否缺少程序集引用? 完整错误信息错误 1 命名空间“System”中不存在类型或命名空间名称“Linq”。是否缺少程序集引用? F:\CsProjects\CSharp实现SPY++\CSharp实现SPY++\Form1.cs 6 14 CSharp实现SPY++错误原因开始的时候创建项目选择的Framework版本是4.0，但后来为了项目的平台适应性，将Framework的版本改为了2.0，重新编译... 命名空间 system 不存在 Linq 程序集 testcs_dn 2015-04-20 08:11 阅读(1371) 评论(0) [编程语言] 未能加载文件或程序集“System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”或它的某一个依 完整错误信息错误 7 未能加载文件或程序集“System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”或它的某一个依赖项。系统找不到指定的文件。 行 123，位置 5。 F:\CsProjects\CSharp实现SPY++\CSharp实现SPY++\Properties\Resour... 未能加载 程序集 Drawing 依赖项 找不到 testcs_dn 2015-04-20 07:48 阅读(2529) 评论(0) [编程语言] C# Windows API应用之GetDesktopWindow ——获得桌面所有窗口句柄的方法 Windows APIWindows 这个多作业系统除了协调应用程序的执行、分配内存、管理资源…之外， 它同时也是一个很大的服务中心，调用这个服务中心的各种服务（每一种服务就是一个函数），可以帮应用程式达到开启视窗、描绘图形、使用周边设备等目的，由于这些函数服务的对象是应用程序(Application)， 所以便称之为 Application Programming Interface，简称 API... c# Windows API 获得桌面 窗口句柄 testcs_dn 2015-04-19 14:29 阅读(2708) 评论(0) [编程语言] 为什么Invalidate收到的ClipRectangle和发送的不一样 最近在研究c#局部刷新重绘的功能，来提高用户体验，但是在OnPaint事件中接收到的e.ClipRectangle和我在其它方法中调用mainForm.Invalidate(cutOutRect, false);时传递的大小不一致，经过一番排查才发现，是Windows底层做了处理！！！！我们来看图1：上面是调用mainForm.Invalidate(cutOutRect, false);前输出的信... Invalidate Rectangle OnPaint ClipRectangle 局部重绘 testcs_dn 2014-12-07 22:39 阅读(800) 评论(0) [编程语言] C# System.Drawing.Region类的方法使用图解 本实例使用两个矩形A和B来演示System.Drawing.Region类的各方法的功能。绘制两个矩形获取目标矩形与此Region不相交的部分获取此Region与目标矩形不相交的部分获取两个矩形的交集获取两个矩形的并集获取两个矩形的并集中不相交的部分将此 System.Drawing.Region 对象初始化为无限内部显示RegionData信息... C# System Drawing Region 方法 testcs_dn 2014-12-04 21:33 阅读(1954) 评论(3) [编程语言] C# 带滚动条的Label控件 C# 带滚动条的Label控件，用鼠标选的时候还是有点闪烁：namespace 带滚动条的Label控件 { public class TextBoxLabel : System.Windows.Forms.TextBox { [DllImport("user32", EntryPoint = "HideCaret")] private static... label 控件 c# textbox testcs_dn 2014-11-17 16:30 阅读(2328) 评论(0) [编程语言] 验证时出错。HRESULT = '8000000A' 这本来是在VS2005下创建的一下项目，后来改用VS2010的开发环境，.NET Framework的版本还是使用2.0，但每次生成之后都会在解决方案的同级目录下产生一个名称乱码的文件夹，解决了那个问题之后，由于这个Windows窗体应用程序添加一个安装项目，项目生成时出现以下错误：错误 1 验证时出错。HRESULT = '8000000A' F:\CsProjects\屏幕截图2005\屏幕截... vs2010 vs2005 验证时出错 HRESULT 8000000A testcs_dn 2014-11-13 22:25 阅读(1606) 评论(0) [编程语言] CSharp文件读取与写入入门图解 C#是微软公司发布的一种面向对象的、运行于.NET Framework之上的高级程序设计语言。并定于在微软职业开发者论坛(PDC)上登台亮相。C#是微软公司研究员Anders Hejlsberg的最新成果。C#看起来与Java有着惊人的相似；它包括了诸如单一继承、接口、与Java几乎同样的语法和编译成中间代码再运行的过程。但是C#与Java有着明显的不同，它借鉴了Delphi的一个特点，与COM（... visual studio 2010 c# 文件读取 写入 入门图解 testcs_dn 2014-10-19 23:00 阅读(3717) 评论(0) [编程语言] C# 模拟PrintScreen 和 Alt+PrintScreen截取屏幕图片 C# 模拟PrintScreen 和 Alt+PrintScreen截取屏幕图片要实现这个功能，这里使用keybd_event API函数功能：该函数合成一次击键事件。系统可使用这种合成的击键事件来产生WM_KEYUP或WM_KEYDOWN消息，键盘驱动程序的中断处理程序调用keybd_event函数。在Windows NT中该函数己被使用SendInput来替代它。函数原型；VOID keybd... c# PrintScreen Alt PrintScreen 截图 testcs_dn 2014-10-03 23:42 阅读(2006) 评论(0) [编程语言] C#新建DataColumn类时Type类型参数的生成方式 DataColumn类的几个需要Type类型参数的构造函数如下： // // 摘要: // 使用指定列名称和数据类型初始化 System.Data.DataColumn 类的新实例。 // // 参数: // columnName: // 一个字符串，它表示要创建的列的... C# DataColumn Type 类型 参数 testcs_dn 2014-07-26 11:29 阅读(4789) 评论(0) [编程语言] c#DataGridView数据绑定示例——格式化单元格的内容 c#DataGridView数据绑定示例 格式化单元格的内容在使用DataGridView显示数据库中的数据时，我们需要对某列的数据显示格式进行格式化。这里使用实时构建的数据，如下图：在显示时对第三列的数据进行格式化，如下图：测试数据构建及数据绑定： private void Form1_Load(object sender, EventArgs e) { ... C# datagridview 数据 格式化 源码 testcs_dn 2014-07-15 22:45 阅读(6949) 评论(0) [编程语言] C#数学运算表达式解释器 C#数学运算表达式解释器测试文件内容：a=2+3*2; b=2*(2+3);浏览按钮事件处理程序： private void button_browse_Click(object sender, EventArgs e) { OpenFileDialog fbd = new OpenFileDialog(); fbd.T... C# 数学 运算 表达式 解释器 testcs_dn 2014-07-14 23:39 阅读(1034) 评论(2) [编程语言] c#Winform程序的toolStripButton自定义背景应用示例源码 C# Winform程序的toolStrip中toolStripButton的背景是蓝色的，如何改变背景及边框的颜色和样式呢？实现此功能需要重写toolStripButton的Paint方法这里只是给出解决问题的思路和方法，如下图，当鼠标移到按钮上，背景会变为黑色实现代码如下： ToolStripButton tsb = (ToolStripButton)sender;... C# winform toolStrip 自定义背景 testcs_dn 2014-07-14 13:43 阅读(1098) 评论(0) [编程语言] C#多线程编程实例 线程与窗体交互 C#多线程编程实例 线程与窗体交互代码： public partial class Form1 : Form { //声明线程数组 Thread[] workThreads = new Thread[10]; public Form1() { InitializeComponent();... C# 多线程 编程 实例 线程安全 testcs_dn 2014-07-10 22:49 阅读(8932) 评论(0) [编程语言] C#软件开发实例.私人订制自己的屏幕截图工具（十）在截图中包含鼠标指针形状 在写一此帮助说明类的文档时，截取的图片如果还有鼠标的指针形状，看起来就更直观更友好一些。接下来就讲一下如何在截图中包含鼠标指针形状。上一篇：C#软件开发实例.私人订制自己的屏幕截图工具（九）使用自定义光标，QQ截图时的光标添加结构CURSORINFO：[StructLayout(LayoutKind.Sequential)] struct CURSORINFO {... C# 鼠标 指针 屏幕截图工具 cursor testcs_dn 2014-06-21 23:14 阅读(1831) 评论(3) 44条数据 共3页 1 2 3 下一页 尾页 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2014-04-12 文章数：44篇 浏览量： 147398 次 热门文章 最新评论 C#软件开发实例.私人订制自己的屏幕截图工具（十）在截图中包含鼠标指针形状 qigeminghaofan ： 大神，可以把完整的代码放出来吗？好像没有截图信息栏、编辑工具栏这些功能 C#软件开发实例.私人订制自己的屏幕截图工具（七）添加放大镜的功能 testcs_dn ： @bestgonghuibin:这个没有实际测试过，本程序是对主屏幕截图的；实现多显示器的截屏需要对... C#软件开发实例.私人订制自己的屏幕截图工具（七）添加放大镜的功能 testcs_dn ： 这个没有实际测试过，本程序是对主屏幕截图的；实现多显示器的截屏需要对代码修改做支持； C#软件开发实例.私人订制自己的屏幕截图工具（七）添加放大镜的功能 bestgonghuibin ： 楼主好，请问你这个能实现多显示器的截屏么？

Recno:: 6
URL:: http://blog.csdn.net/column/details/study-english.html

ParseText::
专栏：程序员英语单词册 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 综合专栏 > 程序员英语单词册 分享到： 新浪微博 腾讯微博 程序员英语单词册 经过几天的整理将程序员必备的600词汇，和有关计算机需要掌握的词汇整理出来，分享给大家学习，希望对你有所帮助。 订阅 最新更新文章 [综合] 程序员不可不知的英文词汇(7) 小小吐槽：昨天晚上在公司加班，搞得自己头疼了一晚上，早上起床依旧很痛，还好上午可以不去公司。头疼终归还是由于压力大呀！公司产品等着上线，还要配合测试修改bug，而偏偏出问题的地方总是我引起的，好吧，终于体会到了程序员的压力。之前还冷嘲其他人，有什么可加班，工作就那么点，做完不就完事了！现在终于明白一个道理，产品需求并不是把任务做完就可以了，还要做到上线之后，能够保证没有任何的问题，能够真正的在使用... u011225629 2015-11-27 12:31 阅读(1272) 评论(6) [综合] 程序员不可不知的英文词汇(6) 小小吐槽：虽然说程序员需要有很出色的技术能力，但是有有一点更加的重要，那就是耐心，有着碰见bug能够一遍遍的调试而不失颜色，向别人讲解技术难点时而不失耐心 ，面对成千上万行的代码，却坦然一笑，耐心解析；如果你是这样的程序员，你的生活将是轻松快活的，相反，却将忍受生活压力带来的心理的压力。下面大家来学做一个有耐心的程序员吧，开始耐心的学习英语词汇把！named parameter 命名参数named... u011225629 2015-11-26 12:31 阅读(724) 评论(0) [综合] 程序员不可不知的英文词汇(5) 小小吐槽：一鼓作气，再而衰，三而竭！希望大家耐得住寂寞，经受的住困难，希望就在眼前！废话不多说了！。。。。。。key 键(for database)key column 键列(for database)laser 激光late binding 迟绑定left outer join 左向外联接(for database)level 阶、层例high level 高阶、高层library 库lifet... u011225629 2015-11-25 16:33 阅读(497) 评论(0) [综合] 程序员不可不知的英文词汇(4) 小小吐槽：最近让工作搞的小心情都不好了，连坐下来写博客的心情都一团糟，睡觉都做梦有关工作的事情，哎哎，苦逼的程序员！好吧！今天上午总算把需求都做完了，把代码提交给测试，剩下的就有测试忙活去吧！心情一阵小好，来写几篇博客，舒缓一下我这受伤的小心情！可是闲余时间当然不能浪费时间，抓紧学习一下单词了！facility 设施、设备fat client 胖客户端feature 特性、特征fetch 提取fi... u011225629 2015-11-25 15:02 阅读(531) 评论(0) [综合] 程序员不可不知的英文词汇(3) 欢迎使用Markdown编辑器写博客本Markdown编辑器使用StackEdit修改而来，用它写博客，将会带来全新的体验哦： Markdown和扩展Markdown简洁的语法 代码块高亮 图片链接和图片上传 LaTex数学公式 UML序列图和流程图 离线写博客 导入导出Markdown文件 丰富的快捷键 快捷键 加粗 Ctrl + B 斜体 Ctrl + I 引用 Ctrl... 程序员 u011225629 2015-11-25 14:52 阅读(566) 评论(0) [综合] 程序员不可不知的英文词汇(2) 小小吐槽：传说英语是世界是最通用的语言，而汉语是世界使用最多的语言，那么，以后会不会转变一点呢？汉语是世界是最通用的语言，而汉语是世界使用最多的语言。如果我们再去幻想一下，如果，汉语成为最通用的语言，那么那是的编程会不会使用的汉语去编程呢？可是，现在还没有到那个地步呢！那么现在也只能使英文去编程，那只好把英文学好咯！编程词汇A2A integration A2A 整合abstract 抽象的abs... u011225629 2015-11-25 14:28 阅读(551) 评论(1) [综合] 程序员不可不知的英文词汇(1) 小小吐槽：我学习英语绝对不是心血来潮，可以说，我的英语也不是很好，至于为什么能够将英语坚持的学习下来，是因为我高中的一位英语老师，当时高一，英语算是主课中的一科，如果英语成绩不好的话，是十分拉分的，当然有老师的开导才是重要的，三年里，只要我有什么困惑的事情，我都会到我这位引导我人生的英语老师那里去开导。说这么多，其实我想强调的有一点是：有一位好老师非常重要。我虽然不是英语老师，但是我是你贴心的朋友... u011225629 2015-11-25 14:15 阅读(711) 评论(2) 程序员必备的600个英语词汇(4) 对于程序员来说，生命在于静止，上班，下班，睡觉，上班，加班，下班，上班。。。。。。表面上看一个程序员没有任何的动作，但是，他的大脑能在以3600r/s的速度在运转，心脏再以30次/s在跳动，随时都有可能死机，导致系统崩溃。下面继续学习英语词汇吧@       runtime 执行期 运行期、运行时　　common language runtime (CLR) 译为「通用语言执行层」　　rvalue... u011225629 2015-11-25 12:01 阅读(657) 评论(3) [综合] 程序员必备的600个英语词汇(3) 给大家编一个冷笑话，娱乐一下！           ，可是本人的亲身经历！（声明：本人英语一般，就是单词量多一些。）有一天 ，来了2个外国人，讲英语的的，我姐夫和其他人都不懂英语，让我给他们翻译，我照做了，但是马马虎虎，大概的翻译过来了，然后就在旁边候着等待需求，2个外国人不停地在交流，姐夫问我，他们在说什么，我说：“他们说话有口音，没听出来！”确实很冷吧！好了，现在接着学习英文词汇吧！   na... u011225629 2015-11-25 11:48 阅读(608) 评论(0) [综合] 程序员必备的600个英语词汇(2) 哥是来吐槽的，     虽说英语很重要，对于每一位程序员，非常重要，每一行代码，都是密密麻麻的英文字母重要，有时还要去苦思深虑的去为变量、方法、类取其一个名字，思前想后，一个又长又难懂的名字诞生了！当时一阵欣慰，日后，再见，一阵伤感，这到底是个毛意思？      efficiency 效率 效率　　efficient 高效 高效　　end user 终端用户　　entity 物体 实体、物体　　e... u011225629 2015-11-25 11:40 阅读(649) 评论(2) [综合] 程序员必备的600个英语词汇(1) 对于时刻需要和国际接轨的码农们，英语的重要性是毋庸置疑的。尤其是那些胸怀大志的潜在大牛们，想在码农行业闯出一片天地，秒杀身边的小弟们，熟练掌握英语更是实现其目标最关键的因素之一。否则，试想在你捧着某出版社刚刚翻译出来的《JSP 高效编程》苦苦学习JSP模板的时候，你旁边的小弟却是拿着原版的《AngularJS in Action》学习开发单页面应用，虽然你们都同样认真地学习了一个月，可做出来东西的... u011225629 2015-11-25 11:30 阅读(736) 评论(2) 申请专栏 我的专栏 专栏创建者： u011225629 创建时间：2015-11-27 文章数：11篇 浏览量： 7502 次 热门文章 最新评论 程序员不可不知的英文词汇(7) u014331212 ： 太好了 程序员不可不知的英文词汇(1) guines ： 谢谢 很好 程序员不可不知的英文词汇(7) taoshengyijiu20008 ： 不错，这个了解一下还是很好的 程序员不可不知的英文词汇(7) u011225629 ： @dagezi56:*--* 程序员不可不知的英文词汇(7) qing_gee ： 稍候可以做一个相关文章的关联连接，这样就可以快速的把英文单词相关的联系到一起 程序员必备的600个英语词汇(4) gz153016 ： 哥，你继续写吧，我打印下来了，每天早上都在背。哈哈 程序员不可不知的英文词汇(7) u011502159 ： 学习啦！ 程序员必备的600个英语词汇(4) u011225629 ： @qq_27494551:编程无非用到的就是那些基本的关键字，而我总结的这些是为了拓展你的学习范围的... 程序员必备的600个英语词汇(1) qq_32840151 ： mark 程序员必备的600个英语词汇(4) qq_27494551 ： 我根本不懂英文，感觉学C语言好吃力啊

Recno:: 7
URL:: http://blog.csdn.net/domypp/article/details/49383633

ParseText::
跟支持创业的政府官员打交道是怎样的体验 - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 跟支持创业的政府官员打交道是怎样的体验 标签： 创业 政府 2015-10-24 12:12 1024人阅读 评论 (3) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 我历来对政府官员没有好印象。创业后，几次经历，发现世道变了。 【跟上海官员】 有一次上海长宁社保局官员来苏河汇孵化器考察创业。既然是社保局官员，他们关心的是创业带来的就业帮助。因此鼓励，支持，给钱，减免社保负担。 我应该是二十年来第一次近距离跟官员交谈。介绍了我们的超级表格项目，他谈到了他的女儿与Excel的故事... 在DEMO Day上这个官员是坐第一排的官员代表，我作为所有孵化项目的唯一代表进行10分钟的演讲，提到了我对上海政府的印象。轮到他发言时，他说“超级表格团队表扬我们，其实这不过我们的本质工作而已…” 这是2014年。 【跟衢州官员】 昨天，我第二次近距离跟政府官员打交道。浙江衢州柯城区举办的互联网+绿色产业论坛，我是受邀的“创业大咖”（他们喜欢用的词）之一。实况是这样的： 副区长到机场迎接，我坐他的车去酒店。一路上，他开始给我“路演’，我介绍衢州的各种好处。 晚餐时，区委书记来了，跟我们一起吃饭。其间各种玩笑，拍照，建群…我也玩开了，自拍。我说当初跟克强总理没自拍成，先跟您自拍。加她微信。她通过了，先给打招呼。我看到微信后，灵机一动，我跟大家说“我有一个逼格的想法。我准备把书记主动打招呼的微信对话页面截图，然后发到朋友圈。评论：书记主动加我，我没理她…”哄堂大笑，她也乐了。 晚上带我们参观古城，各种姿势拍照。 第二天峰会论坛的午餐上，我被安排与副市长一桌。也是个女官员。还有区宣传部长，也是个lady。吃饭其间也是各种玩笑，加微信。好开放的心态。 第三天，电商办主任一个人带着我见了区的经信局，又见了市经信委的官员。午餐陪伴。三陪。 得意的是，主任、区长、书记都叫我坤哥、表哥, 超级表格 的爸爸… 我想问的是，政府官员的操守和矜持都到哪里去了？你们觉得这样做合适吗？ 【跟团中央书记】 这是我与团中央第一书记秦怡智。据说胡耀邦、胡锦涛等一堆领导都曾经在这个职位呆过。少说，上图。 【跟政府CEO】 差点忘了这个政府官员。年初克哥来中关村创业大街时，我跟他握了左手和右手。这个不算，过。 上一篇 微信支付不再免费，浅谈它的四年发展史 下一篇 超级表格全新界面全新体验 顶 1 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203890次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 8
URL:: http://blog.csdn.net/domypp/article/details/49585545

ParseText::
创业在腾讯、在阿里巴巴、在团中央机构！ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 创业在腾讯、在阿里巴巴、在团中央机构！ 标签： 创业 阿里巴巴 团中央 超级表格 中关村 2015-11-02 14:13 721人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超 级 表 格 微信公众号： chaojibiaoge 而人生，也许还需要一场风花雪月的流浪。 当前路的迷雾只能由你一个人去拨散时，你是否能在摸索中找到方向？关于诗和远方，你真的 能摆脱苟且吗？世界那么大，你真有勇气去看看吗？ 每一个地方都是一个印迹，每一个印迹中都有足够多的故事。而这一次，他用了一 周的时间辗转一次衢州、上海、杭州以及北京团中央机构。 北京这个古老的城市建立在悠久的文明里，经历过岁月的有情无意的洗礼之后披上了时尚与梦想的外套。首都国际机场总是人头攒动，有多少人兴高采烈为了梦想第一次踏进这里 ，又有多少人沮丧至极坐在候机厅等着逃离这里，都无从统计。 衢州 10月21日，飞往衢州的客机顺利抵达。当坤哥走出机舱时，他远远地就看见衢州柯城区王区长捧着鲜花朝他挥手。 这是一次政府与企业的合作，是他们 对创业的一次挥手。为了推进当地企业的信息化发展，坤哥受邀参加由浙江衢州柯城区举办的“互联网+绿色产业论坛”，又是一次踏入异乡 ，却因为一路上有了王区长的热情的介绍当地风情而显得不那么陌生冰冷。   晚餐时分，区党委书记也踩着高跟鞋踏了过来，原本还是放松的气氛，突然间……变得更加放松了。她也肆无忌惮地开着玩笑，不带任何架子。政府官员们 突然从冰冷的电视银幕、从黑白的新闻稿件中走进了坤哥的世界，和蔼可亲，平易近人。 第二天的峰会按照计划进行，非常顺利。到场有来自全国各地共500余位嘉宾参加，包括康贝斯德董事长王卫军、初心会创始人王挺以及京东集团 副总裁李绪勇等等互联网从业者。坤哥作为特邀嘉宾上台发表演讲。整个峰会很好地分析出了电子商务未来的发展趋势，探索出绿色产业与互联网的深 度融合模式，也更好地推动了柯城区电子商务产业健康有序发展。 午餐时，衢州市副市长和宣传部部长都是巾帼不让须眉，坐在坤哥边上，亲切问候之后，也展现出了整个衢州市的开放与亲民。 抽空时，坤哥又在政府官员们陪同下参观了明清时期具有汉族建筑风格的大型防御工程——衢州古城。一砖一瓦无不经历上百年风霜雨打才能孕育出这种古老又淡雅的色泽。 上海 离开衢州的时候，已经是第三天夜里。列车车轮压过轨道轰隆隆地响，伴随着清风与明月，驶入了另一个如珠宝般璀璨的世界——上海。 那些透支信用卡的日子和忙碌在公 司的假期现在想起都如同微风拂过，而越是轻描淡写就越是难以提起，则越是沉重不能回首。 但有句话说的很好：顶得住多大磨难，才能受得住多大赞美。 而这一次来到上海，是来和腾讯谈合作的。互联网的列车早已赶上了飞机的速度，此次来到上海与腾讯旗下的移动互联网合作，将联手推出超级表格 行业的新版本。 杭州 到达杭州，来到了阿里巴巴总部。探讨与淘宝合作的相关事宜。 北京 回到北京的凌晨，浅浅睡了3个小时后，又整理着装受邀出席团中央机关的开放日活动。 陈坤极与团中央书记处书记傅振邦合影留念 现场坤哥也谈到了“当自己离开了共青团很多年之后，团组织似乎又再次回到了我身 边。今年5月份，到李克强总理就来到创业大街看望过我们，我还和他握手呢！后来7月份时，团中央第一书记秦宜智也来到超级表格的产品区，毫 无保留地表达了他对我们产品的欣赏，还答应了和我自拍留念的邀请。而今天，走进团中央机构对我来说又是一次不同的体验，也表明了组织对我 们创业者的鼓励和对我们产品的认可。” 我们都是时间的旅行者，为了寻找生命中的光，终其一生，行走在漫长的旅途上。 ——《上得天堂，下得地狱》 人生就是这样，你哪有时间来一次说走就走的旅行，世界那么大，你哪有勇气去看看？唯有风花雪月的流浪，在这个诺大的城市古堡里。我们都在路上，从没放弃流浪。 请点击这里 ，立即享受轻松办公的体验。 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号：chaojibiaoge 上一篇 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ 下一篇 滴滴柳青、58同城、美团创始人引领《财富》商界精英 顶 0 踩 1 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203891次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 9
URL:: http://blog.csdn.net/domypp/article/details/49836263

ParseText::
法国巴黎反恐机制被批令人震惊，盘点这些年发生的十大恐怖袭击！ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 法国巴黎反恐机制被批令人震惊，盘点这些年发生的十大恐怖袭击！ 标签： 法国 巴黎 恐怖袭击 超级表格 十大 2015-11-14 15:52 728人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超级表格微信公众号： chaojibiaoge   凤凰网评论说：首先，巴黎连续出事说明了以法国为代表的欧洲反恐机制并没有从以往的袭击当中吸取足够的教训。对于任何一个国家的情报部门与安全部门来说，在这么短的时间内，遭遇如此多的重大袭击事件，都是不可理解的，不可饶恕的，不可想象的。 事实上，在几十天前，如果不是靠火车上度假的美军士兵，说不定恐怖事件早已经发生，但这居然没有得到法国有关部门的及时反应。如果一个国家的反恐机制糟糕成这个样子，是很让人震惊的。当然，该反思的不仅是法国安全部门，还有奥德朗左翼政府。一个国家的总统，不能只把恐怖袭击之后的大游行当作反恐政绩，而需要认识到真正的危机所在，并采取真正有效的行动。 法国巴黎，当地时间11月13日深夜，一支美国摇滚乐队正在巴黎11区的巴塔克兰剧场进行演出，所有人都正沉浸在这场筹办已久的音乐盛宴中。 然而，一瞬天堂、一瞬地狱。 “屠杀整整持续了十分钟，那是我见过的最恐怖的十分钟，所有人都趴在地上手盖住头。”电台记者Julien Pearce当时正在现场，他这样描述着经过。 这是一个可以容纳1500人的剧场，突然，有两个人进入了剧场，没有人注意他们。他们冷静地、坚决地并且随机地拿出枪开始扫射。 “就是一个拿着AK47的普通人。而且枪手的子弹打完了，又重新装上，打完了，又重新装上。装了三、四次弹夹。” 许多从剧院里逃出来的人都目睹的生命中最可怕的场景，他们不仅在射杀活人，他们还在射杀尸体。 根据路透社的最新消息显示，在巴塔克兰剧院被恐怖分子打死的人数有87人，而不是先前的120人。所以造成153人遇难的消息并不准确，而应该约为120人。 我们应铭记历史，和恐怖主义作战。 那么这些年来，历史上有哪些恐怖主义呢？ （超级表格平台） 坚决抵制恐怖袭击，别让无辜的百姓遭殃！ 请点击这里 ，收集与整理信息，一张超级表格搞定！ 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号： chaojibiaoge 上一篇 创业的路上，女子并不让须眉！ 下一篇 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ 顶 1 踩 1 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203886次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 10
URL:: http://blog.csdn.net/domypp/article/details/49999829

ParseText::
SaaS应用“超级表格”获数百万天使融资 - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 SaaS应用“超级表格”获数百万天使融资 标签： 超级表格 陈坤极 融资百万 SaaS产品 资本寒冬 2015-11-23 19:35 677人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超 级 表 格 公众号： chaojibiaoge 每个人都感受到了今年是中国企业级服务SaaS元年。无论是融资额、用户增长、销售市场，SaaS服务从来没有像今天这么火热。 2015年11月15日下午， 多人协作在线平台超级表格创始人陈坤极在接受中央人民广播电台“经济之声”的采访时透露， 超级表格数月前已经获得数百万天使融资，由北软天使王童领头，天使成长营跟投。 超级表格目前正在打造以技术为核心竞争力的在线数据协作工具，未来计划成为SaaS应用领域最具用户基础的在线办公协作平台。另据超级表格官方数据表明，其最新估值已达到1亿。本轮融资主要用于吸引人才以及技术产品的迭代开发。 超级表格在2014年3月正式上线，是一款多人协作共享的在线表格，类似于“在线的Excel”，能够实现团队高效协作的共享应用。 众所周知，传统实力表格Excel目前最不方便的是协作和共享，超级表格正是对传统表格进行技术突破和产品延展，最为突出的表现就是通过网络、手机来协作和共享，完成数据的收集、整理、共享。 陈坤极说了一句耐人寻味的话：“超级表格与Excel最大的不同点是，我们与Excel完全不同。Excel面向单机、个人和纸面，而超级表格面向网络、团队和屏幕。” 对于需要高效配合和实时了解工作情况的企业及团队来说，超级表格的应用非常重要。超级表格目前已与阿里平台展开深度合作，会被作为服务嵌入到阿里相关产品中。目前超级表格的注册用户接近10万。按目前的发展速度来看，预计在明年底达到100万人。超级表格可通过在线网页或下载APP免费使用。目前也有部分企业级付费用户，计划在实现百万用户时进入正式的盈利阶段。 数年前，超级表格的创始人陈坤极发现，在国外企业级应用如火如荼的时候，国内却是一片空白。中国的个人应用BAT市值为5000亿美元，美国对应的三巨头市值8000亿美元规模，差别不大；而相比美国3000亿美元的企业应用三巨头来说，中国企业应用前三甲（金蝶、用友、东软）总规模仅50亿美元，差距巨大。 中国目前的市场现状是，由于盗版和付费习惯等问题，专业软件市场缺乏真正适合中小企业的产品，因此不少企业没有机会享受专业软件的服务。SaaS应用触发市场迅猛发展，给专业软件带来了巨大机会。 陈坤极作为北京大学硕士，从事企业办公软件12年，深谙企业在线办公产品和ＯＡ、ＣＲＭ系统。他曾经负责全球最大的在线办公软件商之一ZOHO在中国的运营。 创立超级表格时，他迅速建立团队，有来自北大、用友和搜狐的产品、技术和市场人才加盟。目前仅十五人的团队，发挥着难以想象的超大能量场。 正是因为看上这片万亿蓝海市场规模，天高任鸟飞， 超级表格迅速吸引了上海苏河汇的100万人民币种子轮投资。 而后，超级表格从沪北上，得到中关村创业大街的支持并进驻Bingo孵化器，成为大街上的明星创业团队。2014年5月李克强总理参观中关村创业大街时，超级表格创始人陈坤极有幸与总理进行了短暂交流。 超级表格与其他创业公司最大的不同是，技术出身的团队非常重视市场营销。为此组建了来自北大、浙江卫视和金融界的市场团队。 往往在其他人看来只能是“外行看热闹，内行看门道”的一家创业公司， 天使轮的融资也是来源于公开路演，作为评委的技术出身投资人王童一眼看中超级表格并进行了投资。王童是北软天使的创始人，也是纳斯达克上市公司途牛旅行网的天使投资人。 2015年11月6日，作为投资方的北软王童再次出现在超级表格第一次投资者大会上，并现场发言：协同表格有非常大的市场前景，虽然Excel也开发了自己的在线产品，但从技术的角度讲，其基因已经决定了Excel很难在在线产品上发力。但是，即使没有强有力的对手，中国市场最大的问题依然存在：缺乏版权保护和付费习惯。 王童认为，这是时间的问题，他相信在未来数年，随着各个版权领域对付费环境的改善，在线软件产品也将逐步展开新的篇章。 超级表格正致力于成为新兴企业应用的前三甲。陈坤极认为，三到五年内,中国企业应用软件前三甲一定会重新洗牌。 点击这里，立即体验 超级表格！ 更多热点资讯 1、指尖上的超级表格--手机端app 2、我为什么要让你感到舒服？！也谈谈创业团队的文化建设。 3、Facebook进入中国市场，它凭什么？ [ 功能日志 ]     [ 创业谱 ]     [ 官方博客 ] 上一篇 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ 下一篇 从普通程序员到估值上亿的公司老板，他只用了1年！ 顶 1 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203888次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 11
URL:: http://blog.csdn.net/domypp/article/details/50177309

ParseText::
超级表格一个小功能就甩全国高校的管理平台甩N条街！ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 超级表格一个小功能就甩全国高校的管理平台甩N条街！ 标签： 超级表格 用户体验 创业 陈坤极 高校 2015-12-04 17:35 634人阅读 评论 (0) 收藏 举报 分类： 产品升级 （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超级表格微信公众号 ： chaojibiaoge 超级表格作为一款企业级应用，服务着许多团队的同时，也渗透在教育领域和科研机构中。具有极大自由度的超级表格总能被玩出新花样，从而帮助提升工作效率。 在广东技术师范学校。 校训：厚德博学， 唯实求新 “求新”意为：与时俱进，不断开拓创新 小林作为校学生干部执行核心的一员， 不仅打理着学院大大小小的事务，还包括学生会等各种组织，新生报到与毕业生就业等信息管理 。他已经大四，即将步入社会。回首大学年华，他的努力成为人生的财富，超级表格也成为其中的一串珍宝。 未使用超级表格时的困境 1、在校生信息收集耗时长，效率低！ 2、数据核对几乎不可能完成。 招新报名 “ 在用超级表格之前，我们学院收集数据是用纸给大家填写，然后再手动输入到电脑里 ”小林提到那些日子，“或者通过发只有一行数据的Excel过来，然后由干部不停地去复制粘贴。”最后，他又补了一句，“有时，别人就用QQ回你几个数据。格式，类型根本不对。” “后来 用超级表格就直接通过发布表单 ，然后就可以直接 在超级表格后台看到情况。如果发现很简单的问题，随手就可以改正。 ” 毕业生数据校对 通常，收集好的数据还需要做校对工作。密密麻麻的一大群人来到办公室里，有许多人根本没时间来，还必须挨个打电话。 将搜索页面发布给所有学生，每个学生可以根据他们的姓名和学号来查询他们的记录，检查数据是否正确，并在备注中注明。 妈妈再也不用担心我的数据核对！ 公开信息查询 将制作好的公开课表格通过【搜索】页面发布出去，供学生查询。 教务测评成绩查询 会议室预约、重要设备仪器借用 在填写前 先点击表单下方的【浏览所有记录】 ，可以先查阅自己想要预定的房间是否已经被提前预约过了， 避免重复预约 ！ 给自己学校做一个小百科 让教务工作变得轻松、高效 超级表格让信息的实时传递正在变成一件低成本的事情。用于教务工作时，我们大大提升了工作效率，在相关的任务中和学生协作完成工作。大大简化了工作难度，避免了重复性工作的认为误差！ 请点击这里 ，收集与整理信息，一张超级表格搞定！ 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号： chaojibiaoge 上一篇 从普通程序员到估值上亿的公司老板，他只用了1年！ 下一篇 超级表格如何成就了速度与激情？ 顶 2 踩 0 我的同类文章 产品升级 （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203889次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 12
URL:: http://blog.csdn.net/domypp/article/details/50339083

ParseText::
超级表格如何成就了速度与激情？ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 超级表格如何成就了速度与激情？ 标签： 超级表格 陈坤极 用户体验 创业 2015-12-17 13:58 524人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超级表格微信公众号 ： chaojibiaoge 中国国运（北京）汽车租赁有限公司  行政主管小于：超表已经不可或缺 “ 大家好，我在北京，我是从事行政工作的，我用超级表格已经半年多了，我觉得超级表格是一款应运而生的软件，它有效的解决了我们公司协同办公的难题，只要为员工设置好表格模板，员工不需要太高的办公能力就能轻松掌握，这为公司节省了很大的人员成本，目前超级表格正在逐渐的完善，功能方面也在逐渐增加，在学习超级表格新功能的同时我们也在思考公司各岗位如何可以通过超级表格进一步提升工作效率，甚至结合超级表格进行岗位工作内容的调整，总而言之，超级表格已经成为我们公司不可或缺的办公软件，支持超级表格！！ ！ ” 2 015 年 的北 京 经历过清新明晰的“阅兵蓝”，也浸没在世界末日般的“雾霾灰”。在北京生活的人们早已习惯这样的生活，每天早晨起床，看看天气如何，叹口气再决定要带什么级别的口罩。 小 于 就出生在北京，从学习到工作，他正看着这座城市翻天覆地，气象万千。 最开始接触工作的时候，他连甘特图都不懂，朦朦胧胧地一直用Excel制作项目跟进的情况记录。当大量的时间都花费在了Excel表时，小于开始在网上逐渐去了解项目管理表格，去了解甘特图。 然而，大多数甘特图的制作工具繁琐不堪，复杂难懂。相比之下，他依旧还是决定用原来的比较耗时的方法。 2 015年3月 ， 在 工作接近两年后，小于离开了第一家公司，后来便进入了一家租车服务的传统企业。作为公司的行政主管，他一方面需要建立公司各项规章制度，一方面要统计各个职员的工作进度。当他还打算用原来的模式继续运营的时候，问题就来了…… 当自己一个人操作Excel的时候还勉强可以算是得心应手，而当“自己”变成“团队”的时候，小于不得不 自己挨个去找各个职员了解进度，然后自己再手动填写到表格里面，运营部各个岗位之间为了完成一项客户订单从前期预定到执行订单最后到财务结算需要用Excel和优盘互相拷贝工作表格，公司的司机也需要通过微信把公司安排的工作业务执行情况反馈到公司， 许多记录都很不规范，数据零零散散不成体系…… 公 司每天处理各种数据的人力和时间成本都远远超出了预期。不甘如此的小于开始想在传统行业里注入互联网的思维，从更加创新的角度上去解决冗长的数据处理问题。于是，在尝试过许多软件后，小于最后选择了超级表格。 运营部各岗位的订单执行、行程回馈、财务统计……由于超级表格，公司的运转更为流畅，速度与激情已然上路！ 小于的账号里始终只有三张表格，从此办公生活里不再充斥着 飞信、U盘、Excel以及微信公众号 里的零零碎碎的数据，而只用三张表格就运转了整个公司。 三张超级表格 I 驾驶员信息表 用于记录驾驶员的所有信息 · 公司中驾驶员的所有信息都可以记录在这张表格里，并且作为信息源表，可用于其他表格的智能输入。 II 车辆预订单 用于车辆的预定和调度 ·由运营部两个岗位同时完成，一方面记录预定情况，另一方面运营部可根据预定情况安排客户订单。 III 行车记录单 用于记录行车情况 ·该表格由司机完成工作之后填写，用于记录行车的具体情况。 小于用三张表格，运营了整个公司。“今后还会用超级表格趋势线更多功能！总的来说，以后要做的事还有很多。” 在北京的生活依然继续，雾霾也在继续，工作压力会随时袭来，我们遇到困难也需要有更加开拓的思维和创造力，超级表格也正在实现更多的功能！ 相关阅读： 【用户体验】如何把大学真正上了？ 请点击这里 ，收集与整理信息，一张超级表格搞定！ 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号： chaojibiaoge 相关阅读： 【用户体验】如何把大学真正上了？ 上一篇 超级表格一个小功能就甩全国高校的管理平台甩N条街！ 下一篇 即将被裁掉，她是如何替他力挽狂澜？ 顶 0 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

Recno:: 13
URL:: http://blog.csdn.net/foruok/article/details/50290217

ParseText::
一招搞定多Offer选择 - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 一招搞定多Offer选择 标签： 薪资 Offer 程序员 找工作 2015-12-14 07:34 1858人阅读 评论 (8) 收藏 举报 分类： 随笔 （68） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 12月9号在论坛看到一位毕业生问了一个问题： 现在两个offer 一个在南京，搞.net ，公司是国电南自。税前一年加起来差不多7.2万。一个是在上海，搞java，公司名叫鑫合汇（不知道各位有没有用过它的理财app），薪资一年税前九万多吧。大家可以积极给点意见吗？ 刚好我最近也经历了Offer选择的问题，来谈谈吧。 从前面那位同学的提问中可以看到下列信息： 地域 薪资 行业 公司 职能 知识技能 年龄 不知道我说得可对？ 这里面还有至关重要的两点是有待补充的：个人倾向和家庭愿望。这个从帖子里看不出来。下面我们就从理论和方法上来讲讲如何进行Offer选择。 大学毕业生的特点 我们先看看大学毕业生的一些共同点： 第一次求职 年龄在21~25左右 对职业（行业*职能）不甚了解 目标可能不清晰 专业技能欠缺 我毕业时就是这个状态，找工作很盲目，后来稀里糊涂就进行了电信行业。现在想，当时主要是考虑了行业因素。 大学生的这些特点会影响到求职，很可能会拿到不同行业的公司的Offer，不同的Offer给出的岗位职能也很可能大相径庭。此时就会面临如何选择的问题。 我们以文前提问的那个同学为例来说明一下。 选择Offer要考虑哪些因素 我们从职业价值观和具体影响因素两方面来看。 职业价值观 从多个Offer中选择一个，首先要弄明白自己的职业价值观。所谓职业价值观，就是价值观在职业方面的体现。那所谓价值观，简单点说，就是“你看重什么”、“你觉得什么是好的”。 下面是9种常见的职业价值观： 工资高，福利好 工作环境（物质方面）舒适 人际关系良好 工作稳定有保障 能提供较好的受教育机会 有较高的社会地位 工作不太紧张、外部压力少 能充分发挥自己的能力特长 社会需要与社会贡献大 好啦，从上面的九种价值观里，分别挑出对你来讲 最重要的 、 次重要的 、 最不重要的 、 次不重要的 。一定要挑出来，挑不出来你就使劲死磕自己，死磕死了还挑不出来就算了。 很多时候搞明白这个，答案就出来了。但也有一些时候，人是比较纠结的，因为这个也想要那个也想要，鱼和熊掌想兼得么，人之常情。所以呢，还要再细化一下，看看更具体的考量因素。 影响Offer选择和将来发展的若干因素 根据前面那位同学的帖子以及我们的分析，选择Offer有这么些因素需要考虑： 地域 薪资 行业 公司 职能 知识技能 年龄阶段 个人倾向 家庭愿望 我们先看 个人倾向 和 家庭愿望 。 个人的性格、兴趣爱好、价值观、使命、需要等会影响个人求职时的倾向。外向的人和内向的人在选择职业时的倾向就不一样，事业心强的人和随遇而安的人也不一样。在这块有很多经典的理论和工具能帮助我们理清自己的倾向，比如性格类型（MBTI）和霍兰德职业兴趣，感兴趣的可以了解一下，也可以联系我免费聊职业规划（关注我的微信订阅号“程序视界”，回复foruok可加好友）。我们在这里略过了。 父母会将自己的价值观加到孩子身上，这是不可避免的。大学生找工作尤其容易受父母的影响，一方面是因为我们前面提到的那些特点导致我们缺乏足够的信息支撑我们进行选择；另一方面是父母总觉得要为你负责要为你好不能让你走错路不能让你受苦不能让你将来不幸福，他们有强烈的为你负责的意愿，想要帮你设定将来。 所以如果父母在南京，不让你去上海，那就会影响到你的Offer选择。父母是电力行业的，不愿你去互联网金融这种比较动荡的行业，也可能影响你的选择。家庭整体收入较低，就会提升薪资因素在职业选择中的占比。女票去了北京，估计你上海、南京都得放下，转而找北京的单位。 接下来我们看 年龄阶段 会对选择Offer有什么影响。按照舒伯的生涯发展阶段，大学学习（18~22岁）、第一份职业（22~24）这两个时期，都处在探索阶段。探索阶段的职业发展课题有： 能力与才能的进一步成长 学习计划的选择 独立性发展 适合自己的专业、工作的选择 有关专业技能的发展 所以我们看，当你面临多份Offer时，应该更多的考虑 知识 、 专业技能 等内在因素的发展，哪一份Offer与你的专业更贴近，哪一份Offer对累积知识、技能更有帮助，哪一份Offer对个人能力的锻炼与成长更有利，就选择哪一份。因为像薪水、职务这些外在的目标，是由内在目标决定的，即内决定外。所以，哪怕你一开始薪水福利较差职务等级较低也没关系，适应、探索、成长三两年，知识、技能、能力等内在的、最具价值的方面积累够了，你可以很快在薪水和职务上提升，到时在企业内部和外部都会有很多机会。机会只青睐有准备的人，你武功已成，还怕什么。 当你考虑知识、专业技能时，自然和 行业 就联系起来了，和 公司 也联系起来。你选择某个行业，会决定你能学到用到什么样的知识，发挥发展什么样的技能。 以发帖那位同学为例，国电南自属于电力电气行业这种传统行业，进入之后，即便是做软件开发，也一定是会更多地积累电力电气方面的行业知识。要知道，软件开发只是一项基础技能，一项基础服务，要想解决现实问题，一定要和行业结合起来，甚至有些行业里的软件，80%是业务，20%才是软件开发技能。所以， 如果我们从事应用软件开发工作，一定要明白这一点，软件是基础技能，业务和产品积累非常重要 。 回头再说鑫合汇，鑫合汇属于金融行业，进入后会积累金融方面的知识。金融是高大上行业，是财富行业，是现在和将来都会不断发展向上的行业。互联网+金融是很好的方向。金融行业会更累，但会更有钱。 最后我们说地域因素。地域会影响你积累知识、技能，进而影响将来的发展。比如你选择邢台，那你如果想做金融行业，肯定空间很小；想做软件，机会也不多。很多产业会集中在某个地方，你要在某个产业中发展，最好就到该产业最集中最发达的地方。 生涯平衡单 前面说了那么多，最后介绍一个非常棒的工具来帮助选择Offer： 生涯平衡单 。先看一个示例表单，然后我们再解释如何使用。 先看生涯平衡单的结果怎么解读：方案A得分29，方案B得分75，任盈盈应该选择方案B。 结果怎么来的呢？咱细细看。 项目内容 项目内容这部分，是列出你自己认为的任何重要的内容。比如任盈盈看重薪水、兴趣、成就感等。换个人可能看重的东西不一样，这需要结合我们前面讲的东西仔细捋捋才能列出来。 权重 个人每一项看重的东西，权重都不一样（取值范围1~5），这也是我们前面让选择职业价值观的原因。以任盈盈为例，最看重薪水和兴趣满足，权重都是5。这个权重，到时是用来和某个方案的得失之和相乘的。 方案 这里的方案，一般指某个职业，或者某个公司的某个岗位。 选择每个方案，都会有得（利）失（弊）。为了量化，设定得分范围是-5~5。 加权和是将得失分数加在一起乘以权重。比如任盈盈设定薪水的权重为5，方案A的利为5，弊为0，那加权和就是 (5+0)x5 = 25。 合计 生涯平衡单会对每个方案计算总分，合计的分值是方案的加权和的总值。 好啦，这就是生涯平衡单的用法，希望它能帮助选择合适的Offer。 更多精彩文章，参看“ 漫谈程序员 ”专栏。 困惑、成长、发展、增值、新知，尽在微信订阅号“程序视界”： 上一篇 如何成为技术领导者 下一篇 大龄程序员的未来在何方 顶 7 踩 0 我的同类文章 随笔 （68） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1819923次 积分： 20929 等级： 积分：20929 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3192条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911255 Qt Quick简明教程 文章：30篇 阅读：192473 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35165 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022) 漫谈程序员系列：看看你离优秀有多远 (25604) 月薪3万的程序员都避开了哪些坑 (23708) 评论排行 漫谈程序员系列：一个老程序员的2014年终总结 (137) 漫谈程序员系列：一张图道尽程序员的出路 (84) 月薪3万的程序员都避开了哪些坑 (83) 程序员保值的4个秘密 (79) 漫谈程序员系列：咦，你也在混日子啊 (75) 漫谈程序员系列：看看你离优秀有多远 (74) 漫谈程序员系列：怎样成为技术达人 (74) 程序员跳槽神级攻略 (64) 大龄程序员的未来在何方 (60) 漫谈程序员系列：请区别对待女程序员 (59)

Recno:: 14
URL:: http://blog.csdn.net/foruok/article/details/50352362

ParseText::
VS 2013+Qt 5.4.1 - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 VS 2013+Qt 5.4.1 标签： qt sdk visual studio VS-2013 Qt-5-4-1 2015-12-19 06:47 710人阅读 评论 (1) 收藏 举报 分类： Qt （79） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 Qt应用可以用Qt Creator开发，也可以使用Visual Studio。我之前一直用Qt Creator，也始终觉得这是最好的选择。不过有人偏爱Visual Studio，我也因为工作需要，要使用Visual Studio来开发Qt应用。记录一下安装配置过程。 资源下载和安装 需要下列资源： Visual Studio 2013 Qt SDK 5.4.1（ qt-opensource-windows-x86-msvc2013_64-5.4.1.exe ），这是Qt SDK，开发Qt应用必须的。 Visual Studio Add-in 1.2.4 for Qt5（ qt-vs-addin-1.2.4-opensource.exe ），这是Qt官方提供的针对Visual Studio的插件，作用是注册到Visual Studio中，生成一个名为QT5的菜单。 你也可以下载其它的Qt版本或VS Add-in，这里有所有的 http://download.qt.io/archive/ 。 安装没什么顺序要求，随便。值得注意的是，如果你的 VS 2013安装后一次也没启动过，然后安装了Qt VS Add-in，然后再启动VS 2013，会发现没有QT5菜单，不过没关系，重启一下VS 2013即可看到下面的图片： 我蓝圈标注的就是新增的QT5菜单。接下来就可以配置Qt版本了。 配置 打开QT5菜单，如下图： 选择Qt Options，出现下图： 点击图示的Add按钮，可以添加版本。如下图： 在弹出的Add New Qt Version对话框里，填写 Qt 版本，然后选择Qt路径。 特别提示： VS2013中添加Qt版本时，找的是bin目录下的qmake，所以，应该选择类似“C:\Qt\Qt5.4.1\5.4\msvc2013_64”这样的 。如果不是酱紫的路径，就会报类似下面的错误： 配置了正确的Qt Version，点击OK按钮后，效果如下： 点击OK按钮，配置就完成了。现在你可以在通过QT5菜单打开pro文件了。 VS里可以配置多个Qt版本，相互不冲突。 VS中导入Qt项目 VS的QT5菜单中有一个“Open Qt Project File(.pro)”子菜单，通过它可以打开一个Qt项目。 我通过Qt Creator创建了一个Qt项目HelloQt，然后在VS中打开pro文件，效果如下图所示： 到这里你就可以编译运行了，按CTRL+F5即可。 实际上你在VS中打开pro文件时，Qt提供的VS Add-in会自动生成 个vcxproj文件（VC项目文件）。如下图： 当你关闭项目时，还会提示你保存解决方案（sln文件）。你保存后，下次可以直接通过sln打开Qt项目。 新建一个Qt项目 我刚才是先用Qt Creator创建了一个项目，然后通过VS QT5菜单导入，让VS Add-in自动生成了一个适合VS的项目文件（vcxproj）。 实际上我们也可以通过VS文件菜单，直接新建一个Qt项目：文件->新建->项目->Qt5 Projects->Qt Application。 新建Qt5项目时，可以选择项目类型，比如Qt Application或Qt Library。还可以选择项目依赖的模块。试一试吧。 用qmake创建一个Qt VS工程 最后还有一种方法，直接使用Qt SDK里的qmake工具来创建适合VS的Qt项目。通过开始菜单里的Qt 5.4.1中的Qt命令行工具，进入你的工程目录，执行下列命令即可： qmake -project -t vcapp -o xx.pro（说明：如果你的工程目录就是项目名字，就可以去掉-o xx.pro这两个参数） qmake 然后就可以看到xx.vcxproj文件了。 注意，如果你的工程目录是空的，没有源文件，那上面的命令是无效的。 我个人比较习惯Qt Creator来开发，如果你也是如此，那实际上可以在Qt Creator里来开发，开发工作完成后，再导入到VS中来看看有没有什么问题。如果你选择Qt SDK时就选择了msvc2013版本的，搭配VS2013，那基本上是不太可能出问题的。 上一篇 大龄程序员的未来在何方 下一篇 做自己想做的工作，你也可以 顶 0 踩 0 我的同类文章 Qt （79） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1819937次 积分： 20930 等级： 积分：20930 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3193条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911255 Qt Quick简明教程 文章：30篇 阅读：192477 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35167 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022) 漫谈程序员系列：看看你离优秀有多远 (25604) 月薪3万的程序员都避开了哪些坑 (23708) 评论排行 漫谈程序员系列：一个老程序员的2014年终总结 (137) 漫谈程序员系列：一张图道尽程序员的出路 (84) 月薪3万的程序员都避开了哪些坑 (83) 程序员保值的4个秘密 (79) 漫谈程序员系列：咦，你也在混日子啊 (75) 漫谈程序员系列：看看你离优秀有多远 (74) 漫谈程序员系列：怎样成为技术达人 (74) 程序员跳槽神级攻略 (64) 大龄程序员的未来在何方 (60) 漫谈程序员系列：请区别对待女程序员 (59)

Recno:: 15
URL:: http://blog.csdn.net/kongqz/article/details/9963259

ParseText::
在win7*64下配置php开发环境nginx+php - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 在win7*64下配置php开发环境nginx+php 2013-08-14 13:56 4319人阅读 评论 (0) 收藏 举报 分类： j2ee （37） 作者同类文章 X linux （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、概述 win7 64位的操作系统，目标是配置PHP环境并且能直接使用，同时不影响java的开发环境 nginx：作为web服务器将请求转发给php fastcgi+php：处理php项目 tomcat：处理tomcat项目 二、配置步骤以及相关项 1、下载nginx 我直接下载的nginx1.2版本的文件，直接解压后的目录：E:\nginx-1.2.0\ 2、下载php相关程序，我下载后安装到目录：E:\nginx-1.2.0\php php.ini的配置 [PHP] ;;;;;;;;;;;;;;;;;;; ; About php.ini ; ;;;;;;;;;;;;;;;;;;; ; PHP's initialization file, generally called php.ini, is responsible for ; configuring many of the aspects of PHP's behavior. ; PHP attempts to find and load this configuration from a number of locations. ; The following is a summary of its search order: ; 1. SAPI module specific location. ; 2. The PHPRC environment variable. (As of PHP 5.2.0) ; 3. A number of predefined registry keys on Windows (As of PHP 5.2.0) ; 4. Current working directory (except CLI) ; 5. The web server's directory (for SAPI modules), or directory of PHP ; (otherwise in Windows) ; 6. The directory from the --with-config-file-path compile time option, or the ; Windows directory (C:\windows or C:\winnt) ; See the PHP docs for more specific information. ; http://php.net/configuration.file ; The syntax of the file is extremely simple. Whitespace and lines ; beginning with a semicolon are silently ignored (as you probably guessed). ; Section headers (e.g. [Foo]) are also silently ignored, even though ; they might mean something in the future. ; Directives following the section heading [PATH=/www/mysite] only ; apply to PHP files in the /www/mysite directory. Directives ; following the section heading [HOST=www.example.com] only apply to ; PHP files served from www.example.com. Directives set in these ; special sections cannot be overridden by user-defined INI files or ; at runtime. Currently, [PATH=] and [HOST=] sections only work under ; CGI/FastCGI. ; http://php.net/ini.sections ; Directives are specified using the following syntax: ; directive = value ; Directive names are *case sensitive* - foo=bar is different from FOO=bar. ; Directives are variables used to configure PHP or PHP extensions. ; There is no name validation. If PHP can't find an expected ; directive because it is not set or is mistyped, a default value will be used. ; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one ; of the INI constants (On, Off, True, False, Yes, No and None) or an expression ; (e.g. E_ALL & ~E_NOTICE), a quoted string ("bar"), or a reference to a ; previously set variable or directive (e.g. ${foo}) ; Expressions in the INI file are limited to bitwise operators and parentheses: ; | bitwise OR ; ^ bitwise XOR ; & bitwise AND ; ~ bitwise NOT ; ! boolean NOT ; Boolean flags can be turned on using the values 1, On, True or Yes. ; They can be turned off using the values 0, Off, False or No. ; An empty string can be denoted by simply not writing anything after the equal ; sign, or by using the None keyword: ; foo = ; sets foo to an empty string ; foo = None ; sets foo to an empty string ; foo = "None" ; sets foo to the string 'None' ; If you use constants in your value, and these constants belong to a ; dynamically loaded extension (either a PHP extension or a Zend extension), ; you may only use these constants *after* the line that loads the extension. ;;;;;;;;;;;;;;;;;;; ; About this file ; ;;;;;;;;;;;;;;;;;;; ; PHP comes packaged with two INI files. One that is recommended to be used ; in production environments and one that is recommended to be used in ; development environments. ; php.ini-production contains settings which hold security, performance and ; best practices at its core. But please be aware, these settings may break ; compatibility with older or less security conscience applications. We ; recommending using the production ini in production and testing environments. ; php.ini-development is very similar to its production variant, except it's ; much more verbose when it comes to errors. We recommending using the ; development version only in development environments as errors shown to ; application users can inadvertently leak otherwise secure information. ;;;;;;;;;;;;;;;;;;; ; Quick Reference ; ;;;;;;;;;;;;;;;;;;; ; The following are all the settings which are different in either the production ; or development versions of the INIs with respect to PHP's default behavior. ; Please see the actual settings later in the document for more details as to why ; we recommend these changes in PHP's behavior. ; display_errors ; Default Value: On ; Development Value: On ; Production Value: Off ; display_startup_errors ; Default Value: Off ; Development Value: On ; Production Value: Off ; error_reporting ; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED ; Development Value: E_ALL ; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT ; html_errors ; Default Value: On ; Development Value: On ; Production value: On ; log_errors ; Default Value: Off ; Development Value: On ; Production Value: On ; max_input_time ; Default Value: -1 (Unlimited) ; Development Value: 60 (60 seconds) ; Production Value: 60 (60 seconds) ; output_buffering ; Default Value: Off ; Development Value: 4096 ; Production Value: 4096 ; register_argc_argv ; Default Value: On ; Development Value: Off ; Production Value: Off ; request_order ; Default Value: None ; Development Value: "GP" ; Production Value: "GP" ; session.bug_compat_42 ; Default Value: On ; Development Value: On ; Production Value: Off ; session.bug_compat_warn ; Default Value: On ; Development Value: On ; Production Value: Off ; session.gc_divisor ; Default Value: 100 ; Development Value: 1000 ; Production Value: 1000 ; session.hash_bits_per_character ; Default Value: 4 ; Development Value: 5 ; Production Value: 5 ; short_open_tag ; Default Value: On ; Development Value: Off ; Production Value: Off ; track_errors ; Default Value: Off ; Development Value: On ; Production Value: Off ; url_rewriter.tags ; Default Value: "a=href,area=href,frame=src,form=,fieldset=" ; Development Value: "a=href,area=href,frame=src,input=src,form=fakeentry" ; Production Value: "a=href,area=href,frame=src,input=src,form=fakeentry" ; variables_order ; Default Value: "EGPCS" ; Development Value: "GPCS" ; Production Value: "GPCS" ;;;;;;;;;;;;;;;;;;;; ; php.ini Options ; ;;;;;;;;;;;;;;;;;;;; ; Name for user-defined php.ini (.htaccess) files. Default is ".user.ini" ;user_ini.filename = ".user.ini" ; To disable this feature set this option to empty value ;user_ini.filename = ; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes) ;user_ini.cache_ttl = 300 ;;;;;;;;;;;;;;;;;;;; ; Language Options ; ;;;;;;;;;;;;;;;;;;;; ; Enable the PHP scripting language engine under Apache. ; http://php.net/engine engine = On ; This directive determines whether or not PHP will recognize code between ; <? and ?> tags as PHP source which should be processed as such. It's been ; recommended for several years that you not use the short tag "short cut" and ; instead to use the full <?php and ?> tag combination. With the wide spread use ; of XML and use of these tags by other languages, the server can become easily ; confused and end up parsing the wrong code in the wrong context. But because ; this short cut has been a feature for such a long time, it's currently still ; supported for backwards compatibility, but we recommend you don't use them. ; Default Value: On ; Development Value: Off ; Production Value: Off ; http://php.net/short-open-tag short_open_tag = Off ; Allow ASP-style <% %> tags. ; http://php.net/asp-tags asp_tags = Off ; The number of significant digits displayed in floating point numbers. ; http://php.net/precision precision = 14 ; Output buffering is a mechanism for controlling how much output data ; (excluding headers and cookies) PHP should keep internally before pushing that ; data to the client. If your application's output exceeds this setting, PHP ; will send that data in chunks of roughly the size you specify. ; Turning on this setting and managing its maximum buffer size can yield some ; interesting side-effects depending on your application and web server. ; You may be able to send headers and cookies after you've already sent output ; through print or echo. You also may see performance benefits if your server is ; emitting less packets due to buffered output versus PHP streaming the output ; as it gets it. On production servers, 4096 bytes is a good setting for performance ; reasons. ; Note: Output buffering can also be controlled via Output Buffering Control ; functions. ; Possible Values: ; On = Enabled and buffer is unlimited. (Use with caution) ; Off = Disabled ; Integer = Enables the buffer and sets its maximum size in bytes. ; Note: This directive is hardcoded to Off for the CLI SAPI ; Default Value: Off ; Development Value: 4096 ; Production Value: 4096 ; http://php.net/output-buffering output_buffering = 4096 ; You can redirect all of the output of your scripts to a function. For ; example, if you set output_handler to "mb_output_handler", character ; encoding will be transparently converted to the specified encoding. ; Setting any output handler automatically turns on output buffering. ; Note: People who wrote portable scripts should not depend on this ini ; directive. Instead, explicitly set the output handler using ob_start(). ; Using this ini directive may cause problems unless you know what script ; is doing. ; Note: You cannot use both "mb_output_handler" with "ob_iconv_handler" ; and you cannot use both "ob_gzhandler" and "zlib.output_compression". ; Note: output_handler must be empty if this is set 'On' !!!! ; Instead you must use zlib.output_handler. ; http://php.net/output-handler ;output_handler = ; Transparent output compression using the zlib library ; Valid values for this option are 'off', 'on', or a specific buffer size ; to be used for compression (default is 4KB) ; Note: Resulting chunk size may vary due to nature of compression. PHP ; outputs chunks that are few hundreds bytes each as a result of ; compression. If you prefer a larger chunk size for better ; performance, enable output_buffering in addition. ; Note: You need to use zlib.output_handler instead of the standard ; output_handler, or otherwise the output will be corrupted. ; http://php.net/zlib.output-compression zlib.output_compression = Off ; http://php.net/zlib.output-compression-level ;zlib.output_compression_level = -1 ; You cannot specify additional output handlers if zlib.output_compression ; is activated here. This setting does the same as output_handler but in ; a different order. ; http://php.net/zlib.output-handler ;zlib.output_handler = ; Implicit flush tells PHP to tell the output layer to flush itself ; automatically after every output block. This is equivalent to calling the ; PHP function flush() after each and every call to print() or echo() and each ; and every HTML block. Turning this option on has serious performance ; implications and is generally recommended for debugging purposes only. ; http://php.net/implicit-flush ; Note: This directive is hardcoded to On for the CLI SAPI implicit_flush = Off ; The unserialize callback function will be called (with the undefined class' ; name as parameter), if the unserializer finds an undefined class ; which should be instantiated. A warning appears if the specified function is ; not defined, or if the function doesn't include/implement the missing class. ; So only set this entry, if you really want to implement such a ; callback-function. unserialize_callback_func = ; When floats & doubles are serialized store serialize_precision significant ; digits after the floating point. The default value ensures that when floats ; are decoded with unserialize, the data will remain the same. serialize_precision = 17 ; open_basedir, if set, limits all file operations to the defined directory ; and below. This directive makes most sense if used in a per-directory ; or per-virtualhost web server configuration file. This directive is ; *NOT* affected by whether Safe Mode is turned On or Off. ; http://php.net/open-basedir ;open_basedir = ; This directive allows you to disable certain functions for security reasons. ; It receives a comma-delimited list of function names. This directive is ; *NOT* affected by whether Safe Mode is turned On or Off. ; http://php.net/disable-functions disable_functions = ; This directive allows you to disable certain classes for security reasons. ; It receives a comma-delimited list of class names. This directive is ; *NOT* affected by whether Safe Mode is turned On or Off. ; http://php.net/disable-classes disable_classes = ; Colors for Syntax Highlighting mode. Anything that's acceptable in ; <span style="color: ???????"> would work. ; http://php.net/syntax-highlighting ;highlight.string = #DD0000 ;highlight.comment = #FF9900 ;highlight.keyword = #007700 ;highlight.default = #0000BB ;highlight.html = #000000 ; If enabled, the request will be allowed to complete even if the user aborts ; the request. Consider enabling it if executing long requests, which may end up ; being interrupted by the user or a browser timing out. PHP's default behavior ; is to disable this feature. ; http://php.net/ignore-user-abort ;ignore_user_abort = On ; Determines the size of the realpath cache to be used by PHP. This value should ; be increased on systems where PHP opens many files to reflect the quantity of ; the file operations performed. ; http://php.net/realpath-cache-size ;realpath_cache_size = 16k ; Duration of time, in seconds for which to cache realpath information for a given ; file or directory. For systems with rarely changing files, consider increasing this ; value. ; http://php.net/realpath-cache-ttl ;realpath_cache_ttl = 120 ; Enables or disables the circular reference collector. ; http://php.net/zend.enable-gc zend.enable_gc = On ; If enabled, scripts may be written in encodings that are incompatible with ; the scanner. CP936, Big5, CP949 and Shift_JIS are the examples of such ; encodings. To use this feature, mbstring extension must be enabled. ; Default: Off ;zend.multibyte = Off ; Allows to set the default encoding for the scripts. This value will be used ; unless "declare(encoding=...)" directive appears at the top of the script. ; Only affects if zend.multibyte is set. ; Default: "" ;zend.script_encoding = ;;;;;;;;;;;;;;;;; ; Miscellaneous ; ;;;;;;;;;;;;;;;;; ; Decides whether PHP may expose the fact that it is installed on the server ; (e.g. by adding its signature to the Web server header). It is no security ; threat in any way, but it makes it possible to determine whether you use PHP ; on your server or not. ; http://php.net/expose-php expose_php = On ;;;;;;;;;;;;;;;;;;; ; Resource Limits ; ;;;;;;;;;;;;;;;;;;; ; Maximum execution time of each script, in seconds ; http://php.net/max-execution-time ; Note: This directive is hardcoded to 0 for the CLI SAPI max_execution_time = 30 ; Maximum amount of time each script may spend parsing request data. It's a good ; idea to limit this time on productions servers in order to eliminate unexpectedly ; long running scripts. ; Note: This directive is hardcoded to -1 for the CLI SAPI ; Default Value: -1 (Unlimited) ; Development Value: 60 (60 seconds) ; Production Value: 60 (60 seconds) ; http://php.net/max-input-time max_input_time = 60 ; Maximum input variable nesting level ; http://php.net/max-input-nesting-level ;max_input_nesting_level = 64 ; How many GET/POST/COOKIE input variables may be accepted ; max_input_vars = 1000 ; Maximum amount of memory a script may consume (128MB) ; http://php.net/memory-limit memory_limit = 128M ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ; Error handling and logging ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ; This directive informs PHP of which errors, warnings and notices you would like ; it to take action for. The recommended way of setting values for this ; directive is through the use of the error level constants and bitwise ; operators. The error level constants are below here for convenience as well as ; some common settings and their meanings. ; By default, PHP is set to take action on all errors, notices and warnings EXCEPT ; those related to E_NOTICE and E_STRICT, which together cover best practices and ; recommended coding standards in PHP. For performance reasons, this is the ; recommend error reporting setting. Your production server shouldn't be wasting ; resources complaining about best practices and coding standards. That's what ; development servers and development settings are for. ; Note: The php.ini-development file has this setting as E_ALL. This ; means it pretty much reports everything which is exactly what you want during ; development and early testing. ; ; Error Level Constants: ; E_ALL - All errors and warnings (includes E_STRICT as of PHP 5.4.0) ; E_ERROR - fatal run-time errors ; E_RECOVERABLE_ERROR - almost fatal run-time errors ; E_WARNING - run-time warnings (non-fatal errors) ; E_PARSE - compile-time parse errors ; E_NOTICE - run-time notices (these are warnings which often result ; from a bug in your code, but it's possible that it was ; intentional (e.g., using an uninitialized variable and ; relying on the fact it's automatically initialized to an ; empty string) ; E_STRICT - run-time notices, enable to have PHP suggest changes ; to your code which will ensure the best interoperability ; and forward compatibility of your code ; E_CORE_ERROR - fatal errors that occur during PHP's initial startup ; E_CORE_WARNING - warnings (non-fatal errors) that occur during PHP's ; initial startup ; E_COMPILE_ERROR - fatal compile-time errors ; E_COMPILE_WARNING - compile-time warnings (non-fatal errors) ; E_USER_ERROR - user-generated error message ; E_USER_WARNING - user-generated warning message ; E_USER_NOTICE - user-generated notice message ; E_DEPRECATED - warn about code that will not work in future versions ; of PHP ; E_USER_DEPRECATED - user-generated deprecation warnings ; ; Common Values: ; E_ALL (Show all errors, warnings and notices including coding standards.) ; E_ALL & ~E_NOTICE (Show all errors, except for notices) ; E_ALL & ~E_NOTICE & ~E_STRICT (Show all errors, except for notices and coding standards warnings.) ; E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR (Show only errors) ; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED ; Development Value: E_ALL ; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT ; http://php.net/error-reporting error_reporting = E_ALL ; This directive controls whether or not and where PHP will output errors, ; notices and warnings too. Error output is very useful during development, but ; it could be very dangerous in production environments. Depending on the code ; which is triggering the error, sensitive information could potentially leak ; out of your application such as database usernames and passwords or worse. ; It's recommended that errors be logged on production servers rather than ; having the errors sent to STDOUT. ; Possible Values: ; Off = Do not display any errors ; stderr = Display errors to STDERR (affects only CGI/CLI binaries!) ; On or stdout = Display errors to STDOUT ; Default Value: On ; Development Value: On ; Production Value: Off ; http://php.net/display-errors display_errors = On ; The display of errors which occur during PHP's startup sequence are handled ; separately from display_errors. PHP's default behavior is to suppress those ; errors from clients. Turning the display of startup errors on can be useful in ; debugging configuration problems. But, it's strongly recommended that you ; leave this setting off on production servers. ; Default Value: Off ; Development Value: On ; Production Value: Off ; http://php.net/display-startup-errors display_startup_errors = On ; Besides displaying errors, PHP can also log errors to locations such as a ; server-specific log, STDERR, or a location specified by the error_log ; directive found below. While errors should not be displayed on productions ; servers they should still be monitored and logging is a great way to do that. ; Default Value: Off ; Development Value: On ; Production Value: On ; http://php.net/log-errors log_errors = On ; Set maximum length of log_errors. In error_log information about the source is ; added. The default is 1024 and 0 allows to not apply any maximum length at all. ; http://php.net/log-errors-max-len log_errors_max_len = 1024 ; Do not log repeated messages. Repeated errors must occur in same file on same ; line unless ignore_repeated_source is set true. ; http://php.net/ignore-repeated-errors ignore_repeated_errors = Off ; Ignore source of message when ignoring repeated messages. When this setting ; is On you will not log errors with repeated messages from different files or ; source lines. ; http://php.net/ignore-repeated-source ignore_repeated_source = Off ; If this parameter is set to Off, then memory leaks will not be shown (on ; stdout or in the log). This has only effect in a debug compile, and if ; error reporting includes E_WARNING in the allowed list ; http://php.net/report-memleaks report_memleaks = On ; This setting is on by default. ;report_zend_debug = 0 ; Store the last error/warning message in $php_errormsg (boolean). Setting this value ; to On can assist in debugging and is appropriate for development servers. It should ; however be disabled on production servers. ; Default Value: Off ; Development Value: On ; Production Value: Off ; http://php.net/track-errors track_errors = On ; Turn off normal error reporting and emit XML-RPC error XML ; http://php.net/xmlrpc-errors ;xmlrpc_errors = 0 ; An XML-RPC faultCode ;xmlrpc_error_number = 0 ; When PHP displays or logs an error, it has the capability of formatting the ; error message as HTML for easier reading. This directive controls whether ; the error message is formatted as HTML or not. ; Note: This directive is hardcoded to Off for the CLI SAPI ; Default Value: On ; Development Value: On ; Production value: On ; http://php.net/html-errors html_errors = On ; If html_errors is set to On *and* docref_root is not empty, then PHP ; produces clickable error messages that direct to a page describing the error ; or function causing the error in detail. ; You can download a copy of the PHP manual from http://php.net/docs ; and change docref_root to the base URL of your local copy including the ; leading '/'. You must also specify the file extension being used including ; the dot. PHP's default behavior is to leave these settings empty, in which ; case no links to documentation are generated. ; Note: Never use this feature for production boxes. ; http://php.net/docref-root ; Examples ;docref_root = "/phpmanual/" ; http://php.net/docref-ext ;docref_ext = .html ; String to output before an error message. PHP's default behavior is to leave ; this setting blank. ; http://php.net/error-prepend-string ; Example: ;error_prepend_string = "<span style='color: #ff0000'>" ; String to output after an error message. PHP's default behavior is to leave ; this setting blank. ; http://php.net/error-append-string ; Example: ;error_append_string = "</span>" ; Log errors to specified file. PHP's default behavior is to leave this value ; empty. ; http://php.net/error-log ; Example: ;error_log = php_errors.log ; Log errors to syslog (Event Log on NT, not valid in Windows 95). ;error_log = syslog ;windows.show_crt_warning ; Default value: 0 ; Development value: 0 ; Production value: 0 ;;;;;;;;;;;;;;;;; ; Data Handling ; ;;;;;;;;;;;;;;;;; ; The separator used in PHP generated URLs to separate arguments. ; PHP's default setting is "&". ; http://php.net/arg-separator.output ; Example: ;arg_separator.output = "&" ; List of separator(s) used by PHP to parse input URLs into variables. ; PHP's default setting is "&". ; NOTE: Every character in this directive is considered as separator! ; http://php.net/arg-separator.input ; Example: ;arg_separator.input = ";&" ; This directive determines which super global arrays are registered when PHP ; starts up. G,P,C,E & S are abbreviations for the following respective super ; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty ; paid for the registration of these arrays and because ENV is not as commonly ; used as the others, ENV is not recommended on productions servers. You ; can still get access to the environment variables through getenv() should you ; need to. ; Default Value: "EGPCS" ; Development Value: "GPCS" ; Production Value: "GPCS"; ; http://php.net/variables-order variables_order = "GPCS" ; This directive determines which super global data (G,P,C,E & S) should ; be registered into the super global array REQUEST. If so, it also determines ; the order in which that data is registered. The values for this directive are ; specified in the same manner as the variables_order directive, EXCEPT one. ; Leaving this value empty will cause PHP to use the value set in the ; variables_order directive. It does not mean it will leave the super globals ; array REQUEST empty. ; Default Value: None ; Development Value: "GP" ; Production Value: "GP" ; http://php.net/request-order request_order = "GP" ; This directive determines whether PHP registers $argv & $argc each time it ; runs. $argv contains an array of all the arguments passed to PHP when a script ; is invoked. $argc contains an integer representing the number of arguments ; that were passed when the script was invoked. These arrays are extremely ; useful when running scripts from the command line. When this directive is ; enabled, registering these variables consumes CPU cycles and memory each time ; a script is executed. For performance reasons, this feature should be disabled ; on production servers. ; Note: This directive is hardcoded to On for the CLI SAPI ; Default Value: On ; Development Value: Off ; Production Value: Off ; http://php.net/register-argc-argv register_argc_argv = Off ; When enabled, the ENV, REQUEST and SERVER variables are created when they're ; first used (Just In Time) instead of when the script starts. If these ; variables are not used within a script, having this directive on will result ; in a performance gain. The PHP directive register_argc_argv must be disabled ; for this directive to have any affect. ; http://php.net/auto-globals-jit auto_globals_jit = On ; Whether PHP will read the POST data. ; This option is enabled by default. ; Most likely, you won't want to disable this option globally. It causes $_POST ; and $_FILES to always be empty; the only way you will be able to read the ; POST data will be through the php://input stream wrapper. This can be useful ; to proxy requests or to process the POST data in a memory efficient fashion. ; http://php.net/enable-post-data-reading ;enable_post_data_reading = Off ; Maximum size of POST data that PHP will accept. ; Its value may be 0 to disable the limit. It is ignored if POST data reading ; is disabled through enable_post_data_reading. ; http://php.net/post-max-size post_max_size = 8M ; Automatically add files before PHP document. ; http://php.net/auto-prepend-file auto_prepend_file = ; Automatically add files after PHP document. ; http://php.net/auto-append-file auto_append_file = ; By default, PHP will output a character encoding using ; the Content-type: header. To disable sending of the charset, simply ; set it to be empty. ; ; PHP's built-in default is text/html ; http://php.net/default-mimetype default_mimetype = "text/html" ; PHP's default character set is set to empty. ; http://php.net/default-charset ;default_charset = "UTF-8" ; Always populate the $HTTP_RAW_POST_DATA variable. PHP's default behavior is ; to disable this feature. If post reading is disabled through ; enable_post_data_reading, $HTTP_RAW_POST_DATA is *NOT* populated. ; http://php.net/always-populate-raw-post-data ;always_populate_raw_post_data = On ;;;;;;;;;;;;;;;;;;;;;;;;; ; Paths and Directories ; ;;;;;;;;;;;;;;;;;;;;;;;;; ; UNIX: "/path1:/path2" ;include_path = ".:/php/includes" ; ; Windows: "\path1;\path2" ;include_path = ".;c:\php\includes" ; ; PHP's default setting for include_path is ".;/path/to/php/pear" ; http://php.net/include-path ; The root of the PHP pages, used only if nonempty. ; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root ; if you are running php as a CGI under any web server (other than IIS) ; see documentation for security issues. The alternate is to use the ; cgi.force_redirect configuration below ; http://php.net/doc-root doc_root = ; The directory under which PHP opens the script using /~username used only ; if nonempty. ; http://php.net/user-dir user_dir = ; Directory in which the loadable extensions (modules) reside. ; http://php.net/extension-dir ; extension_dir = "./" ; On windows: ; extension_dir = "ext" ;add by kongqz20130121 extension_dir="E:/nginx-1.2.0/php/ext" ; Whether or not to enable the dl() function. The dl() function does NOT work ; properly in multithreaded servers, such as IIS or Zeus, and is automatically ; disabled on them. ; http://php.net/enable-dl enable_dl = Off ; cgi.force_redirect is necessary to provide security running PHP as a CGI under ; most web servers. Left undefined, PHP turns this on by default. You can ; turn it off here AT YOUR OWN RISK ; **You CAN safely turn this off for IIS, in fact, you MUST.** ; http://php.net/cgi.force-redirect ;cgi.force_redirect = 1 ; if cgi.nph is enabled it will force cgi to always sent Status: 200 with ; every request. PHP's default behavior is to disable this feature. ;cgi.nph = 1 ; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape ; (iPlanet) web servers, you MAY need to set an environment variable name that PHP ; will look for to know it is OK to continue execution. Setting this variable MAY ; cause security issues, KNOW WHAT YOU ARE DOING FIRST. ; http://php.net/cgi.redirect-status-env ;cgi.redirect_status_env = ; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI. PHP's ; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok ; what PATH_INFO is. For more information on PATH_INFO, see the cgi specs. Setting ; this to 1 will cause PHP CGI to fix its paths to conform to the spec. A setting ; of zero causes PHP to behave as before. Default is 1. You should fix your scripts ; to use SCRIPT_FILENAME rather than PATH_TRANSLATED. ; http://php.net/cgi.fix-pathinfo ;cgi.fix_pathinfo=1 ; FastCGI under IIS (on WINNT based OS) supports the ability to impersonate ; security tokens of the calling client. This allows IIS to define the ; security context that the request runs under. mod_fastcgi under Apache ; does not currently support this feature (03/17/2002) ; Set to 1 if running under IIS. Default is zero. ; http://php.net/fastcgi.impersonate ;fastcgi.impersonate = 1 ; Disable logging through FastCGI connection. PHP's default behavior is to enable ; this feature. ;fastcgi.logging = 0 ; cgi.rfc2616_headers configuration option tells PHP what type of headers to ; use when sending HTTP response code. If it's set 0 PHP sends Status: header that ; is supported by Apache. When this option is set to 1 PHP will send ; RFC2616 compliant header. ; Default is zero. ; http://php.net/cgi.rfc2616-headers ;cgi.rfc2616_headers = 0 ;;;;;;;;;;;;;;;; ; File Uploads ; ;;;;;;;;;;;;;;;; ; Whether to allow HTTP file uploads. ; http://php.net/file-uploads file_uploads = On ; Temporary directory for HTTP uploaded files (will use system default if not ; specified). ; http://php.net/upload-tmp-dir ;upload_tmp_dir = ; Maximum allowed size for uploaded files. ; http://php.net/upload-max-filesize upload_max_filesize = 2M ; Maximum number of files that can be uploaded via a single request max_file_uploads = 20 ;;;;;;;;;;;;;;;;;; ; Fopen wrappers ; ;;;;;;;;;;;;;;;;;; ; Whether to allow the treatment of URLs (like http:// or ftp://) as files. ; http://php.net/allow-url-fopen allow_url_fopen = On ; Whether to allow include/require to open URLs (like http:// or ftp://) as files. ; http://php.net/allow-url-include allow_url_include = Off ; Define the anonymous ftp password (your email address). PHP's default setting ; for this is empty. ; http://php.net/from ;from="john@doe.com" ; Define the User-Agent string. PHP's default setting for this is empty. ; http://php.net/user-agent ;user_agent="PHP" ; Default timeout for socket based streams (seconds) ; http://php.net/default-socket-timeout default_socket_timeout = 60 ; If your scripts have to deal with files from Macintosh systems, ; or you are running on a Mac and need to deal with files from ; unix or win32 systems, setting this flag will cause PHP to ; automatically detect the EOL character in those files so that ; fgets() and file() will work regardless of the source of the file. ; http://php.net/auto-detect-line-endings ;auto_detect_line_endings = Off ;;;;;;;;;;;;;;;;;;;;;; ; Dynamic Extensions ; ;;;;;;;;;;;;;;;;;;;;;; ; If you wish to have an extension loaded automatically, use the following ; syntax: ; ; extension=modulename.extension ; ; For example, on Windows: ; ; extension=msql.dll ; ; ... or under UNIX: ; ; extension=msql.so ; ; ... or with a path: ; ; extension=/path/to/extension/msql.so ; ; If you only provide the name of the extension, PHP will look for it in its ; default extension directory. ; ; Windows Extensions ; Note that ODBC support is built in, so no dll is needed for it. ; Note that many DLL files are located in the extensions/ (PHP 4) ext/ (PHP 5) ; extension folders as well as the separate PECL DLL download (PHP 5). ; Be sure to appropriately set the extension_dir directive. ; ;extension=php_bz2.dll extension=php_curl.dll ;extension=php_fileinfo.dll extension=php_gd2.dll ;extension=php_gettext.dll ;extension=php_gmp.dll ;extension=php_intl.dll ;extension=php_imap.dll ;extension=php_interbase.dll ;extension=php_ldap.dll ;extension=php_mbstring.dll ;extension=php_exif.dll ; Must be after mbstring as it depends on it extension=php_mysql.dll ;extension=php_mysqli.dll ;extension=php_oci8.dll ; Use with Oracle 10gR2 Instant Client ;extension=php_oci8_11g.dll ; Use with Oracle 11gR2 Instant Client ;extension=php_openssl.dll ;extension=php_pdo_firebird.dll extension=php_pdo_mysql.dll ;extension=php_pdo_oci.dll ;extension=php_pdo_odbc.dll ;extension=php_pdo_pgsql.dll ;extension=php_pdo_sqlite.dll ;extension=php_pgsql.dll ;extension=php_pspell.dll ;extension=php_shmop.dll ; The MIBS data available in the PHP distribution must be installed. ; See http://www.php.net/manual/en/snmp.installation.php ;extension=php_snmp.dll ;extension=php_soap.dll ;extension=php_sockets.dll ;extension=php_sqlite3.dll ;extension=php_sybase_ct.dll ;extension=php_tidy.dll ;extension=php_xmlrpc.dll ;extension=php_xsl.dll ;extension=php_zip.dll ;;;;;;;;;;;;;;;;;;; ; Module Settings ; ;;;;;;;;;;;;;;;;;;; [CLI Server] ; Whether the CLI web server uses ANSI color coding in its terminal output. cli_server.color = On [Date] ; Defines the default timezone used by the date functions ; http://php.net/date.timezone ;date.timezone = ; http://php.net/date.default-latitude ;date.default_latitude = 31.7667 ; http://php.net/date.default-longitude ;date.default_longitude = 35.2333 ; http://php.net/date.sunrise-zenith ;date.sunrise_zenith = 90.583333 ; http://php.net/date.sunset-zenith ;date.sunset_zenith = 90.583333 [filter] ; http://php.net/filter.default ;filter.default = unsafe_raw ; http://php.net/filter.default-flags ;filter.default_flags = [iconv] ;iconv.input_encoding = ISO-8859-1 ;iconv.internal_encoding = ISO-8859-1 ;iconv.output_encoding = ISO-8859-1 [intl] ;intl.default_locale = ; This directive allows you to produce PHP errors when some error ; happens within intl functions. The value is the level of the error produced. ; Default is 0, which does not produce any errors. ;intl.error_level = E_WARNING [sqlite] ; http://php.net/sqlite.assoc-case ;sqlite.assoc_case = 0 [sqlite3] ;sqlite3.extension_dir = [Pcre] ;PCRE library backtracking limit. ; http://php.net/pcre.backtrack-limit ;pcre.backtrack_limit=100000 ;PCRE library recursion limit. ;Please note that if you set this value to a high number you may consume all ;the available process stack and eventually crash PHP (due to reaching the ;stack size limit imposed by the Operating System). ; http://php.net/pcre.recursion-limit ;pcre.recursion_limit=100000 [Pdo] ; Whether to pool ODBC connections. Can be one of "strict", "relaxed" or "off" ; http://php.net/pdo-odbc.connection-pooling ;pdo_odbc.connection_pooling=strict ;pdo_odbc.db2_instance_name [Pdo_mysql] ; If mysqlnd is used: Number of cache slots for the internal result set cache ; http://php.net/pdo_mysql.cache_size pdo_mysql.cache_size = 2000 ; Default socket name for local MySQL connects. If empty, uses the built-in ; MySQL defaults. ; http://php.net/pdo_mysql.default-socket pdo_mysql.default_socket= [Phar] ; http://php.net/phar.readonly ;phar.readonly = On ; http://php.net/phar.require-hash ;phar.require_hash = On ;phar.cache_list = [mail function] ; For Win32 only. ; http://php.net/smtp SMTP = localhost ; http://php.net/smtp-port smtp_port = 25 ; For Win32 only. ; http://php.net/sendmail-from ;sendmail_from = me@example.com ; For Unix only. You may supply arguments as well (default: "sendmail -t -i"). ; http://php.net/sendmail-path ;sendmail_path = ; Force the addition of the specified parameters to be passed as extra parameters ; to the sendmail binary. These parameters will always replace the value of ; the 5th parameter to mail(), even in safe mode. ;mail.force_extra_parameters = ; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename mail.add_x_header = On ; The path to a log file that will log all mail() calls. Log entries include ; the full path of the script, line number, To address and headers. ;mail.log = ; Log mail to syslog (Event Log on NT, not valid in Windows 95). ;mail.log = syslog [SQL] ; http://php.net/sql.safe-mode sql.safe_mode = Off [ODBC] ; http://php.net/odbc.default-db ;odbc.default_db = Not yet implemented ; http://php.net/odbc.default-user ;odbc.default_user = Not yet implemented ; http://php.net/odbc.default-pw ;odbc.default_pw = Not yet implemented ; Controls the ODBC cursor model. ; Default: SQL_CURSOR_STATIC (default). ;odbc.default_cursortype ; Allow or prevent persistent links. ; http://php.net/odbc.allow-persistent odbc.allow_persistent = On ; Check that a connection is still valid before reuse. ; http://php.net/odbc.check-persistent odbc.check_persistent = On ; Maximum number of persistent links. -1 means no limit. ; http://php.net/odbc.max-persistent odbc.max_persistent = -1 ; Maximum number of links (persistent + non-persistent). -1 means no limit. ; http://php.net/odbc.max-links odbc.max_links = -1 ; Handling of LONG fields. Returns number of bytes to variables. 0 means ; passthru. ; http://php.net/odbc.defaultlrl odbc.defaultlrl = 4096 ; Handling of binary data. 0 means passthru, 1 return as is, 2 convert to char. ; See the documentation on odbc_binmode and odbc_longreadlen for an explanation ; of odbc.defaultlrl and odbc.defaultbinmode ; http://php.net/odbc.defaultbinmode odbc.defaultbinmode = 1 ;birdstep.max_links = -1 [Interbase] ; Allow or prevent persistent links. ibase.allow_persistent = 1 ; Maximum number of persistent links. -1 means no limit. ibase.max_persistent = -1 ; Maximum number of links (persistent + non-persistent). -1 means no limit. ibase.max_links = -1 ; Default database name for ibase_connect(). ;ibase.default_db = ; Default username for ibase_connect(). ;ibase.default_user = ; Default password for ibase_connect(). ;ibase.default_password = ; Default charset for ibase_connect(). ;ibase.default_charset = ; Default timestamp format. ibase.timestampformat = "%Y-%m-%d %H:%M:%S" ; Default date format. ibase.dateformat = "%Y-%m-%d" ; Default time format. ibase.timeformat = "%H:%M:%S" [MySQL] ; Allow accessing, from PHP's perspective, local files with LOAD DATA statements ; http://php.net/mysql.allow_local_infile mysql.allow_local_infile = On ; Allow or prevent persistent links. ; http://php.net/mysql.allow-persistent mysql.allow_persistent = On ; If mysqlnd is used: Number of cache slots for the internal result set cache ; http://php.net/mysql.cache_size mysql.cache_size = 2000 ; Maximum number of persistent links. -1 means no limit. ; http://php.net/mysql.max-persistent mysql.max_persistent = -1 ; Maximum number of links (persistent + non-persistent). -1 means no limit. ; http://php.net/mysql.max-links mysql.max_links = -1 ; Default port number for mysql_connect(). If unset, mysql_connect() will use ; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the ; compile-time value defined MYSQL_PORT (in that order). Win32 will only look ; at MYSQL_PORT. ; http://php.net/mysql.default-port mysql.default_port = ; Default socket name for local MySQL connects. If empty, uses the built-in ; MySQL defaults. ; http://php.net/mysql.default-socket mysql.default_socket = ; Default host for mysql_connect() (doesn't apply in safe mode). ; http://php.net/mysql.default-host mysql.default_host = ; Default user for mysql_connect() (doesn't apply in safe mode). ; http://php.net/mysql.default-user mysql.default_user = ; Default password for mysql_connect() (doesn't apply in safe mode). ; Note that this is generally a *bad* idea to store passwords in this file. ; *Any* user with PHP access can run 'echo get_cfg_var("mysql.default_password") ; and reveal this password! And of course, any users with read access to this ; file will be able to reveal the password as well. ; http://php.net/mysql.default-password mysql.default_password = ; Maximum time (in seconds) for connect timeout. -1 means no limit ; http://php.net/mysql.connect-timeout mysql.connect_timeout = 60 ; Trace mode. When trace_mode is active (=On), warnings for table/index scans and ; SQL-Errors will be displayed. ; http://php.net/mysql.trace-mode mysql.trace_mode = Off [MySQLi] ; Maximum number of persistent links. -1 means no limit. ; http://php.net/mysqli.max-persistent mysqli.max_persistent = -1 ; Allow accessing, from PHP's perspective, local files with LOAD DATA statements ; http://php.net/mysqli.allow_local_infile ;mysqli.allow_local_infile = On ; Allow or prevent persistent links. ; http://php.net/mysqli.allow-persistent mysqli.allow_persistent = On ; Maximum number of links. -1 means no limit. ; http://php.net/mysqli.max-links mysqli.max_links = -1 ; If mysqlnd is used: Number of cache slots for the internal result set cache ; http://php.net/mysqli.cache_size mysqli.cache_size = 2000 ; Default port number for mysqli_connect(). If unset, mysqli_connect() will use ; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the ; compile-time value defined MYSQL_PORT (in that order). Win32 will only look ; at MYSQL_PORT. ; http://php.net/mysqli.default-port mysqli.default_port = 3306 ; Default socket name for local MySQL connects. If empty, uses the built-in ; MySQL defaults. ; http://php.net/mysqli.default-socket mysqli.default_socket = ; Default host for mysql_connect() (doesn't apply in safe mode). ; http://php.net/mysqli.default-host mysqli.default_host = ; Default user for mysql_connect() (doesn't apply in safe mode). ; http://php.net/mysqli.default-user mysqli.default_user = ; Default password for mysqli_connect() (doesn't apply in safe mode). ; Note that this is generally a *bad* idea to store passwords in this file. ; *Any* user with PHP access can run 'echo get_cfg_var("mysqli.default_pw") ; and reveal this password! And of course, any users with read access to this ; file will be able to reveal the password as well. ; http://php.net/mysqli.default-pw mysqli.default_pw = ; Allow or prevent reconnect mysqli.reconnect = Off [mysqlnd] ; Enable / Disable collection of general statistics by mysqlnd which can be ; used to tune and monitor MySQL operations. ; http://php.net/mysqlnd.collect_statistics mysqlnd.collect_statistics = On ; Enable / Disable collection of memory usage statistics by mysqlnd which can be ; used to tune and monitor MySQL operations. ; http://php.net/mysqlnd.collect_memory_statistics mysqlnd.collect_memory_statistics = On ; Size of a pre-allocated buffer used when sending commands to MySQL in bytes. ; http://php.net/mysqlnd.net_cmd_buffer_size ;mysqlnd.net_cmd_buffer_size = 2048 ; Size of a pre-allocated buffer used for reading data sent by the server in ; bytes. ; http://php.net/mysqlnd.net_read_buffer_size ;mysqlnd.net_read_buffer_size = 32768 [OCI8] ; Connection: Enables privileged connections using external ; credentials (OCI_SYSOPER, OCI_SYSDBA) ; http://php.net/oci8.privileged-connect ;oci8.privileged_connect = Off ; Connection: The maximum number of persistent OCI8 connections per ; process. Using -1 means no limit. ; http://php.net/oci8.max-persistent ;oci8.max_persistent = -1 ; Connection: The maximum number of seconds a process is allowed to ; maintain an idle persistent connection. Using -1 means idle ; persistent connections will be maintained forever. ; http://php.net/oci8.persistent-timeout ;oci8.persistent_timeout = -1 ; Connection: The number of seconds that must pass before issuing a ; ping during oci_pconnect() to check the connection validity. When ; set to 0, each oci_pconnect() will cause a ping. Using -1 disables ; pings completely. ; http://php.net/oci8.ping-interval ;oci8.ping_interval = 60 ; Connection: Set this to a user chosen connection class to be used ; for all pooled server requests with Oracle 11g Database Resident ; Connection Pooling (DRCP). To use DRCP, this value should be set to ; the same string for all web servers running the same application, ; the database pool must be configured, and the connection string must ; specify to use a pooled server. ;oci8.connection_class = ; High Availability: Using On lets PHP receive Fast Application ; Notification (FAN) events generated when a database node fails. The ; database must also be configured to post FAN events. ;oci8.events = Off ; Tuning: This option enables statement caching, and specifies how ; many statements to cache. Using 0 disables statement caching. ; http://php.net/oci8.statement-cache-size ;oci8.statement_cache_size = 20 ; Tuning: Enables statement prefetching and sets the default number of ; rows that will be fetched automatically after statement execution. ; http://php.net/oci8.default-prefetch ;oci8.default_prefetch = 100 ; Compatibility. Using On means oci_close() will not close ; oci_connect() and oci_new_connect() connections. ; http://php.net/oci8.old-oci-close-semantics ;oci8.old_oci_close_semantics = Off [PostgreSQL] ; Allow or prevent persistent links. ; http://php.net/pgsql.allow-persistent pgsql.allow_persistent = On ; Detect broken persistent links always with pg_pconnect(). ; Auto reset feature requires a little overheads. ; http://php.net/pgsql.auto-reset-persistent pgsql.auto_reset_persistent = Off ; Maximum number of persistent links. -1 means no limit. ; http://php.net/pgsql.max-persistent pgsql.max_persistent = -1 ; Maximum number of links (persistent+non persistent). -1 means no limit. ; http://php.net/pgsql.max-links pgsql.max_links = -1 ; Ignore PostgreSQL backends Notice message or not. ; Notice message logging require a little overheads. ; http://php.net/pgsql.ignore-notice pgsql.ignore_notice = 0 ; Log PostgreSQL backends Notice message or not. ; Unless pgsql.ignore_notice=0, module cannot log notice message. ; http://php.net/pgsql.log-notice pgsql.log_notice = 0 [Sybase-CT] ; Allow or prevent persistent links. ; http://php.net/sybct.allow-persistent sybct.allow_persistent = On ; Maximum number of persistent links. -1 means no limit. ; http://php.net/sybct.max-persistent sybct.max_persistent = -1 ; Maximum number of links (persistent + non-persistent). -1 means no limit. ; http://php.net/sybct.max-links sybct.max_links = -1 ; Minimum server message severity to display. ; http://php.net/sybct.min-server-severity sybct.min_server_severity = 10 ; Minimum client message severity to display. ; http://php.net/sybct.min-client-severity sybct.min_client_severity = 10 ; Set per-context timeout ; http://php.net/sybct.timeout ;sybct.timeout= ;sybct.packet_size ; The maximum time in seconds to wait for a connection attempt to succeed before returning failure. ; Default: one minute ;sybct.login_timeout= ; The name of the host you claim to be connecting from, for display by sp_who. ; Default: none ;sybct.hostname= ; Allows you to define how often deadlocks are to be retried. -1 means "forever". ; Default: 0 ;sybct.deadlock_retry_count= [bcmath] ; Number of decimal digits for all bcmath functions. ; http://php.net/bcmath.scale bcmath.scale = 0 [browscap] ; http://php.net/browscap ;browscap = extra/browscap.ini [Session] ; Handler used to store/retrieve data. ; http://php.net/session.save-handler session.save_handler = files ; Argument passed to save_handler. In the case of files, this is the path ; where data files are stored. Note: Windows users have to change this ; variable in order to use PHP's session functions. ; ; The path can be defined as: ; ; session.save_path = "N;/path" ; ; where N is an integer. Instead of storing all the session files in ; /path, what this will do is use subdirectories N-levels deep, and ; store the session data in those directories. This is useful if you ; or your OS have problems with lots of files in one directory, and is ; a more efficient layout for servers that handle lots of sessions. ; ; NOTE 1: PHP will not create this directory structure automatically. ; You can use the script in the ext/session dir for that purpose. ; NOTE 2: See the section on garbage collection below if you choose to ; use subdirectories for session storage ; ; The file storage module creates files using mode 600 by default. ; You can change that by using ; ; session.save_path = "N;MODE;/path" ; ; where MODE is the octal representation of the mode. Note that this ; does not overwrite the process's umask. ; http://php.net/session.save-path session.save_path = "E:/snsworkspace/tmp" ; Whether to use cookies. ; http://php.net/session.use-cookies session.use_cookies = 1 ; http://php.net/session.cookie-secure ;session.cookie_secure = ; This option forces PHP to fetch and use a cookie for storing and maintaining ; the session id. We encourage this operation as it's very helpful in combating ; session hijacking when not specifying and managing your own session id. It is ; not the end all be all of session hijacking defense, but it's a good start. ; http://php.net/session.use-only-cookies session.use_only_cookies = 1 ; Name of the session (used as cookie name). ; http://php.net/session.name session.name = PHPSESSID ; Initialize session on request startup. ; http://php.net/session.auto-start session.auto_start = 0 ; Lifetime in seconds of cookie or, if 0, until browser is restarted. ; http://php.net/session.cookie-lifetime session.cookie_lifetime = 0 ; The path for which the cookie is valid. ; http://php.net/session.cookie-path session.cookie_path = / ; The domain for which the cookie is valid. ; http://php.net/session.cookie-domain session.cookie_domain = ; Whether or not to add the httpOnly flag to the cookie, which makes it inaccessible to browser scripting languages such as JavaScript. ; http://php.net/session.cookie-httponly session.cookie_httponly = ; Handler used to serialize data. php is the standard serializer of PHP. ; http://php.net/session.serialize-handler session.serialize_handler = php ; Defines the probability that the 'garbage collection' process is started ; on every session initialization. The probability is calculated by using ; gc_probability/gc_divisor. Where session.gc_probability is the numerator ; and gc_divisor is the denominator in the equation. Setting this value to 1 ; when the session.gc_divisor value is 100 will give you approximately a 1% chance ; the gc will run on any give request. ; Default Value: 1 ; Development Value: 1 ; Production Value: 1 ; http://php.net/session.gc-probability session.gc_probability = 1 ; Defines the probability that the 'garbage collection' process is started on every ; session initialization. The probability is calculated by using the following equation: ; gc_probability/gc_divisor. Where session.gc_probability is the numerator and ; session.gc_divisor is the denominator in the equation. Setting this value to 1 ; when the session.gc_divisor value is 100 will give you approximately a 1% chance ; the gc will run on any give request. Increasing this value to 1000 will give you ; a 0.1% chance the gc will run on any give request. For high volume production servers, ; this is a more efficient approach. ; Default Value: 100 ; Development Value: 1000 ; Production Value: 1000 ; http://php.net/session.gc-divisor session.gc_divisor = 1000 ; After this number of seconds, stored data will be seen as 'garbage' and ; cleaned up by the garbage collection process. ; http://php.net/session.gc-maxlifetime session.gc_maxlifetime = 1440 ; NOTE: If you are using the subdirectory option for storing session files ; (see session.save_path above), then garbage collection does *not* ; happen automatically. You will need to do your own garbage ; collection through a shell script, cron entry, or some other method. ; For example, the following script would is the equivalent of ; setting session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes): ; find /path/to/sessions -cmin +24 | xargs rm ; PHP 4.2 and less have an undocumented feature/bug that allows you to ; to initialize a session variable in the global scope. ; PHP 4.3 and later will warn you, if this feature is used. ; You can disable the feature and the warning separately. At this time, ; the warning is only displayed, if bug_compat_42 is enabled. This feature ; introduces some serious security problems if not handled correctly. It's ; recommended that you do not use this feature on production servers. But you ; should enable this on development servers an

Recno:: 16
URL:: http://blog.csdn.net/kongqz/article/details/9963555

ParseText::
在linux下配置nginx+java+php的环境 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 在linux下配置nginx+java+php的环境 2013-08-14 14:15 4543人阅读 评论 (0) 收藏 举报 分类： linux （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、配置目标 1、通过lnmp完成基础环境的安装 通过lnmp安装后，相关软件的位置请参考其官方说明。安装后我单独通过气官方说明，升级了nginx的版本 2、配置nginx使之能满足php+java环境在一台机器上的复用 二、相关安装说明 1、将tomcat安装到/usr/local/tomcat6 2、将nginx安装到/usr/local/nginx 3、将java项目安装到tomcat6/webapps下 4、将php相关项目直接安装到/usr/local/下 三、相关配置说明 主要说明几个主配置文件的情况 1、nginx.conf user www www; worker_processes 1; error_log /home/wwwlogs/nginx_error.log crit; pid /usr/local/nginx/logs/nginx.pid; #Specifies the value for maximum file descriptors that can be opened by this process. worker_rlimit_nofile 51200; events { use epoll; worker_connections 51200; } #fastcgi参数的配置很重要。对性能影响较大 http { include mime.types; default_type application/octet-stream; server_names_hash_bucket_size 128; client_header_buffer_size 32k; large_client_header_buffers 4 32k; client_max_body_size 50m; sendfile on; tcp_nopush on; keepalive_timeout 60; tcp_nodelay on; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 256k; fastcgi_buffers 8 256k; fastcgi_busy_buffers_size 512k; fastcgi_temp_file_write_size 512k; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.0; gzip_comp_level 2; gzip_types text/plain application/x-javascript text/css application/xml; gzip_vary on; #limit_zone crawler $binary_remote_addr 10m; #log format log_format access '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" $http_x_forwarded_for'; #核心指出了各个域名的配置文件位置，在nginx/conf/vhost目录中  include vhost/*.conf; } 2、vhost（在nginx.conf指明了相关域名对应的配置文件位置） （1）、php项目配置：文件名称shequ.jiuchongju.com.conf 这里我将一个域名的相关配置在这里展示：shequ.jiuchongju.com server { listen 80; server_name shequ.jiuchongju.com; index index.html index.htm index.php; root /usr/local/discuzx/upload; location ~ .*\.(php|php5)?$ { try_files $uri =404; fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_index index.php; include fcgi.conf; } location /status { stub_status on; access_log off; } location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ { expires 30d; } location ~ .*\.(js|css)?$ { expires 12h; } access_log /home/wwwlogs/access.log access; } （2）、java项目配置:文件名称www.quickbook.cn.conf 这里我指定了一个java项目的配置  www.quickbook.cn server { listen 80; server_name www.quickbook.cn; #charset koi8-r; access_log logs/dev/null; root /usr/local/tomcat6/webapps/quickbook/; #将请求反向代理到tomcat应用服务器上了  location / { index index.jsp index.html index.htm ; proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; client_max_body_size 10m; client_body_buffer_size 128k; proxy_buffers 32 4k; proxy_connect_timeout 3; proxy_send_timeout 30; proxy_read_timeout 30; proxy_pass http://127.0.0.1:8080; } } 三、总结 1、主要是nginx将各个子域名的配置放到conf/vhost中独立处理 2、每个vhost下的配置文件都独立生效 3、nginx只是将请求转发到后端的应用服务器上 4、启动的时候需要按照如下次序启动 （1）、启动mysql数据库 （2）、启动tomcat （3）、启动nginx 顶 0 踩 0 我的同类文章 linux （46） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968780次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 17
URL:: http://blog.csdn.net/leftfist/article/details/49004395

ParseText::
jquery获取兄弟元素 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 jquery获取兄弟元素 标签： jquery 兄弟元素 2015-10-10 10:52 1200人阅读 评论 (4) 收藏 举报 分类： JavaScript （95） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 按照w3c school的指引，jquery中，要获得一个元素的兄弟，可以用 prev()、next()两种方法。顾名思义，prev()获得前一个，next()获得后面一个。 问题是，如果存在前后兄弟，这俩方法可能会返回实打实的对象；如果是没有呢？返回啥？是null吗？ 答案不是。你如果想用 if( $(“#div1”).prev() == null ) { alert(“没啦”);} ，注定会撞板。因为永远不会为null。 我试来又试去，最后是这样搞的： if ( typeof $( "#div1" ).prev().html() == "undefined" ) { alert( "没啦" ); } 最讨厌网上那些文章，一大抄，篇篇信誓旦旦，但只说些人所共知的东西，不实用，关键时刻靠不住。 获取兄弟的使用场景，比如说 页签。点击某个页签，那这个会不会是第一个或者最后一个？ ========================= 其实也可以这样： if ( $( "#div1" ).prev().length == 0 ) { alert( "没啦" ); } 上一篇 asp.net MVC 中呈现指定区域下的分部视图 下一篇 Autofac 顶 0 踩 0 我的同类文章 JavaScript （95） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042227次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 18
URL:: http://blog.csdn.net/leftfist/article/details/49129283

ParseText::
Autofac - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Autofac 标签： autofac ioc ioc容器 2015-10-19 20:00 556人阅读 评论 (0) 收藏 举报 分类： 程序人生 （29） 作者同类文章 X 设计模式 （21） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 Autofac、Autofac、Autofac！好的东西要说三遍。 这东西干嘛用？ 用于自动注入。 啥注入？注水猪肉么？ 这要扯到控制反转（Inversion of Control，IoC），依赖注入（DI）等。其实控制反转、依赖注入都是面向接口编程的同一类概念。 何谓控制反转？ 以前我们要使用一个对象，是这样的： Class1 obj = new Class1(); 面向接口编程后，是这样的： //class Class1 : IClass1 IClass1 obj = new Class1(); 应用控制反转、依赖注入，是类似这样的： public class Test { IClass1 obj; //类内只有接口 public Test (IClass obj) { this .obj = obj; //你会给我一个啥实例？给点提示好不好？呵呵，给啥用啥，没得挑！ } ... } //对象实例要靠类外面创建，再传递进来（注入） Test test = new Test( new Class1()); 这种使用对象实例方式，不经过类自身构造，无法控制，而只能听由外部或调用方安排，即所谓控制反转了。反了反了的意思。 那么Autofac呢？ 呵呵，用了Autofac之后，连构造实例的语句： Test test = new Test( new Class1()); 都没有了。看代码的时候，只看见一堆接口，唯独没有实例声明，很容易让人大感疑惑！ 其实，实例的声明，就由Autofac自动完成了。Autofac、Autofac,我猜想就是 Auto factory的缩写吧，自动产生工厂实例，呵呵。 Autofac原理 寻找到相关实例，将其赋给接口对象。比如说，我们在调用方使用了一堆接口，然后引用了一个DLL，这个DLL包含了实现这些接口的实例，那么Autofac就自动从这个DLL中提取出这些实例，赋给接口对象。这一切都是Autofac自动完成的。 Asp.net MVC 中的应用 //global.asax.cs protected void Application_Start () { …… //激发autofac AutofacConfig.BuildContainer(); } …… //App_Start/AutofacConfig public class AutofacConfig { public static void BuildContainer () { var builder = new ContainerBuilder(); //Infrastructure objects builder.RegisterControllers( typeof (MvcApplication).Assembly); builder.RegisterAssemblyTypes( typeof (MvcApplication).Assembly).AsImplementedInterfaces(); //自动用Services里的类来注册相应实例，无须一个个注册 builder.RegisterAssemblyTypes( typeof (ISysManagerService).Assembly) .Where(t => t.IsClass && t.Name.EndsWith( "Service" )) .As(t => t.GetInterfaces().Single(i => i.Name.EndsWith(t.Name))) .InstancePerRequest(); …… IContainer container = builder.Build(); DependencyResolver.SetResolver( new AutofacDependencyResolver(container)); } 适合场景 比如说，甲乙两个人一起开发项目，甲负责前端及逻辑，乙负责数据库。开发过程中，甲需要一些数据进行测试，按道理，他是调用乙的方法来获取，问题是，乙还没弄好，这个时候该怎么办？难道甲只好一直等到乙弄好？ 这个时候，面向接口编程的好处就体现出来了。甲制定了一些接口，前端使用了这些接口，然后自己又写了一些类实现这些接口，实现很简单，只提供一些测试数据。结果甲开发得很顺利。 后来，乙终于也将方法写好了，当然也是实现同样接口的。那么怎么应用这些真正的类呢？ 这时Autofac的优势也体现出来了，只需替换相关的DLL就可以了，剩下的，Autofac代劳。否则的话，还要自己将每个对接口的赋值修改一下。数量不多还好，数量多，分布又多的话，还是要花一点时间。 上一篇 jquery获取兄弟元素 下一篇 用javascript写一个前端等待控件 顶 0 踩 0 我的同类文章 程序人生 （29） 设计模式 （21） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042221次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 19
URL:: http://blog.csdn.net/leftfist/article/details/49284775

ParseText::
操作系统学习笔记：文件系统实现 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 操作系统学习笔记：文件系统实现 标签： 操作系统 2015-11-10 23:36 795人阅读 评论 (0) 收藏 举报 分类： 计算机基础 （30） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 一、文件系统结构 为了提供对磁盘的高效便捷的访问，操作系统通过文件系统来轻松地存储、定位、提取数据。文件系统有两个不同的设计问题：1、如何定义文件系统对用户的接口，涉及到文件及其属性、文件允许的操作、组织文件的目录结构；2、创建数据结构和算法将逻辑文件系统映射到物理外存设备上。 目前有许多文件系统在使用。绝大多数操作系统都支持多个文件系统。 二、文件系统实现 实现文件系统需要应对多种磁盘和内存结构。 磁盘上，文件系统包括操作系统，总块数，空闲块数及位置，目录结构，具体文件等； 内存则用于进行文件系统管理、缓存以提高性能。打开一个文件，内存中的打开文件表则相应增加一个条目，反之剔除。调用open()返回该文件的指针，windows称之为 文件句柄(file handle)。 磁盘分区分为根分区和其他分区。根分区有操作系统内核或其他系统文件，在开机引导时装入内存。其他分区可以在引导时装入或之后手动装入。引导信息本身有自己的格式，但它并不能解释文件系统。系统的启动装载器首先装入引导信息，而后可以引导磁盘上的操作系统，由操作系统对文件系统进行解释、使用。 也有的分区没有文件系统，即尚未格式化的，此谓生分区（或原始的，raw）。如果有文件系统，那就是熟的（cooked）。生磁盘用于没有合适的文件系统的地方，可以被操作系统作特殊用途；也有的数据库绕过操作系统自己格式化后直接使用，也可以用于RAID。 操作系统同时支持多个文件系统类型。绝大多数操作系统都采取了面向对象技术，对文件系统接口加以不同的实现来达到这个目的。这也包括网络文件系统类型，如NFS。 三、目录实现 目录分配和目录管理算法对文件系统的效率、性能和可靠性有很大影响。 1、线性列表 存储文件名和数据块指针的线性列表。简单，但性能不高。主要是新增或删除该目录下的文件时，需要线性搜索以确定无重名或找到相应文件。当然有许多办法改善，比如缓存、排序，或将条目标记、转移等。 2、哈希表 大大减少目录搜索时间，插入和删除也比较简单。哈希算法其实就是为了解决冲突的。 四、分配方法 一个磁盘可存储多个文件，那么如何为它们分配空间，才能有效使用磁盘空间和快速访问？常用的方法有三个：连续、链接和索引。 1、连续分配 文件在磁盘上占有连续的块，如此访问之时磁头移动最少，寻道数、寻道时间也最小。 但这种分配方式容易引起外部碎片，同时文件尺寸难以扩展。 2、链接 能解决连续分配的所有问题：每个文件是块的链表，块可以分布在磁盘任何地方。目录包含每个文件的第一块和最末块指针。缺点是只能有效地用于文件的顺序访问，不能支持直接访问。同时指针需要额外的空间。另外指针丢失或损坏会导致文件内容无法访问。 应对之道是采用簇代替块，比如4块为一簇；采用文件分配表（FAT）代替指针。 3、索引分配 链接是指针和块分布于磁盘，索引分配将所有指针放在一起。每个文件都有索引块。索引块是一个数组，元素i指向文件的块i，故而凭索引i就可以直接访问文件第i块。 索引分配模式没有碎片，问题是索引块多大合适？一个文件一个索引块，因此应该尽可能小，但太小的话，大文件的指针就不够用。这里有一些机制，比如支持多个索引块链接，或多层索引，或分级索引，如linux的方案。 4、性能 采用哪种磁盘分配方法，在于如何使用系统。一个主要为顺序访问的系统不应该与一个主要为随机访问的系统采用相同的方法。 五、空闲空间管理 空闲空间包括未使用空间及已删除文件的空间。为了记录空闲磁盘空间，分配给文件创建，或文件删除时进行回收，这个空闲表有如下几种形式： 1、位向量 每个磁盘块采用0或1进行表示：0代表已分配，1代表空闲。优点是查找第一个空闲块或者连续空闲块时相对简单和高效。因为计算机有位操作指令。缺点是比较消耗内存。一个40GB，每块1K的磁盘需要超过5M的空间来存储位图。 2、链表 将所有空闲块用链表连接起来，并将指向第一块的指针保存在磁盘的特殊位置，同时也缓存在内存中。每一块指向下一块，如此继续。效率不高，要遍历整个空闲表时，要读入每一块。不过，这种机会不大，通常操作系统只是简单地将一个空闲块分配给一个文件，每次只拿第一块就行了。 3、组 链表的改进型。将整条链表分成若干组，每个组只用一块存储组中其他块的地址，然后再用一块存储下一组的地址，如此继续。这样可以很快找到大量的空闲块。 4、计数 记录第一块的地址以及紧随其后的连续空闲块数量。这样，空闲表的每个条目包含磁盘地址和数量，比原来的条目大，但表总长度会更短，因为连续块的数量很多。适用于多个连续块同时分配或释放的情况。 六、效率与性能 磁盘是计算机主要部件中最慢的部分，常常成为系统性能的瓶颈。 1、效率 磁盘空间的有效使用主要取决于所使用的磁盘分配和目录管理算法。例如预先分配索引，根据文件大小以决定选用大簇或小簇；综合考虑是否内存中的文件条目数据结构；文件指针大小；等等。 2、性能 即使选择了基本文件系统，仍然能从多方面改善性能：磁盘缓存、页面缓存（虚拟内存）、异步写、预读，等等。 七、恢复 文件和目录保存在内存和磁盘上，必须确保系统失败不会引起数据丢失和不一致性。 1、一致性检查 由于缓存和异步写等，计算机崩溃后许多对文件和目录的修改会丢失，从而可能出现不一致状态。一致性检查程序常在系统重启时运行，试图修正。修正程度与文件的分配方法有关。 2、备份和恢复 最保险的办法是备份。 八、基于日志结构的文件系统 采用类似数据库日志的机制， 应对系统崩溃、不一致性等问题。 九、NFS NFS是一种广泛使用的网络文件系统。它是通过局域网（甚至广域网）访问远程文件的软件实现和规范。 1、概述 NFS将一组互连工作站作为独立文件系统的机器组合，目的是允许透明地共享这些文件系统。共享是client - server模式的，一台机器既可能是客户机，也可能是服务器。共享可在任何两台对等机器之间进行。 一台机器如果要访问远程文件系统，首先要将远程目录安装到本地。一旦安装完成，远程目录与本地文件系统就有机集成起来，取代了原本的本地目录。本地目录成为新安装目录的根。NFS规范分两个：一是安装协议，一是远程文件访问协议。 2、安装协议 安装协议在客户机和服务器之间建立逻辑连接。安装操作包括要安装的远程目录名称和存储服务器名称。服务器维护一个输出列表，列出哪些文件系统允许输出以便安装。其中可能包括权限。 3、NFS协议 NFS协议提供了一组RPC以供远程文件操作。包括： 搜索文件 读取目录条目 操作链接和目录 访问文件属性 读写文件 NFS服务器一个显著特点是无状态，每次请求都要提供完整的参数。还要有序列号。在服务器端，崩溃或恢复对客户机是不可见的，那么客户机传过来的写需要确保同步，因而采用非易失性缓存。 单个NFS写时原子的，但NFS不提供并发控制，NFS上层服务需要提供锁。 NFS通过VFS与操作系统集成，客户机与服务器对等。 4、路径名转换 包括把路径名解析成独立的目录条目或组成部分。解析过程中，对每个组成名称和目录虚拟节点执行独立的NFS lookup调用，一旦遇到安装点，即向服务器发送一个RPC。客户端可缓存远程目录。不过当从服务器返回的属性与缓存内的属性不匹配时，目录缓存就要加以更新。 5、远程操作 NFS坚持远程服务，但采用了缓冲和缓存技术以提高性能。 上一篇 动态绑定滚动条事件 下一篇 泛型方法的局限及解决之道 顶 0 踩 0 我的同类文章 计算机基础 （30） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042228次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 20
URL:: http://blog.csdn.net/leftfist/article/details/49428421

ParseText::
ASP.NET MVC 原理 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ASP.NET MVC 原理 标签： asp.net mvc 2015-10-31 19:09 936人阅读 评论 (4) 收藏 举报 分类： 设计模式 （21） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 我出了份卷子做面试题，其中之一就是要求说说ASP.NET MVC的原理。感觉太空泛了，谁能说得准呢？ 但是，如果站在我这个面试官立场，面试题好多时并不要求有标准答案，可能也没有什么标准答案，主要是通过问答，了解一下面试者的理解程度，相关知识程度什么的。其实，我自己水平也不行，但因为年纪大，好像不带点人大家会觉得有点怪怪的，所以过去一段时间也参与点招聘工作。 对于ASP.NET MVC，我自己的理解是酱紫的： MVC是一种思想。ASP.NET MVC只不过是实现了这种思想的一种开发框架。利用Web Form项目，其实也可以实现MVC。以前搞WEB FORM,我就试过MVP模式。 MVC的思想要点的在于将UI和业务逻辑、数据分离。好处一是逻辑清晰，二是有利于逻辑重用和测试。因为UI很难自动化测试，但逻辑却可以。所以说，ASP.NET MVC有利于进行单元测试。并且UI与逻辑、数据分离以后，也容易重用。比如说，在ASP.NET MVC中，不同的action可以指向同一个view。 经典的MVC中，Model是个巨无霸，包含业务逻辑和数据。controller只是一个中间人，在View和Model之间传递点什么，打打酱油。有时候，Model和View甚至直接联系，绕开了controller。 而在ASP.NET MVC中，虽然有一个Model，但此Model并非彼巨无霸Model。ASP.NET MVC中的Model，是一个跟视图有关的Model，也就是传说中的那个VM，ViewModel，它只是经典巨无霸Model的一部分。ViewModel，顾名思义，主要用于View。经典巨无霸Model，被拆分成了数据（ViewModel、领域对象、数据库实体类 ）+ 业务逻辑（BLL ,各种Service）。因此，Model只不过是一群概念的集合，并不是一个实实在在的对象。 值得一提的是，ViewModel、领域对象、数据库实体类很有可能是同一个对象。比如说，我们在View里直接操作的VM，其实常常就是将数据持久层的实体类直接拿过来用的。即便如此，但在软件设计阶段，还是要将它们的概念区分开。 ASP.NET MVC的原理，其实就是使用HttpModule和HttpHandler将用户的请求拦截，按照设定的路由规则解释到相应的控制器和Action，加以执行。Module是一个比较宏观一点的概念，像Session、Cache都由相应的Module负责；而Handler就是负责处理具体请求的。先有Module，再有Handler。它们的关系，有点像进程和线程。 上一篇 用javascript写一个前端等待控件 下一篇 asp.net mvc + javascript生成下载文件 顶 1 踩 0 我的同类文章 设计模式 （21） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042220次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 21
URL:: http://blog.csdn.net/leftfist/article/details/49428591

ParseText::
用javascript写一个前端等待控件 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 用javascript写一个前端等待控件 标签： javascript 等待控件 动态加载css 命名空间 2015-10-26 19:35 887人阅读 评论 (2) 收藏 举报 分类： JavaScript （95） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 前端等待控件有啥新奇的？什么jquery啦，第三方控件啦，好多好多，信手拈来。 因为项目使用了bootstrap的原因，不想轻易使用第三方，怕不兼容。自己写一个。 技术点包括动态加载CSS，javascript的命名空间，所以记录一下。 这个等待控件主要是：进行某个操作前，显示一个信息提示：“数据加载中，请稍候。。。”,操作成功后，在回调函数中将提示消失。 原理是这个等待控件完全由JS动态加进去，包括CSS，页面中并无预先设定。 那么这个CSS怎么动态加载呢？等待控件中，样式使用了class，如果我们将这些class预先写在样式文件中，那么调用页面除了要引用相关JS文件，还要引用CSS文件；就算在js文件中动态加载此css文件，但想想看，一个如此简单的控件就包含了2个文件，小题大做了点。 我是在JS中动态拼凑、加载CSS。 代码如下： var FTabPages = function () { var tabKeeper = null ; // e.g. // tabKeeper = { // container: "" // , isErase: true // , url: "" // , params: {} // , callback: null // }; var wrap = $(document.body); function initTab (tabJson) { tabKeeper = tabJson; } function onTab (tabJson) { //切换页签 if (tabKeeper != null ) { var divPrev = $(tabKeeper.container); if (tabKeeper.isErase) { divPrev.empty(); } divPrev.css( "display" , "none" ); } tabKeeper = tabJson; var div = $(tabJson.container); div.css( "display" , "" ); if ($.trim(div.html()).length == 0 ) { //首次加载或已清空 loadwaiting(); getViewRequest(tabJson.url, tabJson.params, function (data) { div.empty().html(data); docallback(tabJson.callback); removeloading(); }, function (data) { alert( "数据获取超时或失败！" ); removeloading(); }); } else { //非首次加载，隐藏但不清空 docallback(tabJson.callback); } } function getViewRequest (url, params, onsuccess, onerror) { $.ajax({ type: 'get' , url: url, data: params, contentType: "text/html; charset=utf-8" , timeout: 30000 , success: function (data) { if (onsuccess != undefined && onsuccess != null ) { onsuccess(data); } }, error: function (data) { if (onerror != undefined && onerror != null ) { onerror(data); } } }); } function docallback (callback) { if ( typeof callback != 'undefined' && callback instanceof Function ) { callback(); } } function resetTab () { //刷新当前页签 loadwaiting(); var div = $(tabKeeper.container); getViewRequest(tabKeeper.url, tabKeeper.params, function (data) { div.empty().html(data); div.css( "display" , "" ); docallback(tabKeeper.callback); removeloading(); }); } function loadwaiting () { //显示等待信息 $( "<div class=\"datagrid-mask\"></div>" ).css({ display: "block" , width: wrap.width(), height: wrap.height() }).appendTo(wrap); $( "<div class=\"datagrid-mask-msg\"></div>" ).html( "数据加载中，请稍候..." ).appendTo(wrap).css({ display: "block" , left: (wrap.width() - $( "div.datagrid-mask-msg" , wrap).outerWidth()) / 2 , top: ($(window).height() - $( "div.datagrid-mask-msg" , wrap).outerHeight()) / 2 }); } function removeloading () { //隐藏等待信息 wrap.find( "div.datagrid-mask-msg" ).remove(); wrap.find( "div.datagrid-mask" ).remove(); } function initloading () { //设置等待控件样式 var css = ".datagrid-mask { " ; css += " position: absolute; " ; css += " left: 0; " ; css += " top: 0; " ; css += " width: 100%; " ; css += " height: 100%; " ; css += " opacity: 0.3; " ; css += " filter: alpha(opacity=30); " ; css += " display: none; " ; css += "} " ; css += ".datagrid-mask-msg { " ; css += " position: absolute; " ; css += " top: 50%; " ; css += " margin-top: -20px; " ; css += " padding: 10px 5px 10px 10px;" ; css += " width: auto; " ; css += " height: 16px; " ; css += " border-width: 2px; " ; css += " border-style: solid; " ; css += " display: none; " ; css += "}" ; //动态加载CSS if (document.all) { window.style = css; document.createStyleSheet( "javascript:style" ); } else { var style = document.createElement( 'style' ); style.type = 'text/css' ; style.innerHTML = css; document.getElementsByTagName( 'HEAD' ).item( 0 ).appendChild(style); } } initloading(); return { //这里是供外部调用的方法 onTab: function (tabJson) { onTab(tabJson); } , resetTab: function () { resetTab(); } , init: function (tabJson) { initTab(tabJson); } }; }(); 外部如何调用呢？就这样： FTabPages.init({ container: "#div_BasicInfo" , isErase: true , url: "http://blog.csdn.net/leftfist" , params: {} , callback: function () { alert( "Hello World!" ); } }); 上一篇 Autofac 下一篇 ASP.NET MVC 原理 顶 0 踩 0 我的同类文章 JavaScript （95） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042222次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 22
URL:: http://blog.csdn.net/leftfist/article/details/49641889

ParseText::
asp.net mvc + javascript生成下载文件 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 asp.net mvc + javascript生成下载文件 标签： javascript asp.net mvc 下载 2015-11-04 18:46 730人阅读 评论 (0) 收藏 举报 分类： .NET （209） 作者同类文章 X ASP.NET MVC （14） 作者同类文章 X JavaScript （95） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 近期做的是对现有项目进行重构。WEB FROM改成MVC，其实也算是推倒重来了。 里面有一个导出功能，将数据输出成txt文件，供下载。原先的做法是有一个隐藏的iframe，在这个iframe的页面中设置一个表单form，将相关参数提交到服务器端；而在服务器端，是真的生成一个文件，然后再将文件内容往客户端推送。 好奇怪的做法啊。将内容导出，让用户下载，不必真的生成文件的，因为内容千变万化，没有一次生成，多次使用的可能和必要。完全可以将内容生成后，直接往客户端推送。 其次，我理解原先为何要用一个隐藏的iframe。因为提交页面会导致刷新，为了避免页面内容刷新，于是搞了个隐藏的iframe，让它来负责提交。好是好，就是要多搞一个页面。 在新项目里面，前端，form由JS动态生成；服务器端，直接生成内容并推送： 前端： <script type= "text/javascript" > var f_pointXY = function () { function exportData () { //动态添加表单 var form = $( "<form>" ); form.attr( 'style' , 'display:none' ); form.attr( 'target' , '' ); form.attr( 'method' , 'post' ); form.attr( 'action' , "@Url.StaticFile(" ~ /Common/ YongHai/ExportData/ ")" + $( "#txt_SMID" ).val()); var input1 = $( '<input>' ); input1.attr( 'type' , 'hidden' ); input1.attr( 'name' , 'isExportInput' ); input1.attr( 'value' , document.getElementById( "chkInput" ).checked); var input2 = $( '<input>' ); input2.attr( 'type' , 'hidden' ); input2.attr( 'name' , 'exportFormat' ); input2.attr( 'value' , document.getElementById( "Select1" ).value); $( 'body' ).append(form); form.append(input1); form.append(input2); try { form.submit(); } catch (ex) { alert(ex); } form.remove(); //用完即弃 } return { exportData: function () { exportData(); } }; }(); 服务器端： [HttpPost] public ActionResult ExportData(int id, FormCollection collection) { string content = ... ;//生成内容 Response.Clear(); Response.Buffer = false; Response.ContentType = "application/octet-stream" ; Response.AppendHeader( "content-disposition" , "attachment;filename=" + DateTime.Now.ToString( "yyyy-MM-dd" ) + ".txt;" ); Response.Write(content); Response.Flush(); Response.End(); return new EmptyResult(); } 这样，点击按钮导出按钮 < input type = "button" value = "导出" class = "btn mini minilt" onclick = "f_pointXY.exportData()" /> 之后，即可下载yyyy-MM-dd.txt矣。 猴赛雷。 上一篇 ASP.NET MVC 原理 下一篇 asp.net mvc + javascript导入文件内容 顶 2 踩 0 我的同类文章 .NET （209） ASP.NET MVC （14） JavaScript （95） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042223次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 23
URL:: http://blog.csdn.net/leftfist/article/details/49641943

ParseText::
asp.net mvc + javascript导入文件内容 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 asp.net mvc + javascript导入文件内容 标签： javascript asp.net mvc 上传 2015-11-04 19:08 778人阅读 评论 (1) 收藏 举报 分类： JavaScript （95） 作者同类文章 X ASP.NET MVC （14） 作者同类文章 X .NET （209） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 。近期做的是对现有项目进行重构。WEB FROM改成MVC，其实也算是推倒重来了。 里面有一个导入功能，将文件上传。原先的做法是有一个隐藏的iframe，在这个iframe的页面中设置一个表单form，form中有一个文件上传控件。而在服务器端，接收到上传文件后，真的先将文件保存，然后读取之。 好奇怪的做法啊。将用户文件内容读入，然后利用之，不必真的将文件先保存下来的，因为这是临时文件，没有保存的价值。完全可以将上传的文件内容直接读出，用完即弃。 其次，我理解原先为何要用一个隐藏的iframe。因为上传文件需要提交，而提交页面会导致刷新，为了避免页面内容刷新，于是搞了个隐藏的iframe，让它来负责提交。好是好，就是要多搞一个页面。 在新项目里面，前端，文件由ajax负责提交；服务器端，接收文件后直接处理，不保存下来，用完即弃： 前端： <!-- 隐藏的上传控件，onchange时就触发提交 --> < input type = "file" id = "fileImportData" name = "fileImportData" onchange = "f_pointXY.importData()" style = "display:none;" /> <!-- 导入按钮，点击后就触发上传控件的点击事件，弹出文件选择框 --> < input type = "button" value = "导入" class = "btn mini minilt" onclick = 'javascript:document.getElementById("fileImportData").click();' /> <script type= "text/javascript" > var f_pointXY = function () { function importData () { $( "#formImport" ).ajaxSubmit({ url: "@Url.StaticFile(" ~ /Common/ YongHai/importData/ ")" + $( "#txt_SMID" ).val(), type: 'post' , data: {}, success: function (data) { if (data.substr( 0 , 2 ) == "OK" ) { alert( "导入成功" ); } else { alert(data); } }, error: function (e) { alert(e); } }); } return { importData: function () { importData(); } }; }(); </ script > 服务器端： [HttpPost] public ActionResult importData ( int id) { if (Request.Files.Count == 0 ) { return Content( "接收上传数据失败" , "text/html" ); } string msg = "OK" ; HttpPostedFileBase fb = Request.Files[ 0 ]; string [] Acs_FilePath = fb.FileName.Split( '\\' ); string Acs_FileName = Acs_FilePath[Acs_FilePath.Length - 1 ]; string Acs_FileType = Acs_FileName.Split( '.' )[ 1 ].ToLower(); string xyType = Request[ "xyType" ] ?? "" ; using (Stream fs = fb.InputStream) { int fileLen = fb.ContentLength; byte [] input = new byte [fileLen]; fs.Read(input, 0 , fileLen); string str = System.Text.Encoding.UTF8.GetString(input); msg += str; } END: return Content(msg, "text/html" ); } 这样，点击导入按钮，即可上传并导入矣。 猴赛雷。 上一篇 asp.net mvc + javascript生成下载文件 下一篇 动态绑定滚动条事件 顶 1 踩 0 我的同类文章 JavaScript （95） ASP.NET MVC （14） .NET （209） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042224次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 24
URL:: http://blog.csdn.net/leftfist/article/details/49642223

ParseText::
动态绑定滚动条事件 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 动态绑定滚动条事件 标签： scroll offset scrollTop 2015-11-05 09:35 1139人阅读 评论 (0) 收藏 举报 分类： JavaScript （95） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 我看看是否能描述清楚这个需求： 现在有两块相关的区域：左列表，右操作说明。列表可能很长，有垂直滚动条；那么在滚动的时候，希望右侧的操作说明保持不动，好随时查阅。 这好办，将右侧的操作说明所在的DIV的position设成fixed，如此即可在左侧列表滚动之时岿然不动矣。 问题是，整个页面也有一个垂直滚动条。当这个页面滚动条滚动时，这个fixed的操作说明，因为在屏幕中位置恒定不变，并不随整个页面滚动，结果变成遮盖了其他滚动下来的内容。完全变形。 咋整？ 很简单，左侧列表滚动条滚动时，将操作说明设成fixed；页面滚动条滚动时，将操作说明的fixed去掉。 < script type = "text/javascript" > //#div_pointXY_body 左侧列表 //#div_pointXY_OperNote 右侧操作说明 var f_pointXY = function () { function bindscroll () { if (jQuery()) { //看看jquery是否已加载成功 var top = offsettop = $( "#div_pointXY_OperNote" ).offset().top; $( "#div_pointXY_body" ).scroll( function () { //滚动之时绑定 $( "#div_pointXY_OperNote" ).css( "top" , top + "px" ); $( "#div_pointXY_OperNote" ).css( "position" , "fixed" ); }); $(window).scroll( function () { //滚动之时绑定 $( "#div_pointXY_OperNote" ).css( "top" , "auto" ); $( "#div_pointXY_OperNote" ).css( "position" , "" ); top = offsettop - $(window).scrollTop(); }); } else { setTimeout( "f_pointXY.init()" , 300 ); } } bindscroll(); return { init: function () { bindscroll(); } }; }(); </ script > 其中要点，在于区分jquery对象的offset()位置(相对页面的位置)及指定对象（DIV或页面）的垂直滚动条的已滚动距离scrollTop()。 参考资料： 阮一峰的 用Javascript获取页面元素的位置 猴赛雷。 上一篇 asp.net mvc + javascript导入文件内容 下一篇 操作系统学习笔记：文件系统实现 顶 0 踩 0 我的同类文章 JavaScript （95） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042225次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 25
URL:: http://blog.csdn.net/leftfist/article/details/49784855

ParseText::
泛型方法的局限及解决之道 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 泛型方法的局限及解决之道 标签： 泛型 反射 2015-11-11 18:17 742人阅读 评论 (0) 收藏 举报 分类： .NET （209） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 泛型的优点在于提高了函数的适应性，有利于代码复用。但是，一个支持泛型的方法里面，代表该参数类型未可知，如果要直接使用它的属性，是不行的。因此，这点是泛型的局限，使得这个泛型参数，乃至整个方法，便利性都打了折扣。 由此可知，在支持泛型的方法里面，泛型对象作为参数，主要作用在不同的方法间传来传去，像踢皮球似的。仅此而已。 难道真的不能访问泛型对象的属性吗？ “可以用反射”，西蒙说。 //propertyName,待访问的属性名 string getProperty< T >(IList< T > listDB, string propertyName) { string val = "" ; if (listDB.Count == 0 ) return val; //通过反射获得泛型对象的属性数组 PropertyInfo[] propertys = listDB[ 0 ].GetType().GetProperties(); int p = 0 ; foreach (PropertyInfo pi in propertys) { if (pi.Name.Equals(propertyName, comparisonType: StringComparison.CurrentCultureIgnoreCase)) {//找到propertyName在 T 属性数组中的下标p break ; } p++; } if (p == propertys.Length) { throw new Exception( "对象没有相应的属性：" + propertyName); } foreach (var m in listDB) { //如此，可访问 T 的属性矣 val += propertys[p].GetValue(m).ToString() + "," ; ... } return val; } 猴赛雷。 上一篇 操作系统学习笔记：文件系统实现 下一篇 源代码字符编码不一致导致显示乱码 顶 0 踩 0 我的同类文章 .NET （209） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042229次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 26
URL:: http://blog.csdn.net/leftfist/article/details/49822237

ParseText::
晨会 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 晨会 标签： 敏捷开发 2015-11-13 19:34 700人阅读 评论 (7) 收藏 举报 分类： 程序人生 （29） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 近期带了几个人，想实践一下敏捷开发，所以每天开晨会。 开会的时候，只有我一条友站着，其他家伙都坐得舒舒服服，首先形式上就不够敏捷。 一番实践下来，觉得晨会还是有必要。按约定，每个人都说三件事：昨天做了啥，今天准备做啥，有啥问题或要分享的。其中重点在于分享或求助。其次大家也对要做的东西、任务、进度都有个感性认识。当然项目进度把控，仅靠晨会是远远不够的。但晨会毕竟是有用。所以坚持了下来。要知道，目前所在公司，是没有晨会制度的。 也有一些心得需要记录下来。 1、首先是晨会不能流于形式，作为主管，开之前要想好需要强调的事； 2、说话要注意语速和停顿。说话不能太快；结束一个组员的谈话，开启另一个组员谈话时，中间要停顿2、3秒。宣布散会也是，先停几秒，一是缓冲，二是看其他人有没补充的。程序员都讨厌讲话，不擅长讲话，晨会是个锻炼场所。 去年在深圳做外包，东家是个大公司，我们所在的工具团队有若干项目组。每天早上，整个大厅200号人，一堆堆人就这样站着开晨会。时间真快，转眼回广州差不多一年了。 上一篇 源代码字符编码不一致导致显示乱码 下一篇 Attribute（特性） 顶 1 踩 0 我的同类文章 程序人生 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042226次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 27
URL:: http://blog.csdn.net/luckyzhoustar

ParseText::
- 博客频道 - CSDN.NET 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Java中字节与对象之间的转换 最近公司里面用到了消息队列，而正如我们知道的是消息队列之间的是通过二进制形式的，下面就分享一下java中字节与对象之间的转换。 主要是用到了ByteArrayOutputStream和ObjectOutputStream两个输出流，以及ByteArrayInputStream和ObjectInputStream两个输入流。废话不多说了，直接上代码吧！/** * @FileName: B... 2015-12-25 12:32 阅读 (197) 评论 (1) Redis中的主从复制 上一篇简单的介绍了Redis中的快照，那么这篇来了解一下redis中的主从复制，不得不说redis中的主从复制配置起来相当的简单，用来降低每个redis服务器的负载，并启动主从模式，一个服务器负载”写“数据，其他服务器负载”读“数据，并且主服务器数据会”自动“同步给从服务器。 下面就来简单的配置一下 同样需要编辑redis.conf文件  在上面指定从的ip和端口号即可，当然配置好后，那么默认的从... 2015-12-20 12:21 阅读 (495) 评论 (1) Redis中的持久化操作 本篇博客主要来讲解一下如何Redis中的持久化操作，当然了不是一篇理论性的博客，主要还是分享一下在redis中如何来配置持久化操作。 1.介绍 redis为了内部数据的安全考虑，会把本身的数据以文本形式保存到硬盘中一份，在服务器重启之后会自动把硬盘的数据恢复到内存(redis)里边。数据保存到硬盘的过程就称为“持久化”效果。 2.snap shotting 快照持久化 这个持久化的操作在redis... 2015-12-20 11:03 阅读 (449) 评论 (1) Java中基于HTTP协议网络编程 java中为我们的网络支持提供了java.net包，能够使我们以编程的方式来访问Web服务功能... 2015-12-11 09:19 阅读 (635) 评论 (1) Java8中新增加的集合类 前言 在平常的开发中，有时我们需要存放多个数据，因此也就有了集合的存在，这篇博客着重讲解一下java8给我们带来的一些类关于Collection的操作。 Collection接口  正如上图所示，Collection接口位于最底层接口，为所有的集合操作提供了一些公共的方法。比如add、addAll、clear、contains、toArray等方法 /**      * @FileName: Co... 2015-12-03 09:32 阅读 (663) 评论 (2) Java读书笔记十六（Java中的枚举类） 前言 在java开发中，有时候一个类的对象是有限而且固定的，比如我们常见的季节类，就是春夏秋冬。只有这四个简单的对象而已，这些实例有限而且固定的类，在java中，被称为枚举类。  什么是枚举类？ 在以前的代码中，可能会直接使用简单的静态常量来表示枚举，例如以下所示  public static final String TURN_FLATTEN_QUEUE_EXCEPTION = "turn-fl... 2015-12-01 15:18 阅读 (539) 评论 (1) Java读书笔记十五（Java中的内部类） 前言 Java从JDK1.1的时候，就开始引入内部类的概念了，那么小编也通过这篇博客来分享一下Java中有关内部类的一些特性。 什么是内部类？ 在很多情况下，类被定义成一个独立的程序单元，但是有时候也会把一个类放在另一个类的内部定义，这个定义在其他类内部的类就称为内部类。 从语法上来看的话，定义内部类和定义外部类的语法大致相同，内部类除了需要定义在其他类里面之外，还存在如下两点区别。 1.内部类比... 2015-12-01 14:32 阅读 (602) 评论 (1) Java读书笔记十四（java中的抽象类） 前言 在java中，有时候需要对类的行为进行提取，因此也就有了抽象类和接口的概念，这篇博客，小编来剖一下java中的抽象类和接口。 抽象方法和抽象类 抽象方法和抽象类的规则如下： 1.抽象类必须使用abstract修饰符来修饰，抽象方法也必须使用abstract修饰符来修饰，抽线方法不能有方法体 2.抽象类不能被实例化，无法使用new关键字来调用抽象类的构造器创建抽象类的实例。即使抽象类里不可包含... 2015-12-01 12:11 阅读 (626) 评论 (1) Java读书笔记十三（Java中的Final关键字） 前言 在java中final关键字可用于修饰类、变量和方法，用于表示它修饰的类、方法和变量都是不可变的。下面小编在剖析一下final关键字常用的场景。  Final成员变量 在java中成员变量是随类初始化或者对象初始化而初始化的，而对于final修饰的成员变量而言，一旦有了初始值，就不能被重新赋值，如果既没有在定义成员变量时指定初始值，也没有在初始化块、构造器中为成员变量指定初始值，那么将是系统... 2015-12-01 11:22 阅读 (504) 评论 (1) Java读书笔记十二（Java中的代码块） 前言 我们知道在java中通过构造器来为对象进行初始化操作，但是在java中与构造器类似的还有初始化块的操作，下面小编来为大家分享一下。 初始化块使用 在Java中初始化块是java中出现的第4中成员，前三种分别是成员变量、方法和构造器。一个类中可以有多个初始化块，并且相同类型的初始化块是按照顺序依次执行的。初始化块的修饰符只能是static，初始化块可以包含任何可执行语句，包括定义局部变量、调用... 2015-12-01 10:36 阅读 (564) 评论 (1) Ehcache封装的工具类 最近公司公司项目在框架上用到了Ehcache缓存，关于更多Ehcache详细的内容，请参考一下两个系列的博客，讲的都很好。 Ehcache详细解读 Ehcache系列博客 有了上面的两个系列的博客，更多有关于Ehcache细节的地方，就不在这篇博客中展示了，主要是跟大家分享一下，底层框架中封装关于Ehcache的工具类  CacheContainer类  缓存容器类，用来创建Cache对象，并... 2015-11-28 16:49 阅读 (453) 评论 (8) 应试教育的死穴，恰在于堵死了孩子“犯错”的空间 今天周日，闲着没事，来公司梳理一下最近的项目心得，又翻起了前段时间看到的文章《应试教育的死穴，恰在于堵死了孩子“犯错”的空间》，来浅谈一下自己的感受吧！ 还是从自身谈起，小时候手笨，脑子不是很灵活，于是会出现各种的问题，这时候老师就开始发火、生气，轻则骂几句，重则棍棒伺候。于是在这种环境下，总是害怕犯错事，害怕犯错误。 还有一种情景，就是所谓的考试了，尤其是语文考试，相比大家都经历过，对于一篇阅读... 2015-11-28 11:29 阅读 (712) 评论 (8) 工业4.0时代,怎样为孩子筹备未来的教育? 前段时间在网上突然看到一篇文章《工业4.0时代,怎样为孩子筹备未来的教育?》，受到启发很大，因为本身就是从事IT这个互联网行业的，所以能够切身的感受到互联网对于这个时代的意义。 人人都可以做讲师 每个人都可以思考一下，自己这么多年来教育的经历，大多数都是在传统教育的模式下，从小学——初中——大学——研究生等路线的设计下，走出来的。本身自己就是这么一路走过来的，所以能够切身感受到一路走来的艰辛。从小... 2015-11-28 10:35 阅读 (686) 评论 (7) Tomact打包时丢失依赖 最近在公司项目已经完成，在打包发布时，总会丢失一些jar包，从而报一些列的丢失依赖的错误问题。下面来分析下原因。  项目用SSH框架搭建的，并且单独把Web层和Core层分开来放置，在进行Tomact打包部署的时候，Core层的东西一直部署不进去，像Spring、Hibernate等的配置文件，如果打不进去的话，会报各种依赖注入的问题。经过一系列的排查，原来两个项目之间的依赖有问题。  刚开始... 2015-11-21 17:07 阅读 (93) 评论 (5) 初始Dubbo框架（HelloWorld） 关于Dubbo的介绍，官方上已经介绍的很详细了，此入门的HelloWorld也是参考官方搭建而来了，算是一个入门的程序的吧！在这里给大家分享一下。  首先也大致的介绍一下关于Dubbo的大致内容，看一下整个Dubbo的框架图。   节点角色说明： Provider: 暴露服务的服务提供方。Consumer: 调用远程服务的服务消费方。Registry: 服务注册与发现的注册中心。M... 2015-11-10 11:39 阅读 (127) 评论 (5) 271条数据 共19页 1 2 3 4 5 ... 下一页 尾页 个人资料 ZHOUCHAOQIANG 访问： 145341次 积分： 8775 等级： 积分：8775 排名： 第1096名 原创： 264篇 转载： 5篇 译文： 1篇 评论： 2766条 博客专栏 Activiti入门教程 文章：10篇 阅读：1964 java并发编程 文章：5篇 阅读：2055 SSH框架 文章：12篇 阅读：3545 EJB学习笔记 文章：10篇 阅读：2379 Java读书笔记 文章：12篇 阅读：4906 一步一步学习WCF 文章：11篇 阅读：3628 软件工程 文章：12篇 阅读：12176 文章存档 2015年12月 (10) 2015年11月 (5) 2015年10月 (16) 2015年09月 (21) 2015年08月 (18) 2015年07月 (20) 2015年06月 (17) 2015年05月 (2) 2015年04月 (2) 2015年03月 (3) 2015年02月 (5) 2015年01月 (13) 2014年12月 (11) 2014年11月 (4) 2014年10月 (13) 2014年09月 (3) 2014年08月 (11) 2014年07月 (6) 2014年06月 (15) 2014年05月 (15) 2014年04月 (6) 2014年03月 (7) 2014年02月 (5) 2014年01月 (3) 2013年12月 (10) 2013年11月 (9) 2013年10月 (2) 2013年09月 (7) 2013年08月 (2) 2013年07月 (8) 2013年06月 (2)

Recno:: 28
URL:: http://blog.csdn.net/oshunz/article/details/50372968

ParseText::
Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) - - 博客频道 - CSDN.NET 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 2015-12-21 16:48 1863人阅读 评论 (0) 收藏 举报 分类： 图像处理 （3） 作者同类文章 X Android-Camera开发 （8） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 上一篇开头提到了一些可用于磨皮的去噪算法，下面我们实现这些算法并且观察效果，咱不考虑实时性的问题 本文首先探讨的首先是 《基于局部均方差相关信息的图像去噪及其在实时磨皮美容算法中的应用》 该算法利用图像局部统计特性进行滤波处理，例如NXM像素的灰度图，首先计算点(i,j)所在窗口内（大小为(2n+1)(2m+1))的平均值m(i,j) 以及均方差： 得到加性去噪后的结果为： 其中： 1.根据原文提出的优化方法，首先是建立两个积分图，积分图的建立算法可以参考 这篇文章 进行简单优化。然后即可根据积分图计算公式中的m值和v值，例如半径为r的窗口的m(i,j)为Integral(i+r,j+r) + Integral(i-r-1,j-r-1)-Integral(i+r,j-r-1)-Integral(i-r-1,j+r) void LocalStatisticsSkinSmooth::initIntegral(uint32_t* inputMatrix, int width, int height,int mode){//mode取16为R，8位G，0位B，正好和RGB位移一样... LOGE("initIntegral start"); uint64_t* outputMartix = new uint64_t[width * height]; uint64_t* outputMartixSqr = new uint64_t[width * height]; uint64_t *columnSum = new uint64_t[width]; uint64_t *columnSumSqr = new uint64_t[width]; int color = ((inputMatrix[0] >> mode) & 0xff); columnSum[0] = color; columnSumSqr[0] = color * color; outputMartix[0] = columnSum[0]; outputMartixSqr[0] = columnSumSqr[0]; for(int i = 1;i < width;i++){ int color = ((inputMatrix[i] >> mode) & 0xff); columnSum[i] = color; columnSumSqr[i] = color * color; outputMartix[i] = columnSum[i]; outputMartix[i] += outputMartix[i-1]; outputMartixSqr[i] = columnSumSqr[i]; outputMartixSqr[i] += outputMartixSqr[i-1]; } for (int i = 1;i < height; i++){ int offset = i * width; int color = ((inputMatrix[offset] >> mode) & 0xff); columnSum[0] += color; columnSumSqr[0] += color * color; outputMartix[offset] = columnSum[0]; outputMartixSqr[offset] = columnSumSqr[0]; // other columns for(int j = 1; j < width; j++){ int color = ((inputMatrix[offset+j] >> mode) & 0xff); columnSum[j] += color; columnSumSqr[j] += color * color; outputMartix[offset+j] = outputMartix[offset+j-1] + columnSum[j]; outputMartixSqr[offset+j] = outputMartixSqr[offset+j-1] + columnSumSqr[j]; } } delete[] columnSum; delete[] columnSumSqr; .....略 LOGE("initIntegral end"); } 2.然后根据公式计算每个像素的RGB值即可 for(int i = 0; i < height; i++){ for(int j = 0; j < width; j++){ // x(i,j) = (1 - k) * m(i,j) + k*x(x,j) ARGB RGB; BitmapOperation::convertIntToArgb(jniBitmap->_storedBitmapPixels[i*width+j],&RGB); if (RGB.red > 20 && RGB.green > 40 && RGB.blue > 50){ color = ((jniBitmap->_storedBitmapPixels[i*width+j] >> mode) & 0xff); int iMax = i + radius >= height ? height - 1 : i + radius; int jMax = j + radius >= width ? width - 1 :j + radius; int iMin = i - radius <= 0 ? 0 : i - radius; int jMin = j - radius <= 0 ? 0 : j - radius; int square = (iMax - iMin + 1)*(jMax - jMin + 1); float m = (mMartix[iMax*width+jMax] + (jMin>0 && iMin>0 ? mMartix[(iMin-1)*width+(jMin-1)]:0) - (jMin>0 ? mMartix[iMax*width+(jMin-1)]:0) - (iMin>0 ? mMartix[(iMin-1)*width+jMax]:0)) / square; float v = (mMartixSqr[iMax*width+jMax] + (jMin>0 && iMin>0 ? mMartixSqr[(iMin-1)*width+(jMin-1)] :0) - (jMin>0 ? mMartixSqr[iMax*width+(jMin-1)]:0) - (iMin>0 ? mMartixSqr[(iMin-1)*width+jMax]:0)) / square - m*m; float k = v / (v + sigema); color = (uint8_t)((1.0f - k) * m + k * color); ...将color赋值给需要的数据 } } } 效果图：磨皮强度为最大10. 接下来可对图片进行二次修改，修改对比度，对皮肤进行美白等操作 上一篇 Android平台Camera实时滤镜实现方法探讨(八)--简单美颜滤镜 下一篇 [Android开发]仿天天P图带气泡显示百分比进度的自定义SeekBar 顶 0 踩 0 我的同类文章 图像处理 （3） Android-Camera开发 （8） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 oShunz 访问： 11371次 积分： 395 等级： 积分：395 排名： 千里之外 原创： 25篇 转载： 0篇 译文： 0篇 评论： 33条 文章搜索 博客专栏 Android图像处理之实时滤镜 文章：9篇 阅读：3881 Cocos2dx塔防游戏开发 文章：15篇 阅读：7520 文章分类 Java (0) 图像处理 (4) Cocos2d (15) Android (1) Android-Camera开发 (9) 文章存档 2015年12月 (6) 2015年11月 (8) 2015年10月 (6) 2015年09月 (1) 2015年04月 (2) 2015年03月 (1) 2015年02月 (1)

Recno:: 29
URL:: http://blog.csdn.net/other/experts.html

ParseText::
综合博客专家 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 全部分类 移动开发 Web前端 架构设计 编程语言 互联网 数据库 系统运维 云计算 研发管理 特约专家 行业名家 名誉专家 荣誉专家 杨中科 刘建文 刘锋 齐飞 陈伟东 段宝立 牟勇 尧庆宇 胡传照 沈东良 更多 按上周发表原创(翻译)文章数量排序 综合专家 最新文章

Recno:: 30
URL:: http://blog.csdn.net/qing_gee/article/list/3

ParseText::
qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 省市级菜单如何被选中 前言：上一篇bootstrap和jfinal创建省市级关联菜单说了如何做省市级关联菜单，当然就少不了主动选中某一个省市级菜单，那么本篇就结合jfinal来实现如何选中省市级菜单。当然原则上很简单，就是为option添加一个selected属性。jfinal数据处理package com.hc.jf.controller;import java.util.List;import org.apache.... 2015-09-30 16:24 阅读 (895) 评论 (2) bootstrap和jfinal创建省市级关联菜单 前言：小小一个省市级关联菜单，却让我耗费了一个早上的时间来摸索，原因在于对jquery不熟练，各种的痛，既然这么辛苦完成了一个组件，自然想要共享出来，让需要的人使用。这是第一版，后续还要再进行优化。代码第一次使用github，然后把相关代码进行了上传，不太会使用。 下载可以见下面地址 省市级关联菜单 说明sql语句就不再说了，里面有“city.sql”、“provincial.sql”两个文件。... 2015-09-30 15:16 阅读 (668) 评论 (6) 图片中文路径乱码 前言：《图片中文路径乱码》，使用jfinal上传的图片，查看数据库中的路径为“/ymg/upload/逍遥派1.png”是正确的，而前端使用firebug查看路径的却是“/ymg/upload/%E9%80%8D%E9%81%A5%E6%B4%BE1.png”，但是文件名依然是“逍遥派1.png”，然后图片就是不显示。这个问题怎么发生的，我是没有弄清楚，但是jfinal既然上传成功了，就只能是前端显... 2015-09-29 09:49 阅读 (178) 评论 (0) 小心event.preventDefault(); 前言：不经意间发现了一个奇怪的现象，明明我对a标签的click事件加了“event.preventDefault();”然而，服务端竟然还是接收到了请求，我真是纳闷至极，经过一番调查，虽不知道根本的原因是因为什么，但是得到了一个解决办法。现状这是一个a标签，为了不让你根据href跳转，就加了“event.preventDefault();”<a href="${ctx}/mem/logout" id... 2015-09-28 13:58 阅读 (165) 评论 (2) 再谈ajax局部刷新 前言：所谓“学而不思则罔、思而不学则殆”，孔夫子说话就是有深意。之前我就发表了一篇极致ajax局部和整体刷新，同时又发表了jfinal与bootstrap的登录跳转实战、jfinal与bootstrap的登出实战，但是经过近来的实战和改进，发现上一次的做法并不优秀，用起来很笨拙，不顺手，而这一次的方案，恰好就解决了这个问题。案例： 描述： 1. 点击登录则弹出登录对话框 2. 如果用户... 2015-09-28 12:31 阅读 (750) 评论 (6) 来看看怎么通过a标签打开一个对话框 前言：也许这是一个很简单的动作，你似乎觉得这没什么，的确，在我完成了这个功能后，我觉得也很简单。弹出框后面是一个table，点击单元格中的修改连接，就可以弹出对话框，并且能够将数据传递到页面前端。页面修改注意： 1.... 2015-09-26 16:39 阅读 (883) 评论 (6) HTTP Status 404 - /project/deleteProjectReback/18 前言：“HTTP Status 404 - /project/deleteProjectReback/18”，今天在使用jfinal的getPara(0)来获取参数的时候，报了这个错误。 记忆技巧： 第一个参数为String 类型的将获取表单或者url中问号挂参的域值。第一个参数为int或者无参数的将获取urlPara中的参数值。 对于jfinal官方文档上描述这句话，我还是没有理解，对于解决标... 2015-09-25 11:14 阅读 (496) 评论 (0) jfinal为weebox弹出框传递参数 前言：jfinal为weebox弹出框传递参数，其实弄明白了也很简单，就是通过weebox的open方法，在传递的url中加入jfinal回来的参数设置，当然以下代码，你需要参照《探索jfinal》的系列文章，本篇以deal_id为例。jfinalsetAttr("deal_id", Long.valueOf(deal_id)); ajaxDoneSuccess("添加新的回报");yunm.aja... 2015-09-24 16:25 阅读 (612) 评论 (4) Posted content type isn't multipart/form-data 前言：今天在做form表单的file上传时，服务端总是报“Posted content type isn’t multipart/form-data“，程序员思维又来了，明明写的没有问题，明明之前一个form表单在提交file上传时就正常呢？这里不得不说，DWZ的张慧华为我提供了解决思路。对于jfinal// 获取file，进行保存 UploadFile file = getFile... 2015-09-24 16:01 阅读 (1108) 评论 (1) 为bootstrap的tab增加请求操作 前言：在进行bootstrap的tab切换操作时，我们有的时候需要为其增加请求操作，用来获取服务端的数据。$('#myTab a').click(function(e) { // 先获取项目id var deal_id = $("#deal_id").val(); var tabIndex = $("#tabIndex").val();... 2015-09-24 11:17 阅读 (660) 评论 (1) 为a标签添加动态的请求参数 前言：通常情况下，我们《为a标签添加动态的请求参数》显得没有必要，因为a标签提供了href属性给我们，以来请求某一个资源，我们也可以在url中添加静态的参数，如，然而也有一些时候，我们不想一直使用form传递，我们也不想为每一个请求写ajax请求，那么这个时候我们怎么做呢？代码<a href="${ctx}/project/init... 2015-09-23 18:21 阅读 (755) 评论 (0) jfinal文件上传 前言：搞完jfinal的文件上传后，才知道他有多简单，但是在没有弄明白之前，纠结了很半天。材料COS.jar你需要下载这样一个jar包，我就是被这个坑死的，没有去下载这个包，就一直报 NoClassDefFoundError: com/oreilly/servlet/multipart/FileRenamePolicy 这个错误，有人说去弄个commons-fileupload-1.2.2.j... 2015-09-22 18:03 阅读 (1250) 评论 (2) jfinal拦截器Interceptor解析 前言：比如有这样一个场景，当用户未登录时，点击发布项目、投资项目就需要提示用户进行登录，进而弹出登录页面，当用户登录完成后，就可以操作对应的页面。那么这种情况，就需要进行权限的拦截，那么使用Interceptor就显得弥足珍贵了。原理介绍当用户点击一个操作按钮时，向服务端发起请求，服务端进行信息验证，然后传送回前端信息，前端收到信息后，进行回调函数操作。 服务端package com.... 2015-09-19 11:28 阅读 (1369) 评论 (0) 职业生涯之初恋，没有攻略 前言：为了响应CSDN的号召博客，轻松拿大奖！博客征文第二期：那些年我们一起写过的代码，我再三研究课题，打算贴近标题，写一些难以释怀的代码历程，但细细思索一下活动简介，再结合自身经历，我觉得写下我刚入职时的心路历程，更加符合我在程序猿世界里的标签。那段日企岁月历久弥新，也五味杂全，当然无关乎我的成功抑或是失败，因为对于她，我没有攻略。本来抱着必睡的决心，忍着把眼睛强行闭上，然后强迫自己在床上找一个舒... 2015-09-19 01:23 阅读 (1043) 评论 (8) 极致ajax局部和整体刷新 前言：本篇《极致ajax局部刷新》将介绍如何通过jquery的load方法进行局部刷新，load方法本身很简单，但是想要结合到jfinal和bootstrap的公共项目中，就需要下点功夫了。首先，先介绍方案古人语：“ 授人以鱼不如授人以渔”。那么我先来来说一下方案。$p.load(url,data,function(response,status,xhr)) 参数 描述 url 规定要... 2015-09-18 16:51 阅读 (1007) 评论 (2) jfinal与bootstrap的登出实战 前言：本篇推出“jfinal与bootstrap的登出实战”，旨在介绍如果通过a标签弹出登出确认框，然后发送退出请求到jfinal，然后再刷新页面的做法。主要难点在于1.如果通过a标签的内容弹出登出确认框，2.如何通过a标签刷新对应弹出的页面。前端技术1.构建a标签<a href="${ctx}/mem/logout" target="ajaxTodo" callback="ajaxDone" at... 2015-09-18 14:26 阅读 (755) 评论 (1) jfinal与bootstrap的登录跳转实战 前言：终于来了一篇有质量的文章，我个人感觉非常不错，《jfinal与bootstrap之间的登录跳转实战》。具体内容包含有点击登录弹出模态框、点击登录确认按钮后的validate、jfinal的validate、jfinal的session管理、ajax请求与返回信息处理、页面间智能跳转。弹出模态框以及jquery validate可以参照jquery weebox总结、弹出窗口不居中显示？、jqu... 2015-09-18 11:08 阅读 (1314) 评论 (1) jquery scrollUp滚动到顶部 前言：当页面滚动到很靠下的地方时，如果有一个快捷按钮使之滚动到页面顶部，自然是用户所需的，而jquery scrollUp这个插件实现了我们这个需求，然而只是看 jQuery滚动到顶部插件scrollUp这样的文章，显然是没有效果的，还需要另外的设置。另外我想说的是，本来我这个探索jfinal的系列是说jfinal的，然而随着项目进度的延伸，我发觉这个标题已经不能满足于我的需求，我想讲的是“探索jf... 2015-09-17 10:06 阅读 (655) 评论 (1) 弹出窗口不居中显示？ 前言：弹出窗口不居中显示？你使用了标准的居中算法还是显示不居中，到底TM是哪里做鬼呢？上一篇文章我介绍了jquery weebox总结，weebox绝对是弹出框的好选择，现在这玩意遇到了很奇葩的问题，就是不居中弹出。效果注意：别去计较这个页面的显示。弹出方法<div class="dlmain" style="overflow: hidden;wid... 2015-09-16 18:10 阅读 (669) 评论 (1) jquery weebox总结 前言：最近一直在研究搭建一套基于bootstrap的富客户端框架，同时和jfinal进行整合，于是在这一系列文章中，我将实战中遇到的点点滴滴问题进行整理，而本篇是对弹出层weebox的总结，weebox强大之处在于，你可以通过$.weeboxs.open(common.ctx + "/pages/login/login.jsp?ctl=ajax&act=login"直接打开一个页面作为弹出框，而不再... 2015-09-16 14:32 阅读 (606) 评论 (1) 138条数据 共7页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 qing_gee 访问： 157851次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 31
URL:: http://blog.csdn.net/qing_gee/article/list/4

ParseText::
qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 jfinal与mysql数据类型整理大全 前言：今天在做jfinal和mysql的数据转换时出现了java.lang.Boolean cannot be cast to java.lang.Integer错误，而之前我就遇到过这样的问题mysql与JFinal的数据关系，这使我意识到有必要整理一下jfinal与mysql数据类型关系。... 2015-09-11 10:00 阅读 (365) 评论 (1) 万物皆对象 万物皆对象... 2015-09-09 21:24 阅读 (517) 评论 (2) 探索JFinal：小试牛刀 前言：既然JFinal这么火，我只好小试牛刀，探索一下jfinal为何如此火，本篇为jfinal系列的开山篇，先了解一下jfianl，然后构建测试项目学习一下。... 2015-09-08 14:52 阅读 (573) 评论 (0) 正确的人 今天我就把阿福发表在CSDN上的《人件札记之“正确的人”》拿出来“炫”一把，我尽量不修改阿福的原迹，但为了让各位亲朋好友来砸阿福的场子，我还是偷偷了改了很多语法，呵呵，我觉得我太坏了... 2015-08-31 15:42 阅读 (856) 评论 (3) 沉默的阿福 与其说是阿福的沉默，到不如说是我的沉默，其实我和阿福是一对好基友，作为一个26岁的程序猿，我知道阿福和我有一样的梦想，就是“改变世界！”，好像话说大了，不过管他呢，今天说的是阿福，并不是我。... 2015-08-25 22:01 阅读 (1710) 评论 (28) win10局域网共享打印机 win10局域网共享打印机... 2015-08-14 13:32 阅读 (351) 评论 (0) 从0到1熟悉安卓：搭建开发环境 前言：不知道是迫于使命，还是基于爱好，我要开始熟悉安卓，对于这件事情，我表示惭愧，作为一名Java软件开发者，经历了前前后后两天多，我才把开发环境给搭建起来。很多前辈都写过类似的开发环境搭建，但是请容许我再次赘述一下过程，因为我在搭建过程中的苦闷让我很难忘。... 2015-08-12 16:02 阅读 (306) 评论 (0) 从0到1熟悉安卓：hello world之诚信是立身之本 前言：快了，快了，马上第一个安卓小程序就诞生了，心有戚戚焉。本篇来絮叨絮叨如何“讲诚信”，最近一段时间被小人给闹得不消停。... 2015-08-12 16:01 阅读 (234) 评论 (0) 解剖我的目标月 前言：本以为“超级整理术”是日本的佐藤可士和（这丫的设计了优衣库）写的书，我之前在读《缔造企鹅：产品经理是这样练出来的》一书中了解到的。于是买了一本《超级整理术2》，不过作者是来自米国的，让我似乎“怅然若失”。读了读第一章，到让我感觉很是受用。... 2015-08-05 14:06 阅读 (707) 评论 (6) 初学者做电脑的双屏显示 电脑的双屏显示... 2015-07-27 09:29 阅读 (315) 评论 (0) Comparable和Comparator Java中在进行数据排序时，Comparable和Comparator必不可少会遇得到，普通的String、Integer等类型，已经实现了Comparable接口，而有些时候，我们需要对一些其他不存在内在排序关系的类进行排序，那么就需要实现以上两个接口，但是会有所不同。... 2015-07-16 11:48 阅读 (378) 评论 (0) winform客户端升级组件autoUpdate报错 winform客户端升级组件autoUpdate如果报“对路径xxx的访问被拒绝”、“文件autoupdate.exe正由另一进程使用，因此该进程无法访问此文件”错误的话，只需要清理“**C:\Users\administrator\AppData\Local\Temp**”，重新启动软件就好... 2015-07-14 11:41 阅读 (394) 评论 (0) java：无意识自动装箱的可怕之处 前言：《effective Java》一书确实经典，真是为没有早一点买到这本书而感到遗憾。再来学习一个小知识，在之前，我只是知道integer是int的装箱类，而int是基本类型而已，从来没有意识到自动装箱有这么大的区别，“要优先使用基本类型而不是装箱基本类型，要当心无意识的自动装箱。”... 2015-07-11 15:43 阅读 (444) 评论 (3) SimpleDateFormat探究 前言：Java中，说起日期转换，SimpleDateFormat不得不提，但是在实战操作中，使用时千万要小心。否则将会出现“ java.lang.NumberFormatException: multiple points”错误，那么究竟是为什么呢？... 2015-07-11 15:10 阅读 (387) 评论 (0) 隐藏版权信息 前言：有的时候，我们需要为我们的网站装点一些隐藏的版权信息，以用来保护我们自己的知识产权。我且将本片博文归类于dwz的系列文章中。... 2015-07-10 14:28 阅读 (504) 评论 (0) 记住账号 前言：web页面端经常需要记住账号，看看该如何来做。首先，来看看界面什么样子。... 2015-07-10 13:56 阅读 (540) 评论 (0) 领证 前言：坐在“女朋友”公司的办公室内，我通过她同事的电脑准备写下这篇博文。也许今天是个特别值得庆贺和纪念的日子，其实她已经不再是我的女朋友了，而是我的“老婆”大人。就jiu在zai今jin天tian，一个IT程序猿和一个建筑女师领了那个结婚证。其实我不是因为这件事情而想写这篇博客，而是因为了读了《乖，摸摸头》的“听歌的人不许掉眼泪”，于是感觉自己要写点什么了。... 2015-07-06 20:52 阅读 (415) 评论 (4) java：单例的理解 前言：Java的单例经常用到，今天发现自己有一点新的认识。... 2015-06-23 17:53 阅读 (294) 评论 (0) 数据库到JSP的数据格式转换 前言：经常有这样的情况，从数据库中获取的数据格式并不是我们想在JSP页面上展示的，我推荐给大家以下三种方式。... 2015-06-23 12:47 阅读 (445) 评论 (0) 温故而知新，人月徒伤悲 前言：“扒一扒你遇到过最NB的开发项目”，看到CSDN上举行这个活动，就迫不及待的赶紧点进去看看到底是什么玩意er，一不小心看到了《人月神话》的试读活动，内心有两个声音就悄悄钻了出来：一个有点怨言，一个有点激动。所谓怨言，就是活动姗姗来迟，如果《人月神话》能够早一点让我一睹芳容，而不是在苦苦寻找后相见恨晚该多好；所谓激动，自然是“终于等到你，还好我没错过”（好像词有点跑偏）。... 2015-06-07 19:35 阅读 (930) 评论 (12) 138条数据 共7页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 qing_gee 访问： 157851次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 32
URL:: http://blog.csdn.net/qing_gee/article/list/5

ParseText::
qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 代码格式 《代码整洁之道》就是来劝诫我们程序员写出更优秀的代码，而“格式”一章也恰巧给我们举出了很多原则，以供我们写出更加规整的代码。格式的目的好的代码格式，让人赏心悦目，并且随着版本的更迭，让你能够随心所欲的进行变更，而不是每次都痛苦不堪。... 2015-06-06 11:36 阅读 (398) 评论 (0) 求虐，我还想再拓展一次 前言：孟子曰：“天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空伐其身，行弗乱其所为，所以动心忍性，曾益其所不能。”那么两天一夜的“洛阳兄弟连拓展训练”让我找到了久违的受虐感觉，纵使休息了一夜的我依然身体欠恙，然而内心却不再叫苦不迭，更多的是，感谢领导的睿智，给了我们全体员工的锻炼机会。所以我想大声的呐喊：“求虐，我还想再拓展一次！”回忆总是美好的，因为什么呢？其实我也说不上缘由，哈哈。PS... 2015-06-01 17:20 阅读 (345) 评论 (0) webservice连接失败怎么办 前言：虽然webservice调用失败的原因已经找到并且已经解决，我还是尝试把这件事记录下来，作为一个经验保存下来。今天看到携程挂了，请先饶恕我的孤陋寡闻，知道今日我才知道携程，笑曰：小的未曾坐过灰机啊。面对这些问题时，我们能做些什么呢？尽早9点左右时分，突然发现服务器无法正常启动了，因为我们的服务器在启动的时候是需要通过webservice访问权限的，而程序莫名其妙的就卡在webservice的通... 2015-05-28 17:07 阅读 (829) 评论 (0) 代码注释 曾经我对“一份好的代码里注释至少要占到一半的份量”这样话深信不疑，我也不厌其烦的给每一个函数都加上javadoc，对此，我深感自豪；而对于别人写代码不加注释的“坏习惯”，我深表遗憾。然而当我读完Robert的“注释”一节，我已经懊恼不已，并且我已经开始对我的代码进行审核，再次优化。我已经开始遵守“别给糟糕的代码加注释–重新写吧”这条准则。... 2015-05-27 17:21 阅读 (341) 评论 (0) 代码函数 随着对《clean code》的不断深入研读，我越发对自己以前编写的代码感到厌烦，我开始着手去做一些改变，让我不再是一个傻瓜，我想让别人去读懂我的代码，因为我记得这样一句话：“任何傻瓜都能编写计算机看懂的代码，而好的程序员能够编写人看懂的代码”。... 2015-05-19 16:03 阅读 (645) 评论 (2) 致我们终将逝去的高考 我经历了两次高考，那已经是七八年前的事了，然而每每想起那段岁月，总让人久久不能释怀。清楚的记得第二次高考是发生在凯尔特人拿总冠军的那年（加内特、皮尔斯、雷阿伦组成豪华三巨头的第一年，皮队昨天0.0秒投进的3分差点就改变了奇才的命运）... 2015-05-17 10:16 阅读 (487) 评论 (1) 改造DWZ查询页面的布局 前言：dwz的页面查询条件部分如果使用标签ul、li进行布局的话，在页面分辨率较小时，或者窗口缩小时，就会隐藏部分查询条件，为了防止这种情况出现，就需要改造成table来实现，但是可能不会轻而易举的完成，那么就随我来看看吧。... 2015-05-14 10:44 阅读 (866) 评论 (0) 编程之道 早上看了CSDN上一篇大三学生写的博客，让我觉得自己万分的惭愧，就如同被狠狠地扇了一个耳光。说实话，我很讨厌自己，讨厌自己身上的那些缺点。当然不能因为自己很烂，就彻底的自暴自弃，我还是需要鼓起勇气，多学习一些知识终究会有好处。切记一根筋看完这个小节，都有点怀疑自己到底还能不能在软件这个行业上有所成就。这里还需要把作者给出的内容重复一遍。... 2015-05-12 11:37 阅读 (535) 评论 (6) 有意义的命名 英语虽然才3级，奈何却阻止不了我征服英语的勇气，哈哈，有意义的命名，那必须要倾尽我的所有英语才华，去实现代码的整洁啊。... 2015-05-11 15:11 阅读 (398) 评论 (6) 待办事项不靠谱 匆匆忙忙的读完了《高效能程序员的修炼》，也做了一系列的文章札记，并且尽我所能把Jeff给的观点付诸实践，然而我知道我只是懂了皮毛。所谓“欲穷千里目，更上一层楼”，我迫不及待的看了《程序员的修炼-从优秀到卓越》的第一章，就着急把自己的感悟和心得梳理成文，但是我内心很不安，我的内心告诉我，好书读一遍两遍，既使做了札记，依然不够，流于形式的都不重要，重要的是能够融会贯通。... 2015-05-08 23:29 阅读 (276) 评论 (0) mysql与JFinal的数据关系 很荣幸在今天遇到一个小问题，关于JFinal的getInt()、getLong()方法和mysql的数据类型关联。如果mysql数据库中int类型字段使用了unsigned，那么JFinal就要使用getLong()，如果int类型字段没有使用unsigned，那么JFinal就要使用getInt()，否则就会出现类型不匹配错误。... 2015-05-05 16:08 阅读 (898) 评论 (0) fastjson，请注意大小写 fastjson先生（后称之为F先生）由阿里巴巴集团荣誉出品，我的记忆中，伟大的阿里巴巴对于编程界，能够称之为贡献的也仅此而已，可见我是多么的孤陋寡闻。我的项目中也用到了F先生，我很器重他，并且他表现一直非常优秀，然而在对接华夏接口的过程中，我对F先生爱之深，责之切。当然原因不能单纯的归咎于F先生，可恶可怜的华夏接口可能才是祸害之源。... 2015-04-26 09:10 阅读 (1064) 评论 (0) 加强代码测试 代码测试，无疑是编程环节中重要一环，重要到什么程度呢？假如治理雾霾就是编程，如果想把雾霾治理好，最最重要的无非就是减少工业污染，而代码测试就是这样，它能够从根源上就杜绝bug的发生。实战经验告诉我，在编程的过程中，当你顺利的把代码敲完毕了，那么及时的跟上一次代码肉眼扫描，以及通过SVN版本库的对比，或者是和你认可的同事进行代码的检测，当你对重要的代码写一小段测试用例后，你会发现，你已经能够修正了大量的bug，如果按照bug10个量记的话，一遍代码测试能够做到7个bug的消除。... 2015-04-24 22:04 阅读 (365) 评论 (0) 设计时把用户放心上 如题，设计时把用户放在心上，任何一款产品，其终极目标是帮助用户解决问题而不是盈利。如果抱着一颗盈利的心去设计产品，也许你能赚到钱，但很快会被市场淘汰，而如果你设身处地的为用户解决问题，那么你就是成功的，你的产品将成为老字号招牌。那么本章札记就记录一下我在读作者的博文时的末学浅见，另外将书中精华记录在博文中，供以后不停翻阅和学习。... 2015-04-18 17:50 阅读 (293) 评论 (0) spring之jdbc配置到固定路径 我不得不说，在配置spring的jdbc链接上，我犯了很多错，虽然我一再改善，并且寻求更加简洁的解决方案，然而都一直未能最终解决，我必须感谢我的队友，是他轻松的找到了这个解决方案，而我一直苦苦寻找的就是它。spring的占位符，通过简单的context:property-placeholder元素，就可以轻松的配置jdbc链接，但是这是一个曲折的故事，你听我来诉苦，并且得到你想要的答案... 2015-04-16 23:27 阅读 (261) 评论 (0) dwz增加info消息弹出 dwz默认提供了error、success、timeout的信息级别输出，也就是说，当你在向服务端提交信息后，前台页面可以提供的弹出框主题可以为以上三种，但是有的时候，我们需要向用户提示一种信息，既不是error，也不是success，我们需要info，告诉用户而已，那么就需要进行一些改造。... 2015-04-16 18:19 阅读 (1098) 评论 (0) 程序员的高效工作场所 最近几天，心里颇不宁静，感觉无所适从。每天沉浸在游戏中，我对自己说，只有跌入谷底，才知道往上爬。在写这篇博文的时候，终于能够从游戏中挣脱出来，尝试着去做出一些改变，再次从Jeff的博文中获取进步的动力。 不知道有伙伴是否和我一样，有的时候对生活感到困惑，不知道自己的奋斗目标，也感觉不到生活的压力，进而产生消极的生活，而这个时候，你们是怎么度过的呢？看到一个“不争气”的自己，你是否会为自己感到失望？ 好了，废话就不再说了，努力写出好的博文札记，为自己找回一点点救赎的凭证。... 2015-04-15 16:39 阅读 (654) 评论 (7) postgresql时间戳转字符串 前言：何为时间戳，就是一个毫秒数，应该是13位0123456789123，那么你该如何转换成对应格式化内容呢，如某年某月某日，某时某分某秒，你可以使用to_timestamp和to_char完成转换。 SELECT to_char(to_timestamp(t.create_time / 1000), 'YYYY-MM-DD HH24:MI:SS'), t.* FROM tbfu21 t... 2015-04-12 14:51 阅读 (1320) 评论 (3) tomcat：url请求中去掉根目录访问 前言：有些时候，我们在配置了服务器的域名后，要直接通过类似http://www.xx.org/index.do进行请求，我们不再需要通过http://www.xx.org/webdemo/index.do进行请求，那么我们该怎么做呢？ 打开conf文件夹下的server.xml文件，在host的节点中，增加如下内容   这样就OK了。 前言：有些时候，我们在配置了服务器的... 2015-04-12 14:47 阅读 (570) 评论 (0) 138条数据 共7页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 qing_gee 访问： 157851次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 33
URL:: http://blog.csdn.net/qing_gee/article/list/6

ParseText::
qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Java：获取src目录 Thread.currentThread().getContextClassLoader().getResource("").getPath() Javaweb项目获取src目录 Service.class.getClass().getResource("/").getPath() Java项目获取src目录... 2015-04-12 14:46 阅读 (262) 评论 (0) 团队紧密协作 前言：jeff atwood，百度百科以及维基百科上都没有其简介，他是stack overflow的创始人之一，我是读“陆其明”大牛的博客了解到的，进而就在读《effective programming：高效能程序员的修炼》一书进一步了解作者深邃的思维，我觉得对我个人而言，我很喜欢翻译的文笔，更喜欢作者Jeff给我的启发和感悟，每一节都值得我去深思和学习。 不关怎么说，那总是人的错... 2015-04-09 21:24 阅读 (290) 评论 (0) Java面试题从零开始：写一个函数把字符串反转 前言：为了能够找一个代表我从零开始的诗词，我挖空心思去找，然而怎么也找不到一个贴合我心意的，被迫上了度娘也不曾找到。真想把小学一年级的语文课本拿出来好好的通读一遍，肯定能找到答案。         好了，既然找不到也不必耿耿于怀了。今天读了《高效能程序员的修炼》第四章，发现自己好烂，如果按照作者的看法，我是无论如何都入不了他的法眼，于是乎，我告诉自己，从零开始，把作者提出的面试题按照Java来写... 2015-04-07 23:27 阅读 (377) 评论 (0) 高效编程之原则 前言：清明时节雨纷纷，路上行人欲断魂。借问酒家何处有？牧童遥指杏花村。对于清明节，想必杜牧这首诗肯定会让你呼之既出。今天是清明放假的最后一天，打扫完家里的卫生，我就必须要抓紧美好的时光来记录下《高效能程序员的修炼》一书第三章“高效编程之原则”的读书札记。 永远都是你的错误    在怨天尤人之前，我们应该做好自我反省，努力先把自身的问题解决了。       这个原则永远都必须去遵守，很多时候，... 2015-04-06 15:25 阅读 (324) 评论 (5) Java实现SSH加密 前言：相信很多人使用SSH远程连接Linux，那么对于我们的用户名和密码，SSH是如何进行加密解密呢？经过和同事的讨论，逐渐了解了其加密原理，下面就来一一阐述：加密原理SSH是先通过非对称加密告诉服务端一个对称加密口令，然后进行验证用户名和密码的时候，使用双方已经知道的加密口令进行加密和解密，见下图： 解释：SSH中为什么要使用非对称加密，又使用对称加密，到底有什么用处？到底安全不安全？既然后来又... 2015-03-18 14:51 阅读 (974) 评论 (0) Illegal overloaded getter method with ambiguous type for property Exception in thread "main" org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Illegal overloaded getter method with ambiguous type for property tradeType in class class com.honzh.biz.database.en... 2015-03-16 16:13 阅读 (2020) 评论 (0) 解决dwz的jqgrid请求重复提交 本篇文章其实不应该存在的，dwz和jqGrid的融合是我在CSDN上发表的，并且如果我能够好好测试和验证的话，就不会带来这个问题，而我也没有正视小伙伴m6036863提出的问题。但是既然出现bug了，那么就要进行修复，我在这里特此的写下这个记录，从如何发现错误，到如何找到错误，再到解决错误，从中看看我们在解决一个问题时都需要做些什么。... 2015-03-09 14:28 阅读 (678) 评论 (0) Java：数据精度 一旦你在Java项目中要使用数据，那么就一定要注意数据类型在Java中是不能很随意的使用，必须按照一定的规范来。... 2015-03-04 16:05 阅读 (403) 评论 (0) 小型团队的测试该何去何从 很不幸，我不知道自己应该不应该谈论这件事，“小型团队的测试该何去何从”，我没有十足的经验，更没有十足的理论，然而回想起昨日大家一起的讨论结果，我到现在依然沉浸在失望和苦闷的滋味中，究竟是增强开发人员的自测能力以及自我驱动力还是增加测试人员来做问题的过滤？... 2015-02-08 08:33 阅读 (572) 评论 (4) springMVC之Transactional 今天在测试web管理端项目时，非常尴尬的是方法是用了事务注解，然而执行出错的情况下却没有进行事务回滚，也就是所说的@Transactional在springMVC的场景下失效了，而我明明在spring的项目中应用@Transactional是有效果的，相当郁闷，尝试了各种办法终究无效，最后看到http://icanfly.iteye.com/blog/778401，找到了解决方法，非常感谢，... 2015-02-05 16:55 阅读 (555) 评论 (0) 论证select count(*)和select count(1) 本篇通过一些列的数据证明，对于大家在使用select count(1)和count(*)时存在的误区和理解进行强有力的数据证明： 1.count(1)比count(*)平均时间可能稍短一点，但是并不总是这样 2.count在表有主键的时候比没有主键的时候快，但是主键作为count条件时最慢... 2015-01-28 14:38 阅读 (2322) 评论 (3) 项目管理 项目中的思考：有明确的目标（包含交付日期、成本控制、性能指标，始终不能因为环境改变目标，否则也就不能称之为项目了）、资源有限（资金不够、人员不足、时间不足，但是要拥抱事实）、结果不可逆（项目一旦结束，结果就确定了，所以把握住机会，失去了机会，就会“万劫不覆”）、项目有风险（项目进展过程中，甚至项目确立时，都存在风险，所以一旦项目结束，项目决策者必须接受风险）。新项目建立时，要“立木为信”，让项目成... 2015-01-22 13:46 阅读 (487) 评论 (0) Java：异常处理机制很有意思 在网络上看到一篇《深入理解Java异常处理机制》，看完感觉自己也有一点小想法，的确在很多Java学者的眼里，异常处理机制不就是try catch finally吗，有啥好理解，很多时候，我也经常忽略这方面的内容，感觉没什么有意思的，那么我们来扎个小马步吧。... 2015-01-22 09:53 阅读 (646) 评论 (4) mysql：提升性能的最关键参数 最近一直在做项目的性能优化，经历了一个多星期的弯路，终于找到了一个突破点，经过和同事（非常感谢，稍后他会将过程写在他的博客，我会把连接地址跟贴到本博客）的努力，我们的期货交易平台性能在服务端已经得到很好的提升。... 2015-01-15 15:45 阅读 (925) 评论 (2) scope和TransactionConfiguration Java注解scope和TransactionConfiguration经常要在项目中应用，对于scope的使用，我到现在还没有彻底弄明白，虽然我已经研究出是表示多例还是单例，然而我模糊的是何时我该用单例何时用多例，我会混淆，而TransactionConfiguration注解比较简单，用来配置使用哪一个事务管理器。... 2015-01-14 10:34 阅读 (1214) 评论 (0) 时光老人之2014 如果从公元0年记岁的话，在作者写下这篇博客的时候，我已经两千零一十五岁了，我也不知道我是否年轻还是年入古稀，但不管怎样，我见证了作者平凡而不平庸的2014年，为作者已经迎来的2015年充满期待。我是时候该在一个叫做“CSDN”的论坛上记下这一年来我对作者的感受，当某一年作者回首往事的时候，能够从记忆中拾起这一段美好的时光。... 2015-01-11 08:57 阅读 (1190) 评论 (19) mysql：配置参数优化建议 要想提高mysql的性能，首先就是必须对mysql的配置参数进行了解，在了解了mysql的配置参数后，根据自己的项目需要以及运行环境，再做出相应的调整，那么以下这些参数是经过对mysql的官方配置参数说明、网上资料查询，以及自己的各种实验得出的个人结论。... 2015-01-10 09:37 阅读 (704) 评论 (0) 高性能mysql札记：事务 项目中使用的是mysql数据库，有幸看到《高性能mysql》一书，并且参考其对事务的介绍，结合实际开发对事务进行了测试，主要关注点在事务的隔离级别、innodb_flush_log_at_trx_commit、autocommit参数对mysql性能的影响... 2015-01-09 10:08 阅读 (859) 评论 (0) Windows server2003时间同步 之前写过一篇关于Linux时间服务同步的文章，但是发现最近的Windows服务器时间也经常慢，最经常的设置见下图，但是实际使用过程中发现并没有同步成功。以下的步骤是为了去解决这个问题作出的尝试，总结和参考了很多网上的例子。... 2015-01-06 10:11 阅读 (910) 评论 (0) 软件开发指南 1.很多时候，产品开发出来的效果和刚开始的设计以及客户的需求是不一致的，但是最后的结果是大家都接受的样子，虽然产物扭曲了，但是得到了大家的喜欢，所以很多时候我们需要顺其自然，不要因为不是自己的心意而去抱怨，也不要因为客户的刻意需求去抗拒。 2.头脑风暴的注意点：圈定主题、保持记录、会议流程控制、一定要让所有人参与，我个人非常赞同以上的观点。        a.圈定主题很重要，不仅是头脑风暴... 2014-12-31 08:30 阅读 (519) 评论 (0) 138条数据 共7页 首页 上一页 ... 6 7 下一页 尾页 个人资料 qing_gee 访问： 157851次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 34
URL:: http://blog.csdn.net/qing_gee/article/list/7

ParseText::
qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Linux时间同步 在我们的项目中，需要同步Linux服务器的时间，于是用到了ntpdate命令，就在crontab中进行了配置，设置为每个小时的整时分钟进行同步，完了后就一直没有关注，因为这很简单，经验主义告诉我，既然手动使用ntpdate命令就可以同步时间成功，放在cron进程（是Linux的一个守护进程，如果启动后，会每隔一分钟去检查对应的crontab文件，root用户的在/var/spool/cron）中就更没有问题了，然而，今天看Linux服务器的时间后，发现和Windows时间差上了好几分钟，我们的Linux服务... 2014-12-29 10:15 阅读 (835) 评论 (0) 利用spring注解做反射机制 一直觉得spring提供的注解装配bean机制非常的好，尤其是在做类似Java反射机制的时候太方便了，下面就依据项目需求进行一次记录，方便以后使用.... 2014-12-18 10:45 阅读 (1036) 评论 (0) 读京东技术解密，感桑田沧海变迁 读完《京东技术解密》的试读章节，情不自禁叹了口气，不仅仅感叹文章带给我的震撼，更感叹我们的团队在未来能取得怎样的成就。书中提及的京东技术架构以及成长史，足够的牛气，足够的辉煌，然而其10年来的辛酸背后，都体现了我们挨踢人对于互联网狂热的追求、对于编程改变生活的憧憬。... 2014-12-14 22:37 阅读 (1792) 评论 (5) Transactional超时时间控制 项目使用的是spring+mybatis+mysql，今天，我需要把处理一个业务就是，当用户出金失败时，事务能够回滚，同时减少用户的等待时间，因为我发现当处理失败时，用户需要等上1分钟以上的时间，这是不合理的。那么经过一系列的调查发现：spring的事务超时（使用Java注解方式）和mysql InnoDB事务超时是相互关联的。... 2014-12-12 18:04 阅读 (1384) 评论 (1) applicationContext、quartzConfig配置 使用spring+mybatis+mysql的框架构建Java项目已经有段时间了，通过学习和总结对于applicationContext.xml文件以及自动化任务quartzConfig.xml文件有了很多认识，那么我想把自己的末学浅见记录下来，给有需要的朋友一点点帮助。... 2014-12-11 11:41 阅读 (1427) 评论 (0) 升级mysql到5.7 今天在centOS上将mysql版本由5.1升级到5.7的时候出现了各种问题，不过经过一步步的调查解决了问题，下面就记录一下过程，其中经历了很多次的卸载和删除，在这次记录的过程中，我就按照最后成功的一次顺序来记录，对于其中可能出现的一些错误会做特殊的说明... 2014-12-06 11:24 阅读 (2088) 评论 (1) 限制Windows2003的远程桌面会话 前言：很多时候你需要远程访问某一个服务器，那么你需要开启服务器的远程桌面，而如果你不限制一个用户只允许使用一个会话时，那会很痛苦，可能同时有多个人在进行操作，那么这个时候就会出现问题，你刚刚打开的内容被别人占用了。... 2014-12-04 08:44 阅读 (853) 评论 (0) mysql：使用字符串变量作查询条件 当你的查询条件是一个字符串变量时，你该怎么办，比如字符串可能是“0001ME,0002BL”，也可能是“0001ME”，那么如何根据条件得到想要的结果呢，我来告诉你instr方法的厉害之处... 2014-12-01 13:49 阅读 (1017) 评论 (0) jQuery validate之remote jquery.validate.js作为前端开发的利器之一，深受广大前端工程师的喜爱，然而很多人却不善于利用remote，下面，对，就是下面，下面还有，我们来看看如何更合理的利用jQuery validate的remote。... 2014-11-24 17:13 阅读 (2905) 评论 (2) 北洋大时代：大师们的理想国札记-随想篇 蔡元培、胡适、马一浮、袁世凯、辜鸿铭、梁启超、李鸿章、傅斯年，这些在北洋时代留下足迹的大师们，也许你耳熟能详，也许你不曾知晓，但是当你通过影像或者书籍尝试去了解他们后，你真的会被他们所感动，触发你内心的崇仰之情。作为一名挨踢人，也许我们只适合马不停蹄的去了解技术，掌握技术，然后运用技术去维持生计、创造财富、实现人生理想，但是当你闲暇之余，读读文学国粹，品品人生情怀，也许我们的内心会得到另外一种安静，一种远离生活困苦、远离世俗杂念的安静。... 2014-11-23 09:59 阅读 (723) 评论 (0) mysql：yum安装以及开启远程连接权限 如果你的mysql服务需要安装在centos上，centos一般情况下都可以通过yum命令进行软件的安装。而一般情况下，mysql的版本是5.1，如果你需要安装5.7的话，你可以看我之前写的http://blog.csdn.net/qing_gee/article/details/41774265，这里有详细的记载。而如果你不介意mysql的版本的话，就可以直接安装了。在安装成功后，要特别注意，mysql的远程连接需要设置一些参数，请看接下来的步骤。... 2014-11-21 09:41 阅读 (418) 评论 (0) 优化dwz数据查询参数 dwz中，从view到controller再到model，对于查询条件，dwz将其封装到BaseConditionVO对象中，通过这个对象对前端提交的查询条件和mybatis中的xml进行关联，但是原始的对象类型并不好用，我们按照下面的方法改造一下，你将得到快乐的体验。... 2014-11-19 10:23 阅读 (609) 评论 (0) 汇总页面增加总计、小计 本篇来介绍对汇总页面增加总计、小计，总计代表所有分页的数据总和，小计代表当前页面的数据总和... 2014-11-18 08:52 阅读 (644) 评论 (0) 漫漫挨踢路，淡淡感想录 前言：细细读完《进化》一书的试读章节，由衷的钦佩每一个人。书中列出的从职场团队篇到产品技术，再到行业创业，都让我深深触动。“黄埔军校”的称号如雷贯耳，感觉自己离他们的高度还有很长的距离，但是内心也在不断燃烧着一种激情，一种想要在未来的互联网行业中留下自己足迹的激情。... 2014-11-14 18:58 阅读 (587) 评论 (2) 密码修改成功后跳转到登录页面 本篇主要记录在基于dwz的框架下，如何在修改密码后，跳转到登录页面... 2014-11-14 16:10 阅读 (1523) 评论 (0) dwz嵌入jqGrid 本篇主要介绍如何在dwz框架中嵌入jqGrid组件，因为dwz自带的表格组件功能不够全面，而jqGrid使用起来的确非常的不错，于是我们来看看两者结合起来有什么不一样吧。... 2014-11-14 09:15 阅读 (1604) 评论 (5) dwz中对jqGrid设置a标签 本篇来介绍在DWZ框架中，如何对jqGrid组件进行a标签设置，防止其在点击的时候跳出dwz框架。... 2014-11-12 15:01 阅读 (1215) 评论 (3) dwz中jqGrid的主题变更 本篇来说在DWZ中为jqgrid设置主题风格。... 2014-11-12 10:13 阅读 (2261) 评论 (0) 138条数据 共7页 首页 上一页 ... 6 7 个人资料 qing_gee 访问： 157851次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 35
URL:: http://blog.csdn.net/sheismylife/article/list/3

ParseText::
Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Ubuntu 15.04 安装 MongoDB 3.x MongoDB官方文档中没有，但是实际上是可行的，需要如下步骤1. 安装keyapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB102. 添加源echo "deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.0 main" | sudo tee /... 2015-10-03 11:39 阅读 (866) 评论 (0) storm集群使用经验 本文会不断完善，今天开个头slot数量配置slot就是worker, 就是worker machine上的可运行的进程数，每个进程监听一个端口号。整个集群的slot的总数 = 所有supervisor上的监听端口port的数目之和建议是CPU总核数 - 1 。在24核服务器上，port数目应该最大是23才对。下面是20个的配置如下：supervisor.slots.ports: -... 2015-09-30 10:28 阅读 (488) 评论 (3) Linux常见目录使用区别 首先注意usr 指 Unix System Resource，而不是User然后通常/usr/bin下面的都是系统预装的可执行程序，会随着系统升级而改变/usr/local/bin目录是给用户放置自己的可执行程序的地方，推荐放在这里，不会被系统升级而覆盖同名文件如果两个目录下有相同的可执行程序，谁优先执行受到PATH环境变量的影响，比如我的一台服务器的PATH变量为echo $PATH /usr/... 2015-09-29 11:43 阅读 (830) 评论 (0) storm 集群部署 前提条件安装了python 2.6.6和java 8创建帐号这个帐号是storm服务使用，将来也会成为HDFS的用户帐号之一。useradd dean创建公钥su - dean ssh-keygen -t rsa -P '' 下载并解压wget https://github.com/apache/storm/archive/v0.10.0-beta1.tar.gz tar zxvf v0.10.... 2015-09-29 11:27 阅读 (603) 评论 (1) HDFS 2.x 使用经验 本文会不断增加内容查看namnode状态web方式两个namenode的话，可以通过网页的方式查看http://10.149.11.152:50070/dfshealth.html#tab-overviewhttp://10.149.11.153:50070/dfshealth.html#tab-overview在两个页面的overview可以看到namenode的状态：active or sta... 2015-09-28 14:46 阅读 (572) 评论 (1) CentOS 6.6 安装 HDFS 2.7.1 本文尝试在CentOS上搭建10台HDFS集群，不会搭建YARN和Hive, 因为之后会采用Spark。先安装jdk 1.8, 此处不细说。下载首先下载hadoop binary包wget http://apache.mesi.com.ar/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz解压后放在/data/slot0/目录下，并建立软链接/data/... 2015-09-25 18:40 阅读 (1072) 评论 (2) newlisp远程执行命令 要想通过newlisp远程执行命令，首先要熟悉ssh远程执行命令ssh 远程执行命令这里有一个例子，想要在远程服务器上安装emacs，可以这么做# ssh -t 10.149.11.157 'export http_proxy="http://10.180.86.30:3128" && yum install emacs'说明：1. 由于远程服务器无法访问外网，先设置proxy, 之后再运行yum... 2015-09-25 11:11 阅读 (835) 评论 (0) centos 6.6 安装 gcc 4.9.1 不用编译，执行下面三步即可cd /etc/yum.repos.d wget http://linuxsoft.cern.ch/cern/scl/slc6-scl.repo yum -y --nogpgcheck install devtoolset-3-gcc devtoolset-3-gcc-c++... 2015-09-24 23:25 阅读 (857) 评论 (0) conkeror 代理设置中去除国内网站 经过总结，成功在线看乐视网的视频，和其他主要网站。思路是观察conkeror左下角的域名和ssh tunnel窗口输出的IP地址。下面是我的过滤IP和域名，都不需要通过proxy直接访问。user_pref("network.proxy.no_proxies_on", "localhost, 127.0.0.1,*.sina.com.cn,*.baidu.com,*.letv.com,*.letv... 2015-09-24 14:29 阅读 (584) 评论 (0) kafka无法关闭的解决方法 kafka提供了关闭脚本，但是我运行的时候报错：# ./bin/kafka-server-stop.sh usage: kill [ -s signal | -p ] [ -a ] pid ... kill -l [ signal ] 先查看一下运行的Java进程，用ps -def | grep java命令吧。然后 /proc/进程ID目录，确认果然是kafka的进程ll /pr... 2015-09-23 23:45 阅读 (786) 评论 (0) zookeeper 只能本地访问的问题解决方法 当完成了zookeeper配置，发现只能在本地访问，不能在其他机器上指定通过hostname访问访问，原因是在/etc/hosts里面有这样的配置127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 10-149-11-146原因是zookeeper监听hostname10-149-11-146... 2015-09-23 23:14 阅读 (673) 评论 (0) kafka部署二 现在来测试一下，使用kafka内置的命令行工具发送数据，结果出现问题bin/kafka-console-producer.sh --broker-list 10.149.11.151:9092 --topic vehicle_test [2015-09-05 14:18:50,877] WARN Property topic is not valid (kafka.utils.Verifiable... 2015-09-05 16:50 阅读 (1169) 评论 (0) kafka部署一 集群版本部署介绍... 2015-09-04 23:11 阅读 (904) 评论 (0) kafka基本介绍 1 卡夫卡消息队列简介1.1 消息队列1.1.1 基本特性可扩展在不需要下线的情况下进行扩容数据流分区(partition)存储在多个机器上高性能单个broker就能服务上千客户端单个broker每秒种读/写可达每秒几百兆字节多个brokers组成的集群将达到非常强的吞吐能力性能稳定，无论数据多大持久存储存储在磁盘上冗余备份到其他服务器上以防止丢失1.1.2 消息格式一个topic对应一种消息格式... 2015-09-02 11:29 阅读 (577) 评论 (0) Emacs 使用graphviz-dot-mode创建架构图 首先要安装graphviz-dot-mode模块，list-packages的站点国内无法访问,改为手动下载graphviz-dot-model.el，放到~/.emacs.d/目录下。然后修改init.el文件：;; graphviz-dot-model (load-file "~/.emacs.d/graphviz-dot-model.el")ubutnu系统下要安装graphviz程序，ap... 2015-08-14 11:27 阅读 (458) 评论 (0) org-reveal 特效 页面间切换(transition)用如下标记#+REVEAL_TRANS: cube可选的还有几个：default, cube, page, concave, zoom, linear, fade, none我比较喜欢cube，效果如下：... 2015-08-06 23:16 阅读 (396) 评论 (0) org-reveal 自定义theme 首先设置标题，作者和邮箱地址，完全是org语法：#+Title: 乐视大数据 #+Author: Dean Chen #+Email: csfreebird@gmail.com现在从night.css复制为letv.css，然后在css目录下放置一张背景图片letv.jpg，修改letv.css文件body { background-image:url(letv.jpg); fil... 2015-08-05 23:25 阅读 (279) 评论 (0) org-reveal 排版布局 reveal 演示文稿右下角会出现四个方向的箭头，默认规则如下：1. 一级head 会被当作单独一个slide2. 二级head 会位于一级head所在的slide中，通过上下键进行翻页3. 如果想在当前slide显示list，用 - 符号下面是个例子：* 大数据的5个V - Volume - Velociy - Variety - Veracity - Value... 2015-08-03 23:44 阅读 (240) 评论 (0) org-reveal修改主题 org-reveal提供了不少主题(theme)供选择，下面是选择theme的方法：... 2015-08-03 09:31 阅读 (237) 评论 (0) Emacs 帮助系统 Emacs是一个可定制，可扩展，self-documenting(自己就可以提供文档)的编辑器，本文探讨如何使用Emacs的帮助系统。打开帮助向导c-h t根据emacs启动时的语言环境，会自动切换对应的语言。中文内容不足1000行，读一遍应该会有很全面的对Emacs的了解。查找某个组合建当前绑定了哪个命令比如我想看一下c-x c-f 对应的命令先键入命令c-h k, 然后输入c-x c-f，一个... 2015-08-01 21:25 阅读 (380) 评论 (0) 1101条数据 共56页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 sheismylife 访问： 3247679次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 36
URL:: http://blog.csdn.net/sheismylife/article/list/4

ParseText::
Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 emacs org-reveal 创建网页版presentation 还在用office或者相关软件做你的演示文稿？其实对于emacs org-mode使用者现在有一个不必离开org-mode习惯的做法，用ox-reveal插件。这个插件将把org-mode文档转换成漂亮的演示文档，使用reveal JavaScript做网页渲染，很酷，很好看。下面是截图：... 2015-07-29 22:25 阅读 (489) 评论 (1) newlisp 使用gnuplot绘图 gnuplot是个很好的数学绘图工具，eamcs org mode 中可以使用，1现在发现newlisp早就支持了。先演示一个例子，看图：此图有三根折线，分别可以用三个list表示数据。参考下面的newlisp代码：#!/usr/bin/newlisp ;;(module "plot.lsp") (load "b.lsp") (set 'plot:title "集群存储总结") (set 'p... 2015-07-24 17:34 阅读 (495) 评论 (0) mongodb chunk 大小设置 默认是64MB，取值范围是1 MB 到 1024 MB.那修改会造成什么？下表简单总结：chunk size 调节splitting次数(碎片数)数据跨shard数目数据均匀网络传输次数migration次数单词migration 传输量查询速度变大减少变少不太均匀变少变少变大变快变小增多变多更均匀变多变多变小变慢在数据量很大的情况下，考虑网络带宽，如果发现带宽占满，可以考虑调小chunk siz... 2015-07-19 22:22 阅读 (669) 评论 (0) Mongodb Sharding 术语 sharding 指数据分片cluster 集群，一个集群包含了多个shards，每个shard都由一个replica set组成collection DB中的表的概念，只不过没有schema每个collection在sharding的场景下都分成了多个chunks，chunk大小可以设置chunk 如果超过设定大小，会被拆分成两个，splitting就是负责这个工作的后台进程。migrate指c... 2015-07-19 19:42 阅读 (562) 评论 (0) MongoDB sharding 算法 主要是两种，一种是用数值进行范围划分，一种是hash，有点类似于memcached集群机制。下表对比了优缺点sharding算法范围查询性能数据分布ranged based强, 容易集中在一个shard上的多个chunks不均匀, 影响scale outhash based一般，需要查询多个shard才能获得结果均匀MongoDB还提供了可以自定义算法的机制，叫做tag aware shardin... 2015-07-19 18:07 阅读 (679) 评论 (0) emacs org plot 绘图二 折线图 看下面的表格 #+PLOT: title:"HDFS文件增长" ind:1 type:2d #+tblname: hdfs-data #+ATTR_HTML: :border 2 :rules all :frame border | 月份 | HDFS大小(字节) | | 1 | 6209725342916516 | | 2 | 6425522492839058... 2015-07-14 22:00 阅读 (621) 评论 (0) emacs org plot 绘图一 安装 有了这个玩意，不再需要excel了。首先安装gnuplot软件，ubuntu下很简单apt-get install gnuplot然后用emacs package安装gnuplot 和 gnuplot-mode。现在取一个简单的例子说明一下，编辑下面的org文件：#+PLOT: title:"Citas" ind:1 deps:(3) type:2d with:histograms set:"yr... 2015-05-03 21:59 阅读 (731) 评论 (0) Emacs org 转换成freemind 可以在org中编写文档，然后用一个脚本就可以将其转换成freemap的文件。脚本文件可以从这里下载：将其复制到~/.emacs.d/freemind.el在init.el中添加一行：;; freemind export (load "~/.emacs.d/freemind.el")现在编辑一个用户和内容.org文件：* 用户数据 ** 用户基础数据 ** 用户行为数据 *** 消费行为 *** 观... 2015-05-03 20:45 阅读 (648) 评论 (0) Ubuntu 14.10 安装freemind freemap是免费的思维导图软件，在ubuntu上安装仅需要运行命令：apt-get install freemap但是运行的时候报错：~$ freemind [warning] /usr/bin/freemind: No java runtime was found [error] /usr/bin/freemind: Unable to find an appropriate java r... 2015-05-03 20:21 阅读 (688) 评论 (0) 用lisp在emacs org table中进行电子表格计算 一句话，绝对不比excel计算功能弱，当然图形方面是没有的。对于编程者来讲，用鼠标拖拽操作还是用lisp编写计算公式哪个更符合思考的习惯，我觉得是后者。我这里只介绍lisp计算公式，如果关注简单的Calc计算公式，可以参考官方文档。如何引用表格中其他字段推荐写法，@row_index$col_index可以用C-c } 显示或者隐藏row_index和col_index比如：如何插入公式首先将光标... 2015-05-03 16:33 阅读 (786) 评论 (0) emacs org-mode table样式管理 表格名称#+CAPTION: 出厂/供应链/销售/售后导出HTML表格后，会在表格正上方出现如下表格名称Table 1: 出厂/供应链/销售/售后... 2015-04-25 21:05 阅读 (1129) 评论 (0) c++11 函数内部返回对象使用move语义的最佳实践 一句话，直接返回即可，不用任何变化。当启动了c++11选项后，通过函数返回代码没有发生任何变化，但是已经使用了move语义，而不需要之前的NRVO编译器优化技术。下面是stackoverflow上的一个讨论贴，比较有价值：246down voteacceptedFirst examplestd::vector return_vector(void) { std::vector tmp {1... 2015-04-12 21:28 阅读 (722) 评论 (0) emacs 24.4.1 利用c++智能提示 Ubuntu 14.10系统，通过emacs package system安装了模块auto-complete-clang然后进入.emacs.d/init.el中如下配置：;; auto complete (require 'auto-complete) (add-to-list 'ac-dictionary-directories "~/.emacs.d/elpa/auto-complete... 2015-04-12 00:24 阅读 (978) 评论 (0) clang++ 优化返回代码NRVO clang++会自动优化函数返回代码，无论是c++11标准还是之前的标准。下面是例子：注意，clang++ 3.5默认编译选项不是c++11 c++ --version Ubuntu clang version 3.5.0-4ubuntu2 (tags/RELEASE_350/final) (based on LLVM 3.5.0) Target: x86_64-pc-linux-gnu Thre... 2015-04-11 23:22 阅读 (683) 评论 (0) newlisp url 编码 newlisp标准库没有提供url编码的支持，因此从dragonfly库中找到下面的代码，经过测试可以使用。;=============================================================================== ; !UTF8 Compatible URL encoding/decoding ;=======================... 2015-04-10 12:56 阅读 (754) 评论 (4) c++模板元编程七：类型判断的traits类 2 用于判断类型的traits类is_void类可以判断模板参数的类型，使用很简单，注意，也可以直接使用::value。cout ::type::value << endl; cout ::type::value << endl; 但是实现很有趣，特化居然可以用来继承不同的类。这里没有去找clang++实现代码，用boost代码代替吧。template struct is_void : publ... 2015-04-06 22:11 阅读 (749) 评论 (0) c++模板元编程六：integral_constant 类 1 integral_constant类这个类是所有traits类的基类，分别提供了以下功能：value_type 表示值的类型value表示值type 表示自己, 因此可以用::type::value来获取值true_type和false_type两个特化类用来表示bool值类型的traits，很多traits类都需要继承它们下面的代码分别来自C++11和Boost，略有差别：C++11包含va... 2015-04-06 18:23 阅读 (650) 评论 (0) c++模板元编程五：switch/case语句编译时运行 2.4 switch/case 替代现在模拟switch/case语句，不过也是在编译期运行。先看调用代码和输出结果// test case cout << "test case" << endl; Case::Run(); test case case 2 实现代码很简单，还是模板特化template class Case { public: static inline void Run()... 2015-04-05 20:55 阅读 (660) 评论 (0) c++模板元编程四：IF语句编译时运行 2.3 if 替代将if语句放在编译期执行，可以用模板特化的方式实现。下面是调用代码：// test if cout << "test if" << endl; If::Run(); 输出结果为：test if it's false 模板类的实现如下：template class If { public: static inline void Run() { cout << "it's... 2015-04-05 16:41 阅读 (708) 评论 (0) c++模板元编程三：循环展开 2.2 loop unrolling 循环展开前面enum一节介绍的是和template联合，引发编译器递归的奇妙作用。template本身无需enum配合也可以达到递归的效果。// test template recursive for loop unrolling cout << "test 2: template recursive for loop unrolling" << en... 2015-04-05 16:29 阅读 (711) 评论 (0) 1101条数据 共56页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 sheismylife 访问： 3247679次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败

Recno:: 37
URL:: http://blog.csdn.net/sheismylife/article/list/5

ParseText::
Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 c++模板元编程二：用enum做数值计算 2.1 用enum做数值计算下面两篇文章都介绍了模板元编程，enum是其最重要的基本工具 http://www.codeproject.com/Articles/3743/A-gentle-introduction-to-Template-Metaprogramming https://www10.informatik.uni-erlangen.de/~pflaum/pflaum/ProSemin... 2015-04-05 16:26 阅读 (684) 评论 (0) c++模板元编程一：基本概念 1 基本概念1.1 meta program 元程序可以用meta program生成object program, 也可以object program作为数据看待，从而组装出更大的object program 元程序是处理程序的程序，如大家熟悉的编译器、解释器、类型检查器、定理证明器、程序生成器、转换系统和程序分析器等等1.2 object program 目标程序目标程序，又称为“目的程序”，... 2015-04-05 16:24 阅读 (618) 评论 (0) MongoDB修改数据类型 如果类型写入错误，可以通过下面的方式在命令行中修改之。db.jobtracker_data.find({'collect_time' : { $type : 2 }}).forEach(function(x) { x.collect_time = parseInt(x.collect_time); db.jobtracker_data.save(x); }) 本来collect_t... 2015-03-29 16:30 阅读 (756) 评论 (0) Java IO两大体系 区别一套是input/output stream 体系，一套是reader/writer体系，两者的区别是stream负责的是字节流的数据，reader/writer负责的是字符流。设计模式decorator模式该模式主要用于在不改变已有的component设计和代码的情况下，不断的增加附属功能。打个比喻，就像你有一副画，为它配一个或者多个不同的画框。具体可以参考这里：http://www.cnb... 2015-03-28 21:02 阅读 (674) 评论 (0) redmine 导出中文乱码 这是redmine的bug，必须在个人账户设置中将语言改成中文，才可以解决。顺便一个提示，修改下面的文件方法是无效的/home/redmine/redmine-2.5.1/lib/plugins/rfpdf/lib/fpdf/chinese.rb 网上建议这样改：i+=ascii ? 1 : 2 => i+=ascii ? 1 : 3这无法解决这个问题。... 2015-03-18 19:01 阅读 (1158) 评论 (0) zookeeper shell终端使用 前面已经成功部署了zookeeper quorum, 现在来试用一下。在第四台机器上，同样下载解压zookeeper, 这次不需要部署，仅用自带的Java程序连接zookeeper服务, C程序也可以，不过要编译，具体参考src/c/README进入目录后执行命令连接/zkCli.sh -server zkc:2181键入help命令：help ZooKeeper -server host:por... 2015-03-03 12:53 阅读 (785) 评论 (0) zookeeper replicated模式 standalone适合开发，因为是单机，因此不能作为产品环境使用。... 2015-03-02 23:47 阅读 (724) 评论 (0) zookeeper standalone模式安装 首先需要安装jdk，参考之前的文章：Ubuntu 13.10-14.10 安装Oralce JDK然后下载最新稳定版本到/opt目录/opt$ wget http://mirrors.cnnic.cn/apache/zookeeper/stable/zookeeper-3.4.6.tar.gz解压目录：tar zxvf zookeeper-3.4.6.tar.gz 解压后的目录结构为：/opt/z... 2015-03-01 22:15 阅读 (744) 评论 (0) zookeeper应用场景 zookeeper采用了fast paxos算法，该算法比paxosa算法好的地方是解决了几个proposer交替发出提案，导致没有一个提案被批准的活锁问题。为什么需要zookeeper？我想有以下几个应用场景：1. 配置管理如果我们有很多服务程序需要有一些配置信息，可以保存在zookeeper的对应的znode中。zookeeper保证多个服务器同时对znode里面信息的修改是一致的。当然也可以... 2015-02-28 13:32 阅读 (1299) 评论 (0) Paxos算法介绍 Paxos算法是为了实现分布式环境中为保证数据的一致性而设计的，在一个分布式系统中，通过投票的方式来确定一个值（决议）。只不过这个步骤分为两步：准备阶段(prepare)和批准阶段(accept)。同时又分为若干角色，以下都可以兼任。proposer 信使acceptor 决策者learner 学习者（学习最终决策）准备阶段：一个proposer向多个acceptor发出提案，每个提案有一个数字编... 2015-02-28 00:42 阅读 (845) 评论 (0) Ubuntu 14.04 conkeror启动问题 最近Ubuntu 14.04 几次系统升级后，conkeror启动出错：Error initializing. Error: Error opening input stream (invalid filename?): chrome://conkeror/content/io解决方法是修改/opt/conkeror/debian/conkeror/usr/share/conkeror/compo... 2015-02-27 12:57 阅读 (700) 评论 (0) emacs 24.4.1 org-mode 日程管理 几个基本快捷键转换关键字用来将一个文本转换成TODO, DONE 或者转换回来应该用Shift + 左/右键scheduled & dead line timeC-c C-s  & C-c C-d这时会打开日历，用Shift + 左/右键移动日期Agenda 命令M-x org-agenda时间线展示日程L 命令这个特别有用, 能一下在按照日期把所有做的事情排列，由于颜色的区分，一下子就能看到哪天... 2015-02-23 22:39 阅读 (1075) 评论 (2) 编译安装emacs 24.4 http://ubuntuhandbook.org/index.php/2014/10/emacs-24-4-released-install-in-ubuntu-14-04/... 2015-02-23 14:47 阅读 (823) 评论 (0) git diff odt文件 odt文件其实由若干文本文件组成，git 经过一些配置是可以支持diff的。 step 1: 在git项目中i添加.gitattributes文件, 内容如下： *.odt diff=odt step 2: 在.git/config文件中添加下面一段： [diff "odt"] binary = true textconv = /usr/local/bin/odt-to-txt... 2015-02-23 14:02 阅读 (638) 评论 (0) list作为map使用 用lookup查找key> (set 'l '(("a" "b") ("c" "d"))) (("a" "b") ("c" "d")) > (lookup "a" l) 删除key/value用pop-assoc> (pop-assoc "a" l) ("a" "b") > l (("c" "d"))... 2015-02-11 18:28 阅读 (634) 评论 (0) org mode 使用latex org mode写技术文章，经常需要编写数学公式和希腊字母。下面介绍e如何使用.希腊字母可以使用转义符获得的h结果是：Angles are written as Greek letters α, β and γ.... 2015-02-08 15:29 阅读 (708) 评论 (0) org mode 排版技巧 标题* 开头，1个是一级标题，2个是二级标题启用缩进模式输入命令，这样，所有的标题层次结构都用缩进拉开横向距离。org-indent-mode枚举- 开头 或者 + 开头如何调整缩进，在新加一行的时候，用tab可能不是你想要的缩进，可以通过Alt + 左/右键来调整缩进如何变换- 或者 + 或者其他，可以通过shift + 左/右建... 2015-02-07 00:09 阅读 (1103) 评论 (0) MongoDB vs TokuMX 性能测试 参考文章：http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/重点是关注三个方面：1. 如何测试2. 如何用工具获取测试数据3. 如何进行replacation集群的高性能配置... 2015-02-05 00:12 阅读 (973) 评论 (0) MongoDB何时不该使用 这篇文章很认真的举了在使用MongoDB遇到的困难，和最终抛弃MongoDB的原因。花了不少时间看完，不过还没有仔细看评论，等哪天不忙了，可以再分析一下里面的信息。这里简单列举一下作者的观点：1. MongoDB的document适合存储自包含数据，不适用于document之间有Join的场景，在这种场景中，RDBMS + Cache最有效，既没有冗余数据，又能够通过后台应用自动更新缓存的方式提高... 2015-02-04 23:42 阅读 (723) 评论 (0) MongoDB upsert操作并发的原子性 在用C++对MongoDB执行update操作的时候，如果设置了upsert参数为true，则会自动插入不存在的数据。在高并发环境下，会导致数据重复。解决方法是为查询条件添加unique index, 参考官方文档：http://docs.mongodb.org/manual/core/write-operations-atomicity/http://docs.mongodb.org/manua... 2015-02-03 18:28 阅读 (853) 评论 (0) 1101条数据 共56页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 sheismylife 访问： 3247679次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 38
URL:: http://blog.csdn.net/sheismylife/article/list/56

ParseText::
Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 COM多线程原理与应用 COM多线程原理与应用目录：COM多线程原理与应用... 1目录：... 1前言：... 1套间：... 1套间的定义：... 1套间的分类：... 2套间的进入和退出：.. 2对象的同步：... 2组件对象的同步：... 2COM对象线程模型：.. 2进程内对象线程模型的种类：.. 3ATL对多线程的支持：.. 3对象引用的保护：... 3... 2004-12-15 12:38 阅读 (4687) 评论 (5) 1101条数据 共56页 首页 上一页 ... 56 个人资料 sheismylife 访问： 3247679次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 39
URL:: http://blog.csdn.net/sheismylife/article/list/6

ParseText::
Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 newlisp kmeans算法 kmeans是经典的聚类算法，newlisp提供了函数，同样分为train和query两个阶段。kmeans的算法目的是将训练数据划分成k个类，按照一定的算法动态的选择k个中心点。下面是个例子，我添加了中文注释：(set 'data '( (6.57 4.96 11.91 0.9) (2.29 4.18 1.06 0.8) (8.63 2.51 8.11 0.7) (1.85 1.89 0.... 2015-02-03 17:25 阅读 (718) 评论 (0) 指数平滑算法 对时间序列的预测，用的最多的是指数平滑算法，算法不复杂。首先理解一个基本公式：　指数平滑法的基本公式是： 式中，St--时间t的平滑值；yt--时间t的实际值；St − 1--时间t-1的平滑值；a--平滑常数，其取值范围为[0,1]；说明：1. 此公式用t-1时刻的平滑值和t时刻的hi实际值来计算t时刻的平滑值2. a是系数，越接近1的话，远期数据对于计算结果影响越小，越接近0,则影响越大用ne... 2015-02-02 17:51 阅读 (750) 评论 (0) newLISP bayes算法使用 理解条件概率在理解条件概率的前提下，参考i之前的n文章理解条件概率两阶段算法-训练和查询现在来看看大名鼎鼎的bayes算法。bayes分成训练和查询两个阶段。训练指的是对样本数据集的训练，从而找出规律。newlispe提供了bayes-train函数训练先来看看函数原型：syntax: (bayes-train list-M1 [list-M2 ... ] sym-context-D)list-M... 2015-02-01 12:16 阅读 (755) 评论 (0) TokuMX 初体验 TokuMX2.0号称比MongoDB快50倍，同时完全兼容MongoDB 2.4的驱动。今天现在自己的开发机器上安装体验一下。首先下载，由于我是Ubuntu 14.10，目前还没有支持package安装方式，所以下载了压缩包，解压后放在/opt/tokumx-2.0.0-linux-x86_64之后，参考官方文档，添加链接： $ ln -snf /opt/tokumx-2.0.0-linux-x... 2015-01-30 21:29 阅读 (1253) 评论 (0) 4年后Hadoop的再回首 居然无疑中搜到了几年前我讨论的帖子，造化弄人，如今我已经管理着321台服务器组成的hadoop集群。现在回顾一下这个讨论还是值得的：1. Hadoop的稳定性的确不错，比如task tracker经常出现失败，但是绝大多数会被重试后成功。2. Hadoop是离线计算框架，用它来做低延迟的实时性计算肯定是错误的，应该用Spark/Storm等来代替。老实说，慢的可以。绝对不能将其作为互联网应用的直接... 2015-01-27 00:32 阅读 (1641) 评论 (0) 获取当天时间信息 (now)函数可以很方便的返回当前时间信息，比如年，月等，返回结果存放在list中，使用十分方便。举例如下：> (now) (2015 1 24 14 7 42 393413 24 6 480 0) 注意，这里获得是GMT+0时区，如果想要获得中国时区，需要在第一个参数中指定以分钟为单位的整数。中国是GMT+8，所以应该如下调用：> (now (* 8 60)) (2015 1 24 22 9 9... 2015-01-24 22:10 阅读 (674) 评论 (0) MongoDB shell获取最大值和最小值 并没有发现MongoDB有专用的求最大值的方法，不过可以通过排序和取第一条来代替。下面的集合数据如下：{ "_id" : ObjectId("54c39358acace71b1bd20a70"), "epoch_min" : NumberLong(1422030840), "usage_ratio" : 0.035140007734298706 } { "_id" : ObjectId("54c3... 2015-01-24 21:33 阅读 (1225) 评论 (0) newLISP处理mysql escape character 什么是转义字符mysql的escape character指的是需要转义的特殊字符，这些字符出现在sql语句中，如果没有转移会导致sql语法报错或者有sql注入攻击的可能。主要有以下几种都需转义：\x00, \n, \r, \, ', " and \x1a. 比如' 就需要变成\'下面是sql测试：mysql> INSERT INTO nodes(name) VALUES ('select a.d... 2015-01-20 23:48 阅读 (799) 评论 (0) thunderbird 将收发邮件放在一个thread中 可以参考英文资料：http://email.about.com/od/mozillathunderbirdtips/qt/Organize_Mail_Flexibly_Using_Virtual_Folders_in_Thunderbird.htm基本思想是创建一个folder，里面包含了sent和incoming目录。创建菜单是File -> New -> Saved Search. 在choo... 2015-01-15 23:30 阅读 (672) 评论 (0) newLISP C++编译示范工程cppwizard v1.2.0发布 项目代码在gitlab.com上git@gitlab.com:newlisp/cppwizard.git该项目包含了两个工程，一个是console，普通的C++ 11工程，另一个是cppcms_base，是基于cppcms的web工程。注意，默认配置的是clang编译器，cppcms库需要先安装。newLISP显然是需要事先安装的。目前仅支持linux系统。每个工程目录下都有一个builder目录... 2015-01-02 14:32 阅读 (814) 评论 (0) newLISP 将数据存入mysql datetime字段 mysql datetime字段插入非常简单，采用类似下面的字符串形式0000-00-00 00:00:00因此我们需要用newlisp获取epoch秒数，然后转换成字符形式后创建sql语句，下面是个例子：stop-time是一个epoch秒数(date stop-time 0 "%Y-%m-%d %H:%M:%S") 这样得到的sql语句类似于：insert into nodes_history... 2015-01-01 10:16 阅读 (716) 评论 (0) newLISP序列化 newLISP序列化主要是指list表达式如何转换成string，存储在文件或者数据库中。然后读取并转换成list表达式。先看简单的list转换成string(setf a '(1 2 3 4))(1 2 3 4)> (string a)"(1 2 3 4)"string转换成list(list? (eval-string (string "'" b)))true这行代码需要说明一下。需要使用ev... 2014-12-31 18:12 阅读 (737) 评论 (0) newLISP symbol 初始化symbolsetsyntax: (set sym-1 exp-1 [sym-2 exp-2 ... ])下面是例子：> (set 'mysymbol "ebd") "ebd" > (upper-case mysymbol) "EBD" 上面第一句设置了一个symbol, 值为字符串。第二句使用该symbol。注意此时无需单引号。注意：1. 这里set定义了全局的symbol, 不过只能在当... 2014-12-21 12:46 阅读 (911) 评论 (0) newLISP 多核编程 newLISP实现了Cilk API, 可以将多个同时运行的进程执行在多处理器或者多核的CPU架构上，已达到并行节省运行时间的目的。使用spawn和sync函数可以很快的实现。下面是来自newLISP官方文档的例子：#!/usr/bin/newlisp ; calculate primes in a range (define (primes from to) (local (plist)... 2014-12-20 13:06 阅读 (1095) 评论 (0) 用find/find-all match方式查找list元素 查找list中的一个子list假定数据库里面有若干行记录，newlisp mysql模块返回结果是用一个list表示这个若干行记录，然后每个元素都是一个list，里面包含一行记录，每行记录list里面有包含了若干list,每个list都有两个元素：字段名和字段值。现在我们可以用find方式来进行模式查找> (find (list (list "issue_id" 1773) '*) '((("is... 2014-12-17 00:29 阅读 (1323) 评论 (0) redmine 自定义字段mysql表结构 redmine可以创建自定义字段，我经常用它来满足不同的管理需求，现在来解读一下，看看这些自定义字段是如何存在mysql表中的。表issues用来存放issue的标准字段。mysql> describe issues; +----------------------+--------------+------+-----+---------+----------------+ | Field... 2014-12-15 23:50 阅读 (1303) 评论 (0) emacs 中使用git diff命令行 在shell中运行git命令，经常会看到如下警告信息： terminal is not fully functional其实很简单，配置一下即可。git-config --global core.pager ""... 2014-12-14 22:56 阅读 (1254) 评论 (0) newLISP数据引用 无法返回引用数据传递包括两种，返回值和参数。很可惜，newlisp的返回值只进行值拷贝，也就是返回副本，并没有方法返回引用。那么看看参数吧，通过参数有两种方法传递引用，一种是通过使用单引号，比如：单引号symbol传递参数引用(define (change-list aList) (push 999 (eval aList))) (set 'data '(1 2 3 4 5)) ; note... 2014-12-14 19:53 阅读 (1363) 评论 (0) newLISP FOOP 对象模型 对象之间的关系对象可以包含对象，就像一般面向对象的对象树一样。在lisp中，其实很简单, 因为对象就是list, 对象包含对象也就是list里面包含list，此嵌套关系可以有很多层。下面这个例子同样来自manual; create classes (new Class 'Person) (new Class 'Address) (new Class 'City) (new Class 'Stree... 2014-12-14 17:24 阅读 (907) 评论 (0) mu4e 查看邮件图片 看图片不太灵光，经常需要单独打开图片文件，还是决定改进一下。用imagemagick吧。首先下载最新源代码，解压后，编译安装。之后编译emacs 24源代码，./configure执行后注意观察是否使用了imagemagick，yes就没有问题。然后.emacs.d/init.el文件中添加：;; use imagemagick, if available (when (fboundp 'imag... 2014-12-12 18:43 阅读 (922) 评论 (0) 1101条数据 共56页 首页 上一页 ... 6 7 8 9 10 ... 下一页 尾页 个人资料 sheismylife 访问： 3247679次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码

Recno:: 40
URL:: http://blog.csdn.net/testcs_dn/article/list/2

ParseText::
无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 《Go语言入门》第一个Go语言程序——HelloWorld 概述 上一篇讲了 如何在Windows下安装Go语言编程环境，接下来讲一下入门必修课：第一个Go语言程序——HelloWorld。其实Go语言入门是很简单的，上一篇已经成功在Notepad++中运行HelloWorld，只是在命令行中编译运行了出现了一点小曲折，这里记录说明一下。编写HelloWorld你可以使用任一文本编辑器来编写Go代码，我比较喜欢使用Notepad++，不过它也只能是通过插件... 2015-11-29 18:46 阅读 (711) 评论 (1) java.lang.NumberFormatException: For input string: "undefined" 在将字符串转换为数字时导致此错误，解决此问题的思路：1、添加Try catch语句，2、判断字符串是否为数字，将介绍java中判断字符串是否为数字的方法的几种方法。完整错误信息：java.lang.NumberFormatException: For input string: "undefined" at java.lang.NumberFormatException.forInputSt... 2015-11-28 10:01 阅读 (835) 评论 (1) java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp 详细错误信息：org.springframework.dao.TransientDataAccessResourceException: ### Error querying database. Cause: java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestam... 2015-11-24 17:08 阅读 (702) 评论 (0) 《Go语言入门》如何在Windows下安装Go语言编程环境 概述 本文为Go语言学习入门第一篇，《Go语言入门》如何在Windows下安装Go语言编程环境 。 主要讲Go语言编译环境的安装以及基于Notepad++（Go语言插件、语法高亮）的开发环境配置。下载安装包安装包下载地址：https://golang.org/dl/这里选择下载Windows版本，点击链接打开的页面可能不会开始下载；地址栏里会显示完整的下载地址，如：https://golang.o... 2015-11-22 17:32 阅读 (934) 评论 (0) [置顶] 你曾后悔进入 IT 行业吗？ 引言 最近的一篇博文 试读—增长黑客，创业公司必知的“黑科技”，有朋友问到“你曾后悔进入 IT 行业吗？”引发了写这篇文章的想法。你曾后悔进入 IT 行业吗？这不是两句话能说完的，相信很多入行多年的程序猿看到这个问题都不免有些沉思吧？我为什么会进入IT行业？ 我选择IT行业就因为初中班主任的一句话“21世纪不会计算机就是文盲”。因为这一句话我决定学好计算机。 我出生在吉林省吉林市（全国唯一一个省和... 2015-11-21 18:52 阅读 (2246) 评论 (25) 试读—增长黑客，创业公司必知的“黑科技” 刚一看到书名，最引起注意的是黑客两个字，那个带着神秘色彩，让无数程序员羡慕嫉妒恨的角色。但仔细一看，增长黑客，创业公司必知的“黑科技”，是讲公司如何以切实的依据、低廉的成本、可控的风险来达成用户增长、活跃度上升、收入额增加等知识及案例的，这对于初创公司又没有充足的资金去燃烧以改变用户习惯的情况无疑是雪中送炭、指北之针。... 2015-11-20 21:52 阅读 (1228) 评论 (2) Could not publish to the server. java.lang.NullPointerException 错误信息：publishing to tomcat v8.0 server at localhost has encontered a problemCould not publish to the server. java.lang.NullPointerException产生错误的操作：解决方法：1、找到Tomcat的配置文件“context.xml”，在Context标签中添加两个属性（ r... 2015-11-16 10:44 阅读 (1238) 评论 (2) MySQL 如何实现行转列分级输出？ 概述 好久没写SQL语句，今天看到问答中的一个问题，拿来研究一下。 问题链接：关于Mysql 的分级输出问题情景简介学校里面记录成绩，每个人的选课不一样,而且以后会添加课程，所以不需要把所有课程当作列。数据表里面数据如下图，使用姓名+课程作为联合主键。本文以MySQL为基础，其他数据库会有些许语法不同。数据库表数据：处理后的结果（行转列）：方法一：这里可以使用Max，也可以使用Sum；注意第二张图... 2015-11-15 12:20 阅读 (917) 评论 (0) IBM的云平台Bluemix使用初体验——创建PHP Web 应用程序，添加并使用语言翻译服务 概述 本文参加活动： 博客征文：云服务器使用初体验 通过本文学习，你将能够在IBM的云平台Bluemix上创建自己的PHP Web 应用程序，发布自己的PHP页面到云服务器上。Bluemix 是什么？IBM Bluemix 是开放式标准云平台，用于构建、运行和管理应用程序。使用 Bluemix，开发者可以集中通过灵活的计算选项、DevOps 工具的选择以及一组强大的 IBM 及第三方 API 和服... 2015-11-14 13:09 阅读 (1115) 评论 (4) 如何从官网下载Chrome浏览器离线安装包 如何从官网下载Chrome浏览器离线安装包？为什么要下载离线安装包？经常需要用到，比如有一堆电脑要装要升级；有不能翻墙的环境，又想用；癖好，就爱收集安装包，哈哈……；进入官网下载页面下载在线安装工具下载离线安装包鼠标移动到Download菜单上，显示出浮动菜单，点击Support安装Chrome安装完成后，需要关闭所有Chrome浏览器的窗口，再打开Chrome，就会启用新版本。小结注意：Chro... 2015-11-08 11:24 阅读 (759) 评论 (0) MyBatis:Mapped Statements collection does not contain value for xxx 完整错误信息：十一月 03, 2015 10:01:08 上午 org.apache.catalina.core.StandardWrapperValve invoke 严重: Servlet.service() for servlet [springmvc] in context with path [/xinghe-platform-web] threw exception [Request p... 2015-11-03 10:52 阅读 (651) 评论 (0) MyBatis:The expression 'list' evaluated to a null value 完整错误信息：严重: Servlet.service() for servlet [springmvc] in context with path [/xinghe-platform-web] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemExceptio... 2015-11-03 10:43 阅读 (1394) 评论 (0) 一个因外包上当受骗的事件，看似不可能发生却偏偏发生的事情 大概事件描述： 公司有部分开发任务需要外包，由一个员工在威客网站上发布的项目外包需求， 对方留下了QQ，然后双方通过QQ沟通需求（按理说威客网站不允许这样的，不知怎么绕过审核的，还是没有审核？）； 大概问了一下需求的功能对方说都可以实现，然后领导安排另一个员工沟通详细需求， 另一个员工将需求文档发过去，对方说都可以实现，没有任何问题； 由于通过威客网站交易威客网站会收取20%的佣金，所以对方要求... 2015-10-30 21:45 阅读 (1015) 评论 (8) ADODB.Stream 错误 '800a0bbc' 写入文件失败 最近在调试一个过去的项目，asp写的一个无组上传类，以前都测试通过的，本次发布却提示：ADODB.Stream 错误 '800a0bbc' 写入文件失败。 /UpLoadClass_Dreacom_v3/UpLoadClass.asp，行 703 发生此错误的系统是：Windows Server 2008 R2有的还可能提示：ADODB.Stream 错误 30004开始以为是权限的问题，... 2015-10-28 14:23 阅读 (579) 评论 (0) ADODB.Stream 错误 '800a0bb9' 参数类型不正确，或不在可以接受的范围之内，或与其他参数冲突 最近在调试一个过去的项目，asp写的，提示：ADODB.Stream 错误 '800a0bb9' 参数类型不正确，或不在可以接受的范围之内，或与其他参数冲突。 /UpLoadClass_Dreacom_v3/UpLoadClass.asp，行 635 发生错误的代码行：Stream.Write buff打印变量长度：Response.write Lenb(buff)发现变量的长度是0，所以导致这个问... 2015-10-27 11:39 阅读 (595) 评论 (0) 643条数据 共43页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 testcs_dn 访问： 1858783次 积分： 22271 等级： 积分：22271 排名： 第165名 原创： 466篇 转载： 169篇 译文： 7篇 评论： 512条 文章搜索 博客专栏 JAVA学习实践及问题记录 文章：98篇 阅读：390501 VC学习实践及问题记录 文章：33篇 阅读：89083 Markdown 文章：15篇 阅读：27803 NoSQL入门与提高 文章：0篇 阅读：0 CentOS服务器配置管理 文章：25篇 阅读：118455 MySQL图文进阶 文章：18篇 阅读：89044 C#软件开发实例 文章：44篇 阅读：147398 文章分类 VC (79) C# (88) JAVA (132) jquery (20) InstallShield (3) php (9) Android (1) sock5 (2) JavaScript (25) HTML5 (6) IIS (6) VS2010 (9) ASP.NET (4) Python (1) 数据库 (21) MySQL (24) CentOS (55) 操作系统 (20) Database (4) css (1) linux (14) 动态共享库 (2) gcc (3) gdb (1) ThinkPHP (5) 浏览器 (9) 调试 (6) 系统安全 (3) 其它 (29) C语言 (2) 开源协议 (2) 直播 (2) Maven (21) Redis (9) Nginx (5) FFmpeg (2) Hadoop (3) 逆向分析 (1) visio (1) mybatis (5) VB.NET (1) 同步机制 (2) 系统架构 (4) Eclipse (33) R语言 (2) Markdown (14) Tomcat (10) SVN (8) 活动 (9) 书摘 (2) WindowsAPI (2) UI设计 (1) UE设计 (2) Proguard (15) spring (2) 成功励志 (1) powerdesigner (1) 养生保健 (2) 数据结构 (1) 编程语言 (2) 星星点灯 (1) 程序猿/缘 (2) asp (3) 云服务器 (2) go语言入门 (4) Bluemix (3) Ruby (7) rails (2) 文章存档 2015年12月 (15) 2015年11月 (12) 2015年10月 (12) 2015年09月 (14) 2015年08月 (13) 2015年07月 (14) 2015年06月 (20) 2015年05月 (58) 2015年04月 (25) 2015年03月 (31) 2015年02月 (16) 2015年01月 (33) 2014年12月 (31) 2014年11月 (20) 2014年10月 (24) 2014年09月 (23) 2014年08月 (21) 2014年07月 (20) 2014年06月 (14) 2014年05月 (36) 2014年04月 (14) 2014年03月 (14) 2014年02月 (7) 2014年01月 (6) 2013年12月 (15) 2013年08月 (3) 2013年07月 (2) 2013年06月 (9) 2013年05月 (6) 2013年04月 (7) 2013年03月 (32) 2013年02月 (3) 2012年10月 (8) 2012年09月 (7) 2012年08月 (22) 2012年07月 (2) 2012年06月 (30) 2012年05月 (4) 阅读排行 Uncaught SyntaxError: Unexpected token ILLEGAL (56336) MICRO SIM卡(SIM小卡)尺寸图及剪卡图解 (55486) Uncaught SyntaxError: Unexpected token ) (51563) HTTP错误 404.17 - Not Found" IIS 7.5 请求的内容似乎是脚本，因而将无法由静态文件处理程序来处理 (43344) xxx cannot be resolved to a type 错误解决方法 (33234) The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path (27780) HTML5使用 JavaScript File API 实现文件上传 (27251) js如何判断一个对象{}是否为空对象，没有任何属性 (26210) A child container failed during start (20944) ThinkPHP学习（二）理清ThinkPHP的目录结构及访问规则，创建第一个控制器 (19957) 评论排行 CSDN-markdown编辑器语法——字体、字号与颜色 (35) 你曾后悔进入 IT 行业吗？ (25) xxx cannot be resolved to a type 错误解决方法 (19) 欢迎使用CSDN-markdown编辑器 (15) HTTP错误 404.17 - Not Found" IIS 7.5 请求的内容似乎是脚本，因而将无法由静态文件处理程序来处理 (12) A child container failed during start (12) 《Visual c++2013入门经典（第7版）》上机练习：为 Win32 控制台应用程序创建项目 (11) The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path (11) C语言中函数参数为什么是由右往左入栈的？ (10) VC Windows API应用之GetDesktopWindow ——获得桌面所有窗口句柄的方法 (9) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Your Ruby version is 2.2.3, but your Gemfile specified 2.2.2 u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ C#软件开发实例.私人订制自己的屏幕截图工具（十）在截图中包含鼠标指针形状 qigeminghaofan : 大神，可以把完整的代码放出来吗？好像没有截图信息栏、编辑工具栏这些功能 欢迎使用CSDN-markdown编辑器 scufzk2008 : 代码块那地方很丑，不知道楼主怎么优化下？ A child container failed during start testcs_dn : @plok741:谢谢补充！ A child container failed during start plok741 : 遇到相同的问题，是由于tomcat的版本的问题导致的。用tomcat8之后，可以成功启动应用。或者使... Notepad++输入模式之修改模式、插入模式 testcs_dn : @zxbdlv:欢迎来踩！ Notepad++输入模式之修改模式、插入模式 zxbdlv : 谢谢分享！ Ruby On Rails中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 testcs_dn : @mengdonghui123456:欢迎来踩！ Could not publish to the server. java.lang.NullPointerException testcs_dn : @liutong123987:恩恩 Could not publish to the server. java.lang.NullPointerException liutong123987 : 今天刚好碰到，用解决方法的第一种可以解决 友情链接 computer99999999的专栏 陌路缘

Recno:: 41
URL:: http://blog.csdn.net/u010850027/article/details/50121149

ParseText::
SSH网上商城---需求分析+表关系分析 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 SSH网上商城---需求分析+表关系分析 2015-12-14 08:02 653人阅读 评论 (12) 收藏 举报 分类： --------【java】 （3） 作者同类文章 X --------【项目实战】 （41） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。     SSH-- -小编初次接触的时候傻傻的以为这个跟SHE有什么关系呢？又是哪路明星歌手，后来才知道小编又土鳖了，原来SSH是这个样子滴，百度百科对她这样阐述，SSH即 Spring + Struts +Hibernate。 Struts对Model，View和Controller都提供了对应的组件。Spring是一个轻量级的控制反转(IOC)和面向切面(AOP)的容器框架，她由Rod Johnson创建。她是为了解决企业应用开发的复杂性而创建的。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。 Hibernate是一个开放源代码的对象关系映射框架，她对JDBC进行了非常轻量级的对象封装，可以应用在任何使用JDBC的场合，可以在Servlet/JSP的Web应用中使用，也可以在应用EJB的J2EE架构中取代CMP，完成数据持久化的重任。     集成SSH框架的系统从职责上分为四层，分别是表示层、业务逻辑层、数据持久层和域模块层，以帮助开发人员在短期内搭建结构清晰、可复用性好，维护方便的Web应用程序，其中使用Struts作为系统的整体基础架构，负责MVC的分离，在Struts框架的模型部分，控制业务跳转，利用Hibernate框架对持久层提供支持，Spring做管理，管理struts和hibernate。 Struts是一种非常优秀的J2EEMVC实现方式，主要用于框架的Web开发。采用Hibernate架构实现的DAO类来实现Java类与数据库之间的转换和访问。Hibernate作为持久层技术（用Hibernate作为ORM框架）的最大的好处在于可以完全以面向对象的方式进行系统分析、系统设计。 Spring的作用贯穿了整个中间层，将Web层、Service层、DAO层及PO无缝整合。Spring做管理，管理struts和hibernate。其中，用Spring容器代替DAO工厂，无须程序员自己实现工厂模式，只需要将DAO组件配置在Spring容器中，由ApplicationContext负责管理DAO组件的创建即可。借助于Spring提供的依赖注入，其他组件甚至不用访问工厂，一样可以直接使用DAO实例。     在最近的学习中，小编接触了一个有关于SSH网上商城的项目，在后续的博客中，小编会陆续有连载的博文来介绍网上商城，今天这篇博客，先 简单的向大家介绍一下网上商城的需求以及表关系分析。 SSH网上商城这个项目的需求主要分为两大部分，一个是用户模块的需求另一个是后台的需求，我们先来看用户模块的需求，主要包括以下几个小模块：            接着，小编来主要介绍一下在用户模块中的这四个小模块，分别包含哪些功能呢？首先我们来看注册，注册里面包含的功能有：       1、前台js校验；       2、使用ajax完成对用户名异步校验；       3、后台struts2校验；       4、验证码；       5、发送激活邮件；       6、将用户信息存入到数据库；       接着，我们来看激活模块里面应该包含哪些功能，如下所示：       1、点击链接完成激活：根据激活码，查询数据库中是否有该用户，如果有就可以完成激活（将激活码字段清空）；       2、修改用户的状态：没有激活为0，激活为1；       第三个模块登录，这个模块包括哪几个小的功能模块呢？如下所示：       1、输入用户名和密码；数据校验；      2、用户名和密码都正确，同时用户的状态必须是激活的状态才可以进行登录。     接着，我们来看一下用户模块的最后一个概念退出，销毁session即可。以上就是我们SSH网上商城需求分析的用户模块，我们的前台模块还包括以下模块：            接着，小编主要简单的介绍一个这四个模块里面具体包含某些功能，首先我们来看一级分类模块：      1、查询一级分类；      2、查询所有一级分类；      3、查询该分类下所有的商品；      接着我们来看商品模块所包含的具体功能：      1、查询热门商品；      2、查询最新商品；      3、根据分类的ID进行查询商品；      4、查询某个二级分类商品；      5、查询某个商品信息；      接着，我们来看购物模块：      1、添加到购物车；      2、从购物车中移除商品；      3、清空购物车；      最后我们来看订单模块：      1、生成订单；      2、清空购物车；      3、为订单付款；      4、查询我的订单；      5、查询某个订单详情；至此我们前台的用户需求就已经介绍完了，接着，来看看我们的后台，后台又有着怎么样的需求呢？如下图所示：          接着，小编来详细介绍一下各个模块里面的具体功能，用户模块、一级模块、二级模块和商品模块主要都是添加、修改、删除和查询，都是一些增删改的内容，订单模块中的主要需求就是查询所有订单，异步加载订单项，至此我们的SSH网上商城的需求到这里就告一段落了，接着小编来简单介绍一下这个系统里面的表关系，我们来简单分析一下，网上商城项目里面所有用的表如下所示：            小编寄语： 该博文小编主要的简单的介绍了SSH框架，以及SSH框架的一些具体情况。  接着，小编来简单介绍一下SSH框架以及SSH框架的一些具体情况，首先我们来看一下SSH是struts+spring+hibernate的一个集成框架，目前比较流行的一种Web应用程序开源框架，SSH分为SSH1和SSH2，区别主要在于Struts的版本，即Struts1和Struts2，SSH2相比较SSH1的不同之处在于，使用更方便，更安全的mvc框架，Struts2是优秀的MVC框架，Hibernate是现在最好用的ORM框架，Spring是现在使用最普遍的容器，用来处理业务逻辑。 SSH网上商城这个项目的需求以及该项目中所用到的表结构，需求分析包括用户模块分析以及后台需求分析，在后续的博文中，小编将继续介绍SSH网上商城中的相关信息，敬请期待`(*∩_∩*)′！ 上一篇 TortoiseSVN文件夹图标不显示 下一篇 浅谈如何带领好一个团队 顶 2 踩 1 我的同类文章 --------【java】 （3） --------【项目实战】 （41） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397324次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 42
URL:: http://blog.csdn.net/u010850027/article/details/50294513

ParseText::
SSH网上商城---使用ajax完成用户名是否存在异步校验 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 SSH网上商城---使用ajax完成用户名是否存在异步校验 标签： 实例 商城 ssh ajax 2015-12-21 08:05 609人阅读 评论 (9) 收藏 举报 分类： ● 编程语言 （11） 作者同类文章 X --------【java】 （3） 作者同类文章 X ● 成长之路 （80） 作者同类文章 X --------【项目实战】 （41） 作者同类文章 X ● java之恋 （1） 作者同类文章 X --------【SSH】 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        小伙伴在上网的时候，需要下载或者观看某些视频资料，更或者是在逛淘宝的时候，我们都需要注册一个用户，当我们填写好各种信息，点击确定的时候，提示用户名已经存在，小编就想，为什么当我们填写完用户名的时候，她就自动提示用户名已经存在，我们也不需要浪费那么多感情，直到填写完那么多的信息之后在提示，在小编最近的项目中，就碰到这个问题，我们可以使用ajax完成用户名是否存在，今天这篇博客，小编就简单的总结一下，如何使用ajax来完成校验，还请小伙伴多多指教哦`(*∩_∩*)′！        首先ajax完成用户名是否存在异步校验，那么我们该如何做呢？在这里，我们要由事件进行触发，也就是说，我们在用户名里面输入的时候，鼠标移开，这个事件叫做onblur，即失去焦点，与其相对的，鼠标放在里面获得焦点，我们称之为onfocus，那么失去焦点，我们该怎么操作呢？首先找到注册页面，在注册页面找到用户名那部分的代码，在后面加上onblur=checkUsername（），校验用户名即可，接着我们来编写方法checkUsername，具体代码如下所示： function checkUsername() { //获取文本框值: var username = document.getElementById("username").value; //1、创建异步交互对象 var xhr = createXmlHttp(); //2、设置监听 xhr.onreadystatechange = function() { if (xhr.readyState == 4) { if (xhr.status == 200) { document.getElementById("span1").innerHTML = xhr.responseText; } } } //3、打开连接 xhr.open("GET", "${pageContext.request.contextPath}/user_findByName.action?time=" + new Date().getTime() + "&username=", true) //4、发送 xhr.send(null); } function createXmlHttp() { var xmlHttp; try { xmlHttp = new XMLHttpRequest(); } catch (e) { try { xmlHttp = new ActiveXObject("Msxml2.XMLHTTP"); } catch (e) { try { xmlHttp = new ActiveXObject("Microsoft.XMLHTTP"); } catch (e) {} } } return xmlHttp; }       接着，我们来建立实体Vo，实现模型驱动，自动实现封装，具体代码如下所示： package cn.itcast.shop.user.vo; public class User { private Integer uid; private String username; private String password; private String name; private String email; private String phone; private String addr; private Integer state; private String code; public Integer getUid() { return uid; } public void setUid(Integer uid) { this.uid = uid; } public String getUsername() { return username; } public void setUsername(String username) { this.username = username; } public String getPassword() { return password; } public void setPassword(String password) { this.password = password; } public String getName() { return name; } public void setName(String name) { this.name = name; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } public String getPhone() { return phone; } public void setPhone(String phone) { this.phone = phone; } public String getAddr() { return addr; } public void setAddr(String addr) { this.addr = addr; } public Integer getState() { return state; } public void setState(Integer state) { this.state = state; } public String getCode() { return code; } public void setCode(String code) { this.code = code; } }        我们要接收参数，实现模型驱动，ActionSupport直接实现modelDriven即可，接着来编写我们的ajax代码，需要向action中进行提交，我们来编写UserAction中的代码，具体代码如下所示： package cn.itcast.shop.user.action; import java.io.IOException; import javax.servlet.http.HttpServletResponse; import org.apache.struts2.ServletActionContext; import cn.itcast.shop.user.service.UserService; import cn.itcast.shop.user.vo.User; import com.opensymphony.xwork2.ActionSupport; import com.opensymphony.xwork2.ModelDriven; /** * 用户模块Action的类 * @author Flower * */ public class UserAction extends ActionSupport implements ModelDriven<User> { //模型驱动使用的对象 private User user = new User(); public User getModel(){ return user; } //注入UserService private UserService userService; public void setUserService(UserService userService){ this.userService=userService; } /** * 跳转到注册页面的执行方法 */ public String registPage(){ return "registPage"; } /** * ajax进行异步校验用户名的执行方法 * @throws IOException */ public String findByName() throws IOException{ //调用Service进行查询 User existUser = userService.findByUsername(user.getUsername()); //获得response对象，向页面输出 HttpServletResponse response = ServletActionContext.getResponse(); response.setContentType("text/html;charset=UTF-8"); //判断 if(existUser != null){ //查询到该用户：用户名已经存在 response.getWriter().println("<font color='red'>用户名已经存在</font>"); }else{ //没查询到该用户：用户名可以使用 response.getWriter().println("<font color='green'>用户名已经存在</font>"); } return NONE; } /** * 用戶注册的方法： */ public String regist(){ return NONE; } }         接着，我们需要做的就是把service和Dao配置到applicationContext中，代码如下所示： <!-- Service的配置 =========================== --> <bean id="userService" class="cn.itcast.shop.user.service.UserService"> <property name="userDao" ref="userDao"/> </bean> <!-- UserDao的配置 =========================== --> <bean id="userDao" class="cn.itcast.shop.user.dao.UserDao"> <property name="sessionFactory" ref="sessionFactory"></property> </bean>        配置好了之后，我们需要在UserDao里面完成查询，具体代码如下所示： package cn.itcast.shop.user.dao; import org.springframework.orm.hibernate3.support.HibernateDaoSupport; import java.util.List; import cn.itcast.shop.user.vo.User; /** * 用户模块持久层代码 * @author Flower * */ public class UserDao extends HibernateDaoSupport { //按名次查询是否有该用户 public User findByUsername (String username){ String hql ="from User where username= ?"; List <User> list=this.getHibernateTemplate().find(hql,username); if(list !=null && list.size() > 0){ return list.get(0); } return null; } }      接着，我们需要在service里面完成对Dao的调用，具体代码如下所示： package cn.itcast.shop.user.service; import org.springframework.transaction.annotation.Transactional; import cn.itcast.shop.user.dao.UserDao; import cn.itcast.shop.user.vo.User; /** * 用户模块业务层代码 * @author Flower * */ @Transactional public class UserService { //注入UserDao private UserDao userDao; public void setUserDao(UserDao userDao){ this.userDao =userDao; } //按用户名查询用户的方法 public User findByUsername (String username){ return userDao.findByUsername(username); } }       接着我们需要在UserAction中进行调用，具体代码如下所示： package cn.itcast.shop.user.action; import java.io.IOException; import javax.servlet.http.HttpServletResponse; import org.apache.struts2.ServletActionContext; import cn.itcast.shop.user.service.UserService; import cn.itcast.shop.user.vo.User; import com.opensymphony.xwork2.ActionSupport; import com.opensymphony.xwork2.ModelDriven; /** * 用户模块Action的类 * @author Flower * */ public class UserAction extends ActionSupport implements ModelDriven<User> { //模型驱动使用的对象 private User user = new User(); public User getModel(){ return user; } //注入UserService private UserService userService; public void setUserService(UserService userService){ this.userService=userService; } /** * 跳转到注册页面的执行方法 */ public String registPage(){ return "registPage"; } /** * ajax进行异步校验用户名的执行方法 * @throws IOException */ public String findByName() throws IOException{ //调用Service进行查询 User existUser = userService.findByUsername(user.getUsername()); //获得response对象，向页面输出 HttpServletResponse response = ServletActionContext.getResponse(); response.setContentType("text/html;charset=UTF-8"); //判断 if(existUser != null){ //查询到该用户：用户名已经存在 response.getWriter().println("<font color='red'>用户名已经存在</font>"); }else{ //没查询到该用户：用户名可以使用 response.getWriter().println("<font color='green'>用户名已经存在</font>"); } return NONE; } /** * 用戶注册的方法： */ public String regist(){ return NONE; } }        最后，我们来编写映射文件里面的内容，具体代码如下所示： <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"> <hibernate-mapping> <class name="cn.itcast.shop.user.vo.User" table="user"> <id name="uid"> <generator class="native"/> </id> <property name="username"/> <property name="password"/> <property name="name"/> <property name="email"/> <property name="phone"/> <property name="addr"/> <property name="state"/> <property name="code"/> </class> </hibernate-mapping>       不要忘记了，要把她陪到applicationContext里面，具体代码如下所示： <!-- 配置Hibernate的其他的属性 --> <property name="hibernateProperties"> <props> <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> <prop key="hibernate.show_sql">true</prop> <prop key="hibernate.format_sql">true</prop> <prop key="hibernate.connection.autocommit">false</prop> <prop key="hibernate.hbm2ddl.auto">update</prop> </props> </property> <!-- 配置Hibernate的映射文件 --> <property name="mappingResources"> <list> <value>cn/itcast/shop/user/vo/User.hbm.xml</value> </list> </property>       至此，我们的代码就已经编写完毕了，来看看我们的运行效果，如下所示：                   小编寄语： 这篇博文，小编主要简单的介绍了一下土河使用ajax来完成用户名是否存在的异步校验，总的来说，实现的思路是这样滴`(*∩_∩*)′，首先是由onblur进行事件触发，第二，编写ajax的代码，向action中提交，传递参数username，第三步，编写action，接收username，实现模型驱动配置到spring中，第四步，编写DAO，集成HibernateDaoSupport，在配置中注入sessionFactory，最后编写Service，注入UserDao，还有事务管理，一个简单的demo，还请小伙伴多多指教，SSH网上商城，精彩未完待续~~~ 上一篇 浅谈如何带领好一个团队 顶 1 踩 0 我的同类文章 ● 编程语言 （11） --------【java】 （3） ● 成长之路 （80） --------【项目实战】 （41） ● java之恋 （1） --------【SSH】 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397326次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 43
URL:: http://blog.csdn.net/wangshubo1989/article/details/49284165

ParseText::
为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） 2015-10-20 22:17 2486人阅读 评论 (9) 收藏 举报 分类： 非技术 （7） 作者同类文章 X 我从业到现在已经十年多了，这个问题是我从业五到七八年时最苦恼的话题。当时觉得这个世界太不友好了，互联网这个行业全是年轻人，30岁以上就压力非常大，我缓解这种压力的方式就是每个周末必须得去做一些我认为比较有意义的事。 说到底是因为内心有恐慌，担心有一天会失业，如果失业了一定要给自己找一个后路或者给自己备一技之长，不会因为被互联网淘汰之后收入就锐减。 一、职业焦虑的表层分析 为什么会有这样的焦虑？先做一个表层分析。 我筛选了3个很牛的人，第一个张天一，第二个王信文，第三个09，这三个人都是85后。其中我个人最推崇王信文是，他是刀塔传奇的创始人，据说公司的的月流水已经过两亿。张天一创办了伏牛堂，在业内也有很高的知名度。第三个09是游戏天才，玩DOTA的人应该都听过，几年前已经年薪过千万。 再来说说年轻人比较喜欢哪些产品。这是我从团队里年轻人那里收集的五个LOGO，你认识几个？ 职业恐慌的表象之二，我总结是：似乎开始有点out，惊慌。 互联网的变化太快，不知不觉中，就已经OUT了，太恐怖。就像pony（马化腾）某一次在腾讯内对产品经理们说：你没有错，你只是太老了。 我要问问在座的各位，大家是不是都曾有一个梦想，四十岁以后退休、去环游世界？但是你真的有想过到40岁以后是什么状态吗？下面我列了一些关键词，来给让大家感受一下世界的恶意。 第一个关键词是工作环境。就拿我来说，7*14已经有将近两个月，今天的PPT在上台前两小时还在改。互联网这个行业就是这样，工作苦逼，压力山大，每个人都累成翔。 第二个关键词是人物画像。40岁我们到底是什么状态呢？也许那时候我们还是北漂，没有户口，可能是一个秃顶的中年男人，或者邋遢的中年女人，哦对了，还随身携带游泳圈。这是多么残忍的画面！ 第三个关键词是市场竞争。不知道大家有没有算过，90后在今年已经25岁，你以为他们还是个孩子吗？不，他们已经属于法定的晚婚年龄。现在各大公司入职的应该已经全是90后，就连95年的也已经开始实习。我今年面试了几个实习生，95年的孩子非常有想法，大一开始创业，大二创业失败，人生经历好完整，比我强太多了。 第四个关键词是养家糊口。40岁，想必大家应该都已经成家，以家庭为重心，尤其是男生还是家里顶梁柱，可能面临东西买不起、孩子生得起一个就生不起第二个，甚至连我们的养老金也是空中楼阁，到了60岁，我们是不是已经活不起了？ 二、职业焦虑的深层次原因 上面都是表象，我再归纳一下深层次的原因，看看为什么产品的工作焦虑特别严重？ 第一：我们好像不会什么技能。 大家一定会觉得这些图标很熟悉，从axure往后呢，PS已经属于技能丰富的档次，很多人就是画板或者美图秀秀。如果会Python，那太了不起了，绝对属于技术派产品经理。从技能点来说呢，我们好像真的不是很厉害。 第二：好像看不到什么前景。 工作经验应该在一个行业积累，还是多个？不是每个人都从事着、或者有机会从事着新兴的领域或行业。我有一个做了十年产品的朋友，经验很丰富，但她一直在专注地做PC杀毒引擎，一直一直。那现在我们数数，市面上还在做PC杀毒引擎的公司，唔，不会超过五家。PC，杀毒，还是引擎，加在一起，这会是多么狭窄的一个选择范围。行业的选择对我们来说，很多，但也会很迷茫。 上次我讲完课后，很多人加我微信，大多数人上来就问我，腾讯还要人吗？但大家知道在BAT这类公司里其他人的状态么？很多人并不会觉得BAT有多么好，BAT的人天天都在琢磨从BAT跳出来之后去哪儿创业到哪儿发财。大家各有各的烦恼。 但说到项目前景这件事，可能很多人就有共识了。不是每个人都对项目的发展和方向有认知。而当我们真的遇到一个有前景的项目的时候，又有很大可能会遇到一个傻x的领导。看台下大家都在笑，应该在这个问题上有很多共识。跳槽太频繁不是好事，有的人会从一个行业跳到另一个行业，彼此之间没有太多关联。上次很多人加我微信，问腾讯还要人吗？我觉得很难过，大家都很想跳进BAT吗？其实在BAT里面的人并不会觉得BAT有多么好，BAT的人天天都在琢磨从BAT跳出来之后去哪儿创业。 第三：好像并不能做什么创新。 在我们平常的工作里，我最常看到的一个场景，是一写产品需求，第一件事情就是看一下竞争对手怎么做。第二件事呢，看看国外类似的产品怎么做。美其名曰，竞品分析！这真的是竞品分析吗？竞品的分析，就是把竞争对手是怎么做的，拿过来抄一抄吗？大家愤青一点，就会在各种论坛上骂，中国有不抄袭的公司吗？中国适合创新吗？创新产品在这里有什么作用？ 第四，我们在信息的接触方面，并不能与他人有明显的不同。 理论上讲，已经没有你知道而他不知道的信息。大家接收信息的来源和渠道，越来越趋同。互联网的发展，让信息的传播路径变得前所未有的短。 其次，已经几乎没有不懂互联网的从业者了。信息扁平化严重，信息的分享、观点的发布都非常容易。这让创新的成本在不断下跌。看中国好声音，就有种感觉，唱歌好的人好像越来越多，细想一下觉得这跟中国KTV普及有关系，再加上K歌软件，是个人就能找角落练习。而很多事情，缺乏的只是练习的土壤。只要愿意花精力，就会有机会。在这个信息泛滥的年代谁都可以畅所欲言，而这两个原因，让我们这些在互联网上的idea，越来越没有优势。因此，本质上已经没有没想过的点子，没发表过的观点。 最后一点，资深行业专家呈明显增加趋势。 在垂直行业一直积累的专家们，叠加了互联网的基本技能，他们变成了行业专家，大家看到各种各样的，包括馒头的分享也能看到各行各业的人都有，这里面每个人都有值得学习的地方。 综合来说，我们在本质上，好像很难和别人保持没什么不同。 还有一个行业焦虑的来源，是来自于产品的行业门槛，实在是惊人的低。所有的行业包括传统行业，进入门槛最低的就是中介、销售，以及……产品。 这种行业有一个共性，就是只要想做，谁都可以。我见过的有从英语、数学等专业出来做产品的，有从测试和技术转来做产品的，越来越多的人涌入这个行业，加上这个行业技术门槛比较低，就导致大家压力变得空前巨大。 更残酷的是，在这个行业里，大把比你优秀的人，还比你努力。我举两个例子。 第一个还是来自Pony。在几年前，腾讯输入法其实是腾讯非常小的一个产品，有一天凌晨2点我被拉进微信群，看见Pony发了五条非常细节的建议，包括某个页面的返回键应该放在下面而不是上面，类似这样的点大概五条。最后一条是说我这个人一般比较晚休息，大家如果觉得打扰的话可以先调为静音，明天早上看到后再回复就好。 据不完全统计，pony每天都会进行大量的体验，然后把这些、有的甚至是非常细致的问题，反馈给每个产品团队。 另外一个例子来自于我的一个朋友，他在小米，某天贴了一张图，文字写的是“周六早晨9:30的公司地库”。大家看得出吗？这两辆车都是保时捷。土豪在周末都上班这么早，我们平常人怎么办啊！ 其实身体疲惫并不是太大的问题，最大的麻烦来自于精神层面，你努力了，但是好像并没有什么卵用？总结一下是方向问题。 人的深层次痛苦来自于野心与能力的不匹配，其实这是你焦虑最源头的东西。这也是你进步的动力。 三、怎样摆脱职业焦虑困境？ 在职场，你需要考虑两件事。第一件是清楚知道个人发展，通俗点说，怎么样变成奥特曼？第二个是清楚知道行业发展，怪兽在哪儿？ 首先，谈谈个人发展的提升。 今天在场80后多，我就用圣斗士星矢举例子。 星矢的成长来自于三个最重要的点： 第一个是技能，他熟练掌握天马流星拳这项技能； 第二是心态，他坚持追求目标百折不挠，无数次被打到半死，无数次爬起来； 第三是阶段，他对自己的状态非常清楚，挑战是从白银打到黄金再到海王冥王，他虽然是跨级挑战，但对自己所处的阶段有一个很清晰的认知，如果漫画一开始就去挑战关底boss，一定不会有什么好结果的是不是？ 我们先展开技能篇。 从业十年，我的面试题目基本没有太大变化。第一你有理想吗？第二你有特长吗？爱好是什么？第三个问题和别人比，你有不同吗？你比别人更适合做这样工作的优势是什么？ 第三个问题其实切入的是不同的层面，理想是你的未来，特长是你的现在，不同是你对自己的认知。表面上这只是三个好像很无关的问题，但从这三个问题的答案，可以了解到你对自己的状态是否有清晰的认知。 为什么这三个问题很重要？ 有一个来自我们公司vp的答案，我觉得可以比较好地诠释为什么：自省的时候，要区分这个是你长板、短板还是瓶颈？之前我们一直说，要把自己的短板补齐，但到了快速变化的移动互联网时代，职场上越来越少有人在乎你的短板有多短，而是看重你的长板到底有多长，能发挥多大核心价值，能怎样解决瓶颈问题。而面试者对于问题的答案，在我看来，是对于自己认知很好的问法，也是很好的考察切入点。 四、产品素质模型的核心 我提炼了一下产品素质模型的核心，基本总结为这四点。 第一点：洞察力，从纷乱复杂表象中洞察到最深层次的原因。 之前在搜狗做探索引擎，这是一个特别前瞻的项目，简单来说就是类似google now，在用户的浏览页面中，推荐相关阅读。由于这种推荐并不是基于简单的关键词相关的，例如像现在搜索框里输入关键词就会有下拉的suggestion提示。这种推荐有一些语义上的跳跃、但对于人来说很好理解。例如用户浏览一个普吉岛的攻略，你给他推荐一个去那里的特价机票很便宜，快去来一场说走就走的旅程吧！ 刚启动这个项目的时候，很多人觉得这个事儿很难做，团队说应该怎么开展这个工作？我给大家的回答是先去看用户session。所谓用户session，就是一个用户在浏览页面的详情，在搜索花了多长时间，进行了翻页还是滚屏，在哪儿点击，在哪儿消费。 我有一个印象深刻的case，一个用户在淘宝页面看了一下午运动鞋，她试图换各种各样关键词搜索想要的运动鞋，比如耐克、粉色、37码等等，用尽各种办法，最后应该是快要下班的时间，她花了不到三分钟，跳转了三个页面：搜索页、商品详情、付款，买了一个净化器。 我相信很多男性是不能理解女人的购物思维的，就像他们不能理解，为什么淘宝的购物车上限是99，但多数女人常年都是满的状态一样。所以从很多的表象中，我们需要去深刻洞察，才能更好地理解站在这些现象背后的，人的基本情况。 第二个重要能力是同理心。 所有产品经理都知道一些很流行的词，比如用户痛点啊，用户价值啊，需求啊之类的，天天挂嘴边。但我们认真反省一下，你真的是站在用户角度去思考吗？ 这个我借微信的案例来分享一下吧。最近跟他们团队有深入的业务接触，他们给我冲击真的很大。每个人，完成每一个功能，都充分的思考了用户在这个场景中的各种玩法，不打磨到极致，就不上线。 大家可能有不服，不妨问自己一个问题，当KPI与用户价值冲突的时候，你会选哪个？很多人都会说可能选KPI，然而微信却选择的是用户价值，最难的是他们团队规模已经到了一两千人的时候，他们还能做到每个做产品的人都这样想，这是微信团队非常牛的地方。 第三个是归纳能力。 我们应当拥有比较清晰的逻辑，这是必然的。做产品必须跟开发打交道，你没有逻辑支撑、过分跳跃开发是不会认可的。 第四个跟上一个一起说，即演绎能力。 很多人只有归纳过程，没有思考过程，我认为产品需求不是来自归纳，如果来自归纳这个世界上的产品需求早被做完了，其实在很多地方需要跳跃。那这种跳跃完毕后再倒推回去的部分，就是演绎。 上面这这四个就是产品素质模型最重要的核心，如果同时具备这四个素质，那恭喜你，你非常适合做产品。 五、从素质模型映射到性格 优秀产品经理的性格表现为： 第一爱好广泛，有N技之长，对于很多共性的美的东西，比如音乐、艺术，有欣赏能力。 第二容易被故事打动，有感性层，这样容易有同理心，可以更好地换位思考。 第三理智冷静，做事讲究条理，有强迫症这种美好品质，遇到挫折不放弃有韧性。 第四在性格层面有分裂，随意，天马行空的部分，这是你做到思维跳跃的基础。 究其根本原因，因为产品并不是一个依靠理性、逻辑来开展的工作，需要非常多想象力和感性的感知能力。 那也许有大部分人觉得，自己没有命中以上所有的类型。不用担心，往大了说，产品行业有策划、运营、数据等等分支。拿具体的产品策划来举例，在其中还有更的多细分，比如商业型，策略型，客户端型，他们对于能力模型的要求都会不一样。 今天来了很多从业者，在这里给大家一个建议，如果跨行业跳槽，最好是在一个垂直维度，大家在自己行业纵深维度跳比较好，例如你可以从百度凤巢的商业产品经理，跳去类似58这种做垂直的O2O。 当然，最重要的是找到自己最适合的，比如策略型产品其实需要跳跃能力不会很强，要的是非常强的数据挖掘能力和推理能力，逻辑要非常严密，非常精确，这样才能够和团队有非常好的配合，把整个策略做得非常好。 所以，大家需要对自己正在从事的产品行业，有一个很清晰的认知。尤其在我们刚刚踏入职场的时候，一定找到最适合自己发展的细分市场，就像产品一样，基调对了，后续才能有更长久的发展。 六、心态篇：心态的修行 再来说说心态篇，这有一点鸡汤的意思。但如果鸡汤你只当作鸡汤看，那就只能是碗汤了。如果你能对其中的道理有所感悟，那会有很多的帮助。 很多人讲机会，其实有没有想过，我们每一天都是做选择，比如你开一个会，你在会上表现的沉默还是表现积极，今天的方案给的是偏保守还是很激进，工作里的每一步，都是选择。选择会累积变成机会，机会最终会引发质变。机会来自量的积累，机会不是说来就来的。 每一个成功都不是偶然，我接触的大神没有那么多，比较深刻的就是微信和应用宝，以他们的个人思维，以及团队的整体状态，成功绝对不是偶然。大神之所以成为大神，就是这个人哪怕不从事产品这个行业，他们在别的行业也一定也会做到顶尖。 能够掌控大局的人应该具备三个能力： 一个叫做有激情，有激情代表你好学程度，对知识渴望度。 第二个大局观，在快速发展行业里面，如果你看的只有眼前的事是做不了大事的。 第三个有担当，当老板真的问责这个产品不好是产品经理问题的时候可以勇敢站出来。只有正视自己问题的人才能把问题改掉，发生不好事情的时候都在拼命往别人身上推其实是放弃自己改变的机会，这三个点送给大家。 七、产品经理的四大阶段 最后说一下阶段篇，我们做产品的每个人都需要很了解自己当前处于一个什么状态，而且知道下一个阶段是什么样子，这样就有一个很清晰的目标，才会更好的提升。在这里对产品阶段做一个总结，分成四个阶段。 第一个阶段需求入门。一般是从业1到3年的产品经理，能够把中度以下的复杂需求拆解成文档，关键问题不返工，上线以后这个点子有效果。特别要注意一下，我在这里说到的是结果有效，而不是过程的衡量。 第二个是需求初阶。能把非常复杂的需求拆解完整，逻辑是完整的，需求是靠谱的。 第一和第二个阶段和在一起，我把它叫做“管中窥豹”阶段，由于只是局部的理解，所以难免是“可见一斑”。 第三是需求中阶。能把目标方向落实成规划，并从规划进一步拆解成版本，这是规划级的产品阶段，在这个阶段，基本可以cover住一个中小型产品了。我起了一个比较通俗的名字，“见山是山”。 最后一个是需求高阶。我自己也正在摸索，所以在这及以上都只能草草概括。这个阶段的核心是搭建产品架构，我认为本质就是洞察人性、返璞归真的阶段。这种类型的高手，可以在非常复杂的线索中，找到最关键的点，构建整个产品架构。架构级是“见山不是山”的状态，在高手的解构中，山已经不是具体的山，而是一条条非常清晰的路径，以及在这个路径中看到的风景。 今天时间有限，我主要来对第一第二阶段进行详细拆解。门外徘徊以及刚进门的地方基本都属于第一阶段，入门级。之前老批评我们团队的人，很多刚刚毕业不久的人，需求写的很学生气。 第一是没有用户需求分析，他们觉得自己有，但是在我眼里不是用户需求分析，只是自己代入的yy。 第二是容易在不必要地方做过多展开，我们做产品时候很容易自嗨，拿到一个点觉得这个点做得实在太牛，太完美了，必须做非常好的图，用大段文字描述，在不必要地方做过多的准备工作，却略过了核心逻辑、推理的阐述，在我看来有一点本末倒置。 第三大家刚刚走上这个产品经理的岗位，不知道经理这个title是否容易造成一些错觉，所以这种身份上的惯性，让大家很在意自己的身份，恨不得在每一个地方都体现我这个产品经理的话语权，权威性。拿到需求，更多的是直接从资源角度分析，大战略分析，而不是用户的维度。 需求初级：为什么你仍在原地徘徊？ 工作两三年的人，这个阶段最需要就是进阶。在这个阶段会有一种疲惫感，觉得我为什么感觉到好像没有进步？我一直在止步不前，为什么一直都是这样样子？ 这时候你就要问自己，第一个问题 ，你的思维结构是什么样的？线性的？面性的？还是有结构的？思维的高度决定了你的进展阶段。 第二个问题，你真的理解，“表达好”是什么意思吗？很多人在面试，我问到“你觉得产品经理最重要素质是什么的时候”，90%的人都会回答沟通能力。其实我觉得大家对于沟通能力的理解很片面，沟通能力本质上来说不是技巧的事情，是你思维逻辑架构问题，很多时候沟通不清楚不是态度不好，而是因为我们思维组织方式，和对面听的那个人并没有处在一个可以对话的状态中。 第三个问题，你在职业生涯中立足根本点是什么？清楚吗？回归之前面试的问题，还记得我的切入点么？你做的事情和擅长的事情匹配吗？这个事情要有深刻认知。 在我们做版本规划的过程中，工作两到三年的人可能很多都有这个经验，写一篇满满当当、时间安排的非常周密的计划书。乍看上去似乎没问题，但事实上，思维真的清晰吗？ 很多项目计划，在我看来只是罗列，你项目关键节点是什么？关键节点的一二三四五之间，有关系吗？有主线吗？作为产品，上来先去写项目计划，压根没有提你的产品需要满足的用户需求是什么？你在半年时间之内需要给用户带来什么体验？回归到用户价值，这才应该是产品主线。 八、长跑鞋里的沙子 执行力是具备想象力人的最大敌人。执行是非常重要的事情，大家很多时候提到微信都说产品怎么讲，怎么样，我强烈建议大家拿微信最早的发版时间表对一下，研究一下那个时候，微信团队是以一种怎样的版本姿态，与市场争分夺秒的。执行力是一切工作的前提，没有这个，不要去提产品设计。有好点子怎么样，没有执行力一切都是空谈。 在漫长的职业生涯中，大家要保持足够的好奇心。好奇心短时间内比较好保持，但长时间真的很难。愿意主动学习的人其实很少，我经常给身边人推荐很多书，但是效果不是很好，我思考过这个问题，为什么大家不愿意学习？后来想明白是，你如果没有碰到一个问题，不希望去通过书本找到答案，就不会想去学习。 学习是非常累人的事情，大家要找到好奇心，愿意立足那个点，从那个地方切入更好，而不是人云亦云，今天网上公布个马云的书单，明天出个马化腾的书单，大家就开始看，这不会有效果，你读完了就忘记了。 再说到洞察力，今天我强调了很多次，这个品质对于产品人来说的重要性。我在这里说的洞察，并不是简单的场景联想，你看到一个扶梯，说“啊这个设计部符合人体工学”，这种现象级的联想太浅层。我想问问在座的各位，你们在新产品中做过新手教学么？做过产品引导么？为什么要做呢？ 如果你们自己都不热爱学习，为什么让用户来学习？所以我特别认同张小龙分享中提到的，凡是给用户设置新用户引导以及新用户流程教学都是非常反人类做法，自己都不爱学习为什么把学习强加在用户身上。 刚才讲的是个人发展的部分，接下来是行业的部分，由于篇幅有限，只能后面找机会跟大家分享，行业变化特别快，日新月异，每个人都要保持非常清醒的状态才能在这个行业中不断发展。 九、需求常见误区 最后分享一些压箱底的话，所谓需求常见误区。 第一个，不做竞品调研。从业多年，这个案例实在碰到的太多，产品做完需求，拿到大老板手上，他先不看你是怎么想的，而是问你百度说怎么做的？腾讯是怎么做的？淘宝是怎么做的？这种文化氛围，或者说这样一个领导原则、指导原则，有非常大的问题。我相信在座的很多人，职业生涯刚起步都是做竞品分析。我觉得这个真的是非常不好的习惯。 当你调研竞品的时候，你的市场，你的目标就已经被限制在研究和模仿的竞品里了。然而很多时候的颠覆，并不是来自同一维度，就像朋友圈颠覆微博，不是一个直接竞争关系，所以竞品调研这件事情大家一定要非常谨慎。 那么不做竞品调研，应该做什么呢？要做竞品洞察。 还是举微信的例子，龙哥讲一个事情特别有感触，说你要去观察用户潮流中用户怎么用，比如他们当时观察微博的时候，主要看大家发贴时间，大家发贴文字类型等，你到底想做别人眼中的你还是自己眼中的你，从这个去佐证，观察用户潮流，而不是去看新浪微博有什么功能，腾讯微博有什么功能。这种模仿太初级。 洞察解释的是为什么，而不是如何。 我这两天看一本书《人类简史》，觉得很好，有人类起源方面的疑惑可以看一下。比如我们知道这个朝代后面跟这个朝代，我们知道是这样，但是不知道为什么？不知道为什么这样的时候，这个事情背后的逻辑是不能很好地理解到的。我觉得如果你做竞品抄袭，你真的抄的非常皮毛。 十、不要做发散性用户访谈 还有一个需求常见误区是不要做发散性用户访谈，用户访谈像薛定谔的猫，当观察者对用户进行扰动时，已经意味着没有正确答案。大家回头看一下薛定谔的猫的详细理论，在这里不赘述。用户层面也要做洞察，我是一个圈，我们之外还有一个圈，由于人性天然的排他性，我们会在潜意识中忽略掉非自己的同类——他们。对于广大用户来说，都是被你划在我们这个圈之外。 我们对“我”的认知，远比潜意识想的还要大，产品经理在代入一个群体以后，会把“我”这个层面的东西放大，然而，打上标签的“我们”，数量远比想象中小，平常讲“我们有共性”，“有好奇心”，“我们都很潮”，“都是怎样怎样”，其实这个标签命中的人员很少，更大的范围，是未知的“他们”。 因此，产品要保持敬畏心。不要轻易带入自己，而是做好用户洞察，去理解好“他们”是怎么想的。 还有一个误区，很多人讲做产品要考虑技术问题。 我始终跟团队灌输一个理念，写需求的时候一定不要考虑技术问题。当你在做方案的时候，你有太多技术层面的想法，带太多实践层面想法做出来一定是妥协方案，如果做一个妥协方案，最后失败了，怎么会清楚知道自己的想法在哪个地方出错了？对于资源、技术能力，实现情况等，不要做这些东西考虑，这样产物一定不好的东西，不代表你的水准，所以一定要做对用户来说的完美设计，不要做太多复杂的想象。 最后送大家一句话：我觉得成功对于每个人来说，可能都只是一个非常短暂的过程，一般人到一个台阶之上，想的一定是我下一个阶段在哪里？下一个路口应该怎么走？所以我自己觉得痛苦不过是人生常态，快乐不是短暂节点，人生是一场修行，经历过这样的修行之后，我相信大家会找到自己在这个行业可以长久立足的点。 这个可以支撑的东西，不会因为五年之后到30岁、甚至年纪更大一点就会失去，它是一种成长在你内心的东西，是你对未来生活的把握，是你对现在自己的认知，是你对整个世界的理解和好奇。 相信大家一定会在修行的过程中，找到自己的答案。 上一篇 浅析C++中的打开文件、保存文件（OPENFILENAME） 下一篇 win32程序判断windows系统（是否为win7或是更高版本） 顶 8 踩 0 我的同类文章 非技术 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort())

Recno:: 44
URL:: http://blog.csdn.net/wangshubo1989/article/details/49647919

ParseText::
没有躲过的坑--指针（内存泄露） - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 没有躲过的坑--指针（内存泄露） 标签： c++ 2015-11-04 23:47 1382人阅读 评论 (3) 收藏 举报 分类： C++ （147） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 C++被人骂娘最多的就是指针。 夜深人静的时候，拿出几个使用指针容易出现的坑儿。可能我的语言描述有些让人费劲，尽量用代码说话。 通过指向类的NULL指针调用类的成员函数 试图用一个null指针调用类的成员函数，导致崩溃： #include <iostream> using namespace std; class A { int value ; public : void dumb () const {cout << "dumb()\n" ;} void set ( int x) {cout << "set()\n" ; value =x;} int get () const {cout << "get()\n" ; return value ;} }; int main() { A *pA1 = new A; A *pA2 = NULL; pA1->dumb(); pA1-> set ( 10 ); pA1-> get (); pA2->dumb(); pA2-> set ( 20 ); //崩溃 pA2-> get (); return 0 ; } 为什么会这样？ 通过非法指针调用函数，就相当于给函数传递了一个指向函数的非法指针！ 但是为什么pA2->dumb()会成功呢？ 因为导致崩溃的是访问了成员变量！！ 使用已经释放的指针 struct X { int data; }; int foo() { struct X *pX; pX = (struct X *) malloc(sizeof (struct X)); pX->data = 10 ; free(pX); ... return pX->data; } 使用未初始化的指针 如果你这样写，编译器会提示你使用了未初始化的变量p。 void fooA() { int *p ; *p = 100 ; } 那么如果我释放一个初始化的指针呢？ void fooB() { int *p; free (p); } 结果是一样的！！ 释放已经释放的指针 直接看看代码： void fooA() { char *p; p = ( char *) malloc ( 100 ); cout << "free(p)\n" ; free (p); cout << "free(p)\n" ; free (p); } 这样的问题也许不会立即使你的程序崩溃，那样后果更加严重！！ 没有调用子类的析构函数 之前的博客讲过，父类的析构函数最好声明为虚！！ ParentClass *pObj = new ChildClass; ... delete pObj; 上述代码会造成崩溃，如果父类的析构函数不声明为虚，那么不会调用继承类的析构函数，造成内存泄露。 内存溢出 当我们拷贝字符串的时候，我们常常会用到 memcpy函数。这里特别需要注意的就是字符串结尾的null字符： char *p = ( char *) malloc ( strlen (str)); strcpy (p, str); 为了躲过这个坑，只需要把 strlen(str) 改为 strlen(str)+1。 上一篇 C++11新特性之 CALLBACKS 下一篇 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） 顶 1 踩 0 我的同类文章 C++ （147） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 wangshubo1989 访问： 127098次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14146 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 45
URL:: http://blog.csdn.net/wangshubo1989/article/details/49722115

ParseText::
C++11新特性之 std::array container - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 C++11新特性之 std::array container 2015-11-08 21:37 1512人阅读 评论 (3) 收藏 举报 分类： C++ （147） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 数组每个人都很熟悉，vector更是我们常常用到的。 但是某些场合，使用vector是多余的，尤其能明确元素个数的情况下，这样我们就付出了效率稍低的代价！ 但是你使用数组的代价是那么的不安全，那么的不方便。 于是，C++11推出了模板类array，位于std名称控件中。 与vector不同的是，array对象的长度是固定的，使用了静态存储区，即存储在栈上，效率跟数组相同，但是更加的安全。 首先需要包含头文件array，而且语法与vector也有所不同： #include<array> ... std :: array < int ,5> ai; //创建一个有5个int成员的对象 std :: array < double ,4> ad = { 1.2 , 2.1 , 3.1 , 4.1 }; 顺便提一嘴，C++11允许使用初始化列表对vetcor和array进行赋值，详情请见博客《 c++11特性之initializer_list 》 个人觉得array相比于数组最大的优势就是可以将一个array对象赋值给另一个array对象： std :: array < double , 4> ad = { 1.2 , 2.1 , 3.1 , 4.1 }; std :: array < double , 4> ad1; ad1 = ad; 数组索引越界也是我们往往躲不过的坑儿，array和vector使用中括号索引时也不会检查索引值的正确性。 但是，他们有一个成员函数可以替代中括号进行索引，这样越界就会进行检查: std :: array < double , 4> ad = { 1.2 , 2.1 , 3.1 , 4.1 }; ad[- 2 ] = 0.5 ; //合法 ad.at( 1 ) = 1.1 ; 使用at()，将在运行期间捕获非法索引的，默认将程序中断。 最后上一段代码： #include <string> #include <iterator> #include <iostream> #include <algorithm> #include <array> int main() { // construction uses aggregate initialization std :: array < int , 5> i_array1{ { 3 , 4 , 5 , 1 , 2 } }; // double-braces required std :: array < int , 5> i_array2 = { 1 , 2 , 3 , 4 , 5 }; // except after = std :: array < std :: string , 2> string_array = { { std :: string ( "a" ), "b" } }; std :: cout << "Initial i_array1 : " ; for ( auto i: i_array1) std :: cout << i << ' ' ; // container operations are supported std ::sort(i_array1.begin(), i_array1.end()); std :: cout << "\nsored i_array1 : " ; for ( auto i: i_array1) std :: cout << i << ' ' ; std :: cout << "\nInitial i_array2 : " ; for ( auto i: i_array2) std :: cout << i << ' ' ; std :: cout << "\nreversed i_array2 : " ; std ::reverse_copy(i_array2.begin(), i_array2.end(), std ::ostream_iterator< int >( std :: cout , " " )); // ranged for loop is supported std :: cout << "\nstring_array : " ; for ( auto & s: string_array) std :: cout << s << ' ' ; return 0 ; } 上一篇 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） 下一篇 C++11新特性之 nullptr 顶 2 踩 0 我的同类文章 C++ （147） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 wangshubo1989 访问： 127097次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14146 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 46
URL:: http://blog.csdn.net/wangshubo1989/article/list/16

ParseText::
wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 WPF图片浏览器（显示大图、小图等） 1.概述                 最近利用WPF做了一个图片浏览器，能够将文件夹中的所有图片以小图的形式显示，并将选中的图片以512*512大小显示。显示大图当然用的是WPF自带的Image控件，而显示小图则需要将所有的图片放入ListBox控件中，ListBox里的每一个Item为Image控件。为了方便显示多张小图，在ListBox控件外加入了ScrollViewer控件，以便可以... 2015-07-07 08:51 阅读 (417) 评论 (1) WPF图片浏览器之删除图像功能（彻底删除和删除到回收站） 用WPF做了一个图片查看器。初始化程序后，通过一个Listbox 将指定文件夹的Image加入界面上，并可以对加载的图片进行一系列的操作。比如删除操作。     之前在文章http://blog.csdn.net/wangshubo1989/article/details/46560375中讲过，如何解决Image控件的BitmapImage资源占用问题。解决了该问题，就可以对加载到界面上的图像... 2015-07-01 15:01 阅读 (223) 评论 (1) C#(WPF)程序将Debug中的.exe文件放入注册表中启动，获取错误的当前路径--解决方案 编写的程序需要开机运行，又不想进入win7的桌面。这样可以通过修改注册表，把原来的explorer.exe换成需要启动的软件。 注意，比如.exe文件存在于D盘的Debug文件夹中，则用 D:\\Debug\\MySoftWare.exe替换 explorer.exe。 但是一定要注意的是，尽量不要有中文文件夹。      但是在该程序代码中需要获取当前路径，即在程序初始化的... 2015-06-27 12:44 阅读 (317) 评论 (1) C/C++语言字符串操作总结大全(超详细) 字符串操作 strcpy(p, p1) 复制字符串 strncpy(p, p1, n) 复制指定长度字符串 strcat(p, p1) 附加字符串 strncat(p, p1, n) 附加指定长度字符串 strlen(p) 取字符串长度 strcmp(p, p1) 比较字符串 strcasecmp忽略大小写比较字符串 strncmp(p, p1, n) 比较指定... 2015-06-23 21:43 阅读 (384) 评论 (1) WPF的Image控件使用BitmapImage的资源占用问题 在WPF中，想要使用Image控件，并将图片导入Image控件中，显示在界面上。因此可以通过BitmapImage作为Image控件的源。     因此，可以这样做：  BitmapImage bitmapImage = new BitmapImage(); //初始化BitmapImage类的一个新实例  Image image1 = new Image(); //定义一个Image控件 ... 2015-06-19 12:47 阅读 (262) 评论 (1) MFC操作SQlite，打开数据库路径存在中文，解决方案 MFC操作打开SqLite数据库，其中szDBFile为数据库所在的位置。最开始使用的相对路径，即szDBFile永远等于“HData.zip”。但是尤其设备需要，需要把.exe文件放入开机启动的shell中。这样使用相对路径就会产生错误，即需要给szDBFile赋值绝对路径。此时，如果全路径包括汉字，那样sqlite3_open_v2（szDBFile, &m_sq3DB, SQLITE_O... 2015-06-16 12:38 阅读 (276) 评论 (1) C#调用C++DLL出现的堆被损坏，说明加载的任何DLL中有Bug 很多系统底层使用C++(MFC)，界面使用C#（WPF）技术。这就要运用大量的导入导出函数，在C#中调用C++中的函数。由于C#是托管代码，摒弃了C++中“危险”的指针，所以在传递字符串的时候造成一些的问题。尤其是在MFC中字符串声明为CString类型，导出函数的返回为char*类型。常规的C#中需要使用string来代替从C++ DLL中导入的带有char*类型的函数。这就造成了隐患，会产生很多致命的BUG C#调用C++DLL出现的堆被损坏，说明加载的任何DLL中有Bug。... 2015-06-16 09:12 阅读 (517) 评论 (3) 232条数据 共16页 首页 上一页 ... 16 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14146 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 47
URL:: http://blog.csdn.net/wangshubo1989/article/list/3

ParseText::
wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 实战c++中的string系列--std:vector<char> 和std:string相互转换(vector to stringstream) 有时候也会遇到std:vector与转std:string 相互转换的情况。首先看一下vector如何转string：std::vector *data = response->getResponseData(); std::string res; //方法一 for (int i = 0;isize();++i) { res+=(*data)[i]; }... 2015-12-12 13:30 阅读 (1017) 评论 (0) 实战c++中的string系列--string到LPCWSTR的转换 今天再来介绍一下如何从string到LPCWSTR的转换。LPCWSTR是什么类型呢？ 看看如何定义的：typedef const wchar_t* LPCWSTR;顾名思义就是： LPCWSTR是一个指向unicode编码字符串的32位指针，所指向字符串是wchar型，而不是char型。比如说MessageBoxW的第二、第三个参数就是LPCWSTR类型。`MessageBoxW(__in... 2015-12-12 12:40 阅读 (970) 评论 (0) 实战c++中的string系列--std::string与MFC中CString的转换 搞过MFC的人都知道cstring，给我们提供了很多便利的方法。CString 是一种很有用的数据类型。它们很大程度上简化了MFC中的许多操作，使得MFC在做字符串操作的时候方便了很多。不管怎样，使用CString有很多特殊的技巧，特别是对于纯C背景下走出来的程序员来说有点难以学习。但是很多情况下，我们还是需要cstring和string的转换。 分两步： 1把cstring转为char数组... 2015-12-12 12:36 阅读 (1026) 评论 (0) 实战c++中的string系列--string的遍历(使用下标还是iterator) 迭代器提供了访问容器中对象的方法。例如，可以使用一对迭代器指定list或vector中的一定范围的对象。迭代器就如同一个指针。事实上，C++的指针也是一种迭代器。但是，迭代器也可以是那些定义了operator*()以及其他类似于指针的操作符地方法的类对象.我们都知道可以用下标运算来访问string对象和vector对象。而另外还有一种更通用的方法也可以实现这样的方法。名曰：迭代器（iterator）... 2015-12-12 00:19 阅读 (1188) 评论 (0) 实战c++中的string系列--string的初始化、删除、转大小写(construct erase upper-lower) string是有迭代器设计模式的，我还没有体会到迭代器带给我的好处，很多时候使用类似数组索引的方法就可以完成任务。场景1：删除string所有的大写字母 这里用到erase方法：#include #include #include using namespace std; int main() { string str... 2015-12-11 21:28 阅读 (1079) 评论 (0) 实战c++中的string系列--string的分割、替换(类似string.split或是explode()) 对一个字符串根据某个字符进行分割也是在实战中经常遇到的问题，也是面试中经常会被人提及的。如果你是个C Sharp程序员，你会知晓string.split函数，有下面这些重载： 1) public string[] Split(params char[] separator) 2) public string[] Split(char[] separator, int count) 3) pub... 2015-12-10 23:58 阅读 (769) 评论 (0) 实战c++中的string系列--string的替换、查找(一些与路径相关的操作) 今天继续写一些string操作。 string给我们提供了很多的方法，但是每在使用的时候，就要费些周折。场景1： 得到一个std::string full_path = “D:\program files\csdn”，但是我想得到”D:\program files\vagaa”这个路径。 这就需要字符串的替换std::string full_path = "D:\\program files\... 2015-12-10 21:48 阅读 (664) 评论 (0) 实战c++中的string系列--指定浮点数有效数字并转为string 上一篇博客讲了好几种方法进行number到string的转换，这里再单独说一下float或是double到string的转换。还是处于控件显示的原因，比如说要显示文件的大小，我们从服务器可以获得这个文件的总bytes。这样就需要我们根据实际情况是显示bytes、kb、mb等单位。常用的做法就是把num_bytes/1024，这个时候往往会得到浮点型，浮点型转string也没问题，但是如果你需要保留这... 2015-12-09 21:51 阅读 (1054) 评论 (0) 实战c++中的string系列--string与整型或浮点型互转 教科书中很少会提到string与int或是float的相互转换，但是在实际工程中会经常遇到，尤其在做UI控件显示的时候。比如说你要在edit控件中显示一个数值，那你就需要把这个数值首先转为string，然后再将这个string付给edit控件。网上你会找到很多的转换方法，个人觉得效率差不多的情况下，简洁最好。这里主要用到的是stringstreams：stringstream 是 C++ 提供的另一... 2015-12-09 21:32 阅读 (819) 评论 (0) 每次使用都要去Google的基础知识--.lib与.dll 应该很多人对lib和dll理解的不够深刻，今晚就八一八。主要参考链接： https://www.cppfans.org/1394.html http://www.codeproject.com/Articles/9087/Our-journey-from-EXEs-LIBs-DLLs-COM-to-AssembliesLib称为静态链接库(static link library)，是在编译的链接... 2015-12-07 23:06 阅读 (709) 评论 (0) 一起学libcef--一个应用libcef的简单例子（windows程序） 之前博客《一起学libcef–搭建自己的libcef运行环境（Win32程序，错误C2220解决方案）》讲述了如何在win32程序中搭建libcef的环境，今天就通过一个简单的例子，在windows程序中使用libcef。现在再重新写一下如何搞？直接在源代码上搞起！ 1 打开源码cefclient解决方案 2 确保cefclient例子可以完美运行 3 在cefclient中，除了util.h... 2015-12-06 23:01 阅读 (822) 评论 (0) 一起学libcef--libcef的基本类和方法介绍（如何产生一个你自己的浏览器） 现在还是在win32项目的基础上，对libcef进行简单的剖析。注意是针对WinMain函数中libcef的类以及方法的介绍。首先上一段代码：#include #include "cefsimple/simple_app.h"// Entry point function for all processes. int APIENTRY WinMain(HINSTANCE hI... 2015-12-05 21:45 阅读 (1051) 评论 (0) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） 现在就来讲讲如何在自己的win32程序中搭建libcef运行环境。首先就是建一个空的win32项目，例如名字为TestLibCef。1. cefsimple目录（注意是拷贝文件夹）拷贝到新工程下并包含在项目中（注意，是TestLibCef\TestLibCef文件夹下）2. 并在TestLibCef\TestLibCef文件夹下，新建一个dll文件夹 源码把Debug目录下的文件全部拷贝到该文件夹... 2015-12-04 22:10 阅读 (1015) 评论 (4) 一起学libcef--源码文件介绍(VS2015运行DEMO) 昨天的博客《一起学libcef–开篇(下载、CMake的使用)》讲诉如何下载CEF，并如何得到对应vs版本的解决方案。今天就展示一下，得到的工程文件夹中文件的作用。include – 这个文件夹里面放CEF客户应用程序所需的头文件 libcef – 此文件夹存放CEF的静态库 libcef_dll – 此文件夹CEF的动态拉链库 tests – 此文件夹存放测试的例子 cef... 2015-12-04 20:57 阅读 (804) 评论 (0) 一起学libcef--开篇(下载、CMake的使用) 微信、qq等很多windows客户端都用到了libcef.dll，从现在开始准备学习学习。1.什么是libcef Chromium嵌入式框架对于嵌入chromium浏览器的其他应用程序来说是一个简单的框架。。其遵循建立于2008年Marshall Greenblatt 的BSD许可协议。基于Google Chromium工程。不像Chromium工程本身，主要集中开发Google Chrome应用... 2015-12-03 22:08 阅读 (945) 评论 (0) 232条数据 共16页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 wangshubo1989 访问： 127098次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14146 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 48
URL:: http://blog.csdn.net/wangshubo1989/article/list/4

ParseText::
wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 没有躲过的坑--你开发的软件安装在C盘Program Files (x86)下产生的异常 今天偶然发现的问题，就是自己写的win32程序安装在C盘Program Files (x86)文件夹下就会产生异常，而安装在其他文件夹，即使是D盘的Program Files (x86)下，程序也可以完美运行。引起这个，肯定是权限的问题。这个软件运行时，需要读写数据库，以及各种缓存数据。这就是我给自己挖的一个坑儿，相信很多人也会遇到这个问题。就是在开发程序、VS调试的时候，总喜欢使用当前路径，或者是... 2015-12-03 20:46 阅读 (671) 评论 (0) 没有躲过的坑--std::string初始化、最快速判断字符串为空 之前说过，记得给变量初始化。今天突然想到了一个问题，如果声明了一std::string类型，怎么初始化呢？std::string test_string; std::string test_string_empty = ""; std::string test_string_null = NULL;//运行错误，而非编译错误简单测试：#include int main() {... 2015-12-03 00:47 阅读 (1466) 评论 (1) 没有躲过的坑--0xC0000005: 读取位置 xxx时发生访问冲突 Bjarne Stroustrup老爷子说过： “C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do it blows your whole leg off.” 最近的工程时不时的出现0xC0000005: 读取位置 xxx时发生访问冲突，导致崩溃。先看看下面的程序：#includ... 2015-12-01 22:57 阅读 (981) 评论 (0) 没有躲过的坑--C++函数的默认参数（重新定义默认参数） 默认参数指的是当函数调用中省略了实参时，自动使用一个值。这里首先需要注意的是： 对于带参数列表的函数，必须从右向左添加默认值。 也就是说，要为某个参数设置默认值，则必须为它右边的所有参数提供默认值。今天遇到的坑儿，就是函数使用默认参数，并且函数的声明和定义是分开的。char* left(const char* str, int n=1); int main() {}char* left(cons... 2015-12-01 21:06 阅读 (676) 评论 (0) 没有躲过的坑--vector使用erase后迭代器变成野指针 vector上镜率非常高，但是最近又被他fuck了一下。使用的就是vector的erase方法。erase–return value 首先需要明确一下vector的两种erase：C++98中是这样的：iterator erase (iterator position); iterator erase (iterator first, iterator last)C++11是这样的：iterat... 2015-11-30 23:38 阅读 (818) 评论 (0) 没有躲过的坑--没有及时break出for循环 break这个词都不陌生，最常用到的就是在switch语句中。如果在switch的case后面忘写了break，就会顺序执行到下一个case的对应的语句。我说的这种情况只是对于C++，对于C Sharp如果忘记了break，编译器是会报错的。仔细想想，好像自己还真没有用过break在其他地方。导致自己又掉入了一个大坑中。比如使用一个for循环查找数组中所要的元素中your_find对应的索引：int... 2015-11-30 21:19 阅读 (828) 评论 (1) 没有躲过的坑--使用太多的全局变量 最近在工程中为了达到目的，使用了很多全局变量，导致程序运行效率降低。在程序运行时，根据需要到内存中相应的存储单元中调用，如果一个变量在程序中频繁使用，例如循环变量，那么，系统就必须多次访问内存中的该单元，影响程序的执行效率。因此，C\C++语言还定义了一种变量，不是保存在内存上，而是直接存储在CPU中的寄存器中，这种变量称为寄存器变量。总觉得有些太low，就Google了一番。首先我们清楚，有个叫寄... 2015-11-30 20:54 阅读 (659) 评论 (1) 没有躲过的坑--new一个指针数组、以及创建动态二维数组 实际工作中，有一个类A，现在需要使用多个A对象的指针，这是时候，首先想到的就是指针数组。———————————————————————————————————————————— 指针数组与数组指针 首先，指针数组和数组指针有何区别是老生常谈的东西： 看中文不方便，看看英文描述：指针数组：array of pointers，即用于存储指针的数组，也就是数组元素都是指针 数组指针：a point... 2015-11-26 22:19 阅读 (700) 评论 (0) 没有躲过的坑--使用using namespace std的坏习惯 使用命名空间的目的是对标识符的名称进行本地化，以避免命名冲突。在C++中，变量、函数和类都是大量存在的。如果没有命名空间，这些变量、函数、类的名称将都存在于全局命名空间中，会导致很多冲突。比如，如果我们在自己的程序中定义了一个函数toupper()，这将重写标准库中的toupper()函 数，这是因为这两个函数都是位于全局命名空间中的。命名冲突还会发生在一个程序中使用两个或者更多的第三方库的情况中。... 2015-11-26 21:20 阅读 (600) 评论 (0) 没有躲过的坑--map查找结果处理 通过键-值的方法进行搜索，可以使用map，极大的提高了速度。下面代码就是使用map的find查找，通过键，找出对应的值。map string_int_map; //对string_int_map进行初始化 map::iterator iter_string_int; string substring_to... 2015-11-25 22:53 阅读 (625) 评论 (1) 没有躲过的坑--有if就要有else(一定成对) 我们都很擅长流程控制，能写出很好很复杂的if语句。但是有时过于兴奋，更多的是过于自信而只写了if，而没有写else。这是一个争论不休的话题，很多人，很多大师都认为有的情况下可以不写else，只写if。支持 if 和 else 成对出现的人认为：不怕一万 就怕万一认为 if 和 else 没必要成对出现的人认为：不便于理解，太多没用的东西。我之前觉得也必须非要这样成对，但是今天在工程中遇到了问题。就是... 2015-11-25 21:18 阅读 (565) 评论 (0) 没有躲过的坑--类中的静态成员变量（static or const static） 工作中是这样的，A类中有一个成员变量x，最开始声明为私有：class A{ private: int x; };现在需要在另一个cpp中使用这个x，所以要把它变为共有并且静态：class A{ public: static int x; };由此可见： 静态数据成员和普通数据成员一样遵从public,protected,private访问规则。 此时，编译，我们会得到一个错误，原... 2015-11-24 21:28 阅读 (724) 评论 (0) 没有躲过的坑--捕获窗口之外的鼠标消息(钩子还是？？) 做一个发送表情的对话框，类似微信和QQ一样的，点击表情按钮，弹出表情框，鼠标点击表情框外时，这个表情框被kill。说白了 就是在这个窗口上获得窗口外面的鼠标消息。Google百度了一番，很多人说道使用钩子，才能获得窗口外面的click事件，这也未免太小题大做了吧。还好发现了一个简简单单的函数： SetCapture(*this); 函数功能：该函数在属于当前线程的指定窗口里设置鼠标捕获。一旦窗口... 2015-11-23 22:50 阅读 (1038) 评论 (2) 没有躲过的坑--正则表达式截取字符串 工程中，需要从字符串中匹配出以:开头，并以:结束的字符串。Google还是百度，很多C++的正则表达式都是通过st::tr1或boost库中使用的，但是我们仅仅用一个小小的功能，就用一个库不是很好的办法。对的，之前我的博客已经介绍了C++11的新特性-正则表达式。所以可以不使用其他的库，来完成任务：std::vector all_sub_string = {}; std::strin... 2015-11-23 22:06 阅读 (14349) 评论 (2) 没有躲过的坑--map的初始化（插入数据） 最近工作中需要使用map，进行查询。首先简单介绍一点map，也许是教科书里讲授最少的STL知识吧。但是在实际工作中map挺重要的，用于查找很方便快捷，尤其是以键和值的形式存在的！1、头文件#include2、map的功能自动建立Key － value的对应。key 和 value可以是任意你需要的类型。 根据key值快速查找记录，查找的复杂度基本是Log(N)，如果有1000个记录，最... 2015-11-23 21:21 阅读 (1140) 评论 (1) 232条数据 共16页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 49
URL:: http://blog.csdn.net/wangshubo1989/article/list/5

ParseText::
wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 没有躲过的坑--意想不到的除数为零 工程中有这样一个需求，需要获得一张图片的width和height，然后等比例的显示这张图片。首先是获得得到一张图片的路径，然后计算出他的width和height，然后计算：int resize_width = 160; int resize_height = 160; if (image_width > image_height) { resize_width = 160; resi... 2015-11-22 22:23 阅读 (792) 评论 (0) 没有躲过的坑--成对使用new和delete时要采取相同的形式 new创建类对象与不new区别：new创建类对象需要指针接收，一处初始化，多处使用 new创建类对象使用完需delete销毁 new创建对象直接使用堆空间，而局部不用new定义类对象则使用栈空间 new对象指针用途广泛，比如作为函数返回值、函数参数等而且每个学习C++编程的人都知道成对的使用new和delete，也也就是new申请的内存用delete释放，new []申请的内存由delete... 2015-11-22 22:02 阅读 (725) 评论 (1) 没有躲过的坑--程序中的变量未初始化 变量未初始化是C++编程中最为常见和易犯的错误之一。但是对于全局变量，我们可以不进行初始化，这个变量会默认的用零进行初始化，但是这通常不是一个好的习惯。我们今天先不探讨全局变量还是静态全局变量。那么对于一个全部变量来说，初始化为零和不初始化（编译器替我们初始化为零）又有什么区别吗？全局变量和局部变量初始化与不初始化的区别 即int x 和 int x=0的区别。int x =0; 跟 int x;... 2015-11-21 14:44 阅读 (234) 评论 (2) 没有躲过的坑--重载赋值运算符的自我赋值 C++中有个很重要的事情，就是对于类重载赋值运算符，而达到我们想要的结果。 先看看这几行代码：//Window 是一个类 Window w; w = w; // 再傻的人也不会这么干 w[i] = w[j]; // 这个情况偶尔会发生作为一个优秀的工程师，就要考虑到任何可能的情况。看一段更加完整的代码：class ScrollBar {};class Window {... 2015-11-21 12:26 阅读 (568) 评论 (1) 你曾后悔进入 IT 行业吗？ 转自：http://www.zhihu.com/question/24306436 著作权归作者所有。在知乎看了一个帖子：你曾后悔进入 IT 行业吗？今天转一些那些让你无怨无悔干IT的原因：1. 能养家糊口：这个必须要放在第一位的来说，那就是干IT能养活自己。在中国，如果单看工资收入，金融和IT绝对是排在前几位的行业。IT行业相对其他传统行业来说，工资水平还是处于较高的水平，更别说你幸运的投身到一... 2015-11-20 23:25 阅读 (769) 评论 (1) 没有躲过的坑--抽象类不能实例化对象（但是你明明定义的不是抽象类） 今天在开发过程中遇到了一个错误：不能实例化抽象类这个错误完全是自己疏忽大意造成的。首先我们知道，一个类如果是抽象类，我们就不能用这个类实例化一个对象。什么样的类是抽象类呢？ C++没有C Sharp中的关键字abstract，但是当一个类中有一个或多个纯虚函数的时候，这个类就自动成为了抽象类，即不可以实例化。纯虚函数是一种特殊的虚函数，在许多情况下，在基类中不能对虚函数给出有意义的实现，而把它声明... 2015-11-20 23:01 阅读 (843) 评论 (0) 没有躲过的坑--获取设备环境HDC 最近在做一个功能，要使用GDI进行简单绘图。首先GDI是什么？ 英文为：GraphicsDeviceInterface GDI是Graphics Device Interface的缩写，含义是图形设备接口，它的主要任务是负责系统与绘图程序之间的信息交换，处理所有Windows程序的图形输出。 在Windows操作系统下，绝大多数具备图形界面的应用程序都离不开GDI，我们利用GDI所提供的众多函... 2015-11-19 23:17 阅读 (139) 评论 (0) 没有躲过的坑--正确释放vector的内存 vector的内存会不会泄露？ 即使不泄露，怎么能缩小所占空间呢？我们知道vector有个clear()方法？原型:#include void clear();函数clear()删除储存在vector中的所有元素. 如果vector的元素是一些object, 则它将为当前储存的每个元素调用它们各自的析构函数(destructor). 然而, 如果vector储存的是指向对象的指针... 2015-11-18 21:20 阅读 (699) 评论 (0) 没有躲过的坑--重定义关键字 从学习编程语言开始，我们就知道变量或是函数的命名不能使用系统的关键字。但是有时候，你不得不这么做。比如mac、ios、Android、windows共用一个底层代码，这样为了使底层更加通用，有时候就会忽略某种语言的某个关键字。也许关键字A对于win32就是一个系统关键字，而A不是objective-c的关键字。这个时候为了保证代码的通用性，就需要重定义关键字，也就是所说的屏蔽掉系统关键字。比如对于w... 2015-11-18 19:59 阅读 (660) 评论 (1) 没有躲过的坑--windows下chrome浏览器插件不能安装 在工作和生活中我们往往用到chrome浏览器，也往往需要安装各种各样的插件。很多情况下，你需要安装的插件是自己公司开发，不是出自Google商店，这样你就会遇到很多的坑儿。一般情况下，打开chrome浏览器，按下图1-2-3操作： 正常情况下，你把你需要的空间拖到刚才打开页面的空白处就可以安装了。但是有些插件是不可以的，我们需要寻找另一个办法。假如插件叫123.crx，这个时候，我们修改这个文... 2015-11-17 21:07 阅读 (649) 评论 (1) 没有躲过的坑--wstring与string的转换 wstring 是指的宽字节。typedef basic_string string; typedef basic_string wstring; 在实际工程中，我们往往需要把string转换为wstring，你可以会进行百度或是Google，很轻松找到转换的方法。但是这里就隐含着巨大的坑儿。 看看这个转换吧：std::wstring WStringToWStrin... 2015-11-16 22:17 阅读 (365) 评论 (3) 没有躲过的坑--string中的c_str()陷阱 string.c_str是Borland封装的String类中的一个函数，它返回当前字符串的首字符地址。c_str函数的返回值是const char*的，不能直接赋值给char*，所以就需要我们进行相应的操作转化。#include #include int main() { std::string s = "Chelse"; c... 2015-11-16 22:02 阅读 (808) 评论 (0) C++11新特性之 std::future and std::async 先来个小插曲，百度翻译，你够了： std::future 设想这样的情况，你希望一个线程做一些事情，然后返回你一个结果。同时，你在做一些其他的工作，该工作也许会也许不会花费你一点时间。你希望在某个特定的时间获取那个线程的结果。 在win32中，你可以这样 用CreateThread启动线程 在线程里，启动任务，当准备完毕后发送一个事件（event），并把结果放在全局变量里。 在主函数里... 2015-11-16 21:37 阅读 (1105) 评论 (4) 没有躲过的坑--智能指针陷阱 之前博客《浅析C++中的智能指针》讲诉了一些智能指针的东西，可以帮助我们更加方便高效的使用指针，但是凡事都不会很完美。即使你使用智能指针代替了传统的指针，在实战中你还是会遇到很多的坑儿。现在，就分几个方面： 首先为了简化代码，进行了一些定义：class Test { public: Test():m_value(0) { std::cout << "Test::Test" << std::... 2015-11-15 13:51 阅读 (578) 评论 (4) 开始使用C++11的几个理由 C++11新特性介绍了一段时间，至今为止也差不多了。是要总结的时候了： 你可能会问我，为什么需要C++11呢，我这就给出理由：理由1：《C++11新特性之 Move semantics(移动语义)》 move语义(move semantics)。简单的说，它是优化复制的一种方式。有时候复制很显然是浪费的。如果你从一个临时的string对象复制内容，简单的复制指针到字符缓冲区将比创建一个新的缓冲区... 2015-11-13 20:55 阅读 (567) 评论 (4) 232条数据 共16页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 wangshubo1989 访问： 127098次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14146 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 50
URL:: http://blog.csdn.net/wangshubo1989/article/list/6

ParseText::
wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 提交中的骂声：哪种编程语言最遭骂？ 正如任何程序员会告诉你的，编程会让你骂骂咧咧。但你知道么，写 C++ 程序，会比写 PHP 或 Python 程序所遭到的骂声更多。开发人员安德鲁·沃斯（Andrew Vos）在找一个周末项目，于是决定在 GitHub 上抓取100百万条提交信息（commit），并扫描其中的脏话。他把脏话限于乔治·卡林的七大脏词，而后根据编程语言种类统计结果。为确保编程语言的流行程度不影响统计结果，沃斯对每种编程语... 2015-11-12 22:22 阅读 (334) 评论 (1) 没有躲过的坑--This function or variable may be unsafe. 再说一个坑儿。有时候我们很怀旧，或是喜欢使用一些过时的东西，但是它应该工作的。比如： 判断一个文件是否存在，我们可以使用access。但是access已经是过去时了，用_access代替之。还有很多类似的，这样很不友好。再比如说fopen： 会提示这样的错误：'fopen': This function or variable may be unsafe. Consider using fop... 2015-11-12 22:10 阅读 (779) 评论 (1) 没有躲过的坑--获取一张图片的width和height 有时候问题总是被想的过于复杂！简单说就是读取一张图片，然后得到这个图片的width和height。首先，用到的库没有Image这个控件，所以不能从控件获得图片的高和宽。于是GOOGLE了一个算法，稍作修改，对于不同的类型有不同的计算方法，上代码吧：#include #include using namespace std; int main() { st... 2015-11-12 21:46 阅读 (695) 评论 (1) C++11新特性之 Static assertions 和constructor delegation C++11新特性继续。 Static assertion static_assert 是在编译时期的断言，作用不言而喻的。 语法是这样：static_assert ( bool_constexpr , string ) 其中： bool_constexpr: 常量表达式 string: 如果bool_constexpr表达式为false, 这个string就是编译时候报的错误。看... 2015-11-11 21:35 阅读 (753) 评论 (2) 苹果vs谷歌：与微软的战争教会了苹果什么 新书《缠斗：苹果与谷歌(微博)如何开战并掀起一场革命》的内容指出，苹果和谷歌的移动平台同时共存，只不过是历史偏离正轨的结果。文章指出，平台之间的战争总是带有一种倾向，那就是赢家通吃，而输家则一无所获。正如30年前苹果与微软之间的战争以后者胜出为结局一样，苹果与谷歌之间平台大战的收场也终将是不死不休。而对时下都如日中天的这两家科技巨头而言，在这场大战中出现失误将带来“生命不能承受之痛”。全文： 现已... 2015-11-11 00:26 阅读 (219) 评论 (2) C++11新特性之 default and delete specifiers C++11的东西介绍的差不多了，今天介绍两个关键字default和delete！default 首先我们清楚，如果自己提供了任何形式的构造函数，那么编译器将不会产生一个默认构造函数，这是一个放之四海而皆准的原则。但凡是都是双面性，看看一下的代码：class A { public: A(int a){}; };然后我们这样使用：A a;悲剧发生了，编译器不会为我们提供默认的构造函数！所以呢，... 2015-11-10 23:42 阅读 (1067) 评论 (4) C++11新特性之 Move semantics(移动语义) 按值传递的意义是什么？ 当一个函数的参数按值传递时，这就会进行拷贝。当然，编译器懂得如何去拷贝。 而对于我们自定义的类型，我们也许需要提供拷贝构造函数。但是不得不说，拷贝的代价是昂贵的。所以我们需要寻找一个避免不必要拷贝的方法，即C++11提供的移动语义。 上一篇博客中有一个句话用到了：#include void f(int& i) { std::cout << "lval... 2015-11-09 23:57 阅读 (787) 评论 (1) C++11新特性之 rvalue Reference(右值引用) 右值引用可以使我们区分表达式的左值和右值。C++11引入了右值引用的概念，使得我们把引用与右值进行绑定。使用两个“取地址符号”：int&& rvalue_ref = 99;需要注意的是，只有左值可以付给引用，如：int& ref = 9; 我们会得到这样的错误： “invalid initialization of non-const reference of type int& from an... 2015-11-09 22:14 阅读 (896) 评论 (3) C++11新特性之 nullptr 我们知道在编程的世界里，0有双重的角色，可以表示整数零，也可以表示一个空指针。在C语言中，通过预编译宏NULL，可以区分0表示的是零还是(void*)0.但是，在C++的世界中，这样是不可以的。C++中允许函数重载。例如：void foo(char *); void foo(int);如果把NULL定义为0，那么foo(NULL)将调用哪个函数呢？这样的话，编译器不会知道调用哪个函数。所以C++11... 2015-11-08 23:57 阅读 (231) 评论 (1) C++11新特性之 std::array container 数组每个人都很熟悉，vector更是我们常常用到的。但是某些场合，使用vector是多余的，尤其能明确元素个数的情况下，这样我们就付出了效率稍低的代价！但是你使用数组的代价是那么的不安全，那么的不方便。于是，C++11推出了模板类array，位于std名称控件中。 与vector不同的是，array对象的长度是固定的，使用了静态存储区，即存储在栈上，效率跟数组相同，但是更加的安全。首先需要包含头文... 2015-11-08 21:37 阅读 (1513) 评论 (3) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） 最近被自己坑儿了一把，改别人的代码，最后编译器这样报错的：error C2653: not a class or namespace name简单描述一下： 有一个类A，声明和实现分别位于 a.h和a.cc中 有一个类B，声明和实现分别位于 b.h和b.cc中 类A的某个成员函数需要B类类型作为参数 类B的某个成员函数需要A类类型作为参数a.h文件如下：#ifndef A_H_ #defin... 2015-11-07 00:30 阅读 (1267) 评论 (1) 没有躲过的坑--指针（内存泄露） C++被人骂娘最多的就是指针。 夜深人静的时候，拿出几个使用指针容易出现的坑儿。可能我的语言描述有些让人费劲，尽量用代码说话。通过指向类的NULL指针调用类的成员函数 试图用一个null指针调用类的成员函数，导致崩溃：#include using namespace std;class A { int value; public: void dumb() c... 2015-11-04 23:47 阅读 (1383) 评论 (3) C++11新特性之 CALLBACKS 《C++11新特性之std::function》提到了std::function作为回调函数。今天主要讨论不同情况下std::function作为回调使用。使用回调#include #include namespace { using cb1_t = std::function; using cb2_t = std::function<... 2015-11-04 21:58 阅读 (1169) 评论 (5) c++11特性之std::thread--进阶二 继续C++11的std::thread之旅！下面讨论如何给线程传递参数 这个例子是传递一个string#include #include #include void thread_function(std::string s) { std::cout << "thread function "; std::cout << "m... 2015-11-04 00:00 阅读 (905) 评论 (2) c++11特性之std::thread--进阶 博客 [c++11特性之std::thread--初识](http://blog.csdn.net/wangshubo1989/article/details/49592517 "std::thread") 讲了std::thread::join和std::thread::detach的用法。今天就再来点深入的。先看看这个：int main() { std::thread t(&threa... 2015-11-03 23:49 阅读 (913) 评论 (1) 232条数据 共16页 首页 上一页 ... 6 7 8 9 10 ... 下一页 尾页 个人资料 wangshubo1989 访问： 127098次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14146 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 51
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/45245743

ParseText::
我与“百科全书”的故事---祝贺《信息通信技术百科全书》正式出版！ - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 我与“百科全书”的故事---祝贺《信息通信技术百科全书》正式出版！ 2015-04-24 14:04 3046人阅读 评论 (6) 收藏 举报 分类： 杂谈 （113） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 书籍，是人类进步的阶梯；书籍，是人类的精神食粮；书籍，是伴随我们一生的最好的朋友。在一个人骄傲的时候，读书会让你谦虚；在一个人自卑的时候，读书会让你自信；在一个人辉煌的时候，读书会让你珍惜自己所取得的成绩；在一个人落魄的时候，读书会让你重新拾起奋斗的勇气。 我从小就酷爱读书，每当看到一些经典书籍的时候，我总是爱不释手，反复地咀嚼书中的词句。曾几何时，我梦到自己也成了一位作家，用自己的文字滋润了大家的心灵。梦，还是梦，但梦想也有成真的时候，不然为什么有人会说：梦想还是要有的，万一实现了呢？ 最近，听闻自己参与编写的《信息通信技术百科全书》(下文简称“百科全书”)正式出版了，我非常的高兴，这让我离自己的“作家梦”又近了一步。 我与“百科全书”结缘于2014年4月，当时中兴通讯学院组织了一个“维基开发大赛”，提供了一些IT领域的专业名词，参赛者可以选择自己感兴趣的词条加以解释，并以此作为参赛作品。我参加了这个比赛，选择的词条是“VPN技术”，并有幸获得了一等奖。 大赛之后，本次活动的组织者发邮件问获奖者是否有兴趣参与“百科全书”的编写。本着一股分享的热情和对写作的兴趣，我毫不犹豫地答应了下来，并选择了自己感兴趣的领域：移动互联网和ICT。 这样，作为一名“外援”，作为“众包”中的一包，我加入了编写者的队伍中。我和本组的组长郭MM合作，每人负责编写一部分词条(词条主要来源于互联网及各大IT社区)。我在每周一将上一周编写的词条发给组长汇总，不管每周的工作有多忙，我都坚持至少编写两个词条。 从2014年的5月到7月，我编写了移动互联网和ICT领域的近30个词条。我编写每个词条的过程大致是这样的：首先选择一个词条，如果自己对该词条非常的熟悉，那么就先按照自己的理解写出来，然后对照该词条在维基百科和百度百科上的解释，看是否需要完善；如果自己对该词条不熟悉，那么先在网上去搜索相关的资料(不限于维基百科和百度百科)，然后将各资料取长补短，用自己的方式对该词条进行解释。 所有的词条都编写完成之后，接下来就进入评审阶段了。本书的所有词条首先发给公司内部的专家评审，评审出的问题直接反馈给词条编写者修改。待内部评审完成之后，编写团队便将本书的初稿发给出版社(人民邮电出版社)，他们组织行业的专家对该书进行多轮评审，每轮评审出的意见反馈给公司，公司再组织人员参照评审意见对相关词条进行修改。 经过了这样一个“评审-->修改-->再评审-->再修改”的反复的过程，“百科全书”日臻完善，最终于今年的4月份正式出版了。听到该书正式出版的消息，大家十分的高兴，整个团队的努力也得到了回报！ 总结起来，本书有如下特色： 第一，本书的内容与传统的教科书上那些僵硬的内容相比，有天壤之别。本书中的很多词条风趣幽默、生动活泼、图文并茂，让大家在一段愉悦的阅读旅程中开阔眼界、增长知识。 第二，本书的编写者本着专业和严谨的态度，对每个词条的语言进行了精心的组织，以通俗的语言将词条的含义准确地描述了出来。本书可作为大家进入信息通信领域的必备的参考书籍。 第三，本书在出版之前，经过了多轮评审，评审人员均是对应领域的专家。因此，本书是引领大家进入信息通信之门的权威书籍。   科学技术日新月异，各种先进文化相互激荡。变化是永恒的，而不变的是我们对于知识的渴望和对于真理的追求。如果大家关注互联网、关注IT行业、关注最新科技发展，那么《信息通信技术百科全书》就是你最好的朋友。不管大家学习的是什么专业，也不管大家从事的是什么职业，我都推荐大家细细阅读《信息通信技术百科全书》。 知识就在那里，so,let’s go!       《信息通信技术百科全书》部分语句摘录： Web 2.0 技术 ： Web 2.0 时代的另外一个典型代表是维基百科全书 (Wikipedia) 。传统的百科全书从词条收集，到词条编写，再到书籍出版，要经过很长的时间，因此有很多词条可能还没有出版就已经过时了；此外，要想运输和保存这么厚一本书也不是一件容易的事情。维基百科全书的出现改变了传统百科全书的“窘境”，它是一种在线的百科全书。在维基百科全书中，一个条目可以被任何互联网用户添加，同时也可以被其他任何人来修改编辑，因此其时效性非常的强，可以供能够上网的用户随时访问。维基百科全书是网络内容创建方面的一种深远的变革，维基百科网站已成为世界上访问量最大的网站之一。   众筹 ： 张三和李四各做了一款风格迥异的家居产品软件，想要把这款软件做大做强，但自己又没有那个经济实力。于是，他们想到了众筹也许可以帮他们的忙。他们将产品的原型提供给众筹网站审核，由于都很有创意，因此审核都顺利通过了。他们设定了一个月之内筹资 10 万元的目标，并承诺如果筹资成功，他们将提供给每位支持者一套功能完善的软件。很快，一个月的期限到了，张三的产品一共筹到了 11 万元，而李四的产品值筹到了 9 万元。这样，张三的众筹项目筹资成功，而李四的众筹项目筹资失败。接下来，张三就要兑现自己的承诺，并用筹集到的钱来实现自己创业的梦想。   TMT ： 大家好，我名叫“ TMT ”，是未来的一个产业。我的家族包括了三个成员：第一个“ T ”、“ M ”和第二个“ T ”。让我来逐一介绍它们吧。 第一个“ T ”是“ Technology ”的首字母，表示科技。说到科技，大家应该不会陌生了。都说“科学技术是第一生产力”，科技的力量是大家有目共睹的。“ TMT ”里面的技术，以信息技术 (Information Technology ， IT) 为主。 “ M ”是“ Media ”的首字母，表示媒体。这里的媒体可不是传统意义上的媒体，而更多的是以移动互联网等为代表的新媒体。 第二个“ T ”是“ Telecom ”的首字母，表示通信。这里的通信，既包括传统的打电话，也包括利用 QQ 、微信这样的社交工具来进行的通信。   --------------------------------------- 本书网购链接： 京东商城 china-pub网上书店   -------------------------- 本人微信公众号：zhouzxi，请扫描以下二维码： 上一篇 判断输入年份是否为闰年的另一种方法 下一篇 水仙花数&素数&质因数分解的C语言实现 顶 3 踩 2 我的同类文章 杂谈 （113） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574083次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 52
URL:: http://blog.csdn.net/zhouzhaoxiong1227/rss/list

ParseText::


Recno:: 53
URL:: http://blog.csdn.net/zhouzxi/article/category/898712

ParseText::
编程 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Linux中在主机上实现对备机上目录及文件的操作的C代码实现 编写程序，完成在主机上实现对备机上目录及文件的操作。例如，主机为A，备机为B，要求编写的程序运行在A机上，该程序实现在B机上创建文件目录及拷贝文件的操作。... 2015-12-25 15:06 阅读 (102) 评论 (0) 展示C代码覆盖率的gcovr工具简介及相关命令使用示例 对展示C代码覆盖率的gcovr工具进行了简介，并示例了相关命令的用法。... 2015-12-18 17:09 阅读 (463) 评论 (0) 读取配置文件的shell脚本实现 读取配置文件的shell脚本实现。... 2015-12-12 11:13 阅读 (968) 评论 (1) 查找栈的增长方向的分析及C代码实现 用C代码实现查看栈的增长方向。... 2015-12-02 14:31 阅读 (643) 评论 (5) “多线程”简介及其C代码实现框架 在一些计算机专业相关的书籍中，大家经常听说“多线程”这个概念。那么什么是“多线程”？什么时候使用“多线程”？在程序设计中使用“多线程”有什么好处呢？很多刚入职的程序员也对“多线程”感到非常的好奇，认为它很“高大上”。本文对“多线程”进行了简单的介绍，并给出了其C代码的实现框架。... 2015-11-16 18:42 阅读 (1355) 评论 (0) 用gdb分析core文件及常见gdb命令操作示例 本文以一个实际的程序为例，介绍了用gdb分析core文件的方法和步骤，同时演示了常见gdb命令的操作方法。... 2015-10-08 19:09 阅读 (732) 评论 (0) SOAP协议和基于SOAP的开发流程详述 简单对象访问协议(SOAP)是交换数据的一种协议规范，是一种轻量的、简单的、基于XML的协议，它被设计成在WEB上交换结构化的和固化的信息。 在实际的软件开发项目中，SOAP大多用于处理用户数据，也即实现开户、销户、改户和查户等功能。 本文根据作者实际从事过的基于SOAP的项目开发，对SOAP协议和基于SOAP的开发流程进行了详细的介绍。希望大家通过此文，能够对基于SOAP协议的开发有一个全面的了解。... 2015-09-10 18:45 阅读 (2216) 评论 (2) HDFS简介及用C语言访问HDFS接口操作实践 本文结合作者本人及同事对HDFS的学习和实践的理解，首先介绍HDFS的特点和重要SHELL命令(hadoop和hdfs命令)的使用，接着介绍HDFS提供的C访问接口LIB HDFS及其跟普通文件系统的C API的异同，然后介绍如何利用LIB HDFS接口实现简单的HDFS客户端并列举相关应用实例，最后针对编写HDFS客户端中遇到的问题进行描述和分析。... 2015-08-12 17:40 阅读 (2696) 评论 (2) 两种Linux下非交互式命令的实现 一、概述在Linux环境，有多种实现自动化的脚本语言，如Shell、Python、Perl、Tcl等。Shell语言因与Shell外壳结合紧密，是最常见的实现自动化的脚本语言。同时，在Linux环境中存在大量功能单一的小工具——通常它们在指定输入后，立即就可获得输出，例如echo、cat等字符串/文本打印工具，又或者是如sed、awk等最常用的字符串编辑工具。通过编写Shell脚本，我们可以反复利... 2015-07-13 19:29 阅读 (456) 评论 (0) Linux下一个简单的日志系统的设计及其C代码实现 1.概述 在大型软件系统中，为了监测软件运行状况及排查软件故障，一般都会要求软件程序在运行的过程中产生日志文件。在日志文件中存放程序流程中的一些重要信息，包括：变量名称及其值、消息结构定义、函数返回值及其执行情况、脚本执行及调用情况等。通过阅读日志文件，我们能够较快地跟踪程序流程，并发现程序问题。因此，熟练掌握日志系统的编写方法并快速地阅读日志文件，是对一个软件开发工程师的基本要求。 本文详细地... 2015-05-22 15:17 阅读 (4216) 评论 (12) Linux下互斥量加锁与解锁操作的C代码实现 一、概述 在实际的软件程序中，由于代码量较大，函数之间的调用关系较为复杂，因此对于某些全局变量的操作要格外小心。在程序中，一般采用互斥量加锁的方式来保证对全局变量的操作的唯一性。 本文详细介绍了Linux下互斥量加锁与解锁操作的C代码实现，为相关的软件开发工作的开展提供了有益的参考。二、加锁与解锁函数及时间结构体介绍 1.加锁函数pthread_mutex_timedlock 函数原型：in... 2015-05-09 10:39 阅读 (649) 评论 (0) Linux下配置文件读取操作流程及其C代码实现 一、概述 Linux具有免费、可靠、安全、稳定、多平台等特点，因此深受广大程序员的欢迎。 为了体现软件产品的灵活性，可添加配置文件存放某些重要的参数，在部署的时候根据实际的安装环境对每个配置项的值进行设置。这就要求程序能够准确读取到各个配置项的值。 本文详细介绍了Linux下配置文件的读取方法及读取操作的C代码实现，为相关的软件开发工作的开展提供了有益的参考。二、配置文件介绍 为了便于程序处... 2015-05-07 16:47 阅读 (2847) 评论 (10) Linux下如何将数据库脚本文件从sh格式变为sql格式 在从事软件开发的过程中，经常会涉及到在Linux下将数据库脚本文件从sh格式变为sql格式的问题。本文以一个实际的脚本文件为例，说明格式转换的过程。       1. sh文件内容       本文中的文件名为example.sh，其内容如下：#!/bin/bash function Init(){    if [ -f"example.sql" ]    then        echo"exa... 2014-07-24 14:27 阅读 (905) 评论 (0) 写给大家看的编程规范 (本文参加 2014 CSDN博文大赛，谢谢。)【文章摘要】       “没有规矩，不成方圆”，在实际的软件开发项目中，做任何事情都不是随心所欲的，我们编写代码需要遵守项目组约定的编程规范。很遗憾，在学校的计算机课程中，重在教导学生实现一定的程序功能，对程序的编写规范很少提及，这也就导致了从学校毕业踏上工作岗位之后一段艰辛的学习过程。       本文根据自身的软件开发实践，对实际的软件开发项目... 2014-07-07 17:26 阅读 (1684) 评论 (4) Linux下vi替换字符命令操作实例 在Linux下的开发中，经常涉及到对文件中的字符进行处理，其中，对字符的替换操作也是非常的频繁。        本文以一个实际的文件为例，详细介绍了Linux下常用的vi替换字符命令，为相关的开发工作提供给了参考。         本文中被操作的文件为TestFile.txt，其中的内容如下：        zhou@linux:~/zhouzx/Test> cat TestFile.txt   ... 2014-06-05 18:44 阅读 (904) 评论 (0) 41条数据 共3页 1 2 3 下一页 尾页 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574086次 积分： 12298 等级： 积分：12298 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 54
URL:: http://blog.csdn.net/zhouzxi/article/category/898716

ParseText::
操作系统 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 掌握VI编辑器(三) EXINIT环境变量和.exrc文件 有两种方式来个性化VI编辑器。如果你在主目录下生成了一个叫做.exrc的文件，当VI启动的时候，那里面所有的命令都会被读到。另外一种方法是设置一个叫做EXINIT的环境变量。该选项在你的shell的建立文件里被设置。如果你使用/bin/csh (C-Shell)，命令如下(被放置在.cshrc文件里面)：setenv EXINIT '...'。 如果你使用... 2012-08-04 20:26 阅读 (1604) 评论 (0) 掌握VI编辑器(二) VI的两种模式          大多数用户了解VI编辑器的第一件事就是它有两种模式：command(命令)和insert(插入)。command模式允许命令条目来操纵文字。这些命令通常是一个或两个字符长，可以敲几下键盘便被输入了。insert模式将任何在键盘上敲击的内容输入现在的文件中。          VI是以command模式启动的。有几个命令来将VI编辑器转入insert模式。最常用... 2012-07-15 16:19 阅读 (987) 评论 (0) 掌握VI编辑器(一) 资料来源：University of Hawaii at Manoa College of Engineering。   引言         VI编辑器是一个被许多Unix用户使用的基于屏幕的编辑器。VI编辑器具备强大的功能来帮助程序员，但是许多初学者因为要面对很多不同的指令而对使用VI敬而远之。写作本教程的目的就是要帮助初学者适应VI编辑器的使用，当然，也有一些小节的内容与VI的惯用者有... 2012-07-07 17:46 阅读 (1293) 评论 (4) Linux操作系统基础知识之九：设备驱动 Q1.        为什么把设备分为“块设备”和“字符设备”两大类？ A： 1)        Linux将设备看成文件，具有三方面的含义：第一，每个设备都对应一个文件名，在内核中也就对应一个索引节点；第二，对文件操作的系统调用大都适用于设备文件；第三，从应用程序的角度看，... 2011-10-17 19:16 阅读 (1043) 评论 (0) Linux操作系统基础知识之八：文件系统 Q1.        Linux目录树结构是怎样的？它与Windows的目录树结构有什么区别？为什么Linux的文件系统采用固定的目录形式？ A：文件是一个抽象的概念，它是存放一切数据或信息的仓库； 1)        Linux的目录树结构为：根目录(/)在上，其它的平行在... 2011-10-16 20:00 阅读 (1204) 评论 (4) Linux操作系统基础知识之七：内核中的同步 Q1.        什么是临界区？什么是竞争状态？什么是同步？ A： 1)        临界区(critical regions)就是访问和操作共享数据的代码段，多个内核任务并发访问同一个资源通常是不安全的； 2)        如果两个内核任务可能处于同一个临界区，就... 2011-10-15 16:26 阅读 (908) 评论 (0) Linux操作系统基础知识之六：系统调用 Q1.        什么是系统调用？为什么要引入系统调用？ A： 1)        操作系统为用户态的进程与硬件设备(如CPU、磁盘和打印机等)之间的交互提供了一组接口，这些接口使得程序更具有可移植性，因为不同的操作系统只要所提供的一组接口相同，那么在这些操作系统之上就可... 2011-10-14 14:58 阅读 (1065) 评论 (0) Linux操作系统基础知识之五：中断和异常 Q1.        什么是中断？什么是异常？二者有何不同？ A： 1)        中断控制是为克服对I/O接口采用程序查询控制服务方式所带来的处理器低效率而产生的，它的主要优点是只有在I/O接口需要服务时才能得到处理器的响应，而不需要处理器不断地进行查询；因此，最初的中... 2011-10-13 15:16 阅读 (1256) 评论 (0) Linux操作系统基础知识之四：内存管理 Q1.        为什么把进程的地址空间划分为“内核空间”和“用户空间”？ A：Linux的虚拟地址空间的大小为4GB，内核将这4GB的空间分为两部分，较高的1GB(虚地址0xC0000000到0xFFFFFFFF)供内核使用，称为“内核空间”；而较低的3GB(虚地址0x0... 2011-10-12 15:52 阅读 (1302) 评论 (0) Linux操作系统基础知识之三：进程 Q1.        程序与进程的概念分别是什么？为什么要引入“进程”的概念？ A： 1)        程序是一个普通文件，是机器代码指令和数据的集合，这些指令和数据存储在磁盘上的一个可执行映像中，可执行映像(executable image)就是一个可执行文件的内容；... 2011-10-11 15:18 阅读 (1336) 评论 (0) Linux操作系统基础知识之二：内存寻址 Q1.        什么是物理地址？什么是虚地址？什么是线性地址？ A： 1)        将主板上的物理内存条所提供的内存空间定义为物理内存空间，其中每个内存单元的实际地址就是物理地址； 2)        将应用程序员看到的内存空间定义为虚拟地址空间(或地址空间)，... 2011-10-10 16:39 阅读 (1381) 评论 (0) Linux操作系统基础知识之一：Linux操作系统概述 Q1.        什么是GNU？Linux与GNU有什么关系？ A： 1)        GNU是GNU is Not Unix的递归缩写，是自由软件基金会(Free Software Foundation，FSF)的一个项目，该项目已经开发了许多高质量的编程工具，包括e... 2011-10-09 20:23 阅读 (1804) 评论 (0) 时钟 瑞士的钟表世界闻名，拥有这么一块表是每个人的心愿。也许你已经发现，钟表早已成了我们日常生活的重要组成部分，戴在手上的表，挂在墙上的石英钟，甚至计算机上面的时间显示器。有调查表明，一天中看表频率最高的人群，通常是工作比较繁忙的中产阶级。所以，如果你经常看表，那么恭喜你，整个社会会因... 2011-10-02 10:32 阅读 (826) 评论 (1) 操作系统随想 我们每天都在与计算机打交道，它改变了整个人类的生活。打开电脑后，我们想进入哪个主题，只需用鼠标点击一下相应的图标即可。这真是太方便了！但是你有没有想过，为什么计算机会那么听话，总是乖乖地完成你给它布置的任务，虽然偶尔也会“罢工”？在你实现超级体验的过程中，它又做了些什么？以上这些... 2011-10-02 10:29 阅读 (1117) 评论 (6) 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574082次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 55
URL:: http://blog.csdn.net/zhouzxi/article/category/898721

ParseText::
杂谈 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 《C程序员从校园到职场》勘误 《C程序员从校园到职场》勘误。... 2015-12-14 12:12 阅读 (626) 评论 (3) 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ GitHub上的代码与CSDN博文之间的对应关系为： 代码 博文 https://github.com/zhouzxi/ReadConfig Linux下配置文件读取操作流程及其C代码实现：http://blog.csdn.net/zhouzhaoxiong1227/article/details/45563263 https://github.com/zhouzxi/Simp... 2015-11-10 10:05 阅读 (704) 评论 (0) “大师兄”社区(http://www.daxixiong.com/)欢迎你！！！ 对“大师兄”社区进行了介绍，欢迎大家的加入！... 2015-10-12 18:50 阅读 (526) 评论 (0) [置顶] 《C程序员从校园到职场》带领大家从校园走向职场 七夕节刚过，就有好消息传来：本人新书《C程序员从校园到职场》正式出版并在各大电商平台上发售了！ 下面，让我们一起来欣赏一下纸质书的“风采”吧。 本书目录第1章 概述 1.1 C语言的发展历史 1.2 C语言的主要特点 1.3 常用工具软件 1.4 小结 第2章 学校到职场 2.1 认清自身不足 2.2 破除错误观念 2.3 工... 2015-08-25 10:31 阅读 (10861) 评论 (52) 让优秀的文章脱颖而出---极客头条使用体验 最近，CSDN在推广“极客头条”。作为CSDN的一位老用户，我也想表达一下自己对于“极客头条”的看法。文章中的所有观点不一定都对，大家可以参考。... 2015-07-30 14:56 阅读 (550) 评论 (6) 认识一下身边的互联网---经典互联网书籍阅读总结 最近，我仔细阅读了《浪潮之巅》、《文明之光》、《硅谷百年史》等书，对互联网的发展有了一定的了解。本文是对互联网现状及未来发展的一个总结，并附带有本人的一点认识。... 2015-07-19 13:44 阅读 (3363) 评论 (13) 《C程序员：从校园到职场》出版预告(5)：一种情怀，几分感悟 本书封面草图已出，我们一起来看一下吧。 :) 回首自己在校的学习时光，感慨万千。在本科的时候，我算得上是标准的“好学生”：专业成绩名列前茅，积极参加课外活动并获得了一些奖，成功保研。但现在想来，我认为自己在以下几个方面存在不足： 1) 没有利用好互联网这个工具来学习。在四年里，我采用的学习方式还是传统的通过看书来学习，而互联网上拥有更多的信息，而且更加方便获取。举个例子，在我上学的四年(2... 2015-07-09 18:49 阅读 (854) 评论 (2) 《C程序员：从校园到职场》出版预告(4)：从“散兵游勇”到“正规部队” 看过电视剧《楚汉传奇》的朋友应该对这个场景还有印象：当刘邦第一次去找项羽帮忙的时候，他们一行人看到了项羽军营是如何练兵的，想到自己练兵的方法，当时就震惊了。“刘家军”就像下面图片中的“散兵游勇”。 而“项家军”则是训练有素的“正规部队”。 当然，可能会有朋友立马出来反驳道：“‘散兵游勇’咋呢？最终刘邦还不是赢了。”我们这里暂且不讨论最终的是非成败，单就训练士兵来说，项羽要超出刘邦很多。 闲... 2015-06-29 19:15 阅读 (985) 评论 (4) 《C程序员：从校园到职场》出版预告(3)：从“阳春白雪”到“下里巴人” 自打小时候起，我就非常喜欢看重庆本土的方言剧《生活麻辣烫》(强烈推荐想学重庆话的朋友观看此节目，里面有很多美女帅哥哦 :) )。我喜欢看这个节目，并不是因为它的剧情有多么的好，也不是因为里面有多少“百富美”和“高富帅”，而是因为里面的内容很贴近生活，仿佛就发生在自己的左邻右舍。相对于某些言情剧里面的“阳春白雪”，我更喜欢看生活剧里面的“下里巴人”。因为后者更加的真实，更容易让人产生共鸣。 我写... 2015-06-23 16:17 阅读 (1031) 评论 (0) 《C程序员：从校园到职场》出版预告(2)：从“百花齐放”到“一枝独秀” 古语云“治大国如烹小鲜”，写作一本书和写作一篇文章在本质上是一样，首先要确定自己要想写作的内容是什么。 对于本科学生来说，每个人都有至少一个专业，大学四年自己主要的学习内容就围绕专业来展开；对于研究生来说，每个人都至少有一个研究方向，在校三年的学习计划要围绕这个方向来安排；当然，对于入职的程序员来说，每个人也会有至少一项工作内容，自己或领导制定的工作计划的基础就是工作内容(具体来说就是要开发一个什... 2015-06-21 11:29 阅读 (1199) 评论 (0) 《C程序员：从校园到职场》出版预告(1)：从“高大上”到“柴米油盐” 光阴似箭，日月如梭，转眼之间，我已入职三年有余。在三年之前，我还是一位对未来工作充满期待、心中既高兴又惶恐的在校学生；毕业三年之后的今天，我已成为职场“老人”，对自己的工作有了深入的了解、对整个IT行业也有了一定的认识。 在《文明之光》的引子中，吴军老师提到：“人类的历史相对我们这个星球的历史，大约相当于一年中的半个小时。”确实，人类的历史是短暂的，但对于飞速发展的IT行业来说，三年却显得是那么的... 2015-06-18 16:31 阅读 (1461) 评论 (2) 程序员如何写出一份好的文档？ 在实际的软件开发工作中，除了编写代码之外，程序员还会花大量的时间来编写相关的研发文档，这些文档包括：详细设计文档、单元/集成测试文档、软件版本开发报告、软件安装说明、软件升级指导书等。 在《程序员既要写好代码，又要写好文档》(http://www.zhouzhaoxiong.com/142.html)一文中，我提到过：“代码”和“文档”就像是一个人的左膀右臂，一定要让两者均衡发展，而不能够只顾其一... 2015-06-10 16:37 阅读 (3756) 评论 (8) 百度全面开放HTTPS之我见 最近，我读到一篇文章《百度全面开放HTTPS的几个重要问题》(http://www.admin10000.com/document/6233.html)，作者就百度实现全站HTTPS的十个问题进行了回答。那么，百度为什么要实现全站HTTPS？这样做有什么好处吗？我们先来看看目前互联网安全的现状。 互联网安全现状国内最大的互联网安全公司360发布了《2014中国个人电脑上网安全报告》(http://... 2015-05-17 13:38 阅读 (611) 评论 (0) 世界这么大，我也来秀秀 最近，在网络上曝出云南一导游因不满游客消费低而辱骂游客的视频，广大的网友在第一时间里了解到了事发现场，并对导游的无礼行为和粗鲁言语表现出了极大的愤慨。相关旅游部门迅速做出了反应，肇事导游也获得了应有的处罚。通过云南导游事件，我们可以看到，在自己身边发生的任何事情，都可以凭借互联网迅速地传播开去。其传播速度之快、传播面之广，可谓是前所未用。生活在这样一个信息时代，我们整天都处于信息的汪洋大海之中，借... 2015-05-05 18:50 阅读 (903) 评论 (4) 我与“百科全书”的故事---祝贺《信息通信技术百科全书》正式出版！ 书籍，是人类进步的阶梯；书籍，是人类的精神食粮；书籍，是伴随我们一生的最好的朋友。在一个人骄傲的时候，读书会让你谦虚；在一个人自卑的时候，读书会让你自信；在一个人辉煌的时候，读书会让你珍惜自己所取得的成绩；在一个人落魄的时候，读书会让你重新拾起奋斗的勇气。我从小就酷爱读书，每当看到一些经典书籍的时候，我总是爱不释手，反复地咀嚼书中的词句。曾几何时，我梦到自己也成了一位作家，用自己的文字滋润了大家的... 2015-04-24 14:04 阅读 (3047) 评论 (6) 114条数据 共8页 1 2 3 4 5 ... 下一页 尾页 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574085次 积分： 12298 等级： 积分：12298 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 56
URL:: http://blog.csdn.net/zhouzxi/article/category/898723

ParseText::
电子技术 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 电子技术的发展简史 这篇文章是我大二的时候为了学习《模拟电子技术》课程而写的，具体参见：http://blog.sina.com.cn/s/blog_621fd7f80100f0ua.html。        电子技术和电子学，是与电子有关的理论与技术。现在，人们已经掌握了大量的电子技术方面的知识，而且电子技术还在不断地发展着。这些知识是人们长期劳动的结晶。        我国很早就已经发现电... 2012-04-29 14:53 阅读 (1707) 评论 (0) 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574085次 积分： 12298 等级： 积分：12298 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 57
URL:: http://blog.csdn.net/zhouzxi/article/category/898730

ParseText::
算法 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Windows下一个简单的日志系统的C代码实现 问题描述       实现一个简单的基于Windows的日志系统，要求写入日志文件的内容的样式如下：       [时间]+[文件名]+[日志等级]+日志具体内容       如：       [2015.02.2514:35:13.143][WriteLog.c][INFO]This is a test!       其中，“2015.02.25 14:35:13.143”为当前时间(精确到毫秒... 2015-03-24 15:40 阅读 (1077) 评论 (0) 也来说一下八皇后问题 (本文的所有代码均是基于此文：http://blog.csdn.net/mbh_1991/article/details/23869459，感谢博主的贡献！)          最近看了一篇文章(见上面给出的链接)，里面讲到了回溯算法和八皇后问题。仔细阅读全文之后，发现作者所写与实际开发工作还是有一定的差别，因此特发此文，表达一下个人的看法，请各位批评指正。        什么是回溯算法？举... 2014-04-18 16:32 阅读 (1290) 评论 (0) 介绍几个重要的算法 在前一段时间，我看了不少的论文，里面涉及到许许多多“奇怪”的算法。最近，我又看了一些专门讲解“算法”的书籍，了解了各算法的来历、特点及应用情况等。        在本文中，我将对一些重要的算法进行简单的介绍。 1) 灰色预测算法        在求解某些问题的过程中，需要对相关数据进行预测，这时就要用到灰色模型(gray model)，其理论基础是灰色系统理论。... 2012-02-13 15:18 阅读 (1249) 评论 (0) 既熟悉又陌生的“迪杰斯特拉” 最近看一些专业课的书籍，在不同的书本上看到了Dijkstra(迪杰斯特拉)这个名字；可以毫不夸张地说，凡是学信息相关专业的学生都应该听说过他的名字(课堂上曾提到的“迪杰斯特拉算法”就是他提出来的，在考试中也经常遇到)。但是，除了这个之外，大家对他的了解应该是很少的，所以，我认为他... 2011-10-02 10:42 阅读 (2001) 评论 (2) 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574083次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 58
URL:: http://blog.csdn.net/zhouzxi/rss/list

ParseText::


Recno:: 59
URL:: http://book.douban.com/subject/26607669/

ParseText::
C程序员从校园到职场 (豆瓣) 登录 注册 下载豆瓣客户端 豆瓣 3.0 和有趣的人做有趣的事 扫码直接下载 iPhone · Android 豆瓣 3.0 全新发布 × 豆瓣 读书 电影 音乐 同城 小组 阅读 FM 东西 市集 更多 一刻 一拍一 豆瓣读书 搜索： 书名、作者、ISBN 分类浏览 购书单 电子图书 C程序员从校园到职场 作者 : 周兆熊 出版社: 人民邮电出版社 出版年: 2015-9-1 页数: 204 定价: 35元 装帧: 平装 ISBN: 9787115388490 豆瓣评分 评价人数不足 5星 33.3% 4星 66.7% 3星 0.0% 2星 0.0% 1星 0.0% 评价:   写笔记   写书评 加入购书单 已在 购书单 分享到    推荐 内容简介  · · · · · · 要成为一名合格的C程序员，仅仅依靠课堂上的所学所练是远远不够的，实际的软件开发对从业者提出了更高的要求。本书重在讲述从学生成长为一名职业化C程序员的必备技能和关键要素，为众多同道中人指点迷津。 本书从C语言的发展历程讲起，分析了学校和职场的不同，并结合丰富的代码实例讲述了程序的样式、变量和函数、内存操作、文件、指针和结构体、算法和协议、程序重构、SQL语句和shell命令以及程序问题排查等诸多C程序开发中的典型问题。帮助读者形成良好的编码规范，增强其动手能力，深入了解软件研发流程及团队合作的重要性。 本书适用于在校计算机专业学生或该专业的应届毕业生阅读，也适用于刚入职的应届毕业生参考。通过阅读本书，读者将对软件开发有一个整体的认知，并能够准确定位自身不足，快速提高自身能力，轻松获得未来必经之路上的通关密码。 作者简介  · · · · · · 周兆熊，硕士研究生毕业于南京邮电大学计算机应用技术专业，目前在中兴通讯重庆研发中心从事软件开发工作。 在工作中善于学习和总结，多次被评为部门优秀员工，曾获所在研究院组织的“代码之美”征文大赛的铜奖及公司“维基开发”大赛的一等奖。 工作之外笔耕不辍，乐于分享，将自己工作及学习的心得发表在博客上，深受广大读者的好评。 同时，他也是《信息通信技术百科全书》的编者之一。 目录  · · · · · · 第1章 概述 1.1 C语言的发展历史 1.2 C语言的主要特点 1.3 常用工具软件 1.4 小结 第2章 学校到职场 · · · · · · ( 更多 ) 第1章 概述 1.1 C语言的发展历史 1.2 C语言的主要特点 1.3 常用工具软件 1.4 小结 第2章 学校到职场 2.1 认清自身不足 2.2 破除错误观念 2.3 工作所需软技能的培养 2.4 小结 第3章 程序的样式 3.1 头文件 3.2 源文件 3.3 空格和空行 3.4 大括号 3.5 注释 3.6 小结 第4章 变量和函数 4.1 数据类型 4.2 变量及函数 4.3 静态变量及其应用 4.4 小结 第5章 内存操作 5.1 memset和memcpy 5.2 strcat和strncat 5.3 strcpy和strncpy 5.4 strcmp和strncmp 5.5 小结 第6章 文件 6.1 常用文件操作函数 6.2 配置文件 6.3 makefile文件 6.4 小结 第7章 指针和结构体 7.1 简介 7.2 示例流程 7.3 示例程序 7.4 程序详解和测试 7.5 小结 第8章 算法和协议 8.1 算法及其应用 8.2 协议及其应用 8.3 小结 第9章 程序重构 9.1 重构原因 9.2 重构原则 9.3 重构流程 9.4 重构示例 9.5 小结 第10章 SQL语句和Shell命令 10.1 SQL语句 10.2 Shell命令 10.3 小结 第11章 程序问题排查 11.1 日志 11.2 配置项问题 11.3 时序问题 11.4 变量初始化问题 11.5 数据表索引问题 11.6 小结 参考资料 附录A 同行评审 附录B 我在南邮的3年 · · · · · · ( 收起 ) 豆瓣成员常用的标签(共6个)  · · · · · · Programming   C语言   开发   编程   规范   软件   我来说两句 短评  · · · · · ·  ( 全部 2 条 ) 热门 / 最新 / 好友 1 有用 famer 2015-11-08 还行吧，不够系统但是各个反面都有讲到。如果细究的话很多东西在《C标准库》还有各种面试书中讲到，但是这个总结做的确实不错。有心人天不负，确实是很少有这么实用的书，内容也比较短小精悍。适合不断参考，其实写好程序真的不是那么简单，作者的建议很值得参考。 0 有用 吉吉范特西 2015-12-24 编程单是解决问题就够了吗？在校园中，我们几行代码草草了事，似乎得到答案就over了，但在职场中，解决问题有时反而是次要的，代码的书写习惯和编程应遵循的软件开发流程更值得我们关注。作者循循善诱，以师兄般亲切的口吻讲诉C程序员的编程规范，文章结构明了，清晰易懂，很适合C程序员求职者阅读。书的最后还分享了文章《我在南邮的3年》，读罢甚是感动，“熊哥”乃真性情人也。 0 有用 吉吉范特西 2015-12-24 编程单是解决问题就够了吗？在校园中，我们几行代码草草了事，似乎得到答案就over了，但在职场中，解决问题有时反而是次要的，代码的书写习惯和编程应遵循的软件开发流程更值得我们关注。作者循循善诱，以师兄般亲切的口吻讲诉C程序员的编程规范，文章结构明了，清晰易懂，很适合C程序员求职者阅读。书的最后还分享了文章《我在南邮的3年》，读罢甚是感动，“熊哥”乃真性情人也。 1 有用 famer 2015-11-08 还行吧，不够系统但是各个反面都有讲到。如果细究的话很多东西在《C标准库》还有各种面试书中讲到，但是这个总结做的确实不错。有心人天不负，确实是很少有这么实用的书，内容也比较短小精悍。适合不断参考，其实写好程序真的不是那么简单，作者的建议很值得参考。 书评  · · · · · ·  我来评论这本书 热门评论 最新评论 专家好评 周兆熊   C语言的书虽然已经不少，但像本书这样，不拘泥于知识体系，而是从真实软件项目实践出发来组织内容的却一直空缺。这种身边过来人的经验之谈很多时候对不少人来说，可能比大师名作更有帮助。我相信本书会得到广大C语言程序员的欢迎，与很多从CSDN博客里走出来的著作一样，成为市场上的畅销书。 --- 刘江，CSDN总编 和作者在一家公司工作三年，却从未正式谋面，直到看了他在CSDN的博客文章，才惊感身边竟有一位“持续学习，诲人不倦...... ...... 2015-09-10 19:00     1/1有用 专家好评 周兆熊   C语言的书虽然已经不少，但像本书这样，不拘泥于知识体系，而是从真实软件项目实践出发来组织内容的却一直空缺。这种身边过来人的经验之谈很多时候对不少人来说，可能比大师名作更有帮助。我相信本书会得到广大C语言程序员的欢迎，与很多从CSDN博客里走出来的著作一样，成为市场上的畅销书。 --- 刘江，CSDN总编 和作者在一家公司工作三年，却从未正式谋面，直到看了他在CSDN的博客文章，才惊感身边竟有一位“持续学习，诲人不倦...... ...... 2015-09-10 19:00     1/1有用 在这本书的论坛里发言 在豆瓣App讨论这本书 · · · · · · 用豆瓣App扫码，找人聊聊这本书。 没有豆瓣App？ 去下载 在哪儿买这本书? 京东商城 31.20 元 节省 3.8 当当网 29.80 元 节省 5.2 文轩网 28.70 元 节省 6.3 北发图书网 25.20 元 节省 9.8 亚马逊 26.60 元 节省 8.4 自营图书免运费，可多次使用优惠码PFJZ37SIMH 中国图书网 26.30 元 节省 8.7 China-pub 26.95 元 节省 8.05 查看 7 家网店价格 （25.20 元起） 加入购书单 多本比价，批量购买 以下豆列推荐  · · · · · ·  ( 全部 ) IT (吉吉范特西) 谁读这本书? 吉吉范特西 昨天 读过 tags:编程 C语言 规范 软件 开发 编程单是解决问题就够了吗？在校园中，我们几行代码草草了事，似乎得到答案就over了，但在职场中，解决问题有时反而是次要的，代码的书写习惯和编程应遵循的软件开发流程更值得我们关注。作者循循善诱，以师兄般亲切的口吻讲诉C程序员的编程规范，文章结构明了，清晰易懂，很适合C程序员求职者阅读。书的最后还分享了文章《我在南邮的3年》，读罢甚是感动，“熊哥”乃真性情人也。 famer 11月8日 读过 tags:Programming 还行吧，不够系统但是各个反面都有讲到。如果细究的话很多东西在《C标准库》还有各种面试书中讲到，但是这个总结做的确实不错。有心人天不负，确实是很少有这么实用的书，内容也比较短小精悍。适合不断参考，其实写好程序真的不是那么简单，作者的建议很值得参考。 周兆熊 9月10日 读过 > 3人读过 > 1人想读 二手市场 > 点这儿转让 有1人想读,手里有一本闲着? 订阅关于C程序员从校园到职场的评论: feed: rss 2.0 © 2005－2015 douban.com, all rights reserved 关于豆瓣 · 在豆瓣工作 · 联系我们 · 免责声明 · 帮助中心 · 图书馆合作 · 移动应用 · 豆瓣广告

Recno:: 60
URL:: http://file.epubit.com.cn/Original/1508e68fd84de3170ea5

ParseText::


Recno:: 61
URL:: http://img.blog.csdn.net/20150424140233836

ParseText::


Recno:: 62
URL:: http://img.blog.csdn.net/20150825102204683

ParseText::


Recno:: 63
URL:: http://img.blog.csdn.net/20151123175829630

ParseText::


Recno:: 64
URL:: http://img.blog.csdn.net/20151123180406270

ParseText::


Recno:: 65
URL:: http://img.blog.csdn.net/20151126102302145

ParseText::


Recno:: 66
URL:: http://item.jd.com/11674021.html

ParseText::
《信息通信技术百科全书—打开信息通信之门》【摘要 书评 试读】- 京东图书 你好，请登录    免费注册 我的订单 ◇ 我的京东 京东会员 企业采购 ◇ 手机京东 ◇ 关注京东 ◇ 客户服务 ◇ 网站导航 京东 搜索 > 我的购物车 全部商品分类 首页 服装城 美妆馆 超市 全球购 闪购 团购 拍卖 金融 图书  >  电子与通信  >  通信  >  信息通信技术百科全书—打开信息通信之门 试读 企业批量购书 Click here for international delivery 商品编号： 11674021 关注商品 分享 信息通信技术百科全书—打开信息通信之门 自营图书音像全品类优惠券满100-5元，满200-16元，点击领取 中国通信学会信息通信科学传播专家团队 ， 中兴通讯学院 编 累计评价 0 京 东 价： [折] [定价： ￥ ] (降价通知) 促销信息： 共 项促销 领　　券： 支　　持： 配 送 至： 服　　务： 合约套餐： 选择套餐与资费 请选择套餐内容 重选 　您选择的地区暂不支持合约机销售！ - + 抢购 选作礼物购买 选择号码和套餐 加入购物车 打白条 到货通知 购买电子书 ￥ 温馨提示： 更多商品信息 人民邮电出版社 京东自营 在线客服： 进入店铺 关注店铺 服务支持： 推荐配件 优惠套装 人气单品 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 商品介绍 商品评价 (0) 加入购物车 信息通信技术百科全书—打开信息通信之门 京东价： 客户端首单 满79送79 加载中，请稍候... 出版社： 人民邮电出版社 ISBN：9787115380968 版次：01 商品编码：11674021 包装：精装 开本：16开 出版时间：2015-03-01 用纸：胶版纸 页数：1030 正文语种：中文 商品介绍加载中... 欢迎更新 扫一扫，精彩好书免费看 正品行货 京东商城向您保证所售商品均为正品行货，京东自营商品开具机打发票或电子发票。 全国联保 凭质保证书及京东商城发票，可享受全国联保服务（奢侈品、钟表除外；奢侈品、钟表由京东联系保修，享受法定三包售后服务），与您亲临商场选购的商品享受相同的质量保证。京东商城还为您提供具有竞争力的商品价格和 运费政策 ，请您放心购买！ 注：因厂家会在没有任何提前通知的情况下更改产品包装、产地或者一些附件，本司不能确保客户收到的货物与商城图片、产地、附件说明完全一致。只能确保为原厂正货！并且保证与当时市场上同样主流新品一致。若本商城没有及时更新，请大家谅解！ 权利声明： 京东上的所有商品信息、客户评价、商品咨询、网友讨论等内容，是京东重要的经营资源，未经许可，禁止非法转载使用。 注： 本站商品信息均来自于合作方，其真实性、准确性和合法性由信息拥有者（合作方）负责。本站不提供任何保证，并不承担任何法律责任。 印刷版次不同，印刷时间和版次以实物为准。 商品评价 加载中，请稍候... 全部评价 () 好评 () 中评 () 差评 () 有图片的评价 () 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 销售联盟 京东公益 友情链接 jd_547592593 (辽宁) 购买日期 2015-08-11 不错不错，挺好.. 2015-08-11 17:53:41 使用心得：不错不错，挺好.. airwang08 () 购买日期 2015-07-05 京东卖的比商场便宜 ，完好 2015-07-05 10:36:38 使用心得：京东卖的比商场便宜 ，完好 jd152551jnt () 购买日期 2015-07-04 这本书可以买 2015-07-04 10:01:37 使用心得：这本书可以买 钻石的闪光 (广东) 购买日期 2015-06-26 还不错。。。。。。 2015-06-26 20:21:57 使用心得：还不错。。。。。。 danweiwei1982 (安徽) 购买日期 2015-06-16 价格能否再优惠点 2015-06-16 21:03:18 使用心得：价格能否再优惠点 Christina_vp (陕西) 购买日期 2015-05-28 应该是正版，刚.. 2015-05-28 12:19:50 使用心得：应该是正版，刚.. jd_lisa19920 (广东) 购买日期 2015-05-09 内容丰富，包装挺好的 2015-05-09 18:30:22 使用心得：内容丰富，包装挺好的 lanchong888 (北京) 购买日期 2015-05-03 挺好的书 2015-05-03 08:19:46 使用心得：挺好的书 雾驾云腾 (河北) 购买日期 2015-05-01 好厚的书，看完.. 2015-05-01 01:35:40 使用心得：好厚的书，看完.. 热门贴子 网友讨论圈 晒单贴 讨论贴 问答贴 圈子贴 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 浏览了该商品的用户还浏览了 加载中，请稍候... 相关分类 基础与理论 通信 基本电子电路 无线通信 微电子学、集成电路(IC) 移动通信 电子元件、组件 无线电设备、电信设备 半导体技术 电视 真空电子技术 广播 光电子技术、激光技术 雷达 电子对抗（干扰及抗干扰） 无线电导航 同类图书排行榜 七日畅销榜 新书热卖榜 加载中，请稍候... 加载中，请稍候... iframe(src='//www.googletagmanager.com/ns.html?id=GTM-T947SH', height='0', width='0', style='display: none; visibility: hidden;')

Recno:: 67
URL:: http://item.jd.com/11754245.html

ParseText::
《C程序员从校园到职场》(周兆熊)【摘要 书评 试读】- 京东图书 你好，请登录    免费注册 我的订单 ◇ 我的京东 京东会员 企业采购 ◇ 手机京东 ◇ 关注京东 ◇ 客户服务 ◇ 网站导航 京东 搜索 > 我的购物车 全部商品分类 首页 服装城 美妆馆 超市 全球购 闪购 团购 拍卖 金融 图书  >  计算机与互联网  >  编程语言与程序设计  >  C程序员从校园到职场 试读 企业批量购书 Click here for international delivery 商品编号： 11754245 关注商品 分享 C程序员从校园到职场 自营图书音像全品类优惠券满100-5元，满200-16元，点击领取 周兆熊 著 累计评价 0 京 东 价： [折] [定价： ￥ ] (降价通知) 促销信息： 共 项促销 领　　券： 支　　持： 配 送 至： 服　　务： 合约套餐： 选择套餐与资费 请选择套餐内容 重选 　您选择的地区暂不支持合约机销售！ - + 抢购 选作礼物购买 选择号码和套餐 加入购物车 打白条 到货通知 购买电子书 ￥ 温馨提示： 更多商品信息 京东自营 在线客服： 服务支持： 推荐配件 优惠套装 人气单品 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 商品介绍 商品评价 (0) 加入购物车 C程序员从校园到职场 京东价： 客户端首单 满79送79 加载中，请稍候... 出版社： 人民邮电出版社 ISBN：9787115388490 版次：1 商品编码：11754245 包装：平装 开本：16开 出版时间：2015-09-01 用纸：胶版纸 页数：204 正文语种：中文 商品介绍加载中... 欢迎更新 扫一扫，精彩好书免费看 正品行货 京东商城向您保证所售商品均为正品行货，京东自营商品开具机打发票或电子发票。 全国联保 凭质保证书及京东商城发票，可享受全国联保服务（奢侈品、钟表除外；奢侈品、钟表由京东联系保修，享受法定三包售后服务），与您亲临商场选购的商品享受相同的质量保证。京东商城还为您提供具有竞争力的商品价格和 运费政策 ，请您放心购买！ 注：因厂家会在没有任何提前通知的情况下更改产品包装、产地或者一些附件，本司不能确保客户收到的货物与商城图片、产地、附件说明完全一致。只能确保为原厂正货！并且保证与当时市场上同样主流新品一致。若本商城没有及时更新，请大家谅解！ 权利声明： 京东上的所有商品信息、客户评价、商品咨询、网友讨论等内容，是京东重要的经营资源，未经许可，禁止非法转载使用。 注： 本站商品信息均来自于合作方，其真实性、准确性和合法性由信息拥有者（合作方）负责。本站不提供任何保证，并不承担任何法律责任。 印刷版次不同，印刷时间和版次以实物为准。 商品评价 加载中，请稍候... 全部评价 () 好评 () 中评 () 差评 () 有图片的评价 () 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 销售联盟 京东公益 友情链接 jdtyrd20 (山东) 购买日期 2015-10-09 书还行，看看对.. 2015-10-09 16:36:21 使用心得：书还行，看看对.. 秦京 (北京) 购买日期 2015-10-06 有点儿作用 &.. 2015-10-06 17:39:14 使用心得：有点儿作用 &.. xuhe2046 (江苏) 购买日期 2015-09-15 写的很好 2015-09-15 10:18:55 使用心得：写的很好 热门贴子 网友讨论圈 晒单贴 讨论贴 问答贴 圈子贴 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 加载中，请稍候... 浏览了该商品的用户还浏览了 加载中，请稍候... 相关分类 编程语言与程序设计 软件工程及软件方法学 数据库 操作系统 网络与通信 办公软件 图形图像/视频 网页制作 电子商务 IT服务管理 数码产品攻略 专用软件 考试认证 游戏 硬件与维护 单片机与嵌入式 计算机工具书 计算机期刊 辅助设计与工程计算 信息系统 计算机理论、基础知识 计算机安全 计算机组织与体系结构 人工智能 新手学电脑 计算机控制与仿真 同类图书排行榜 七日畅销榜 新书热卖榜 加载中，请稍候... 加载中，请稍候... iframe(src='//www.googletagmanager.com/ns.html?id=GTM-T947SH', height='0', width='0', style='display: none; visibility: hidden;')

Recno:: 68
URL:: http://my.csdn.net/xiaoxian8023

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 123 关注 599 粉丝 龙轩 计算机软件 | 中国-北京-海淀区 | 熟悉javaee开发，熟练掌握javascript，jquery，ajax等前台技术，有多年设计与开发经验。一直坚持边工作边充电，坚信只有不断超越自己，方可成功！ V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 123 人 被关注： 599 人

Recno:: 69
URL:: http://passport.csdn.net/content/loginbox/login.js

ParseText::


Recno:: 70
URL:: http://product.china-pub.com/4659988

ParseText::
信息通信技术百科全书――打开信息通信之门(精装) - china-pub网上书店 我的china-pub 我的china-pub 账户信息 消费中心 藏书阁 我的评论 |    手机互动 扫一扫下载手机客户端 | 图书团购 | 扫描我，关注团购信息，享更多优惠 购书卡 | 帮助中心 帮助中心 新手上路 购物向导 常见问题 联系我们 在线留言 缺货登记 | 在线咨询 关注官方微信，可随时查询订单状态 图书排行榜及图书信息 购物车 0 件 去结算 > 热门搜索： Java 大数据 数学分析 javascript 互联网+ 概率 高级搜索 全部图书分类 计算机图书 程序设计 | 软件工程 | 网络安全 分类 计算机理论 | 程序设计 | 软件工程 | 操作系统 | 数据库 | 计算机网络 | 计算机安全 | 计算机体系结构 | 硬件维护 | 办公软件 | 数码/设计 | 辅助设计 | 控制仿真 | 人工智能 | 信息系统 | 电子商务与计算机文化 | 考试认证 活动推荐 预售专区 | 畅销榜 | IT套装书 | 专题 C语言 | Java | Html5 | c++ | android | 数据库 | linux | iphone | 游戏开发 | php | objective-c | 大数据 | .NET | Javascript | MySQL | Hadoop | Python | 工业技术图书 通信技术 | 机械仪表 | 电子电工 分类 通信技术 | 汽车交通 | 化学工程 | 金属工艺 | 水利工程 | 航空航天 | 石油天然气 | 环境科学 | 能源动力 | 建筑 | 医学 | 其他科技 数理化图书 数学 | 物理 | 化学 分类 数学 | 物理 | 化学 经济管理图书 中国经济 | 企业管理 | 投资理财 分类 经济与经济学 | 财政税收 | 管理 | 励志 | 营销管理 | 中国经济 | 企业管理 | 投资理财 | 会计 | 经济学理论 | 审计 | 世界经济 | 行业经济 | 贸易经济 | 经济体制与改革 | 通俗读物 | 人力资源 | MBA与工商管理 | 企业 | 企业家 | 供应链管理 | 营销战略管理 | 生产与运作管理 | 电子商务管理 | 信息系统管理学 专题 股票书籍 | 教材 计算机 | 经济管理 分类 计算机专业教材 | 经管类专业教材 | 本科/研究生 | 高职高专 | 成人教育 | 中等职业 人文社科图书 小说 | 摄影器材 | 哲学 | 心理学 分类 小说 | 摄影器材 | 哲学 | 心理学 | 历史 | 政治 | 军事 | 素描绘画 | 文学 | 自然科普 | 外语 | 旅游 | 艺术 | 社会科学 | 文化 | 人物传记 | 健康 | 生活家居 | 美食 | 运动 | 时尚健身 | 婚恋 | 孕产育儿 | 家庭教育 | 动画 | 青春文学 | 文化教育 | 地理地图 | 少儿 | 法律 | 考试图书 考研 | 公务员考试 | 外语考试 分类 考研 | 公务员考试 | 外语类考试 | 学历考试 | 计算机考试 | 司法考试 | 财税外贸保险类考试 | 建筑工程类职称考试 | 医药卫生类职称考试 | 其他类职称考试 专题 2013年MBA/MPA/MPAcc考试指定教材 | 2013年考研 | 2014年考研 | 全年考试时间表 | 工具书 工具 分类 外语工具书 数字阅读 电子书 | 视频教程 | 按需印刷 分类 电子书 | 视频教程 | 按需印刷 首页 手机互动 新书 特价书 赠书 教材 电子书 视频教程 按需印刷 在线阅读 排行榜 书评 您的位置： china-pub网上书店  >  通信 > 通信技术理论与基础  > 信息通信技术百科全书――打开信息通信之门(精装) 信息通信技术百科全书――打开信息通信之门(精装) 中国通信学会信息通信科学传播专家团队组编 中兴通讯学院编著的通信技术实用工具书 具有权威性科学性

Recno:: 71
URL:: http://product.china-pub.com/4768115

ParseText::
C程序员从校园到职场 - china-pub网上书店 我的china-pub 我的china-pub 账户信息 消费中心 藏书阁 我的评论 |    手机互动 扫一扫下载手机客户端 | 图书团购 | 扫描我，关注团购信息，享更多优惠 购书卡 | 帮助中心 帮助中心 新手上路 购物向导 常见问题 联系我们 在线留言 缺货登记 | 在线咨询 关注官方微信，可随时查询订单状态 图书排行榜及图书信息 购物车 0 件 去结算 > 热门搜索： Java 大数据 数学分析 javascript 互联网+ 概率 高级搜索 全部图书分类 计算机图书 程序设计 | 软件工程 | 网络安全 分类 计算机理论 | 程序设计 | 软件工程 | 操作系统 | 数据库 | 计算机网络 | 计算机安全 | 计算机体系结构 | 硬件维护 | 办公软件 | 数码/设计 | 辅助设计 | 控制仿真 | 人工智能 | 信息系统 | 电子商务与计算机文化 | 考试认证 活动推荐 预售专区 | 畅销榜 | IT套装书 | 专题 C语言 | Java | Html5 | c++ | android | 数据库 | linux | iphone | 游戏开发 | php | objective-c | 大数据 | .NET | Javascript | MySQL | Hadoop | Python | 工业技术图书 通信技术 | 机械仪表 | 电子电工 分类 通信技术 | 汽车交通 | 化学工程 | 金属工艺 | 水利工程 | 航空航天 | 石油天然气 | 环境科学 | 能源动力 | 建筑 | 医学 | 其他科技 数理化图书 数学 | 物理 | 化学 分类 数学 | 物理 | 化学 经济管理图书 中国经济 | 企业管理 | 投资理财 分类 经济与经济学 | 财政税收 | 管理 | 励志 | 营销管理 | 中国经济 | 企业管理 | 投资理财 | 会计 | 经济学理论 | 审计 | 世界经济 | 行业经济 | 贸易经济 | 经济体制与改革 | 通俗读物 | 人力资源 | MBA与工商管理 | 企业 | 企业家 | 供应链管理 | 营销战略管理 | 生产与运作管理 | 电子商务管理 | 信息系统管理学 专题 股票书籍 | 教材 计算机 | 经济管理 分类 计算机专业教材 | 经管类专业教材 | 本科/研究生 | 高职高专 | 成人教育 | 中等职业 人文社科图书 小说 | 摄影器材 | 哲学 | 心理学 分类 小说 | 摄影器材 | 哲学 | 心理学 | 历史 | 政治 | 军事 | 素描绘画 | 文学 | 自然科普 | 外语 | 旅游 | 艺术 | 社会科学 | 文化 | 人物传记 | 健康 | 生活家居 | 美食 | 运动 | 时尚健身 | 婚恋 | 孕产育儿 | 家庭教育 | 动画 | 青春文学 | 文化教育 | 地理地图 | 少儿 | 法律 | 考试图书 考研 | 公务员考试 | 外语考试 分类 考研 | 公务员考试 | 外语类考试 | 学历考试 | 计算机考试 | 司法考试 | 财税外贸保险类考试 | 建筑工程类职称考试 | 医药卫生类职称考试 | 其他类职称考试 专题 2013年MBA/MPA/MPAcc考试指定教材 | 2013年考研 | 2014年考研 | 全年考试时间表 | 工具书 工具 分类 外语工具书 数字阅读 电子书 | 视频教程 | 按需印刷 分类 电子书 | 视频教程 | 按需印刷 首页 手机互动 新书 特价书 赠书 教材 电子书 视频教程 按需印刷 在线阅读 排行榜 书评 您的位置： china-pub网上书店  >  计算机 > 软件与程序设计 > C/Turbo C > C  > C程序员从校园到职场 C程序员从校园到职场 一线软件开发工程师倾心打造之作 引领读者踏上C软件开发之旅

Recno:: 72
URL:: http://product.dangdang.com/1196195454.html

ParseText::
《C程序员从校园到职场 周兆熊 9787115388490》周兆熊_简介_书评_在线阅读-当当图书 纽交所上市公司 当当自出版 手机当当 手机当当 当当购物客户端 下载购物App 首单立减5元 当当读书客户端 万本电子书 免费读 我的当当 我的积分 我的收藏 我的余额 我的评论 礼券/礼品卡 电子书架 企业采购 大宗采购 礼品卡采购 礼品卡激活 礼品卡使用 客户服务 帮助中心 自助退换货 联系客服 我要投诉 意见建议 欢迎光临当当，请 登录 免费注册 手机当当 当当手机客户端 随手查订单 随时享优惠 送至： 北京 天津 河北 山西 内蒙古 辽宁 吉林 黑龙江 上海 江苏 浙江 安徽 福建 江西 山东 河南 湖北 湖南 广东 广西 海南 重庆 四川 贵州 云南 西藏 陕西 甘肃 青海 宁夏 新疆 台湾 香港 澳门 钓鱼岛 林达作品集 全部分类 全部分类 尾品汇 图书 音像 影视 数字商品 时尚美妆 母婴用品 玩具 孕婴服饰 童装童鞋 家居日用 家具装饰 服装 鞋 箱包皮具 手表饰品 运动户外 汽车用品 食品 手机通讯 数码影音 电脑办公 大家电 家用电器 热搜 : 芈月传 圣诞老爸 成语词典 旅之绘本 蔡澜 高级搜索 购物车 我的订单 全部商品详细分类 图书 、 童书 、 电子书 服饰 、 内衣 鞋靴 、 箱包 运动户外 孕 、 婴 、 童 家居 、 家纺 、 汽车 家具 、 家装 、 康体 美妆 、 个人护理 、 成人 食品 、 茶酒 、 生鲜 腕表 、 珠宝饰品 、 眼镜 手机 、 数码 电脑办公 家用电器 当当礼品卡 图书  >  小说  >  中国当代小说  >  C程序员从校园到职场 周兆熊 9787115388490 送积分  259 分享到 查看大图 本商品只支持在手机客户端购买 C程序员从校园到职场 周兆熊 9787115388490 全新正版图书   当当价 &yen 25.90 定   价 ¥  35.00 （节省了  9.1 元） 促销 评论 0 条 配送 北京 至  作     者 周兆熊 出 版 社 人民邮电出版社 出版时间 2015-9-1 ＩＳＢＮ 9787115388490 所属分类 图书  >&nbsp 小说  >&nbsp 中国当代小说 数量 件   阳光润禾图书专营店 店铺总分 4.5 分 评分详细 与同行业对比 描述相符：4.3 高于20.20% 服务态度：4.3 低于20.20% 发货速度：4.3 -- 持平 正品保障 货到付款 该店铺大部分商品支持货到付款，本商品是否支持货到付款，请您以结算页为准 闪电发货 推荐商家 支持7天无理由退货 进入店铺 收藏店铺 拍档组合 优惠套餐 请至少保留一件商品     商品详情 商品评论 (%s条) 商品问答 (%s条) 快 速 导 航 版 次：1 页 数：204 字 数：4000 印刷时间： 开 本：16开 纸 张：胶版纸 印 次：0 包 装：平装 编辑推荐 暂时没有内容 内容推荐 要成为一名合格的C程序员，仅仅依靠课堂上的所学所练是远远不够的，实际的软件开发对从业者提出了更高的要求。本书重在讲述从学生成长为一名职业化C程序员的必备技能和关键要素，为众多同道中人指点迷津。<br />本书从C语言的发展历程讲起，分析了学校和职场的不同，并结合丰富的代码实例讲述了程序的样式、变量和函数、内存操作、文件、指针和结构体、算法和协议、程序重构、SQL语句和shell命令以及程序问题排查等诸多C程序开发中的典型问题。帮助读者形成良好的编码规范，增强其动手能力，深入了解软件研发流程及团队合作的重要性。<br />本书适用于在校计算机专业学生或该专业的应届毕业生阅读，也适用于刚入职的应届毕业生参考。通过阅读本书，读者将对软件开发有一个整体的认知，并能够准确定位自身不足，快速提高自身能力，轻松获得未来必经之路上的通关密码。 作者简介 周兆熊，硕士研究生毕业于南京邮电大学计算机应用技术专业，目前在中兴通讯重庆研发中心从事软件开发工作。在工作中善于学习和总结，多次被评为部门优秀员工。工作之外笔耕不辍，乐于分享，将自己工作及学习的心得发表在博客上，深受广大读者的好评。《信息通信技术百科全书》编者之一。 目录 暂时没有内容 <li tab_id="abstract"><a href="javascript:;"><span></span>编辑推荐</a></li><li tab_id="content"><a href="javascript:;"><span></span>内容推荐</a></li><li tab_id="authorintro"><a href="javascript:;"><span></span>作者简介</a></li><li tab_id="catalog"><a href="javascript:;"><span></span>目    录</a></li>

Recno:: 73
URL:: http://www.broadview.com.cn/

ParseText::
博文视点-计算机,电子书,技术社区-电子工业出版社 × 登录 注册 常用邮箱： 密码： 记住我 登录      还没有账号？立即注册 常用邮箱： 昵称： 密码： 重复密码： 验证码： 重新获取 博文视点用户协议 同意并注册      已有账号？立即登录吧 【如果您未在收件箱收到验证邮件，请到垃圾箱查收。】 重发验证邮件      忘记密码 登录 注册 首页     图书     电子书     写作     文章     下载   联系我们 | 关于我们 | 服务条款 | 管理规定 | 帮助中心 Copyright © 1998-2016 北京博文视点资讯有限公司.All Rights Reserved 出版物经营许可证 新出发 京 字第 丰140025号 京ICP证150227号   

Recno:: 74
URL:: http://www.zhouzhaoxiong.com/

ParseText::
周兆熊的博客 | 软件工程师的学习园地 周兆熊的博客 软件工程师的学习园地 搜索 独立博客：http://www.zhouzhaoxiong.com 我的CSDN博客：http://blog.csdn.net/zhouzhaoxiong1227 C语言 数据库技术 研发工作总结 程序问题排查 网络与算法 读书笔记 答读者问 杂谈 文章排序： 日期 > 随机 > 评论 > 点击 《C程序员从校园到职场》勘误 自从《C程序员从校园到职场》一书上市以来，受到了大家的欢迎，很多读者通过各种途径向我反馈了读书心得，在此表示感谢。但“金无赤足，人无完人”，书中的内容也存在一些纰漏。本文用于持续收集目前发现的本书的一些问题，也希望大家将对本书的一些意见或改进建议及时告知我。 本书的勘误如下：  1. P5，图1.4的内容不完整，需要替换为下图：    2. P100，程序中的“iLoopFlag”变量未用，可以删除，即... 2015年12月14日 杂谈 暂无评论 阅读全文 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ GitHub上的代码与CSDN博文之间的对应关系为： 代码 博文 https://github.com/zhouzxi/ReadConfig Linux下配置文件读取操作流程及其C代码实现：http://blog.csdn.net/zhouzhaoxiong1227/article/details/45563263 https://github.com/zhouzxi/SimpleLogSystem-Linux Linux下一个简单的日志系统的设计及其C代码实现：http://blog.csdn.net/zhouzhaoxiong1227/article/details/45917613 https://gith... 2015年11月10日 杂谈 评论 4 条 阅读全文 “大师兄”社区(http://www.daxixiong.com/)欢迎你！！！ 为什么要建立“大师兄”社区？ 我是吴军老师的忠实粉丝，他写的每一本书，包括《浪潮之巅》、《数学之美》、《文明之光》和《大学之路》，我都反复读了好几遍。《浪潮之巅》让读者领略了科技公司的兴亡交替和荣辱变迁，《数学之美》为我们带来了高深技术背后的数学原理，《文明之光》盘点了人类发展长河中的重要发明创造和历史事件，《大学之路》呈现了世界一流学府的办学理念、录取标准及人才培养方式。通过... 2015年10月13日 杂谈 暂无评论 阅读全文 《窗内窗外—一个程序员的成长史》系列来了！！！  (大家好，从今天起，我的微信公众号(zhouzxi)会连续推送《窗内窗外—一个程序员的成长史》系列。本系列以我本人从学校到职场的经历为原型，同时结合了我对软件开发工作、程序员的学习和生活的认识和感悟，欢迎大家阅读。你的点赞和支持是我写作的动力。下面是本系列的第一篇文章，让我们跟随主人公代是雄的脚步一起去体验程序员生活吧！) 翻开日历，已是2012年的4月。代是雄，中国一个普通高校的的硕士研究... 2015年09月15日 杂谈 暂无评论 阅读全文 《C程序员从校园到职场》带领大家从校园走向职场 七夕节刚过，就有好消息传来：本人新书《C程序员从校园到职场》正式出版并在各大电商平台上发售了！ 下面，让我们一起来欣赏一下纸质书的“风采”吧。   本书目录 第1章  概述 1.1 C语言的发展历史       1.2 C语言的主要特点       1.3 常用工具软件      1.4 小结      第2章  学校到职场    2.1 认清自身不足      2.2 破除错误观念      2.3 工作所需软技能的培养      2.4 小结      第3章  程... 2015年08月25日 杂谈 暂无评论 阅读全文 蝉噪林逾静，鸟鸣山更幽—金刀峡游记 “蝉噪林逾静，鸟鸣山更幽”，在繁忙的工作之余，我们都希望到一个幽静的、充满鸟语花香的环境中去放松一下。哪儿有这样的地方呢？金刀峡就是一个绝佳的休闲游玩之地。 金刀峡位于重庆市北碚区金刀峡镇，华蓥山西南麓，海拔880米。它是国家4A级旅游景区，主要景点包括犀牛洞、藏刀洞、中峡天然浴场、狮头峡、弥勒佛等。传说峡中有一把金刀，每当夜晚时分，金光闪闪照耀峡谷，金刀峡因此而得名。 7月11日，天... 2015年07月20日 杂谈 评论 2 条 阅读全文 《C程序员：从校园到职场》出版预告(5)：一种情怀，几分感悟 本书封面草图已出，我们一起来看一下吧。 回首自己在校的学习时光，感慨万千。在本科的时候，我算得上是标准的“好学生”：专业成绩名列前茅，积极参加课外活动并获得了一些奖，成功保研。但现在想来，我认为自己在以下几个方面存在不足： 1) 没有利用好互联网这个工具来学习。在四年里，我采用的学习方式还是传统的通过看书来学习，而互联网上拥有更多的信息，而且更加方便获取。举个例子，在我上学的四年... 2015年07月09日 杂谈 评论 4 条 阅读全文 《C程序员：从校园到职场》出版预告(4)：从“散兵游勇”到“正规部队” 看过电视剧《楚汉传奇》的朋友应该对这个场景还有印象：当刘邦第一次去找项羽帮忙的时候，他们一行人看到了项羽军营是如何练兵的，想到自己练兵的方法，当时就震惊了。“刘家军”就像下面图片中的“散兵游勇”。 而“项家军”则是训练有素的“正规部队”。 当然，可能会有朋友立马出来反驳道：“‘散兵游勇’咋呢？最终刘邦还不是赢了。”我们这里暂且不讨论最终的是非成败，单就训练士兵来说，项羽要超出刘邦很多。 ... 2015年06月30日 杂谈 暂无评论 阅读全文 《C程序员：从校园到职场》出版预告(3)：从“阳春白雪”到“下里巴人” 自打小时候起，我就非常喜欢看重庆本土的方言剧《生活麻辣烫》(强烈推荐想学重庆话的朋友观看此节目，里面有很多美女帅哥哦 )。我喜欢看这个节目，并不是因为它的剧情有多么的好，也不是因为里面有多少“白富美”和“高富帅”，而是因为里面的内容很贴近生活，仿佛就发生在自己的左邻右舍。相对于某些言情剧里面的“阳春白雪”，我更喜欢看生活剧里面的“下里巴人”。因为后者更加的真实，更容易让人产生共鸣。  ... 2015年06月25日 杂谈 暂无评论 阅读全文 《C程序员：从校园到职场》出版预告(2)：从“百花齐放”到“一枝独秀” 古语云“治大国如烹小鲜”，写作一本书和写作一篇文章在本质上是一样，首先要确定自己要想写作的内容是什么。 对于本科学生来说，每个人都有至少一个专业，大学四年自己主要的学习内容就围绕专业来展开；对于研究生来说，每个人都至少有一个研究方向，在校三年的学习计划要围绕这个方向来安排；当然，对于入职的程序员来说，每个人也会有至少一项工作内容，自己或领导制定的工作计划的基础就是工作内容(具体... 2015年06月22日 杂谈 暂无评论 阅读全文 1 2 3 4 ... 20 下页 站内搜索 最新文章 《C程序员从校园到职场》勘误 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ “大师兄”社区(http://www.daxixiong.com/)欢迎你！！！ 《窗内窗外—一个程序员的成长史》系列来了！！！ 《C程序员从校园到职场》带领大家从校园走向职场 蝉噪林逾静，鸟鸣山更幽—金刀峡游记 热评文章 1 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ 2 “大师兄”社区(http://www.daxixiong.com/)欢迎你！！！ 3 《C程序员从校园到职场》勘误 最新评论 周兆熊 on 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ 91jufan on 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ 周兆熊 on 《信息简史》第七章人物、事件、名言收集小感 周兆熊 on 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ 墨白读书 on 《信息简史》第七章人物、事件、名言收集小感 bateer on 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ 周兆熊 on 蝉噪林逾静，鸟鸣山更幽—金刀峡游记 shui7777 on 蝉噪林逾静，鸟鸣山更幽—金刀峡游记 标签云 C语言 Python 代码 八皇后 大学 工具 建议 开发，测试 总结 扩展 数学 数据库 文档 测试 游戏 游玩 研发 研究生 程序版式 算法 论文 评价 读者 资料 音乐会 站长邮箱：zhouzxi@126.com Copyright © 周兆熊的博客 保留所有权利.   渝ICP备14008219 Theme   Ality 点此设置菜单 用户登录 记住登录信息 分享到：
