
Recno:: 0
URL:: http://blog.csdn.net/azurechina/rss/list

ParseText::


Recno:: 1
URL:: http://blog.csdn.net/bisal/rss/list

ParseText::


Recno:: 2
URL:: http://blog.csdn.net/blog_index/article/details/42120933

ParseText::
对Windows安全软件的思考 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 对Windows安全软件的思考 标签： security 2014-12-24 10:47 1011人阅读 评论 (0) 收藏 举报 分类： 系统杂谈 （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 最近以来，我重新翻阅了几本Windows系统下的安全类书籍，同时上网查阅资料，很意外地发现，很多几年前流行的牛叉技术，虽然还在书本和网页上历历在目，但实际上多数已不能在新系统中使用了。我由此也发生了一些个人的思考，虽然多年不接触安全技术，但思考的能力还在。 分析安全问题的来源 总是因为存在安全隐患，才有了攻击动作的发生 ； 而因为有了大量的攻击，才继而产生了安全防护的需求 。所以一定要研究安全隐患的来源。总体上分类，安全问题可以划分为本地和分布式两种，所以安全攻击的方法也可以分为本地攻击和分布式网络攻击。 先看存在于本地机器上的安全隐患，也就是在一台安装了Windows系统的PC机内部的安全隐患，把它分成下面两类： 第一类，是 OS 架构本身存在的结构性的设计缺陷或不周到 ，从而导致了被后门软件利用，并据此发动的针对本地资源的攻击。这些不周到主要体现在OS为一系列的Hook技术提供了便利。存在于Windows系统上的Hook技术，从1990年代以来就一直很热门。概言之，它包括静态修改二进制文件和执行时动态修改运行逻辑这两种方法。 但我发现，若干年以来微软已通过一些很基础的手段，基本上消除了这些缺陷或不周到。它通过 数字签名 的方法，令大部分的静态修改的方法失效。现在数字签名只对运行于64位OS或启动了Secure Boot的32位OS的驱动程序强制使用，以及对所有的Metro应用强制使用，但将来不排除它也会服务程序甚至桌面用户程序应用强制使用。通过数字签名的方法来检查二进制文件的完整性，任何静态修改都会破坏文件完整性，从而令文件加载失败。 通过 Patch Guard 的方法，令OS的内核文件和关键数据得到保护，这令针对OS系统的运行时Hook完全失效。Patch Guard机制动态检查系统的完整性，一旦检测到修改就令系统蓝屏。流行的IDT、SSDT和运行时补丁等Hook手法，从此全都失效了。 另外，微软新OS不断增强对Access Control List（ACL）的管理，强化系统对象的安全性。 这些基本架构的变化，足以令大部分传统的后门技术失效。我想，这正是诺顿软件惊呼“ 安全软件已死 ”的原因所在。 第二类，我称之为 特例性的软件模块中存在的设计失误或代码 Bug 。操作系统中还存在大量的软件模块，它们不是系统的基础功能模块，但依然被很多软件所使用。这些模块可能由微软提供，也可能由第三方提供。但因为这些软件模块数量庞杂，应用范围局限，通用性不强，接口不统一等特点，所以一般的安全软件可能无暇顾及它们，或不能完全覆盖它们，后门软件也因此能找到生存空间。 比如前段时间爆发的基于Open SSL的Heart-bleed漏洞和Linux/Unix系统上的Bash Shell漏洞，都源于软件实现中存在的代码Bug。这类问题的本质是因为软件的设计和编写都是由程序员完成的，人类天生做不到百分百面面俱到，只是看问题发生时的严重程度而已。 探索分布式网络应用的安全技巧 如果软件模块是运用在分布式应用中的，则当其安全隐患爆发时，危害程度将非常地大，远远超过单机系统上产生的危害。所以值得对网络安全做专门的思考。 对于一个存在于分布式（网络）协议和实现模块中的设计不周，也可以通过一定的技术创新加以改善。我举分布式拒绝服务攻击（DDoS）的例子来说明可能的情况： 当恶意攻击者组织成千上万的“肉机”对指定的服务器进行无效而巨量的网络请求，以在短时间内急遽消耗其网络资源，从而令其失去正常的响应能力，这是DDoS攻击的实现方式。如果脱离技术细节来思考这个问题的话，会发现攻击者总是使用非法的途径来获取他的“肉机”资源。因为使用合法途径来组织这些机器不仅过于昂贵而且很容易被发现。攻击者将木马程序种入到目标系统令其感染，从而成为其“肉机”。可见肉机本身也是受害者。在DDoS攻击过程中，成千上万的受害者“肉机”，懵懵懂懂地向受害者“服务器”发起攻击，令事件变成了 两位受害者之间的战争 ，而真正的敌人永远躲在幕后。 从我收集到的资料看，当前的服务器一般采用消极防御的策略躲避肉机轰炸，没有办法采取主动措施以制止肉机的攻击。作为同病相怜的两个人，如果能够做到声气相通的话，肉机未必不会幡然悔悟。但基于C/S的架构下，如果没有client的配合，server端没法主动投递消息或指令给客户端。在此例中，客户端是木马程序，也根本不可能响应server端的请求。但不妨让我们想一想一种可能性，就是恰好在肉机端存在一个能解析server指令的client软件。当server检查到此肉机参与到DDoS攻击后，就尝试向此Client投递消息。最低效果是，当Client收到消息后向用户弹出一个风险警示的提示框，建议用户紧急采取查杀木马的措施。用户可能会立刻采取有效的措施，也可能不会，但如果命中率达到一定高度，将能有效并快速减缓DDoS攻击的力度；从长远看，肉机作为攻击者最有价值的资源，通过此方式，将大大削弱攻击者所拥有的有生力量。 我将此种方法称为“ 云防护 ”，即不仅仅依靠服务器单机的力量， 也同样把受裹挟的肉机拉拢到己方阵营，与服务器协同作战 。 客户端的普及是有效实施“云防护”的基础。国内BAT公司的客户端软件有很大的装机量，如果加以利用，应该很有前景。 远见创新 在过去的若干年中，我逐渐领悟到一个知识，通过对基础框架的分析和研究而进行的理论和实践创新，远比单纯的技术复制和实现重要得多。在计算机生态环境发生重要改变，从重单机PC端运用转向轻客户端的云互联运用的当下，安全的内涵与外延也注定会发生重大改变。 当诺顿感概“安全软件已死”时，他们所感慨的是伴随XP及更老OS而远逝的因OS本身漏洞丛生而造就的安全辉煌，但诺顿自己当然非常清楚，安全是永不日落的永恒话题，只是对象发生了悄然改变而已。这不，最新消息显示，诺顿现在已经开始对服装（口袋）进行安全认证了。这是诺顿进行转变和创新的一端。其他的客商如何呢？ 上一篇 多了一个“星号” 下一篇 GPU异步V-Sync技术方案 顶 1 踩 0 我的同类文章 系统杂谈 （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309578次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 3
URL:: http://blog.csdn.net/blog_index/article/details/43759079

ParseText::
GPU异步V-Sync技术方案 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 GPU异步V-Sync技术方案 标签： V-Sync GPU 2015-02-12 10:00 782人阅读 评论 (0) 收藏 举报 分类： 散文随笔 （6） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 2014年中，我在公司内部提交了一个名为“ 异步Timing ”（又名“ 异步V-Sync ”）创新方案，用于解决GPU使用V-Sync同步所导致的问题。但十分可惜的是，Intel的创新审核委员没有通过我的方案，只礼貌性地回了一封感谢邮件。这件事情本来尘埃落定，我已不作多想。但最近很多IT新闻介绍了AMD在今年CES上所展示的一项 FreeSync 技术，惊喜颇多。我发现AMD的FreeSyn技术所要解决的问题和采取的策略，与我的“异步Timing”的设计方案十分相似。我写作此文，向大家介绍V-Sync的基本概念和产生的问题，以及异步Timing方案的细节。 在计算机图形显示系统中，这几个概念是相互关联的：Timing（时序），V-Sync（垂直同步），Refresh Rate（刷新率）。它们是从同一个地方衍生出的概念：Timing Controller（时序控制器，简称T-Con）经过配置后产生连续的Timing时序，Timing时序决定了何时会产生一个V-Sync中断；显示器每收到一个V-Sync中断，便开始一次显示刷新；显示器每秒刷新的次数就对应了它的Refresh Rate（刷新率）。 GPU使用的T-Con所产生的都是 等时  Timing （Isochronous Timing） ：即固定频率的Timing，在固定时间间隔内产生一个 脉冲（Pulse），脉冲的上升沿代表将产生一个V-Sync中断。系统必须同步于Timing：显示器在收到V-Sync时进行显示刷新，显卡根据V-Sync进行图形渲染（Render）。 等时  Timing Timing是显卡设备和输出设备进行同步的关键。等时Timing产生固定频率的脉冲信号，以将显卡的渲染（Render）和monitor的显示（Display）进行同步。但是显卡每次渲染任务的轻重程度是不相等的，根据被处理数据的复杂程度，渲染所耗费的时间长短不一。换句话说：渲染是天然不等时的，而显示器总是等时地刷新内容，二者将因此产生矛盾。 另一方面，很多时候，系统显示静态图像或桌面内容长时间不变，这使得GPU在很长时间内没有新内容可供其渲染，而显示器却一如既往地进行刷新，显示内容却未改变。 等时Timing导致了两个方面的缺点：渲染过程中的FPS（Frames Per Second每秒帧数）损失，显示工程中的电能损失。 FPS 损 失 显卡的渲染操作要和V-Sync同步，以避免画面的撕裂。假设只有一个Frame Buffer的情况下，平均渲染一个Frame需要1.1 个V-Sync时间。第一个V-Sync到来时当前渲染还没有结束，只能继续占用下一个V-Sync周期。在第二个V-Sync周期，显卡其实只需要0.1时间。但因为渲染必须与V-Sync同步，使得显卡在剩下的0.9时间内不能再使用Frame Buffer以免污染其中未被显示的帧数据。等到第二个V-Sync到来时，显卡提交Frame Buffer内容后，才能安全地继续渲染新的下一帧。在这个示例中，显卡为了与V-Sync同步，它对硬件的使用效率只有11/20（～50%），严重浪费了硬件资源。 在使用单Frame Buffer的情况下，硬件资源的浪费最大接近于1/2。使用Double Frame Buffer或Tri Frame Buffer可改善这种情况：使用Double Frame Buffer配置的最大的浪费接近于1/3，使用Tri Frame Buffer配置的最大浪费接近于1/4。硬件资源的浪费，导致一些Frame的渲染被延迟或丢弃，从而导致FPS损失。 很多3D软件和游戏提供选项让用户禁用V-Sync同步以充分利用硬件的渲染能力。但禁用V-Sync会导致画面撕裂的情况，体验很不好。以Single Frame Buffer为例： 在第二个V-Sync周期内，第一个Frame已经在0.1时间内渲染完成，显卡如果不等待下一个V-Sync中断而继续进行渲染操作，就会把新的内容填入到Frame Buffer中，从而覆盖掉上一次渲染出的一部分内容。在下一个V-Sync到来时，用户看到的就是一个两帧上下重叠的撕裂画面。 能耗损 失 和D3D软件追求FPS最大化的情况相反，用户在一般使用电脑时，如使用office软件或浏览网页时，显示内容的更新速度是很慢的，可能几秒或十几秒钟保持桌面内容不变。但LCD显示器并不知道这一点，对于60Hz的固定刷新率而言，显示器会把相同的显示内容每秒钟重复刷新屏幕60次。导致了很大的能耗损失。这种能耗损失是结构性的，如此大的结构性能耗损失，对于移动设备更是十分地致命。 异步  Timing 基于等时Timing的上述缺点，本文将引入异步 Timing。他的核心原理是：显卡完成一帧内容的渲染后，动态产生V-Sync中断通知显示器刷新；动态V-Sync产生后，显卡可以立即渲染新的帧内容，不必有任何的等待；而显示器只在必要时才刷新屏幕，极大地降低了能耗。下图是关系图。 下图描述了异步 Timing的形态，它产生非等时的脉冲信号，每个脉冲表示一个V-Sync的产生。当没有脉冲时，表示显卡还没有渲染出新的帧内容，在此期间，显示器不必刷新。 实现方 法 本节提出两种可能的异步 Timing的实现方法。 方法 1 ：动态脉 冲 改造当前使用的等时 Timing的控制器（T-Con），让它能够接受外部指令，并在接到外部指令时实时产生一个脉冲，从而产生V-Sync中断。 方法 2 ：特殊通信通道 在显卡和显示器之间建立特殊的数据通道来通知异步V-Sync的产生，可借助现有的数据通道，如DVI/HDMI的I2C Channel，DP的Aux Channel。 异步  TIMING  的频 率 异步 Timing没有固定的频率，只有当显卡有渲染好的内容时，才产生一个信号。现实情况下，大多数LCD显示器的电子元器件有漏电的情况，会导致信号衰退，所以需要维持一个最低的屏幕刷新率来抵消信号衰退的影响。可以让显示器提供最小刷新率信息，并由显卡来满足。 显示器端的处 理 除了提供最小刷新率信息外，显示器端的改变很少。显示器在收到V-Sync中断时，以原来的逻辑处理新的帧内容。唯一变化是原来等时的V-Sync变成了非等时的。也就是显示器在处理完一帧内容后，等待时间将变得长短不一。 下图中VP是处理一帧内容的全部时间，VDISP是处理可视部分内容的时间，VFP是处理完可视内容后的回扫时间。在等时 Timing中，VFP之后就紧接着是下一帧的VS时间；但异步 Timing中，VFP之后是长短不一的等待时间。 上一篇 对Windows安全软件的思考 顶 0 踩 0 我的同类文章 散文随笔 （6） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309579次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 4
URL:: http://blog.csdn.net/caroline_wendy/article/details/15625495

ParseText::
博客说明 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 博客说明 标签： Mystra C++ 算法 2013-11-12 20:24 2580人阅读 评论 (4) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 欢迎大家评论文章, 有问题先Google, 疑难点我会耐心解答.  本博客会经常更新, 所有原创文章, 都是亲自所写, 如有好的工作请站内联系. 主要讲解关于编程的一些知识, 帮助喜欢编程的朋友, 同学. 艺无止境, 与君共勉. 欢迎大家提供有意义的评论. 希望和大家共同进步. 上一篇 C++ - 两数交换, 不引入第三个变量 下一篇 C++ - 继承(inheritance) 和 动态绑定(dynamic binding) 简介 顶 12 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900285次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 5
URL:: http://blog.csdn.net/caroline_wendy/article/details/47424615

ParseText::
热爱编程 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 热爱编程 标签： Mystra 杂文 热爱编程 2015-08-11 18:20 664人阅读 评论 (4) 收藏 举报 看到下文, 感觉自己弱爆了, 要重新好好的”热爱编程”. 95年的时候，我高中同学郭军买了一本Borland C++手册，我们两个人此后两年没机会碰真的电脑，没见过Tubro C更没见过Borland C++，生看这本书，看了两年，百看不厌。做不到，别轻易说，我热爱编程，热爱学习。 97年，父母在高考前三天给我买了一台电脑，整个假期，全部在电脑面前度过，把VB的全部文档看完，自己学会VB，啃Delphi和Borland C++的英文文档。一个假期胖了30斤，进入100公斤阵营。做不到，别轻易说，我热爱编程，热爱学习。 99年第一次接触互联网，那天晚上和4个学长用一台电脑在宿管员的办公室学习上网，最后靠着年轻抗困，他们都回寝室睡觉了，我一个人从12点钟，一直扛到早晨9点钟，直到师兄把猫带回给老师以前，都一直在用Google搜索，渴求知道多一点关于互联网和这个世界。做不到，别轻易说，我热爱编程，热爱学习。 01年，进入第一家公司，从趴在桌子底下连接网线的工作做起，后来做了这家公司的工资系统、饭卡系统和打卡系统，以及这几个系统的联动。做不到，别轻易说，我热爱编程，热爱学习。 07年，我和霍矩两个个人网站日流量都不过万的年轻人开始做技术咨询工作。从不会用反向代理，自学到给客户做了一个方案，到客户日流量从15万到上百万都没有改过。做不到，别轻易说，我热爱编程，热爱学习。 后来的春节，我从没有正经写过Java程序出发，用Lucene出发，写了7天写了一个搜索系统。从日搜索量单机扛10万，到后来日搜索量单机可扛2000万。做不到，别轻易说，我热爱编程，热爱学习。 我有个朋友，一个女孩儿，13-4的时候，辍学在家务农，16－7岁到北京打工，18-19岁的时候，在姐姐的理发店做理发师，挣800一个月。直到有一天听说某青鸟出来，做程序员可以做白领，可以挣2000，求姐姐姐夫出钱，去培训。后来几经辗转，自学转型，被开过无数次，自己奋斗过无数次，做过ASP, PHP, iOS, Android程序员，目前月薪近两万，自己买了两套房子。做不到，别轻易说，我热爱编程，热爱学习。 我司的主程Sycx，学校没正经学过编程，也没有自己学过，一直是一个混子。直到遇到iPod touch，喜欢上苹果，自己安装黑苹果，学了半年，到上海找到我问有没有工作机会。我看了他的作品，了解了他的故事，觉得基础再差没有关系，有真学习能力的人，都有机会，结果，现在是我司最牛逼的程序员。做不到，别轻易说，我热爱编程，热爱学习。 好吧，除了惯常的装逼炫耀一下以外，我到底想说什么？ 这行业这20年，是中国最好的行业，不管你的出身，你的学历，你的背景，你的户口，只要你能干活，你肯学习，你总是可以找到不错的工作，甚至可以拥有傲人的薪水。 但是，这个行业中的大多数年轻人，只会说，我热爱编程，我热爱学习。 但是，真的需要他付出努力的时候，他会说： 你能推荐几本书么？ 有好的教材么？ 有易学易懂的视频么？ 有中文资料么？ 这个技术我不懂，你可以教我么？ 我英语不好。 我不会翻墙。 我们学校没教。 这东西也太难了。 学这东西有前途么？ 苹果是不是要盛级而衰了？ 等等，等等…… 但是，你能不能稳住，问问自己，我真的热爱编程，我真的热爱学习么？ 想清楚这个问题，对你的价值，太大了，值得你用一个小时去好好思考，一天，甚至一年。 苦海无边，回头是岸，等你明白了，当当当当当，回来跟老衲来唱这首Only you吧！ 上一篇 Java - Thinking in Java 第8章 习题 下一篇 Android - 日期类的使用 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900286次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 6
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107595

ParseText::
升级CompileSdk和重构主页 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 升级CompileSdk和重构主页 标签： Mystra Android CompileSdk 2015-11-30 06:58 476人阅读 评论 (2) 收藏 举报 分类： Work随笔 （7） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 计步器的编译SDK版本比较低, 今天升级了最新版本-23, 出来了很多问题, 并且都解决了, 又简单地重构了主页. 让我们来看看吧, 给想用新特性的工程做一些参考. 1. 升级CompileSdk 升级SDK之后, Apache的Http库被遗弃了, 需要使用Library重新引入. compileSdkVersion 23 buildToolsVersion '23.0.1' ... dependencies { compile 'com.android.support:appcompat-v7:23.1.0' compile 'com.android.support:design:23.1.0' } 引入 useLibrary 'org.apache.http.legacy' 需要同时升级gradle版本1.3.1 classpath 'com.android.tools.build:gradle:1.3.1' 顺便解决了Lambda表达proguard警告的问题, 参考 . 以后在添加第三方库时, 一定要注意配合Proguard, 添加相应的设置. 升级以后, 项目使用ActionBar全部都无法全部显示了, 前后各有一处留白. 原因是新版本对ActionBar添加了额外属性, 控制边界, 需要设置AppBar的Styles. <style name= "CYActionBar" parent= "@style/Widget.AppCompat.ActionBar" > ... <item name= "contentInsetStart" >0dp</item> <item name= "contentInsetEnd" >0dp</item> </style> contentInset分别表示前后的留白, 设置0dp则可以避免. 推荐 Picasso , 非常好用的下载库, 还有Git管理软件SourceTree. 2. 重构主页 主页以前写法是在ActionBar中, 添加多个按钮, 监听按钮点击, 替换Fragment. 这次使用TabLayout+ViewPager的架构, 更好地交互效果. 界面 <?xml version="1.0" encoding="utf-8"?> < LinearLayout android:id = "@+id/pedometer_fragment_content" xmlns:android = "http://schemas.android.com/apk/res/android" xmlns:app = "http://schemas.android.com/apk/res-auto" android:layout_width = "match_parent" android:layout_height = "match_parent" android:background = "@android:color/transparent" android:orientation = "vertical" > < LinearLayout android:layout_width = "match_parent" android:layout_height = "?attr/actionBarSize" android:background = "@color/actionbar_background" android:baselineAligned = "false" android:gravity = "center" android:orientation = "horizontal" > < android.support.design.widget.TabLayout android:id = "@+id/main_tl_tab_bar" android:layout_width = "0dp" android:layout_height = "?attr/actionBarSize" android:layout_weight = "1" android:background = "@android:color/transparent" app:tabIndicatorColor = "@android:color/transparent" app:tabMode = "scrollable" /> < LinearLayout android:layout_width = "?attr/actionBarSize" android:layout_height = "?attr/actionBarSize" android:gravity = "center" > < de.hdodenhof.circleimageview.CircleImageView android:id = "@+id/main_piv_portrait" android:layout_width = "@dimen/d28dp" android:layout_height = "@dimen/d28dp" android:background = "@android:color/transparent" android:scaleType = "centerCrop" android:src = "@drawable/tab_portrait" app:border_color = "@color/gray" app:border_width = "@dimen/d1dp" /> </ LinearLayout > </ LinearLayout > < View android:layout_width = "match_parent" android:layout_height = "@dimen/d0.5dp" android:background = "@color/gray_line" /> < android.support.v4.view.ViewPager android:id = "@+id/main_vp_container" android:layout_width = "match_parent" android:layout_height = "match_parent" app:layout_behavior = "@string/appbar_scrolling_view_behavior" /> </ LinearLayout > TabLayout的 tabMode="scrollable" 属性, 使Tab全部靠近左侧; tabIndicatorColor="@android:color/transparent" 游标颜色透明, 即隐藏. ViewPager的Adapter逻辑. /** * 首页ViewPager的Adapter * <p> * Created by wangchenlong on 15/11/10. */ public class MainPageAdapter extends FragmentPagerAdapter { private static final int PAGE_NUM = 3 ; private PedometerFunctionFragment mFunctionFragment; // 核心功能页面 private CompetitionFragment mCompetitionFragment; // 好友竞赛页面 private CenterFragment mCenterFragment; // 数据中心页面 public MainPageAdapter (FragmentManager fm) { super (fm); mFunctionFragment = new PedometerFunctionFragment(); mCompetitionFragment = new CompetitionFragment(); mCenterFragment = new CenterFragment(); } @Override public Fragment getItem ( int position) { switch (position) { case 0 : return mFunctionFragment; case 1 : return mCompetitionFragment; case 2 : return mCenterFragment; } return null ; } @Override public int getCount () { return PAGE_NUM; } } 首页逻辑, 根据Tab依次添加图片. @DrawableRes private static final int TAB_IMAGES[] = { R.drawable.tab_counter, R.drawable.tab_contest, R.drawable.tab_center }; ... MainPageAdapter adapter = new MainPageAdapter(getSupportFragmentManager()); mVpContainer.setAdapter(adapter); mTlTabBar.setupWithViewPager(mVpContainer); for (int i = 0 ; i < mTlTabBar.getTabCount(); i++) { TabLayout.Tab tab = mTlTabBar.getTabAt(i); if (tab != null) { tab.setIcon(TAB_IMAGES[i]); } } 注意图片资源, 根据选择状态切换颜色, 红(选中)->灰(未选中). <?xml version="1.0" encoding="utf-8"?> < selector xmlns:android = "http://schemas.android.com/apk/res/android" > < item android:drawable = "@drawable/tab_counter_light" android:state_selected = "true" /> < item android:drawable = "@drawable/tab_counter_gray" android:state_selected = "false" /> </ selector > 效果 OK, 终于把想做的事情做了. 上一篇 AppBar简述 下一篇 使用RecyclerView实现滚动控件 顶 1 踩 0 我的同类文章 Work随笔 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900297次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 7
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107599

ParseText::
使用RecyclerView实现滚动控件 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 使用RecyclerView实现滚动控件 标签： Mystra Android Recycler View 2015-11-30 07:03 898人阅读 评论 (11) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 滚动控件的实现方式有很多, 使用RecyclerView也比较简单. 做了一个简单的年龄滚动控件, 让我们来看看RecyclerView的使用方式, 主要有以下几点: (1) 对齐控件中心位置. (2) 计算滚动距离. (3) 高亮中心视图. (4) 实时显示中心数据. (5) 停止时自动对齐. (6) 滚动时, 设置按钮状态开关. 1. 框架 主要关注RecyclerView部分逻辑. /** * 初始化年龄滑动条 */ private void initAgeList () { LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity(), LinearLayoutManager.HORIZONTAL, false ); mRvAgeList.setLayoutManager(mLayoutManager); mAgeAdapter = new PersonAgeAdapter(START_NUM, END_NUM); mRvAgeList.setAdapter(mAgeAdapter); mRvAgeList.addOnScrollListener( new RecyclerView.OnScrollListener() { @Override public void onScrollStateChanged (RecyclerView recyclerView, int newState) { super .onScrollStateChanged(recyclerView, newState); mBDownStep.setEnabled( false ); // 效果在暂停时显示, 否则会导致重绘异常 if (newState == RecyclerView.SCROLL_STATE_IDLE) { mAgeAdapter.highlightItem(getMiddlePosition()); mRvAgeList.scrollToPosition(getScrollPosition()); mLastValue = getMiddlePosition(); UserInfoManager.setAge(getMiddlePosition() + START_NUM); mBDownStep.setEnabled( true ); // 滑动时不可用, 停止时才可以 } } @Override public void onScrolled (RecyclerView recyclerView, int dx, int dy) { // 值是实时增加 mTvAgeValue.setText(String.valueOf(getMiddlePosition() + START_NUM)); } }); mAgeAdapter.highlightItem(getMiddlePosition()); } 设置一个水平布局 LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity(), LinearLayoutManager.HORIZONTAL, false ); mRvAgeList.setLayoutManager(mLayoutManager); 添加Adapter, 设置起始和结束位置. mAgeAdapter = new PersonAgeAdapter(START_NUM, END_NUM); mRvAgeList.setAdapter(mAgeAdapter); 2. Adapter Adapter定制一些功能, 如标示指向中心位置, 数据联动显示, 高亮Item等. /** * 年龄的适配器 * <p> * Created by wangchenlong on 15/11/12. */ public class PersonAgeAdapter extends RecyclerView.Adapter<PersonAgeAdapter.AgeItemViewHolder> { public static final int ITEM_NUM = 7 ; // 每行拥有的Item数, 必须是奇数 private int mFrom; // 起始 private int mTo; // 终止 private int mHighlight = - 1 ; // 高亮 public PersonAgeAdapter ( int from , int to) { mFrom = from ; mTo = to; } @Override public AgeItemViewHolder onCreateViewHolder (ViewGroup parent, int viewType) { View item = LayoutInflater. from (parent.getContext()). inflate(R.layout.view_age_item, parent, false ); // 设置Item的宽度 ViewGroup.LayoutParams lp = item.getLayoutParams(); lp.width = getItemStdWidth(); return new AgeItemViewHolder(item); } @Override public void onBindViewHolder (AgeItemViewHolder holder, int position) { holder.getTextView().setText(String.valueOf(mFrom + position)); // 高亮显示 if (isSelected(position)) { holder.getTextView().setTextSize( 30 ); holder.getTextView().setTextColor(ChunyuApp.getAppContext().getResources().getColor(R.color.black)); } else { holder.getTextView().setTextSize( 20 ); holder.getTextView().setTextColor(ChunyuApp.getAppContext().getResources().getColor(R.color.gray_line)); } } // 高亮中心, 更新前后位置 public void highlightItem ( int position) { mHighlight = position; int offset = ITEM_NUM / 2 ; for ( int i = position - offset; i <= position + offset; ++i) notifyItemChanged(i); } // 判断是否是高亮 public boolean isSelected ( int position) { return mHighlight == position; } @Override public int getItemCount () { return mTo - mFrom + 1 ; } // 获取标准宽度 public static int getItemStdWidth () { DisplayMetrics displayMetrics = ChunyuApp.getAppContext().getResources().getDisplayMetrics(); return displayMetrics.widthPixels / ITEM_NUM; } // ViewHolder public class AgeItemViewHolder extends RecyclerView.ViewHolder { private TextView mTextView; public AgeItemViewHolder (View itemView) { super(itemView); mTextView = (TextView) itemView.findViewById(R.id.item_age_value); mTextView.setTag( this ); } public TextView getTextView () { return mTextView; } } } 每个单元格宽度是屏幕宽度的 奇数 分之一, 填充屏幕, 则起始指向中心. @Override public AgeItemViewHolder onCreateViewHolder (ViewGroup parent, int viewType) { View item = LayoutInflater. from (parent.getContext()). inflate(R.layout.view_age_item, parent, false ); // 设置Item的宽度 ViewGroup.LayoutParams lp = item.getLayoutParams(); lp.width = getItemStdWidth(); return new AgeItemViewHolder(item); } 单数Item数量, 则中心的指示器必指向 中心Item 的中心. 根据选中状态, 更新Item样式. @Override public void onBindViewHolder(AgeItemViewHolder holder, int position) { holder .getTextView () .setText (String .valueOf (mFrom + position)) ; // 高亮显示 if (isSelected(position)) { holder .getTextView () .setTextSize ( 30 ) ; holder .getTextView () .setTextColor (ChunyuApp .getAppContext () .getResources () .getColor (R .color .black )) ; } else { holder .getTextView () .setTextSize ( 20 ) ; holder .getTextView () .setTextColor (ChunyuApp .getAppContext () .getResources () .getColor (R .color .gray _line)) ; } } 设置高亮, 把中心位置高亮, 两边恢复, 通知Adapter重绘ViewHolder. // 高亮中心, 更新前后位置 public void highlightItem ( int position) { mHighlight = position; int offset = ITEM_NUM / 2 ; for ( int i = position - offset; i <= position + offset; ++i) notifyItemChanged(i); } // 判断是否是高亮 public boolean isSelected ( int position) { return mHighlight == position; } notifyItemChanged() 会重绘所选择的页面. 获取宽度, 把一行显示Item数量设置为单数, 则中心指向一个Item. // 获取标准宽度 public static int getItemStdWidth () { DisplayMetrics displayMetrics = ChunyuApp.getAppContext().getResources().getDisplayMetrics(); return displayMetrics.widthPixels / ITEM_NUM; } 注意RecyclerView不能移动半个单元, 每行数量是单数时, 则必会指向中心. 3. 滚动逻辑 在滚动时, 实时更新页面显示; 在停止时, 更新高亮和存储数据; 滚动结束时, 激活按钮. mRvAgeList.addOnScrollListener( new RecyclerView.OnScrollListener() { @Override public void onScrollStateChanged (RecyclerView recyclerView, int newState) { super .onScrollStateChanged(recyclerView, newState); mBDownStep.setEnabled( false ); // 效果在暂停时显示, 否则会导致重绘异常 if (newState == RecyclerView.SCROLL_STATE_IDLE) { mAgeAdapter.highlightItem(getMiddlePosition()); mRvAgeList.scrollToPosition(getScrollPosition()); mLastValue = getMiddlePosition(); UserInfoManager.setAge(getMiddlePosition() + START_NUM); mBDownStep.setEnabled( true ); // 滑动时不可用, 停止时才可以 } } @Override public void onScrolled (RecyclerView recyclerView, int dx, int dy) { // 值是实时增加 mTvAgeValue.setText(String.valueOf(getMiddlePosition() + START_NUM)); } }); mAgeAdapter.highlightItem(getMiddlePosition()); } /** * 获取中间位置 * * @return 当前值 */ private int getMiddlePosition () { return getScrollPosition() + (PersonAgeAdapter.ITEM_NUM / 2 ); } /** * 获取滑动值, 滑动偏移 / 每个格子宽度 * * @return 当前值 */ private int getScrollPosition () { return ( int ) (( double ) mRvAgeList.computeHorizontalScrollOffset() / ( double ) PersonAgeAdapter.getItemStdWidth()); } 判断滚动的距离单位, 偏移总距离/单个Item宽度. private int getScrollPosition () { return ( int ) (( double ) mRvAgeList.computeHorizontalScrollOffset() / ( double ) PersonAgeAdapter.getItemStdWidth()); } computeHorizontalScrollOffset() 获取RecyclerView的偏移总位移. 中间位置, 还要加上半行Item数量 private int getMiddlePosition () { return getScrollPosition() + (PersonAgeAdapter.ITEM_NUM / 2 ); } 判断滚动是否停止. if (newState == RecyclerView.SCROLL_STATE_IDLE) 在滚动停止时, 自动对齐. mRvAgeList .scrollToPosition (getScrollPosition()) ; 调用需要高亮显示的Item. mAgeAdapter .highlightItem (getMiddlePosition()) ; 注意在滚动停止时, 更新高亮比较好, 否则重绘速度较慢, 会影响滚动效果. 推荐, 介绍RecyclerView的 文章 , 特别详细. OK, 我们可以根据这些定制各式各样的滚动条了! 上一篇 升级CompileSdk和重构主页 下一篇 PercentLayout的固定比例 顶 2 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900288次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 8
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107829

ParseText::
PercentLayout的固定比例 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 PercentLayout的固定比例 标签： Mystra Android Percent Layout 2015-11-30 08:08 544人阅读 评论 (1) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 PercentLayout是百分比控件, 使用百分比属性创建控件. 除了常用的百分比, 也可以使用固定比例进行布局(aspect ratio). Percent相关Layout包括: PercentFrameLayout \ PercentRelativeLayout . Gradle依赖 compile 'com.android.support:percent:23.1.0' Layout布局, 提供宽度和比例, 自动适配高度. < android.support.percent.PercentRelativeLayout android:layout_width = "match_parent" android:layout_height = "wrap_content" android:layout_below = "@+id/main_text" > < ImageView android:layout_width = "0dp" android:layout_height = "0dp" android:background = "#FF1493" app:layout_aspectRatio = "@fraction/header_aspectRatio" app:layout_widthPercent = "50%" /> </ android.support.percent.PercentRelativeLayout > 比例的资源文件, fractions.xml . <resources> <item name= "header_aspectRatio" type= "fraction" > 178 %</item> < /resources> 178% 的含义是16:9. 参考 OK, 可以通过比例, 更好的设置百分比控件. 上一篇 使用RecyclerView实现滚动控件 下一篇 ReactNative调试 顶 1 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900295次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 9
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107841

ParseText::
ReactNative调试 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ReactNative调试 标签： Mystra React Native 2015-11-30 08:12 448人阅读 评论 (1) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 1. 缺少模块 根目录, 输入 npm install , 会自动安装所需模块. 具体会调用 package.json 内容, 下载 dependencies 依赖模块. { " name ": "ChunyuYuEr" , " version ": "0.0.1" , " private ": true , " scripts ": { " start ": "react-native start" } , " dependencies ": { " react-native ": "^0.14.2" , " react-native-communications ": "0.0.6" } } 2. 调试 Ctrl+Command+Z 启动调试页 Debug in Chrome , 会Chrome进行调试. 使用 Command+Alt+J , 可以在控制台看到调试信息. 3. Android运行 启动服务: npm start 启动程序: ./gradlew android:app:installDebug 4. 新建项目 npm install -g react -native -cli react -native init [ AwesomeProject ] 5. 启动服务 首先需要保证项目中含有 node_modules , 默认项目中都会增加, 或是使用 npm install 找到之后, 在 ./node_modules/react-native 中, 使用 ./packager/packager .sh 通过shell脚本, 启动服务. 6. 配置数据源 初始化项目( react-native init [xxx] )较慢, 可以通过更新数据源的方式提速. npm config set registry=http://registry .npm .taobao .org / 配置地址 .npmrc . registry=http://registry .npm .taobao .org / 遇到其他小技巧, 我会继续更新. 上一篇 PercentLayout的固定比例 下一篇 ReactNative的Atom编辑器 顶 1 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900289次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 10
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107845

ParseText::
ReactNative的Atom编辑器 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ReactNative的Atom编辑器 标签： Mystra React Native RN 2015-11-30 08:15 655人阅读 评论 (7) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 工欲善其事, 必先利其器. ReactNative作为Facebook贡献的库, 里面有些定制的东西. 官方推荐 Atom+Nuclide , 那么就尝试一下Atom. 在测试过程中, 发现安装Nuclide之后, Atom编辑器特别卡顿, 原因不明, 所以又测试了一些其他插件. 我来罗列几个必须的. 1. Atom 下载 Atom 编辑器, 安装, 介绍参考文档. 2. Atom-React 插件 Atom-React , 这个插件非常好! 点击 Atom -> Install Shell Commands , 安装Shell命令, 再输入 apm install react 即可安装, 也可以直接搜索安装, Command+, , 选择 Install 搜索. 语法高亮(Syntax Highlighting); 缩进(Indentation), 搜索插件 -> Auto Indent ; 搜索插件 Command+Shift+P , 直接输入 Intent , 参考视频. 代码折叠(Code Folding); 片段提示(Snippets); 片段提示的缩写需要符合文件后缀名 jsx, js 等. JSX格式化(JSX Reformatting), 插件搜索 Reformat , 选择 Reformat JSX . HTML到JSX转换(HTML to JSX conversion), 转换代码样式; 自动补全(Autocomplete); 自动闭合标签(Automatic Closing Tag); 3. 跳转 跳转对于调试代码和阅读代码非常重要, 当然使用插件, 需要下载 hyperclick 和 js-hyperclick , 就可以通过引用跳转到需要类和方法. 4. 注释插件 注释对于写和读代码都非常重要, 推荐插件 docblockr , 搜索即可. /** * 滚动条, fractionalPosition滚动条长度, progressBarSize当前大小 * @param {size:滚动条大小} {progress:过程} * @return {View} [里外两层视图, 背景白框黑底, 显示白框] */ 5. 类型显示 atom-typescript 类型显示和其他强大的功能, 参考文档. 6. 管理配置 安装了很多包之后, 可以通过编辑器管理; 如果要恢复初始, 删除 .atom 即可. OK, 现在可以编写ReactNative程序了, 如果发现其他插件, 我会继续更新. Enjoy it. 上一篇 ReactNative调试 下一篇 ReactNative的ViewPagerAndroid简述 顶 1 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900299次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 11
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107851

ParseText::
ReactNative的ViewPagerAndroid简述 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ReactNative的ViewPagerAndroid简述 标签： Mystra React Native ViewPager Android 2015-11-30 08:19 542人阅读 评论 (1) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 ViewPager是Android中比较常见的页面切换控件, 同时, 在 UIExplorerApp 中也有 ViewPagerAndroid 的示例. 通过使用这个控件, 理解ReactNative的实现逻辑. 我们现在来分析一下ViewPager的使用方式和ReactNative的编程要点, 本文注释也很清晰. 效果 1. 准备 新建ReactNative的项目. npm install -g react -native -cli react -native init [ TestViewPager ] -g 是全局, react-native-cli 是react-native的命令行工具(command line interface). 安装需要管理员权限(sudo), 安装一次即可, 使用react-native命令. 参考 . 修改项目架构, 主页直接跳转至ViewPager模块. 'use strict' ; var React = require ( 'react-native' ); var { AppRegistry, } = React; var ViewPagerModule = require ( './ViewPagerModule/index' ) AppRegistry.registerComponent( 'TestViewPager' , () => ViewPagerModule); 2. 概述 ViewPager包含若干滑动页面; 点赞选项-模拟页面交互; 按键和滚动条-模拟滚动监听. 'use strict' var React = require( 'react-native' ); var { View, Text, Image, TouchableNativeFeedback, // 触碰响应 TouchableOpacity, // 触碰更换透明度的属性 ViewPagerAndroid, // Android的ViewPager } = React; // Styles var styles = require( './style' ); var PAGES = 5 ; // 页数 // 颜色 var BGCOLOR = [ '#8ad3da' , '#eecde2' , '#e682b4' , '#b7badd' , '#f1c7dd' ]; // 本地图片地址 var IMAGE_URIS = [ require( './images/jessicajung.png' ), require( './images/tiffany.png' ), require( './images/seohyun.png' ), require( './images/taeyeon.png' ), require( './images/yoona.png' ), ]; // 名称 var NAMES = [ 'Jessica' , 'Tiffany' , 'Seohyun' , 'Taeyeon' , 'Yoona' ]; /** * 点赞功能页面 * @param {likes: 点赞数} * @return {点赞视图} [点赞按钮, 动态增加点赞数] */ var LikeCount = React.createClass({ // 初始化状态 getInitialState: function() { return { likes: 0 , }; }, // 点击增加 onClick: function() { this .setState({likes: this .state.likes + 1 }); }, render: function() { var thumbsUp = '\uD83D\uDC4D' ; // 图标 return ( <View style = {styles.likeContainer}> <TouchableOpacity onPress={ this .onClick} style={styles.likeButton}> <Text style={styles.likesText}> {thumbsUp} </Text> </TouchableOpacity> <Text style={styles.likesText}> { this .state.likes + ' 喜欢' } </Text> </View> ); }, }); /** * 按钮: 添加点击状态(enabled)和文本(text) * @param {enabled:点击状态} {text:显示文本} {onPress:点击事件} * @return {TouchableNativeFeedback} [触摸反馈的视图] */ var Button = React.createClass({ _handlePress: function() { if ( this .props.enabled && this .props.onPress) { this .props.onPress(); } }, render: function() { return ( <TouchableNativeFeedback onPress={ this ._handlePress}> <View style={[styles.button, this .props.enabled ? {} : styles.buttonDisabled]}> <Text style={styles.buttonText}> { this .props.text} </Text> </View> </TouchableNativeFeedback> ); } }); /** * 滚动条, fractionalPosition滚动条长度, progressBarSize当前大小 * @param {size:滚动条大小} {progress:过程} * @return {View} [里外两层视图, 背景白框黑底, 显示白框] */ var ProgressBar = React.createClass({ render: function() { var fractionalPosition = ( this .props.progress.position + this .props.progress.offset); var progressBarSize = (fractionalPosition / (PAGES - 1 )) * this .props.size; return ( <View style={[styles.progressBarContainer, {width: this .props.size}]}> <View style={[styles.progressBar, {width: progressBarSize}]}/> </View> ); } }); var ViewPagerModule = React.createClass({ /** * 初始化状态 * @return {状态} [页面] */ getInitialState: function() { return { page: 0 , // 当前位置 progress: { // Progress位置 position: 0 , offset: 0 , } }; }, // 页面选择 onPageSelected: function(e) { this .setState({page: e.nativeEvent.position}); }, // 页面滚动 onPageScroll: function(e) { this .setState({progress: e.nativeEvent}); }, // 移动页面 move: function(delta) { var page = this .state.page + delta; this .go(page); }, // 跳转页面 go: function(page) { this .viewPage.setPage(page); this .setState({page}); }, render: function() { var pages = []; for ( var i= 0 ; i<PAGES; i++) { // 背景 var pageStyle = { backgroundColor: BGCOLOR[i % BGCOLOR.length], alignItems: 'center' , padding: 20 , } pages.push( <View key={i} style={pageStyle} collapsable={ false }> <Image style={styles.image} resizeMode={ 'cover' } source={IMAGE_URIS[i%PAGES]} /> <Text style={styles.nameText}> {NAMES[i%PAGES]} </Text> <LikeCount /> </View> ); } var {page} = this .state; return ( <View style={styles.container}> <ViewPagerAndroid style={styles.viewPager} initialPage={ 0 } onPageScroll={ this .onPageScroll} onPageSelected={ this .onPageSelected} ref={viewPager => { this .viewPage = viewPager;}}> {pages} </ViewPagerAndroid> <View style={styles.buttons}> <Button text= "首页" enabled={page > 0 } onPress={() => this .go( 0 )}/> <Button text= "上一页" enabled={page > 0 } onPress={() => this .move(- 1 )}/> <Text style={styles.buttonText}> 页 {page+ 1 } / {PAGES} </Text> { /*进度条*/ } <ProgressBar size={ 80 } progress={ this .state.progress}/> <Button text= "下一页" enabled={page < PAGES - 1 } onPress={() => this .move( 1 )}/> <Button text= "尾页" enabled={page < PAGES - 1 } onPress={() => this .go(PAGES - 1 )}/> </View> </View> ); }, }); module.exports = ViewPagerModule; 引入RN的原生模块 var { View, Text, Image, TouchableNativeFeedback, // 触碰响应 TouchableOpacity, // 触碰更换透明度的属性 ViewPagerAndroid, // Android的ViewPager } = React; TouchableNativeFeedback , 接触时会受到原生的响应; TouchableWithoutFeedback , 接触时无响应. TouchableOpacity , 接触时会改变透明度. 在加入 onclick 方法时, 可以模拟按钮视图. 定义控件: LikeCount 点赞, Button 按钮, ProgressBar 滚动条. 3. 点赞(LikeCount)控件 likes 存储喜欢的数量. 点击时, 更新数量状态, 刷新页面. 其中, 喜欢按钮 是触碰控件, 在接触时会改变透明度(Opacity). /** * 点赞功能页面 * @param {likes: 点赞数} * @return {点赞视图} [点赞按钮, 动态增加点赞数] */ var LikeCount = React.createClass({ // 初始化状态 getInitialState: function() { return { likes: 0 , }; }, // 点击增加 onClick: function() { this .setState({likes: this .state.likes + 1 }); }, render: function() { var thumbsUp = '\uD83D\uDC4D' ; // 图标 return ( <View style = {styles.likeContainer}> <TouchableOpacity onPress={ this .onClick} style={styles.likeButton}> <Text style={styles.likesText}> {thumbsUp} </Text> </TouchableOpacity> <Text style={styles.likesText}> { this .state.likes + ' 喜欢' } </Text> </View> ); }, }); 直接调用, 即可使用. < LikeCount /> state的like属性, 仅仅作用于当前页面, 每次更新时刷新. 注意: 一定要谨慎使用 全局state , 这样会刷新整个页面, 影响效率. 4. 按钮(Button)控件 添加 使用状态 , 是否可以点击, 根据状态修改视图样式和点击回调. /** * 按钮: 添加点击状态(enabled)和文本(text) * @param {enabled:点击状态} {text:显示文本} {onPress:点击事件} * @return {TouchableNativeFeedback} [触摸反馈的视图] */ var Button = React.createClass({ _handlePress: function() { if ( this .props.enabled && this .props.onPress) { this .props.onPress(); } }, render: function() { return ( <TouchableNativeFeedback onPress={ this ._handlePress}> <View style={[styles.button, this .props.enabled ? {} : styles.buttonDisabled]}> <Text style={styles.buttonText}> { this .props.text} </Text> </View> </TouchableNativeFeedback> ); } }); 在RN中, 并没有提供Button视图, 可以使用 Touchable 类的视图, 设置点击事件, 如 TouchableNativeFeedback , 根据状态, 修改按钮的样式和点击. 注意: props 表示属性, 在使用视图时提供. 使用Button, 设置 text 显示, enabled 状态, onPress 点击事件. <Button text= "首页" enabled={page > 0 } onPress={ () => this .go( 0 )}/> 5. 滚动条(ProgressBar)控件 主要监听ViewPager的滚动事件, 这和Android的滚动非常类似, fractionalPosition 是偏移比例, progressBarSize 是偏移量. /** * 滚动条, fractionalPosition滚动条长度, progressBarSize当前大小 * @param {size:滚动条大小} {progress:过程} * @return {View} [里外两层视图, 背景白框黑底, 显示白框] */ var ProgressBar = React.createClass({ render: function() { var fractionalPosition = ( this .props.progress.position + this .props.progress.offset); var progressBarSize = (fractionalPosition / (PAGES - 1 )) * this .props.size; return ( <View style={[styles.progressBarContainer, {width: this .props.size}]}> <View style={[styles.progressBar, {width: progressBarSize}]}/> </View> ); } }); 控件需要设置 ProgressBar 的属性 progress (滚动位置)和 size (大小). 使用控件, 属性: size大小; progress进度状态, 其中position是位置, offset是偏移. progress: { // Progress位置 position: 0 , offset: 0 , } ... <ProgressBar size={ 80 } progress={this.state.progress}/> 注意: progress是主页面属性, 重置状态时, 刷新全部页面. 6. ViewPager页面 根据页面定制属性, 根据页面ID设置不同图片和文字. for (var i=0; i < PAGES; i ++) { // 背景 var pageStyle = { backgroundColor: BGCOLOR [ i % BGCOLOR.length ], alignItems: ' center ', padding: 20 , } pages.push ( < View key = {i} style = {pageStyle} collapsable = {false} > < Image style = {styles.image} resizeMode = {'cover'} source = {IMAGE_URIS[i%PAGES]} /> < Text style = {styles.nameText} > {NAMES[i%PAGES]} </ Text > < LikeCount /> </ View > ); } 注意设置图片资源时, 使用 IMAGE_URIS =['xxx.png'] 和 require(IMAGE_URIS[i%PAGES]) 会显示模块丢失. 在数组 IMAGE_URIS 使用 require('./images/jessicajung.png') 加载source就可以. 思考很久的问题… ViewPager页面 < View style = {styles.container} > < ViewPagerAndroid style = {styles.viewPager} initialPage = {0} onPageScroll = {this.onPageScroll} onPageSelected = {this.onPageSelected} ref = {viewPager => {this.viewPage = viewPager;}}> {pages} </ ViewPagerAndroid > < View style = {styles.buttons} > < Button text = "首页" enabled = {page > 0} onPress={() => this.go(0)}/> < Button text = "上一页" enabled = {page > 0} onPress={() => this.move(-1)}/> < Text style = {styles.buttonText} > 页 {page+1} / {PAGES} </ Text > {/*进度条*/} < ProgressBar size = {80} progress = {this.state.progress} /> < Button text = "下一页" enabled = {page < PAGES - 1 } onPress = {() => this.move(1)}/> < Button text = "尾页" enabled = {page < PAGES - 1 } onPress = {() => this.go(PAGES -1)}/> </ View > </ View > 使用方法, 监听 ViewPagerAndroid 的事件, onPageScroll 页面滚动, onPageSelected 页面选择, 按钮关联页面. 核心在于 go 方法, 设置 state 的 viewPage 页. // 跳转页面 go: function (page) { this .viewPage.setPage(page); this .setState({page}); }, 7. Styles 引入 styles , 使用独立文件. // Styles var styles = require ( './style' ); 样式 'use strict' ; var React = require ( 'react-native' ); var { StyleSheet, } = React; var styles = StyleSheet.create({ buttons: { flexDirection: 'row' , height: 40 , backgroundColor: 'pink' , alignItems: 'center' , justifyContent: 'space-between' , }, // 按钮可点击状态 button: { flex: 1 , width: 0 , margin: 2 , borderColor: 'gray' , borderWidth: 1 , backgroundColor: 'gray' , }, // 按钮非点击装 buttonDisabled: { backgroundColor: 'black' , opacity: 0.5 , }, buttonText: { fontSize: 12 , color: 'white' , textAlign: 'center' , }, // 文字显示 nameText: { fontSize: 16 , margin: 4 , color: 'white' , textAlign: 'center' , }, container: { flex: 1 , backgroundColor: 'white' , }, image: { flex: 1 , width: 300 , padding: 20 , }, likeButton: { backgroundColor: 'rgba(0, 0, 0, 0.1)' , borderColor: '#333333' , borderWidth: 1 , borderRadius: 5 , flex: 1 , margin: 8 , padding: 8 , }, likeContainer: { flexDirection: 'row' , }, likesText: { flex: 1 , fontSize: 18 , alignSelf: 'center' , }, progressBarContainer: { height: 10 , margin: 5 , borderColor: '#eeeeee' , borderWidth: 2 , }, progressBar: { alignSelf: 'flex-start' , flex: 1 , backgroundColor: '#eeeeee' , }, viewPager: { flex: 1 , }, }); module.exports = styles; 里面包含各个控件的样式, 主要使用了Flex+ RN的Style . 动画效果 Github 下载地址 OK, 通过实现简单的ViewPagerAndroid学习了很多知识. 上一篇 ReactNative的Atom编辑器 下一篇 ReactNative的ScrollView简述 顶 0 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900292次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4)

Recno:: 12
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107853

ParseText::
ReactNative的ScrollView简述 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ReactNative的ScrollView简述 标签： Mystra Android Scroll View 2015-11-30 08:21 594人阅读 评论 (2) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 本来想写点ListView的东西, 但是在发现ScrollView实现列表(list)时, 有很多需要注意的地方, 就写了一个小Demo简要说明一下. 功能非常简单, 在滑动ScrollView中, 设置多个图片, 每个图片可以点击, 弹出图片信息. 1. 配置 从一个HelloWorld工程开始, 搭建项目. 入口 index.android.js , 跳转模块 RnListView . 'use strict' ; var React = require ( 'react-native' ); var { AppRegistry, } = React; var RnListView = require ( './list_view_module/index' ); AppRegistry.registerComponent( 'RnListView' , () => RnListView); 2. 主工程 含有资源信息, 卡片视图, 批量创建方式, 主视图. 'use strict' var React = require ( 'react-native' ); var { Text, View, Image, ScrollView, TouchableOpacity, ToastAndroid, } = React // 样式 var styles = require ( './style' ); // 图片 var IMAGES = [ require ( './images/total_girls.png' ), require ( './images/jessicajung.png' ), require ( './images/kimhyoyeon.png' ), require ( './images/seohyun.png' ), require ( './images/sooyoung.png' ), require ( './images/sunny.png' ), require ( './images/taeyeon.png' ), require ( './images/tiffany.png' ), require ( './images/yoona.png' ), require ( './images/yuri.png' ), ]; // 名字 var NAMES = [ 'Girls\' Generation' , 'Jessica Jung' , 'Kim Hyo Yeon' , 'Seo Hyun' , 'Soo Young' , 'Sunny' , 'Taeyeon' , 'Tiffany' , 'Yoona' , 'Yuri' ]; // Card视图 var Card = React.createClass({ showToast: function (num: i) { ToastAndroid.show(NAMES[num].toString(), ToastAndroid.SHORT); }, render: function () { return ( < TouchableOpacity style = {styles.button} onPress = {() => this.showToast(this.props.num)} > < View style = {styles.blank} /> < Image style = {styles.image} resizeMode = {'cover'} source = {this.props.img} /> < View style = {styles.blank} /> </ TouchableOpacity > ); } }); // 批量创建 var createCardRow = (img, i) => < Card key = {i} img = {img} num = {i} /> ; var ListViewModule = React.createClass({ render: function () { var verticalScrollView = ( < ScrollView style = {styles.container} > {IMAGES.map(createCardRow)} </ ScrollView > ); return verticalScrollView; } }); module.exports = ListViewModule; 3. 卡片视图 最外层是触摸感应控件( TouchableOpacity ), 触摸会改变透明度, 包含样式和Toast显示, 内部视图是 左右留白 , 和 中部卡片区域 . 属性是 num 模块位置, img 视图资源. // Card视图 var Card = React.createClass({ showToast: function (num: i) { ToastAndroid.show(NAMES[num].toString(), ToastAndroid.SHORT); }, render: function () { return ( < TouchableOpacity style = {styles.button} onPress = {() => this.showToast(this.props.num)} > < View style = {styles.blank} /> < Image style = {styles.image} resizeMode = {'cover'} source = {this.props.img} /> < View style = {styles.blank} /> </ TouchableOpacity > ); } }); 点击事件 onPress , 使用回调方式 ()=> , 否则直接触发. 通过设置空白View实现, 左右留空, 中间匹配(match). 批量设置, 把资源数组 IMAGES , 映射(map)成字典数组 (img, pos) , 设置Card的key和其他属性. var createCardRow = (img, i) => < Card key = {i} img = {img} num = {i} /> ; 在循环视图中, 每个独立视图, 都需要单独设置唯一key, 定制单独接口. 参考 key 属性不能直接使用, 需要具体id时, 额外传入. 主模块, 使用图片资源创建多个视图. var ListViewModule = React.createClass({ render: function () { var verticalScrollView = ( <ScrollView style={styles.container}> {IMAGES.map(createCardRow)} </ScrollView> ); return verticalScrollView; } }); 4. 样式 滚动控件, 每一行, 行内三个控件. 'use strict' var React = require ( 'react-native' ); var { StyleSheet, } = React; var styles = StyleSheet.create({ container: { flex: 1 , }, button: { justifyContent: 'space-between' , alignItems: 'center' , flexDirection: 'row' , margin: 10 , }, image: { flex: 1 , height: 200 , borderRadius: 5 , borderWidth: 2 , borderColor: '#FF1492' , }, blank: { width: 10 , } }); module.exports = styles; container 是ScrollView的布局, 设置flex属性 1 ; button 是每行布局, 包含左右空白和中间视图, 间距10; image 是图片布局, 只设置高, 宽度通过flex自动匹配; blank 是空白布局, 宽度占位10. JavaScript是一门非常清晰的语言, flex样式也很优雅, 配合ReactNative有着不一样的体验. ReactNative可能会改变移动开发的格局. 现在已经日渐成熟, 还要看下一步的发展. Github 下载地址 OK, Enjoy it! 上一篇 ReactNative的ViewPagerAndroid简述 下一篇 ReactNative生成签名APK 顶 1 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900287次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 13
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107859

ParseText::
ReactNative生成签名APK - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ReactNative生成签名APK 标签： Mystra React Native apk 2015-11-30 08:23 665人阅读 评论 (3) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 ReactNative项目最终要面向市场, 生成签名的Apk应用程序, 并发布到各大市场. 官网已经提供了参考, 非常简单, 现在啰嗦几句. 1. 去掉开发模式 修改主页入口, setUseDeveloperSupport(false) , 去掉开发者支持功能. mReactInstanceManager = ReactInstanceManager .builder () .setApplication (getApplication()) .setBundleAssetName ( "index.android.bundle" ) .setJSMainModuleName ( "index.android" ) .addPackage (new MainReactPackage()) .setUseDeveloperSupport (false) .setInitialLifecycleState (LifecycleState .RESUMED ) .build () ; 2. Gradle Gradle是生成Apk的工具, 配置签名和Proguard. android { ... signingConfigs { release { storeFile file( 'key/SpringRainKey' ) storePassword 'chunyu' keyAlias 'chunyu' keyPassword 'chunyu' } } buildTypes { release { signingConfig signingConfigs.release minifyEnabled true // Set this to true to enable Proguard proguardFiles getDefaultProguardFile( "proguard-android.txt" ), "proguard-rules.pro" } } } 设置签名 signingConfigs : 存储文件(storeFile)位置 , 存储密码(storePassword) , key别名(keyAlias) , key密码(keyPassword) . 生成Release包模式. signingConfig signingConfigs .release 启用Proguard. minifyEnabled true 注意 signingConfigs 需要在 buildTypes 后面, 否则找不到方法. 3. Proguard内容 这个官方文档没有提到, 不配置会报错. java.lang.NoSuchMethodError: no static or non- static method "Lcom/facebook/react/bridge/ReadableNativeArray;.getType(I)Lcom/facebook/react/bridge/ReadableType;" 在 proguard-rules.pro 中, 保留React的所有代码, 添加在最后. # 禁止混淆react -keep public class com.facebook.react.** { public protected *; } 4. 执行 在 android 文件夹内执行 ./gradlew installRelease 即可生成Release包, 并安装入手机, 最终包的位置. ./android/app/build/outputs/apk/app-release .apk 参考 ReactNative项目开发模式已经很成熟了, 我们可以把开发完的项目, 通过以上方式, 生成最终线上的包进行发布. OK, Enjoy it! 上一篇 ReactNative的ScrollView简述 下一篇 ReactNative的ListView简述 顶 1 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900298次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 14
URL:: http://blog.csdn.net/caroline_wendy/article/details/50107865

ParseText::
ReactNative的ListView简述 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ReactNative的ListView简述 标签： Mystra RN ListView 2015-11-30 08:24 856人阅读 评论 (4) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 上篇文章 , 熟悉了ScrollView, 这次来看看ListView. 把稍复杂一点的控件熟悉一下, 再通过具体的项目学习框架. JSX的语法非常简洁, 写出同样的功能, 要清晰许多. 1. 准备 新建一个项目, 修改入口 index.android.js . 'use strict' ; var React = require ( 'react-native' ); var { AppRegistry, } = React; var ListViewModule = require ( './list_view_module/index' ); AppRegistry.registerComponent( 'RnListView' , () => ListViewModule); 在 list_view_module 文件夹中, 编写我们的Demo. 2. 样式 ListView 的基本样式就是 flex: 1 , 需要定义行(row)样式( styles .button ), 图片样式( styles.image )是圆角矩形. 'use strict' var React = require ( 'react-native' ); var { StyleSheet, } = React; var styles = StyleSheet.create({ button: { justifyContent: 'space-between' , alignItems: 'center' , flexDirection: 'row' , margin: 10 , }, image: { flex: 1 , height: 200 , borderRadius: 5 , borderWidth: 2 , borderColor: '#FF1492' , }, }); module.exports = styles; 3. 逻辑 逻辑非常简单: 连续显示图片, 每行可以点击, 提示图片内容. 'use strict' var React = require ( 'react-native' ); var { Text, Image, TouchableOpacity, // 按钮 ListView, View, ToastAndroid, } = React; var styles = require ( './styles' ); // 图片 var IMAGES = [ require ( './images/total_girls.png' ), require ( './images/jessicajung.png' ), require ( './images/kimhyoyeon.png' ), require ( './images/seohyun.png' ), require ( './images/sooyoung.png' ), require ( './images/sunny.png' ), require ( './images/taeyeon.png' ), require ( './images/tiffany.png' ), require ( './images/yoona.png' ), require ( './images/yuri.png' ), ]; // 名字 var NAMES = [ 'Girls\' Generation' , 'Jessica Jung' , 'Kim Hyo Yeon' , 'Seo Hyun' , 'Soo Young' , 'Sunny' , 'Taeyeon' , 'Tiffany' , 'Yoona' , 'Yuri' ]; var ListViewModule = React.createClass({ getInitialState: function () { var ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2}); return { dataSource: ds.cloneWithRows( this ._genRows()) }; }, _genRows: function () { var re = []; for ( var i= 0 ; i<IMAGES.length; ++i) { re.push([ NAMES[i%NAMES.length], IMAGES[i%IMAGES.length] ]); } return re; }, // 点击事件 _pressRow: function (rowToast: string) { ToastAndroid.show(rowToast, ToastAndroid.SHORT); }, _renderRow: function (rowData: array, sectionID: number, rowID: number) { return ( < TouchableOpacity onPress = {() => this._pressRow(rowData[0])}> < View > < View style = {styles.button} > < Image style = {styles.image} source = {rowData[1]} /> </ View > </ View > </ TouchableOpacity > ); }, render: function() { return( < ListView dataSource = {this.state.dataSource} renderRow = {this._renderRow} /> ); } }); module.exports = ListViewModule; 下面我们说说要点, ListView 的本质是从 dataSource 中提取数组数据, 行数就是数组长度, 按照 行(row) 赋予数组中的元素. 生成数据源: 判断更新状况, 把 内容+图片 的数组添加到DataSource. getInitialState : function () { var ds = new ListView.DataSource ({rowHasChanged: (r1, r2) => r1 !== r2}) ; return { dataSource : ds . cloneWithRows ( this ._genRows()) }; }, _genRows : function () { var re = []; for ( var i= 0 ; i<IMAGES.length; ++i) { re . push ([ NAMES[i%NAMES.length], IMAGES[i%IMAGES.length] ]) ; } return re ; }, 行视图, rowData 是行数据, rowID 是行号; 在点击时提示内容 rowData[0] , 显示图片资源 rowData[1] . _renderRow 负责创建行视图. // 点击事件 _pressRow: function(rowToast: string) { ToastAndroid.show(rowToast, ToastAndroid.SHORT); }, _renderRow: function(rowData: array, sectionID: number, rowID: number) { return ( < TouchableOpacity onPress = {() => this._pressRow(rowData[0])}> < View > < View style = {styles.button} > < Image style = {styles.image} source = {rowData[1]} /> </ View > </ View > </ TouchableOpacity > ); }, 使用ListView, 数据源(dataSource) 和 行渲染(renderRow) 都已经创建, 赋值入ListView即可. render: function () { return ( <ListView dataSource={ this .state.dataSource} renderRow={ this ._renderRow} /> ); } Github 下载地址 ListView 作为开发中常见的控件, 需要经常使用, 熟练掌握吧. OK, Enjoy it! 上一篇 ReactNative生成签名APK 下一篇 通知栏设置系统字体颜色 顶 1 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900300次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 15
URL:: http://blog.csdn.net/caroline_wendy/article/details/50115525

ParseText::
通知栏设置系统字体颜色 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 通知栏设置系统字体颜色 标签： Mystra Android 通知栏 字体颜色 2015-11-30 17:04 644人阅读 评论 (4) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Android的Rom版本非常多, 通知栏颜色也各有不同, 如HTC是白底, 红米Note是暗色透明, 也有其他黑底, 灰底等. 统一设置相同的字体颜色, 必然会导致颜色冲突. 那么如何设置字体颜色, 可以正常显示呢? 如 HTC(5.0) , 标题和内容的颜色已经和系统完全相同, 字体大小是适配的. 如 红米Note , 标题和内容的颜色统一使用StatusBar字体的颜色. 通知的逻辑 RemoteViews views = new RemoteViews(mAppContext .getPackageName (), R .layout .view _notification) ; views .setImageViewResource (R .id .notification _iv_portrait, getSmallIcon()) ; views .setTextViewText (R .id .notification _tv_calories, getContentText()) ; 1. 版本5.0以下 通知的背景默认系统背景, 字体颜色 @style/TextAppearance.StatusBar.EventContent . <?xml version="1.0" encoding="utf-8"?> < RelativeLayout xmlns:android = "http://schemas.android.com/apk/res/android" xmlns:tool = "http://schemas.android.com/tools" android:layout_width = "match_parent" android:layout_height = "64dp" android:gravity = "center_vertical" > ... < LinearLayout android:layout_width = "match_parent" android:layout_height = "match_parent" android:layout_toEndOf = "@+id/notification_iv_portrait" android:layout_toRightOf = "@+id/notification_iv_portrait" android:gravity = "center_vertical" android:orientation = "vertical" > < TextView android:layout_width = "wrap_content" android:layout_height = "wrap_content" android:text = "@string/notification_widget_title" android:textAppearance = "@style/TextAppearance.StatusBar.EventContent" android:textSize = "@dimen/d14sp" /> < TextView android:id = "@+id/notification_tv_calories" android:layout_width = "wrap_content" android:layout_height = "wrap_content" android:textAppearance = "@style/TextAppearance.StatusBar.EventContent" android:textSize = "@dimen/d20sp" tool:text = "10步 | 20大卡" /> </ LinearLayout > </ RelativeLayout > TextAppearance.StatusBar.EventContent , 顾名思义StatusBar的事件内容文本样式. 在系统中, 会默认匹配, 如灰色等. 2. 版本5.0及以上 新建 layout-v21 , 表面5.0版本以后使用. <?xml version="1.0" encoding="utf-8"?> < RelativeLayout xmlns:android = "http://schemas.android.com/apk/res/android" xmlns:tool = "http://schemas.android.com/tools" android:layout_width = "match_parent" android:layout_height = "64dp" android:gravity = "center_vertical" > < ImageView android:id = "@+id/notification_iv_portrait" android:layout_width = "70dp" android:layout_height = "64dp" android:paddingBottom = "8dp" android:paddingTop = "8dp" android:scaleType = "centerInside" tool:src = "@drawable/widget_normal" /> < LinearLayout android:layout_width = "match_parent" android:layout_height = "match_parent" android:layout_toRightOf = "@+id/notification_iv_portrait" android:gravity = "center_vertical" android:orientation = "vertical" > < TextView android:layout_width = "wrap_content" android:layout_height = "wrap_content" android:text = "@string/notification_widget_title" android:textAppearance = "@android:style/TextAppearance.Material.Notification.Title" android:textSize = "14sp" /> < TextView android:id = "@+id/notification_tv_calories" android:layout_width = "wrap_content" android:layout_height = "wrap_content" android:textAppearance = "@android:style/TextAppearance.Material.Notification.Line2" android:textSize = "20sp" tool:text = "10步 | 20大卡" /> </ LinearLayout > </ RelativeLayout > @android:style/TextAppearance.Material.Notification.Title 通知栏标题. @android:style/TextAppearance.Material.Notification.Line2 通知栏内容. 这样就可以完全匹配系统颜色. OK, 这个问题已经解决了. 参考 上一篇 ReactNative的ListView简述 下一篇 开发首屏广告(Android)简述 顶 2 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900292次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 16
URL:: http://blog.csdn.net/caroline_wendy/article/details/50183487

ParseText::
开发首屏广告(Android)简述 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 开发首屏广告(Android)简述 标签： Mystra Android 广告页面 2015-12-05 08:47 961人阅读 评论 (0) 收藏 举报 分类： Work随笔 （7） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 作为一个成熟的应用, 必须要有广告. 那么, 如何优雅地开发广告呢? 需要注意一些细节. 本文提供一个简单的示例, 代码仅供参考. 需求: 具体来说, 就是 1. 显示本地存储广告图片, 点击图片, 跳转广告链接, 并提供微信分享功能. 2. 异步下载广告信息, 提高启动速度; 异步下载并保存广告和分享图片, 提高加载速度. 开发过程中, 使用了一些小技巧, 我会详细讲解注意的要点, 包括: (1) 使用RxAndroid库, 在新线程上做异步下载广告信息. (2) 使用Picasso库, 异步下载图片(Bitmap)并存储至本地. (3) 使用原生Handler类, 实现计时器功能, 按秒跳转数字. (4) 使用WebView视图, 加载广告链接, 并提供分享功能. 1. 下载广告 在欢迎页面中, 启动一个异步线程, 加载广告信息, 提高启动速度, 防止网速过慢导致切换卡顿. // 异步广告信息 private void AsyncCheckInfo () { // 异步线程处理监听, 在新线程上监听, 发送到主线程 Observable<String> observable = Observable.create( new Observable.OnSubscribe<String>() { @Override public void call (Subscriber<? super String> subscriber) { subscriber.onNext(checkInfo()); subscriber.onCompleted(); } }).subscribeOn(Schedulers.newThread()).observeOn(AndroidSchedulers.mainThread()); // 成功回调 observable.subscribe( new Subscriber<String>() { @Override public void onCompleted () { Log.i(TAG, "onCompleted" ); } @Override public void onError (Throwable e) { } @Override public void onNext (String s) { Log.i(TAG, "onNext" ); } }); } 在新线程(newThread)中加载, 完成后发送到主线程(mainThread). 参考 . 判断网络, 在有网的时候, 加载广告信息; 在无网的时候, 直接略过. // 加载广告信息 public String checkInfo () { if (NetUtils.isNetworkConnected(ChunyuApp.getAppContext())) { UpdateUtils.checkDailyInfo(WelcomeActivity. this , mDailyRequestCallback); return "Begin to load info." ; } else { return "Stop to load info" ; } } 在 UpdateUtils.checkDailyInfo 中, 解析广告请求的返回值. 如果包含广告信息, 则存储在首选项(SharedPreference)中, 下次启动广告直接读取; 如果不包含广告信息, 则设置无数据标记, 在使用时判定无广告. 最后调用回调接口 mDailyRequestCallback 继续处理. ArrayList<Advert> adverts = version .advert ; if (adverts .size () > 0 ) { for (int i = 0 ; i < adverts.size(); ++i) { Advert advert = adverts .get (i) ; if (advert .Number == 1 ) { // Number等于 0 是广告 PedometerAdManager .getInstance () .init (advert) ; } } } else { Log .e (TAG, "广告是空" ) ; SharedPreferences sp = PreferenceManager .getDefaultSharedPreferences (ChunyuApp .getAppContext ()) ; sp .edit () .putBoolean (WelcomeActivity .FIRST _AD_IS_HAVE_PREFS, false) .apply () ; } 2. 存储图片 已经存储广告信息之后, 即可获得图片下载链接, 为了提高显示速度, 下载图片存储在本地. 因为下载属于网络请求, 需要异步处理, 本文使用Picasso库, 没有发明轮子. // 日常信息回调 private final UpdateUtils.DailyRequestCallback mDailyRequestCallback = new UpdateUtils.DailyRequestCallback() { @Override public void operationExecutedSuccess () { if (mAdManager.getImageUrl() != null && !mAdManager.getImageUrl().isEmpty()) Picasso.with(WelcomeActivity. this ). load(mAdManager.getImageUrl()).into(mAdImageTarget); if (mAdManager.getShareIcon() != null && !mAdManager.getShareIcon().isEmpty()) Picasso.with(WelcomeActivity. this ). load(mAdManager.getShareIcon()).into(mAdShareImageTarget); } @Override public void operationExecutedFailed () { Log.e(TAG, "operationExecutedFailed" ); } }; // 广告图片 private Target mAdImageTarget = new Target() { @Override public void onBitmapLoaded (Bitmap bitmap, Picasso.LoadedFrom from) { String path = FileUtility.savePic(bitmap); mPrefs.edit().putString(FIRST_AD_PATH_PREFS, path).apply(); } @Override public void onBitmapFailed (Drawable errorDrawable) { } @Override public void onPrepareLoad (Drawable placeHolderDrawable) { } }; // 分享Icon private Target mAdShareImageTarget = new Target() { @Override public void onBitmapLoaded (Bitmap bitmap, Picasso.LoadedFrom from) { String path = FileUtility.savePic(bitmap); mPrefs.edit().putString(FIRST_AD_SHARE_IMAGE_URL_PREFS, path).apply(); } @Override public void onBitmapFailed (Drawable errorDrawable) { } @Override public void onPrepareLoad (Drawable placeHolderDrawable) { } }; 在页面暂停时, 移除Picasso的请求线程. @Override protected void onPause () { MobclickAgent.onPause( this ); handler.removeCallbacks(runnable); // 停止 Picasso.with( this ).cancelRequest(mAdImageTarget); // 停止 Picasso.with( this ).cancelRequest(mAdShareImageTarget); // 停止 super .onPause(); } 注意 : 在Picasso中, Target 是和 ImageView控件 弱绑定, 在销毁ImageView时, 会随之销毁. 如果未提供 ImageView控件 , 需要手动销毁请求, 如在 onPause 中取消. 否则会出现下载异常 . 参考 . 3. 显示广告 首先Logo页显示 LOGO_TIME 秒, 再判断 显示引导(首次启动) 或 显示广告 . 显示广告是使用存储在首选项(SharedPreference)中的数据, 图片使用本地资源解析, 提高显示速度. // 显示启动信息 private void showLaunchInfo () { // 显示一段时间的主屏Logo new Handler().postDelayed( this ::showAdInfo, LOGO_TIME); } // 显示广告信息 private void showAdInfo () { // 判断是否有广告 if (mPrefs.getBoolean(FIRST_AD_IS_HAVE_PREFS, false )) { Log.e(TAG, "包含广告" ); String path = mPrefs.getString(FIRST_AD_PATH_PREFS, "" ); if (!path.isEmpty()) { int time = mPrefs.getInt(FIRST_AD_TIME_PREFS, 0 ); Bitmap bitmap = BitmapFactory.decodeFile(path); Log.e(TAG, "time: " + time); showAdImage(bitmap, time); if (!NetUtils.isNetworkConnected(ChunyuApp.getAppContext())) { mIvWebImage.setClickable( false ); } } else { gotoOtherActivity(); } } else { gotoOtherActivity(); } } 显示的广告使用 上次网络请求的存储数据 , 也可能是 本次网络请求的 , 主要取决于在 LOGO_TIME 时间中, 是否下载完成启动信息, 并存储至本地. 4. 广告计时器 在广告图片显示时, 提供 倒计时器 , 按秒跳时, 提供 跳过按钮 直接跳过广告. // 显示广告 private void showAdImage (Bitmap bitmap, int time) { mIvWebImage.setVisibility(View.VISIBLE); mTvSkip.setVisibility(View.VISIBLE); mTvSkip.setOnClickListener(v -> gotoOtherActivity()); mIvBackground.setVisibility(View.INVISIBLE); mIvFirstLogo.setVisibility(View.INVISIBLE); mIvWebImage.setImageBitmap(bitmap); mAdTime = time + 2 ; handler.post(runnable); // 设置读秒 } // 设置读秒器 private int s = 0 ; // 时间Delay private final Handler handler = new Handler(); private final Runnable runnable = new Runnable() { @Override public void run () { // handler自带方法实现定时器 try { handler.postDelayed( this , 1000 ); if (s < 1 ) { s++; return ; } if (s <= (mAdTime - 1 )) { mTvSkip.setText(String.valueOf( "跳过\n" + Integer.toString((mAdTime - 1 ) - (s++)) + "秒" )); } // 计时器为0时, 开始跳转 if (s == mAdTime) { gotoOtherActivity(); } } catch (Exception e) { e.printStackTrace(); } } }; 广告时间额外显示两秒, 提供页面跳转间隔, 前一秒后一秒, 保证广告时间充足. 在 广告页跳转 或 页面结束 时, 删除计时回调. // 跳转到现实广告的视图 public void gotoShowAdView (View view) { NV.o( this , AdvertisementActivity.class); handler.removeCallbacks(runnable); finish(); } @Override protected void onPause () { MobclickAgent.onPause( this ); handler.removeCallbacks(runnable); // 停止 Picasso.with( this ).cancelRequest(mAdImageTarget); // 停止 Picasso.with( this ).cancelRequest(mAdShareImageTarget); // 停止 super .onPause(); } 本文使用 handler 类, 循环调用计时, 必须在离开页面时, 清除 runnable 回调. 否则会遗忘线程泄露内存. 5. 链接页面 点击广告图片, 会跳转至广告链接, 根据参数设置全屏或者提供分享功能, 把链接分享至微信. 微信分享需要标题, 内容, 图标(Icon), 其中图片是从服务器下载后预存在本地. /** * 广告Activity * <p> * Created by wangchenlong on 15/12/2. */ public class AdvertisementActivity extends PActivity { @SuppressWarnings ( "unused" ) private static final String TAG = "DEBUG-WCL: " + AdvertisementActivity.class.getSimpleName(); @Bind (R.id.advertise_pwv_container) PedoWebView mPwvContainer; @Bind (R.id.advertise_ll_back_home) LinearLayout mLlBackHome; @Bind (R.id.advertise_ll_send_session) LinearLayout mLlSendSession; @Bind (R.id.advertise_ll_send_timeline) LinearLayout mLlSendTimeline; @Bind (R.id.advertise_ll_action_bar) LinearLayout mLlActionBar; private SharedPreferences mPrefs; private int mFlag; // 判断分享地点 private static final int WECHAT_SESSION = 0 ; // 微信对话 private static final int WECHAT_TIMELINE = 1 ; // 朋友圈 @Override protected void onCreate (Bundle savedInstanceState) { super .onCreate(savedInstanceState); setContentView(R.layout.activity_advertisement); ButterKnife.bind( this ); mPrefs = PreferenceManager.getDefaultSharedPreferences(ChunyuApp.getAppContext()); ActionBar actionBar = getSupportActionBar(); if (actionBar != null ) actionBar.setDisplayHomeAsUpEnabled( true ); // 是否全屏 if (mPrefs.getBoolean(WelcomeActivity.FIRST_AD_IS_FULL_PREFS, false )) { mLlActionBar.setVisibility(View.GONE); } else { mLlBackHome.setOnClickListener(v -> { NV.o( this , PedometerActivity.class); finish(); }); // 是否分享 if (mPrefs.getBoolean(WelcomeActivity.FIRST_AD_IS_SHARE_PREFS, false )) { mLlSendSession.setOnClickListener(v -> { mFlag = WECHAT_SESSION; shareWechat(); }); mLlSendTimeline.setOnClickListener(v -> { mFlag = WECHAT_TIMELINE; shareWechat(); }); } else { mLlSendSession.setVisibility(View.GONE); mLlSendTimeline.setVisibility(View.GONE); } } mPwvContainer.loadUrl(mPrefs.getString(WelcomeActivity.FIRST_AD_URL_PREFS, "" )); } // 分享到微信 public void shareWechat () { IWXAPI wxapi = WXAPIFactory.createWXAPI(ChunyuApp.getAppContext(), SNSConst.WX_APP_ID_ONLINE, true ); wxapi.registerApp(SNSConst.WX_APP_ID_ONLINE); WXWebpageObject webpage = new WXWebpageObject(); webpage.webpageUrl = mPrefs.getString(WelcomeActivity.FIRST_AD_URL_PREFS, "" ); WXMediaMessage msg = new WXMediaMessage(webpage); msg.title = mPrefs.getString(WelcomeActivity.FIRST_AD_SHARE_TITLE_PREFS, "" ); msg.description = mPrefs.getString(WelcomeActivity.FIRST_AD_SHARE_CONTENT_PREFS, "" ); String path = mPrefs.getString(WelcomeActivity.FIRST_AD_SHARE_IMAGE_URL_PREFS, "" ); if (!path.isEmpty()) { Bitmap bitmap = BitmapFactory.decodeFile(path); if (bitmap != null ) { msg.setThumbImage(bitmap); } else { msg.setThumbImage(BitmapFactory.decodeResource(getResources(), R.drawable.icon)); } SendMessageToWX.Req req = new SendMessageToWX.Req(); req.transaction = String.valueOf(System.currentTimeMillis()); req.message = msg; req.scene = ((mFlag == 0 ) ? SendMessageToWX.Req.WXSceneSession : SendMessageToWX.Req.WXSceneTimeline); wxapi.sendReq(req); } } @Override public void onBackPressed () { if (mPwvContainer.canGoBack()) { mPwvContainer.goBack(); } else { NV.o( this , PedometerActivity.class); finish(); } } } 调用后退按钮(onBackPressed) : 在网页跳转多页时, 返回上一页; 在首页时, 退出广告页面, 跳转主页. 微信分享的图标(Icon), 最好使用方形全图, 否则透明部分会被黑色替代, 服务器提供图片时需要注意. 最终效果: OK, 广告页面开发完成了, 可以开心的赚钱了! Enjoy It. 上一篇 通知栏设置系统字体颜色 下一篇 计步器算法简述和模块使用 顶 2 踩 0 我的同类文章 Work随笔 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900306次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 17
URL:: http://blog.csdn.net/caroline_wendy/article/details/50280765

ParseText::
计步器算法简述和模块使用 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 计步器算法简述和模块使用 标签： Mystra android 计步器 2015-12-13 06:52 739人阅读 评论 (0) 收藏 举报 分类： Work随笔 （7） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 计步器作为算法功能模块, 本应该和业务模块分离, 解耦合. 这样也可以更加专注于算法的升级. 我来简述一下计步器算法的实现原理, 给大家一些启发. 1. 算法 对于所有计步器而言, 早期必然是使用 加速度传感器(Accelerometer Sensor) 测量步数, 随后谷歌推出 计步传感器(Step Counter Sensor) , 由硬件或系统计算步数的变化, 使得算法简化. 有些手机, 未提供计步传感器; 有些手机, 在待机过程中关闭计步传感器. 简单介绍一下实现算法. 1. 加速度传感器(Accelerometer Sensor) : 算法根据 加速度传感器 空间位置(XYZ轴)的变化, 绘制空间曲线, 根据两次波峰波谷之间的时间间隔, 判断步行或其他状态. 在短时间内出现连续波峰, 即为步行; 波峰出现的时间间隔较长, 则认为停止行走. 同时, 屏蔽轻微与初始扰动, 提升准确性; 通过调整参数, 适配不同手机的传感器差异, 提升鲁棒性. 2. 计步传感器(Step Counter Sensor) : 算法读取计步传感器的数值, 与本地缓存数值匹配, 判断步数的增加与否. 在屏幕关闭时, 启动 BatchMode模式 , 配合 协处理器 , 延迟获取数值, 节约电量. 当计步传感器停止时(有些手机在屏幕关闭时会停止部分传感器), 自适应切换加速度传感器, 启动时, 再次切换计步传感器. 3. 自适应性(Self-Adaption) : 根据系统参数, 算法优先选择计步传感器, 当计步传感器无法使用时, 选择加速度传感器. 2. 使用方式 本算法已经生成SDK包, 可以独立使用. 首先初始化 计步器管理器(PedometerManager) , 传入 上下文(Context) 和步数回调, 当步数增加时, 会自动调用回调. 应用根据UI界面样式, 使用步数. 其次启动 步数服务(PedometerService) , 服务根据系统状态变化自启动, 确保实时监控步数. /** * 使用方式, 传入Context和步数回调, 当步数增加时会自动调用回调, 添加StepRate参数, 实现锁屏计步. */ PedometerManager.getInstance().init(MainActivity. this .getApplicationContext(), new StepCallback() { @Override public void addStep () { // 步频(StepRate)参数, 亮屏默认是1, 锁屏根自适应调整 mStep += PedometerManager.getStepRate(); mTvStep.setText(String.valueOf(mStep + "步" )); Log.e(TAG, "Step: " + mStep); } }); /** * 初始时启动服务, 服务会自动保持连接, 并处理系统异常. */ startService( new Intent( this , PedometerService.class)); 在 项目最外层 的 build.gradle , 添加Maven库的地址, 传入账号和密码. allprojects { repositories { mavenCentral() maven { url "http://maven.chunyu.mobi/content/groups/public/" credentials { username maven_user password maven_password } } } repositories { jcenter() } } 在项目中添加依赖, 即 [GROUP_ID]:[ARTIFACT_ID]:[VERSION] . compile 'me.chunyu.android:pedometer:0.3.0' 3. 版本迭代 0.1.0: 初始化项目, 提供简单的计步功能. 0.2.0: 当锁屏时, 加速度传感器频率降低, 导致无法计步. 修改算法实现锁屏低频计步. 使用时, 添加步频(StepRate)参数, 亮屏默认是1, 锁屏根据传感器频率自适应调整. 0.3.0: 添加上传应用激活信息功能. 外部合作 : 本算法目前仅在公司内部使用, 如需合作请联系 春雨医生官网 的推广合作(xiaoyao@chunyu.me). OK, That’s all. 顶 1 踩 0 我的同类文章 Work随笔 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900300次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 18
URL:: http://blog.csdn.net/caroline_wendy/article/details/50280845

ParseText::
上传Apk至测试服务器 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 上传Apk至测试服务器 标签： Mystra android 上传测试服务器 2015-12-13 06:55 731人阅读 评论 (0) 收藏 举报 分类： Work随笔 （7） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 通过服务器, 同步测试与开发. 上传Apk至服务器, 测试在服务器内下载测试包, 即时反馈即时修改, 同步进行, 需要在 公司内网 . 1. 配置ssh 在 .ssh 文件夹下, 添加文件 is_ras_upload 作为上传密匙, 所有人使用相同密匙, 上传信息. -----BEGIN RSA PRIVATE KEY----- ... -----END RSA PRIVATE KEY----- 添加密匙之后, 需要提升 is_ras_upload 文件权限. sudo chmod 600 ~/.ssh/is_ras_upload 否则会提升 WARNING: UNPROTECTED PRIVATE KEY FILE! 错误. 2. 上传Apk 在 https://office.chunyu.mobi/ 中, 查找已经配置的Apk下载地址. 如 https: //office .chunyu .mobi /me .chunyu .PedometerTest / 在Apk文件夹下, 填入命令, 选定Apk包: Pedometer-debug.apk , 选定路径: me.chunyu.PedometerTest/ , 如: scp -i ~/ .ssh /is_ras_upload Pedometer-debug .apk package_upload@office .chunyu .mobi :/data/chunyuapp/me .chunyu .PedometerTest / OK, 可以上传服务器了. 上一篇 计步器算法简述和模块使用 下一篇 发送手机物理标识请求 顶 1 踩 0 我的同类文章 Work随笔 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900309次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 19
URL:: http://blog.csdn.net/caroline_wendy/article/details/50280863

ParseText::
发送手机物理标识请求 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 发送手机物理标识请求 标签： Mystra Android 手机物理标识 2015-12-13 06:59 745人阅读 评论 (1) 收藏 举报 分类： Work随笔 （7） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 作为应用的重要关注指标-激活, 需要在每次启动时, 都上传手机的物理标识到服务器. 我来简述一下需要上传的信息. 1. 获取 激活信息主要包含: 1. AppId: 公司拥有多款应用, 标示本应用的类型. 2. Platform: 平台Android或者iOS. 3. SystemVersion: 在Android中, 代表Android版本号. 4. Version: 本应用的版本. 5. AppVersion: 本应用的服务器接口版本. 6. IMEI(International Mobile Equipment Identity): 国际移动设备标识, 手机身份. 7. DeviceId: 设备标示, 一般是IMEI, 也可以是Mac地址. 8. Mac: WIFI的Mac地址. 9. SecureId: 设备随机生成的第一个引导, 间接获取设备寿命. 10. InstallId: 应用安装时间. 11. MODEL: 设备型号 12. MANUFACTURER: 设备生产工厂. 其中获取DeviceId需要权限: READ_PHONE_STATE ; 获取Mac地址需要权限 ACCESS_WIFI_STATE . /** * 获取手机标示, 用于激活信息, 需要权限 * READ_PHONE_STATE和ACCESS_WIFI_STATE * <p/> * Created by wangchenlong on 15/12/11. */ public class ActiveInfo { @SuppressWarnings ( "unused" ) private static final String TAG = "DEBUG-WCL: " + ActiveInfo.class.getSimpleName(); @SuppressWarnings ( "all" ) private static final String STAT_INFO_STR = "app=%s&platform=android&systemVer=%s&version=%s&app_ver=%s&imei=%s" + "&device_id=%s&mac=%s&secureId=%s&installId=%s&phoneType=%s_by_%s&vendor=" ; private static final String APP_ID = "512" ; private static final String VENDOR = "PedometerLibrary" ; private static final int HTTP_OK = 200 ; // 请求成功 private static final int TIME_OUT = 5 * 1000 ; // 连接超时时间 private static ActiveInfo sInstance; private final Context mContext; private final SharedPreferences mPrefs; private final TelephonyManager mTelephonyManager; private final WifiManager mWifiManager; private ActiveInfo () { mContext = PedometerManager.getInstance().getContext(); mPrefs = PreferenceManager.getDefaultSharedPreferences(mContext); mTelephonyManager = (TelephonyManager) mContext .getSystemService(Context.TELEPHONY_SERVICE); mWifiManager = (WifiManager) (mContext.getSystemService(Context.WIFI_SERVICE)); } public static ActiveInfo getInstance () { if (sInstance == null ) { sInstance = new ActiveInfo(); } return sInstance; } // 获取签名信息 private String getPhoneSignature () { String signature; // 手机标示 signature = String.format(STAT_INFO_STR, getUrlString(APP_ID), // 应用ID getUrlString(android.os.Build.VERSION.RELEASE), // 系统版本 getUrlString(BuildConfig.VERSION_NAME), // SDK版本 getUrlString(BuildConfig.VERSION_NAME), // 服务器版本 getUrlString(getDeviceId()), // IMEI getUrlString(getDeviceId()), // 设备ID getUrlString(getMac()), // Mac地址 getUrlString(getSecureId()), // 安全ID getUrlString(getInstallId()), // 安装时间 getUrlString(android.os.Build.MODEL), // 设备型号 getUrlString(android.os.Build.MANUFACTURER)); // 设备工厂 signature += VENDOR; return signature; } private String getUrlString (String s) { //noinspection deprecation return URLEncoder.encode(s); } // 获取设备ID, 需要权限READ_PHONE_STATE private String getDeviceId () { if (mPrefs.contains(PrefsConsts.PHONE_INFO_DEVICE_ID_PREFS)) { return mPrefs.getString(PrefsConsts.PHONE_INFO_DEVICE_ID_PREFS, "" ); } else { mPrefs.edit().putString( PrefsConsts.PHONE_INFO_DEVICE_ID_PREFS, mTelephonyManager.getDeviceId()) .apply(); return mPrefs.getString(PrefsConsts.PHONE_INFO_DEVICE_ID_PREFS, "" ); } } // 获取Mac地址, 需要权限ACCESS_WIFI_STATE private String getMac () { if (mPrefs.contains(PrefsConsts.PHONE_INFO_MAC_ADDRESS_PREFS)) { return mPrefs.getString(PrefsConsts.PHONE_INFO_MAC_ADDRESS_PREFS, "" ); } else { mPrefs.edit().putString( PrefsConsts.PHONE_INFO_MAC_ADDRESS_PREFS, mWifiManager.getConnectionInfo().getMacAddress()) .apply(); return mPrefs.getString(PrefsConsts.PHONE_INFO_MAC_ADDRESS_PREFS, "" ); } } // 获取安全ID private String getSecureId () { if (mPrefs.contains(PrefsConsts.PHONE_INFO_SECURE_ID_PREFS)) { return mPrefs.getString(PrefsConsts.PHONE_INFO_SECURE_ID_PREFS, "" ); } else { mPrefs.edit().putString( PrefsConsts.PHONE_INFO_SECURE_ID_PREFS, Settings.Secure.getString( mContext.getContentResolver(), Settings.Secure.ANDROID_ID)) .apply(); return mPrefs.getString(PrefsConsts.PHONE_INFO_SECURE_ID_PREFS, "" ); } } // 获取安装时的系统时间 private String getInstallId () { if (mPrefs.contains(PrefsConsts.PHONE_INFO_INSTALL_ID_PREFS)) { return mPrefs.getString(PrefsConsts.PHONE_INFO_INSTALL_ID_PREFS, "" ); } else { mPrefs.edit().putString( PrefsConsts.PHONE_INFO_INSTALL_ID_PREFS, String.format( "%d" , System.currentTimeMillis())) .apply(); return mPrefs.getString(PrefsConsts.PHONE_INFO_INSTALL_ID_PREFS, "" ); } } // 发送激活信息 public void postActiveInfo () { String path = "http://api.chunyu.me/api/launch_request/?" ; path += getPhoneSignature(); Log.d(TAG, "url: " + path); try { URL url = new URL(path); HttpURLConnection connection = (HttpURLConnection) url.openConnection(); connection.setConnectTimeout(TIME_OUT); // 连接超时 connection.connect(); if (connection.getResponseCode() == HTTP_OK) { Log.d(TAG, " 发送激活信息成功" ); } else { Log.e(TAG, " 发送激活信息失败: " + connection.getResponseCode()); } connection.disconnect(); } catch (IOException e) { e.printStackTrace(); } } } 为了减少获取代价, 可以存储一些关键值到首选项. 2. 上传 网络请求必须使用异步线程, 我们只是上传激活, 并不关心返回值, 比较简单. new PostActiveTask().execute(); // 发送激活信息 // 发送激活任务的线程 private class PostActiveTask extends AsyncTask < Void , Void , Void > { @Override protected Void doInBackground(Void... params) { ActiveInfo.getInstance().postActiveInfo(); return null ; } @Override protected void onPostExecute(Void result) { } } 返回均为空值, 在 doInBackground 中, 需要注明 return null . OK, Enjoy It. 上一篇 上传Apk至测试服务器 下一篇 网页链接触发原生Intent 顶 1 踩 0 我的同类文章 Work随笔 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900291次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 20
URL:: http://blog.csdn.net/caroline_wendy/article/details/50297671

ParseText::
网页链接触发原生Intent - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 网页链接触发原生Intent 标签： Mystra Android Web Intent 2015-12-14 17:05 954人阅读 评论 (0) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 人们每天都要访问大量的手机网页, 如果把手机网页(Web)和应用(App)紧密地联系起来, 就可以增大用户的访问量, 也有其他应用场景, 如 网页中调用支付链接 , 新闻中启动问诊界面 , 提供优质的原生功能 等等. 如何在网页(Web)中, 通过Intent直接启动应用(App)的Activity呢? 本文主要有以下几点: (1) 如何在Web中发送原生的Intent消息. (1) 如何加载本地的HTML页面到浏览器. (2) 如何创建半透明的Activity页面. 1. 配置项目 新建HelloWorld工程. 添加ButterKnife支持. compile 'com.jakewharton:butterknife:7.0.1' 2. BottomSheet 逻辑, 添加ShareIntent的监听, 即网页链接触发的Intent, 提取Link和Title信息, 底部出现或消失的动画. /** * 网页Activity * <p/> * Created by wangchenlong on 15/12/7. */ public class WebIntentActivity extends Activity { @Bind (R.id.web_intent_et_title) EditText mEtTitle; @Bind (R.id.web_intent_et_link) EditText mEtLink; @Override protected void onCreate (Bundle savedInstanceState) { super .onCreate(savedInstanceState); setContentView(R.layout.activity_bottom_sheet); ButterKnife.bind( this ); // 获取WebIntent信息 if (isShareIntent()) { ShareCompat.IntentReader intentReader = ShareCompat.IntentReader.from( this ); mEtLink.setText(intentReader.getText()); mEtTitle.setText(intentReader.getSubject()); } } @Override protected void onResume () { super .onResume(); // 底部出现动画 overridePendingTransition(R.anim.bottom_in, R.anim.bottom_out); } // 判断是不是WebIntent private boolean isShareIntent () { return getIntent() != null && Intent.ACTION_SEND.equals(getIntent().getAction()); } @Override public void overridePendingTransition ( int enterAnim, int exitAnim) { super .overridePendingTransition(enterAnim, exitAnim); } } 动画属性, 沿Y轴变换. < set xmlns:android = "http://schemas.android.com/apk/res/android" > < translate android:duration = "300" android:fromYDelta = "100%p" android:toYDelta = "0%p" /> </ set > < set xmlns:android = "http://schemas.android.com/apk/res/android" > < translate android:duration = "300" android:fromYDelta = "0%p" android:toYDelta = "100%p" /> </ set > BottomSheet页面, 由两个EditText组成. <?xml version="1.0" encoding="utf-8"?> < LinearLayout android:id = "@+id/web_intent_ll_popup_window" xmlns:android = "http://schemas.android.com/apk/res/android" android:layout_width = "match_parent" android:layout_height = "wrap_content" android:layout_gravity = "bottom|center" android:background = "@android:color/white" android:orientation = "vertical" android:padding = "10dp" > < TextView android:layout_width = "match_parent" android:layout_height = "wrap_content" android:gravity = "center" android:text = "发送网页内容到应用" android:textSize = "20sp" /> < android.support.design.widget.TextInputLayout android:layout_width = "match_parent" android:layout_height = "wrap_content" android:layout_marginEnd = "16dp" android:layout_marginStart = "12dp" android:layout_marginTop = "8dp" > < EditText android:id = "@+id/web_intent_et_title" android:layout_width = "match_parent" android:layout_height = "wrap_content" android:hint = "Post Title" android:inputType = "textCapWords" /> </ android.support.design.widget.TextInputLayout > < android.support.design.widget.TextInputLayout android:layout_width = "match_parent" android:layout_height = "wrap_content" android:layout_marginEnd = "16dp" android:layout_marginStart = "12dp" android:layout_marginTop = "8dp" > < EditText android:id = "@+id/web_intent_et_link" android:layout_width = "match_parent" android:layout_height = "wrap_content" android:hint = "Link" android:inputType = "textCapWords" /> </ android.support.design.widget.TextInputLayout > </ LinearLayout > 注意 设置LinearLayout的 android:layout_gravity="bottom|center" 属性, 配合样式(Styles)的 <item name="android:windowIsFloating">false</item> 属性, 可以在底部显示页面. 声明, 添加 SEND 的Action, BROWSABLE 的Category, text/plain 的文件类型. 主题设置透明主题. 启动时, 会保留上部半透明, 用于显示网页信息. < activity android:name = ".WebIntentActivity" android:theme = "@style/Theme.Transparent" > < intent-filter > < action android:name = "android.intent.action.SEND" /> < category android:name = "android.intent.category.DEFAULT" /> < category android:name = "android.intent.category.BROWSABLE" /> < data android:mimeType = "text/plain" /> </ intent-filter > </ activity > 透明主题, 注意一些关键属性, 参考注释, 不一一列举. <style name = "Theme.Transparent" parent= "AppTheme.NoActionBar" > <! --背景色--> < item name = "android:windowBackground" >@color/page_background</ item > <! --不使用背景缓存--> < item name = "android:colorBackgroundCacheHint" >@null</ item > <! --控制窗口位置, 非流窗口, 固定位置, 用于非全屏窗口--> < item name = "android:windowIsFloating" > false </ item > <! --窗口透明--> < item name = "android:windowIsTranslucent" > true </ item > <! --窗口无标题--> < item name = "android:windowNoTitle" > true </ item > </style> 背景颜色 windowBackground 非常重要, 不是常规颜色, 也可以设置为透明. <!--最前两位是颜色厚度, 00透明, FF全黑--> < color name = "page_background" > #99323232 </ color > 3. 主页面 本地HTML文件存放在 assets 中, 提供在浏览器打开功能. 浏览器打开Web链接非常简单, 打开本地HTML有很多难点. /** * 测试WebIntent的Demo * * @author C.L.Wang */ public class MainActivity extends AppCompatActivity { @SuppressWarnings ( "unused" ) private static final String TAG = "DEBUG-WCL: " + MainActivity.class.getSimpleName(); private static final String FILE_NAME = "file:///android_asset/web_intent.html" ; @Bind (R.id.main_wv_web) WebView mWvWeb; // WebView @Override protected void onCreate (Bundle savedInstanceState) { super .onCreate(savedInstanceState); setContentView(R.layout.activity_main); ButterKnife.bind( this ); Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar); setSupportActionBar(toolbar); FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab); fab.setOnClickListener( new View.OnClickListener() { @Override public void onClick (View view) { // 跳转WebIntentActivity startActivity( new Intent(MainActivity. this , WebIntentActivity.class)); } }); mWvWeb.loadUrl(FILE_NAME); } @Override public void onBackPressed () { // 优先后退网页 if (mWvWeb.canGoBack()) { mWvWeb.goBack(); } else { finish(); } } @Override public boolean onCreateOptionsMenu (Menu menu) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.menu_main, menu); return true ; } @Override public boolean onOptionsItemSelected (MenuItem item) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item.getItemId(); // 打开浏览器选项 if (id == R.id.action_open_in_browser) { // 获取文件名, 打开assets文件使用文件名 String[] as = FILE_NAME.split( "/" ); openUrlInBrowser(as[as.length - 1 ]); return true ; } return super .onOptionsItemSelected(item); } /** * 在浏览器中打开 * * @param url 链接(本地HTML或者网络链接) */ private void openUrlInBrowser (String url) { Uri uri; if (url.endsWith( ".html" )) { // 文件 uri = Uri.fromFile(createFileFromInputStream(url)); } else { // 链接 if (!url.startsWith( "http://" ) && !url.startsWith( "https://" )) { url = "http://" + url; } uri = Uri.parse(url); } try { Intent intent = new Intent(Intent.ACTION_VIEW, uri); // 启动浏览器, 谷歌浏览器, 小米手机浏览器支持, 其他手机或浏览器不支持. intent.setClassName( "com.android.browser" , "com.android.browser.BrowserActivity" ); startActivity(intent); } catch (ActivityNotFoundException e) { Toast.makeText( this , "没有应用处理这个请求. 请安装浏览器." , Toast.LENGTH_LONG).show(); e.printStackTrace(); } } /** * 存储assets内的文件 * * @param url 文件名 * @return 文件类(File) */ private File createFileFromInputStream (String url) { try { // 打开Assets内的文件 InputStream inputStream = getAssets().open(url); // 存储位置 /sdcard File file = new File( Environment.getExternalStorageDirectory().getPath(), url); OutputStream outputStream = new FileOutputStream(file); byte buffer[] = new byte [ 1024 ]; int length; while ((length = inputStream.read(buffer)) > 0 ) { outputStream.write(buffer, 0 , length); } outputStream.close(); inputStream.close(); return file; } catch (IOException e) { e.printStackTrace(); } return null ; } } 注意: (1) 浏览器打开 assets 内文件的方式, 与 WebView 有所不同, 具体参考 createFileFromInputStream 函数. (2) 在浏览器打开时, 需要指定包名, 而且各自浏览器的模式也不一样, 小米支持Google原生调用, 参考 openUrlInBrowser 函数. (3) 回退事件的处理方式, 参考 onBackPressed 函数. Github 下载地址 就这些了, 在浏览器的HTML5页面中, 可以添加更多和本地应用的交互. OK, Enjoy It. 上一篇 发送手机物理标识请求 下一篇 人脸及脸部关键点检测控件 顶 2 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900291次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 21
URL:: http://blog.csdn.net/caroline_wendy/article/details/50321153

ParseText::
人脸及脸部关键点检测控件 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 人脸及脸部关键点检测控件 标签： Mystra Android 检测人脸 控件 2015-12-15 21:50 888人阅读 评论 (2) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 检测人脸, 在应用中有很多用处, 可以提供更好的交互, 和一些有针对性的意见. 检测脸部关键信息, 也可以更加方便的处理一些微表情的内容. Google推出了官方的人脸检测功能, 很不幸依赖Google Service, 需要版本8.1以上. 国内手机基本不会默认配置. 下载地址 , 此版本适配手机系统4.4+. 官方API 我讲解一下用法, 写了一个简单的显示控件, 注释详细. 关注: (1) 如何提取人脸(Face)位置. (2) 如何提取脸部关键点(Landmark)位置. (3) 如何在画布(Canvas)居中绘制图片. 1. 配置项目 新建HelloWorld项目, 配置 build.gradle . compile 'com.google.android.gms:play-services-vision:8.1.0' // 包含人脸识别类 compile 'com.jakewharton:butterknife:7.0.1' 一般都会从最基础的HelloWorld开始, 方便学习和理解. ButterKnife必用. 2. 检测人脸控件 控件居中显示一张图片, 在图片上, 绘制人脸位置和关键点(Landmarks). 关键点 包括: 眼睛, 鼻子, 嘴等属性. 存在遮挡, 根据不同人脸提取量不同. 通过 FaceDetector 检测 Bitmap , 获取图片的所有脸部(face)信息. 根据位置(Position)画出脸的形状, 根据关键点(Landmarks)画出脸部特征. 同时可以获取各种特征的概率(Probability), 和脸部偏移. /** * 检测人脸的控件 * <p/> * Created by wangchenlong on 15/12/15. */ public class FacesDisplayView extends View { private static final String TAG = "DEBUG-WCL: " + FacesDisplayView.class.getSimpleName(); private Bitmap mBitmap; // 图片 private SparseArray<Face> mFaces; // 人脸数组 // 确保图片居中 private int mHorizonOffset; // 水平偏移 private int mVerticalOffset; // 竖直偏移 public FacesDisplayView (Context context) { this (context, null ); } public FacesDisplayView (Context context, AttributeSet attrs) { this (context, attrs, 0 ); } public FacesDisplayView (Context context, AttributeSet attrs, int defStyleAttr) { super (context, attrs, defStyleAttr); } // 设置显示图片 @SuppressWarnings ( "unused" ) public void setBitmap (Bitmap bitmap) { mBitmap = bitmap; FaceDetector detector = new FaceDetector.Builder(getContext()) .setTrackingEnabled( true ) .setLandmarkType(FaceDetector.ALL_LANDMARKS) .setMode(FaceDetector.ACCURATE_MODE) .build(); if (!detector.isOperational()) { Log.e(TAG, "加载失败" ); return ; } else { Frame frame = new Frame.Builder().setBitmap(bitmap).build(); mFaces = detector.detect(frame); detector.release(); } logFaceData(); // 打印人脸数据 invalidate(); // 填充 } @Override protected void onDraw (Canvas canvas) { super .onDraw(canvas); if ((mBitmap != null ) && (mFaces != null )) { double scale = drawBitmap(canvas); drawFaceBox(canvas, scale); drawFaceLandmarks(canvas, scale); } } // 绘制图片, 返回缩放概率 private double drawBitmap (Canvas canvas) { double viewWidth = canvas.getWidth(); // 显示宽度 double viewHeight = canvas.getHeight(); // 显示高度 double imageWidth = mBitmap.getWidth(); // 图片宽度 double imageHeight = mBitmap.getHeight(); // 图片高度 double wScale = viewWidth / imageWidth; double hScale = viewHeight / imageHeight; double scale; Rect destBounds; // 水平竖直缩放 if (wScale > hScale) { mHorizonOffset = ( int ) ((viewWidth - imageWidth * hScale) / 2.0 f); destBounds = new Rect(mHorizonOffset, 0 , ( int ) (imageWidth * hScale) + mHorizonOffset, ( int ) (imageHeight * hScale)); scale = hScale; } else { mVerticalOffset = ( int ) ((viewHeight - imageHeight * wScale) / 2.0 f); destBounds = new Rect( 0 , mVerticalOffset, ( int ) (imageWidth * wScale), ( int ) (imageHeight * wScale) + mVerticalOffset); scale = wScale; } canvas.drawBitmap(mBitmap, null , destBounds, null ); // 添加图片 return scale; } // 绘制脸部方形 private void drawFaceBox (Canvas canvas, double scale) { // 画笔 Paint paint = new Paint(); paint.setColor(Color.GREEN); paint.setStyle(Paint.Style.STROKE); paint.setStrokeWidth( 5 ); float left; float top; float right; float bottom; // 绘制每张脸 for ( int i = 0 ; i < mFaces.size(); i++) { Face face = mFaces.valueAt(i); left = ( float ) (face.getPosition().x * scale); top = ( float ) (face.getPosition().y * scale); right = ( float ) scale * (face.getPosition().x + face.getWidth()); bottom = ( float ) scale * (face.getPosition().y + face.getHeight()); canvas.drawRect(left + mHorizonOffset, top + mVerticalOffset, right + mHorizonOffset, bottom + mVerticalOffset, paint); } } // 绘制脸部关键部位 private void drawFaceLandmarks (Canvas canvas, double scale) { Paint paint = new Paint(); paint.setColor(Color.YELLOW); paint.setStyle(Paint.Style.STROKE); paint.setStrokeWidth( 5 ); for ( int i = 0 ; i < mFaces.size(); i++) { Face face = mFaces.valueAt(i); for (Landmark landmark : face.getLandmarks()) { int cx = ( int ) (landmark.getPosition().x * scale); int cy = ( int ) (landmark.getPosition().y * scale); canvas.drawCircle(cx + mHorizonOffset, cy + mVerticalOffset, 10 , paint); } } } // 输出脸部数据 private void logFaceData () { float smilingProbability; float leftEyeOpenProbability; float rightEyeOpenProbability; float eulerY; float eulerZ; for ( int i = 0 ; i < mFaces.size(); i++) { Face face = mFaces.valueAt(i); // 可能性 smilingProbability = face.getIsSmilingProbability(); leftEyeOpenProbability = face.getIsLeftEyeOpenProbability(); rightEyeOpenProbability = face.getIsRightEyeOpenProbability(); eulerY = face.getEulerY(); // 竖直轴偏移 eulerZ = face.getEulerZ(); // 前后偏移 Log.e(TAG, "脸数: " + i); Log.e(TAG, "微笑概率: " + smilingProbability); Log.e(TAG, "左眼睁开概率: " + leftEyeOpenProbability); Log.e(TAG, "右眼睁开概率: " + rightEyeOpenProbability); Log.e(TAG, "竖直轴偏移: " + eulerY); Log.e(TAG, "前后偏移: " + eulerZ); Log.e(TAG, "--------------------" ); } } } 图像和特征是显示在画布上, 根据画布大小, 等比例缩放, 并居中显示. 3. 主页面 主界面通过一个简单的ViewPager连续显示图片. @Bind (R.id.main_vp_container) ViewPager mVpContainer; // 连续 @Override protected void onCreate (Bundle savedInstanceState) { super .onCreate(savedInstanceState); setContentView(R.layout.activity_main); ButterKnife.bind( this ); Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar); setSupportActionBar(toolbar); mVpContainer.setAdapter( new FacesViewPagerAdapter(getSupportFragmentManager())); } 适配传递参数, 根据参数, 返回不同的图片页面. /** * 脸部适配器 * <p/> * Created by wangchenlong on 15/12/15. */ public class FacesViewPagerAdapter extends FragmentPagerAdapter { private static final int NUM = 9 ; public FacesViewPagerAdapter (FragmentManager fm) { super (fm); } @Override public Fragment getItem ( int position) { return ShowFaceFragment.newInstance(position); } @Override public int getCount () { return NUM; } } 每页是个Fragment, 根据参数, 使用不同资源. /** * 显示人脸的界面 * <p/> * Created by wangchenlong on 15/12/15. */ public class ShowFaceFragment extends Fragment { private static final String ARG_SELECTION_NUM = "arg_selection_num" ; @Bind (R.id.main_fdv_face_detector) FacesDisplayView mFdvFaceDetector; @RawRes ArrayList<Integer> mPhotos; // 图片集合 public ShowFaceFragment () { mPhotos = new ArrayList<>(); mPhotos.add(R.raw.total_large_poster); mPhotos.add(R.raw.jessicajung_large_poster); mPhotos.add(R.raw.seohyun_large_poster); mPhotos.add(R.raw.sooyoung_large_poster); mPhotos.add(R.raw.sunny_large_poster); mPhotos.add(R.raw.taeyeon_large_poster); mPhotos.add(R.raw.tiffany_large_poster); mPhotos.add(R.raw.yoona_large_poster); mPhotos.add(R.raw.yuri_large_poster); } public static ShowFaceFragment newInstance ( int selectionNum) { ShowFaceFragment simpleFragment = new ShowFaceFragment(); Bundle args = new Bundle(); args.putInt(ARG_SELECTION_NUM, selectionNum); simpleFragment.setArguments(args); return simpleFragment; } @Nullable @Override public View onCreateView (LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) { View view = inflater.inflate(R.layout.fragment_show_face, container, false ); ButterKnife.bind( this , view); return view; } @Override public void onViewCreated (View view, @Nullable Bundle savedInstanceState) { super .onViewCreated(view, savedInstanceState); @RawRes int image = mPhotos.get(getArguments().getInt(ARG_SELECTION_NUM)); InputStream stream = getResources().openRawResource(image); Bitmap bitmap = BitmapFactory.decodeStream(stream); mFdvFaceDetector.setBitmap(bitmap); } @Override public void onDestroyView () { super .onDestroyView(); ButterKnife.unbind( this ); } } 注意使用注释(Annotation), 判断资源类型, 如 @RawRes . Github 下载地址 有时间再完善一下这个小控件吧. OK, Enjoy It. 上一篇 网页链接触发原生Intent 下一篇 闪屏(Splash) 顶 2 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900302次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 22
URL:: http://blog.csdn.net/caroline_wendy/article/details/50321281

ParseText::
闪屏(Splash) - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 闪屏(Splash) 标签： Mystra RN Splash 闪屏 2015-12-16 06:50 751人阅读 评论 (6) 收藏 举报 分类： RN开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 好久没弄ReactNative了, 写个如何实现闪屏(Splash)的文章吧. 注意: (1) 如何切换页面. (2) 如何使用计时器TimerMixin. (3) 如何使用动画效果. (4) 如何加载Android的项目资源(图片). 1. 准备 新建项目, 添加主模块 index.android.js . /* @flow */ /** * 测试 * @author wangchenlong */ 'use strict' ; var React = require ( 'react-native' ); var { AppRegistry, } = React; var LearningRN = require ( './main_modules/index.js' ); AppRegistry.registerComponent( 'LearningRN' , () => LearningRN); /*@flow*/ 作为跳转和检查的注解. 参考 . 2. 首页 主要包含闪屏和主页, 使用Navigator的栈, 用于添加额外的页面. /* @flow */ 'use strict' ; var React = require ( 'react-native' ); var { Text, View, Navigator, BackAndroid, } = React; var styles = require ( './styles' ); // 样式 var TimerMixin = require ( 'react-timer-mixin' ); // RN的计时器 var SplashScreen = require ( './splash_screen/index' ); // 飞屏 var MainScreen = require ( './main_screen/index' ); // 主屏 var _navigator; // 页面管理器 // 后退按钮 BackAndroid.addEventListener( 'hardwareBackPress' , function () { if (_navigator && _navigator.getCurrentRoutes().length > 1 ) { _navigator.pop(); return true ; } return false ; }); var LearningRN = React.createClass({ mixins: [TimerMixin], // 延迟器 // 初始化状态 getInitialState: function () { return { splashed: true }; }, // 页面加载 componentDidMount: function () { this.setTimeout( ()=> { this.setState({splashed: false }); }, 2000 ); }, // 线路映射 routeMapper: function (route: Map, navigator: Navigator) { _navigator = navigator; if (route.name === 'home' ) { return ( <View style={styles.container}> <MainScreen/> </View> ); } }, render: function () { if (!this.state.splashed) { // 初始路径 var initialRoute = {name: 'home' }; return ( <Navigator style={styles.container} initialRoute={initialRoute} configureScene={() => Navigator.SceneConfigs.FadeAndroid} renderScene={this.routeMapper}/> ); } else { return ( <SplashScreen/> /*飞屏*/ ); } } }); module.exports = LearningRN; 后退按钮优先退出栈的页面, 最后作为结束. 闪屏显示两秒钟, 使用 TimerMixin 计时器, 再更新状态跳转主页. 在 routeMapper 中, 目前主页, 以后再添加其他页面. 样式 /*@flow*/ /** * Created by wangchenlong on 15/11/29. */ 'use strict' ; var React = require ( 'react-native' ); var { StyleSheet } = React; var styles = StyleSheet.create({ container: { flex: 1 , flexDirection: 'column' }, }); module.exports = styles; 3. 闪屏 首页图片, 有个放大效果, 至1.2倍, 持续两秒(2000ms). 资源文件(uri)使用项目资源, 放在Android项目的drawable文件夹. /* @flow*/ /** * 启动闪屏 * @author C.L.Wang */ 'use strict' ; var React = require ( 'react-native' ); var { View, Text, Image, Dimensions, // 尺寸 Animated, // 动画 } = React; var styles = require ( './styles.js' ); var WIDTH = Dimensions.get( 'window' ).width; var SplashScreen = React.createClass({ // 初始化状态 getInitialState: function () { return { cover: {image: {uri: 'splash' }, text: 'Girl\'s Generation' }, // 封面 bounceValue: new Animated.Value( 1 ) // 弹力值 }; }, // 组件初始化 componentDidMount: function () { Animated.timing( this .state.bounceValue, {toValue: 1.2 , duration: 2000 } ).start(); }, render: function () { return ( < View style = {styles.container} > < Animated.Image source = {{uri: ' splash '}} // 混合资源 style = {{ flex: 1 , width: WIDTH , height: 1 , transform: [{ scale: this.state.bounceValue }] }}/> < Text style = {styles.text} > {this.state.cover.text} </ Text > </ View > ); } }); module.exports = SplashScreen; 在Android工程中放置图片资源, 修改时重新编译打包, 适配屏幕尺寸. 在RN工程中放置, 修改时刷新即可, 但无法适配. 使用时, 根据图片特点, 选择位置. 样式 /*@flow*/ /** * Created by C.L.Wang on 15/11/29. */ 'use strict' ; var React = require ( 'react-native' ); var { StyleSheet } = React; var styles = StyleSheet.create({ container: { flex: 1 , flexDirection: 'column' }, text: { flex: 1 , fontSize: 16 , textAlign: 'center' , color: '#FF1493' , position: 'absolute' , left: 0 , right: 0 , bottom: 10 , backgroundColor: 'transparent' } }); module.exports = styles; Github 下载地址 这次的比较简单. 我会再写一些复杂的页面. OK, Enjoy it. 上一篇 人脸及脸部关键点检测控件 下一篇 加速Gradle构建项目 顶 2 踩 0 我的同类文章 RN开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900289次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 23
URL:: http://blog.csdn.net/caroline_wendy/article/details/50360639

ParseText::
加速Gradle构建项目 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 加速Gradle构建项目 标签： Mystra Android Gradle 构建项目 2015-12-19 23:16 1166人阅读 评论 (0) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在Gradle构建大型项目时, 耗时比较严重, 以下几点可以加快项目构建. 1. 升级gradle 进入项目文件夹, 使用最新的gradle. 修改 $project /gradle/wrapper/gradle -wrapper . properties 替换为最新. distributionUrl=https\ ://services .gradle.org/distributions/gradle- 2.9 -all.zip 2. 升级gradle插件(plugin) 使用最新的gradle依赖. buildscrpt { dependencies { classpath 'com.android.tools.build:gradle:1.5.0' } } 3. 设置开发最低SDK版本 在开发时, 使用最低sdk版本的提升至21. android { productFlavors { dev { minSdkVersion 21 } prod { minSdkVersion 14 } } } 项目生成apk包分为两步, 第一步转换dex, 第二步合成dex, 但是版本21+使用Android运行时( Android Runtime )生成apk, 不需要合并dex, 所以速度加快, 也可以解决 65K方法 . 4. 添加gradle属性 修改 gradle.properties org .gradle .daemon =true org .gradle .parallel =true org .gradle .jvmargs =-Xmx768m 5. 使用递增的dex 增加dex的容量. 参考 . dexOptions { incremental true } That’s all! 如果项目构建过慢, 就根据实际情况, 选择优化gradle的组合方式吧. OK, Enjoy It! 上一篇 闪屏(Splash) 下一篇 逆向工程 顶 0 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900290次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 24
URL:: http://blog.csdn.net/caroline_wendy/article/details/50363847

ParseText::
逆向工程 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 逆向工程 标签： Mystra Android 逆向工程 reverse 2015-12-20 13:34 909人阅读 评论 (0) 收藏 举报 分类： Android开发 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 逆向工程(Reverse Engineering)解析apk, 验证特性, 替换资源. 在批量生成应用时, 通过服务器脚本修改apk, 节约人力和时间. 我来讲述一下, 逆向工程的常用工具和方法. 1. apk apk表示 Application PacKage , 是zip文件, 修改后缀名 .apk 为 .zip , 解压获得apk信息. 应用信息: AndroidManifest.xml: 二进制清单文件. classes.dex: Dex格式编译文件. resources.arsc: 二进制预编译资源文件. res: 不需编译的资源文件, 一般都是系统的资源文件. assets: AssetManager检索应用特性. META-INF: Jar包元数据, 也包含应用签名. 安装应用 adb install -r ~ /Desktop/ Pedometer .apk -r 表示强制安装, 会覆盖当前版本. 查看手机中的所有应用信息 adb shell pm list packages -f 导出手机中的apk adb pull -p /data/app/me .chunyu .Pedometer - 1 /base .apk ~/Desktop/base .apk aar类型和apk相似, 在aar中, AndroidManifest是可显示的XML文件, 资源都在res文件夹中, 作为项目的库使用. 2. aapt aapt表示 Android Assets Packaging Tool , 即Android属性打包工具, 导入命令行. 在Android SDK的 build-tools 文件夹中, 如 ANDROID_SDK_HOME/build -tools / 23.0 .2 Android项目的Gradle中, 通过 buildToolsVersion 设置版本, 参考 , 主要负责apk的编译. 获取apk信息 aapt list base .apk // 内容 aapt dump badging base .apk // 属性 aapt dump permissions base .apk // 权限 aapt dump resources base .apk // 资源 获取二进制xml信息 aapt dump xmltree base .apk AndroidManifest .xml 3. dex2jar dex2jar 是dex转换jar的工具, 导入命令行, 还需要使用Java包解析工具 JD-GUI . 可以分析Apk的崩溃信息, 参考 . 配置 d2j-dex2jar.sh 命令行: 改变 d2j-dex2jar.sh 和 d2j_invoke.sh 的权限, 即 chmod 777 xx.sh . 软链接: ln -s /.../Installations/dex2jar-2.0/d2j-dex2jar.sh d2j-dex2jar.sh . 转换apk为jar包 d2j-dex2jar .sh -f -o classes .jar base .apk 转换过程中, 如果发生内存不够, 修改 d2j_invoke.sh 的虚拟机配置. java -Xms512m -Xmx1024m -classpath "${_classpath}" "$@" 使用JD-GUI打开jar包, 资源都被替换为数字. 转换jar包为dex d2j-jar2dex .sh -f -o classes .dex classes .jar 压缩dex为apk zip -r my .apk classes .dex 注意现在的apk是无法安装入手机的, 因为没有签名. 即使签名也会报错. 通过apktool替代打包. 4. apktool 解析apk的第三方工具, 安装方式 参考 . Mac OS X: 1. Download Mac wrapper script (Right click, Save Link As apktool) 2. Download apktool-2 (find newest here) 3. Rename downloaded jar to apktool.jar 4. Move both files (apktool.jar & apktool) to /usr/local/bin (root needed) 5. Make sure both files are executable (chmod +x) 6. Try running apktool via cli 配置成功 示例rgb_tool.apk 下载 , 源码 . 4.1 操作 解析apk apktool d rgb_tool .apk 在 rgb_tool 文件夹, 内容: apktool.yml: apk属性. AndroidManifest.xml: 清单文件, 非二进制. original: 原始数据, 应用的二进制清单和签名. res: 资源文件. smali: dex解析的代码. smali是dex虚拟机的解析格式, 参考 . 在 dex2jar 中, 也包含smali格式的转换. 构建apk. 在 rgb_tool/rgb_tool/dist 中生成apk文件. apktool b rgb_tool 安装时, 会显示未签名. Failure [INSTALL_PARSE_FAILED_NO_CERTIFICATES] 添加apk签名 jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore ~ / . android/debug . keystore -signedjar rgb_tool . apk rgb_tool . apk androiddebugkey zipalign -v -f 4 rgb_tool . apk rgb_tool_align . apk 使用系统默认签名, 或者添加自己的签名, zipalign 用于对齐应用, 建议使用. 参考 . 4.2修改 颜色 接着, 我们来解析包, 修改一些颜色, 再生成包. 找到系统颜色, 修改 rgb_tool/res/values/colors.xml , 主题粉色. < color name= "primary" > #ffff1493</color> 图标 替换应用图标, AndroidAssetStudio 创建图标. 替换 mipmap 中 ic_launcher.png . 图片 替换资源, 把背景图片换了. 替换 drawable-xxxhdpi-v4 中的 robot.png . 修改资源 替换字符串, 在 strings.xml 创建新的字符串, < string name = "action_common_skip_wcl" >CLWang</ string > 在 res/values/public.xml 中替换 action_common_skip 为 action_common_skip_wcl . < public type = "string" name= "action_common_skip_wcl" id= "0x7f070017" /> public.xml 是资源映射, smali 文件使用, 类似 R.java . apktool 是非常强大的逆向工程工具, 一定要熟练掌握. 5. androguard 源码 , 下载 . 这个是一个命令行处理库, 开发时间很早了, 就不做深入讲解了. OK, 逆向工程的工具基本就包含这些, aapt, dex2jar, apktool, androguard熟练使用就可以了. Enjoy It. 上一篇 加速Gradle构建项目 下一篇 重写MPAndroidChart显示标记 顶 1 踩 0 我的同类文章 Android开发 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900293次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 25
URL:: http://blog.csdn.net/caroline_wendy/article/details/50377570

ParseText::
重写MPAndroidChart显示标记 - Mystra - 博客频道 - CSDN.NET Mystra 知及之，仁不能守之，虽得之，必失之。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 重写MPAndroidChart显示标记 标签： Mystra Android MPAndroid Chart 2015-12-22 08:53 513人阅读 评论 (4) 收藏 举报 分类： Work随笔 （7） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 MPAndroidChart 是实现图表功能的优秀控件, 可以完成大多数绘制需求. 对于修改第三方库而言, 优秀的架构是继承开发, 而不是把源码拆分出去. MP在显示标记控件(MarkView)时, 会有异常, 导致标志在图表边缘显示不全, 则需要重写控件解决问题. 继承LineChart, 提取高亮位置坐标 getHighLightPos , 重绘标记 drawMarkers . /** * 数据中心的图表折线图, 继承MPChart的折线图 * <p> * Created by wangchenlong on 15/10/13. */ public class CYDataLineChart extends LineChart { @SuppressWarnings ( "unused" ) private static final String TAG = "DEBUG-WCL: " + CYDataLineChart.class.getSimpleName(); // 默认构造器 public CYDataLineChart (Context context) { super (context); } public CYDataLineChart (Context context, AttributeSet attrs) { super (context, attrs); } public CYDataLineChart (Context context, AttributeSet attrs, int defStyle) { super (context, attrs, defStyle); } // 获取高亮点坐标 public float [] getHighLightPos (Entry e, Highlight highlight) { return getMarkerPosition(e, highlight); } // 重写这个方法, 修复Bug @Override protected void drawMarkers (Canvas canvas) { // if there is no marker view or drawing marker is disabled if (mMarkerView == null || !mDrawMarkerViews || !valuesToHighlight()) return ; Rect newRect = canvas.getClipBounds(); newRect.inset(- 80 , 0 ); //make the rect larger canvas.clipRect(newRect, Region.Op.REPLACE); //noinspection ForLoopReplaceableByForEach for ( int i = 0 ; i < mIndicesToHighlight.length; i++) { Highlight highlight = mIndicesToHighlight[i]; int xIndex = highlight.getXIndex(); if (xIndex <= mDeltaX && xIndex <= mDeltaX * mAnimator.getPhaseX()) { Entry e = mData.getEntryForHighlight(mIndicesToHighlight[i]); // make sure entry not null if (e == null || e.getXIndex() != mIndicesToHighlight[i].getXIndex()) continue ; float [] pos = getMarkerPosition(e, highlight); // Marker偏移 float tmpY = pos[ 1 ] - 8 * AppUtils.getPerDp(); Paint paint = new Paint(); paint.setStyle(Paint.Style.FILL); paint.setAntiAlias( true ); paint.setStrokeWidth( 5 ); // noinspection deprecation paint.setColor(getResources().getColor(R.color.chart_circle)); canvas.drawCircle(pos[ 0 ], pos[ 1 ], 2 * AppUtils.getPerDp(), paint); // check bounds if (!mViewPortHandler.isInBounds(pos[ 0 ], tmpY)) continue ; mMarkerView.refreshContent(e, highlight); mMarkerView.measure(MeasureSpec.makeMeasureSpec( 0 , MeasureSpec.UNSPECIFIED), MeasureSpec.makeMeasureSpec( 0 , MeasureSpec.UNSPECIFIED)); mMarkerView.layout( 0 , 0 , mMarkerView.getMeasuredWidth(), mMarkerView.getMeasuredHeight()); if (tmpY - mMarkerView.getHeight() <= 0 ) { float y = mMarkerView.getHeight() - tmpY; mMarkerView.draw(canvas, pos[ 0 ], tmpY + y); } else { mMarkerView.draw(canvas, pos[ 0 ], tmpY); } } } } } getMarkerPosition 是LineChart类中的protected方法, 继承类, 使用public方法导出. float tmpY = pos[1] - 8 * AppUtils.getPerDp(); , 重新计算Y坐标, 偏离原始画布. 但是这样做有一个问题, 在移动MarkView时, 父控件会有残留. 如何解决呢? 办法就是在移动时, 重绘父控件的canvas, 使用 invalidate() 函数. // 设置图表点击事件, 监听高亮位置 mLcChart.setOnChartValueSelectedListener( new OnChartValueSelectedListener() { @Override public void onValueSelected (Entry e, int dataSetIndex, Highlight h) { int index = e.getXIndex(); Log.e(TAG, "index = " + index); setChartIndex(index); mCallback.setCurIndex(index); mIndex = index; float [] pos = mLcChart.getHighLightPos(e, h); Log.e(TAG, "x: " + pos[ 0 ] + ", y: " + pos[ 1 ]); mLlContainer.invalidate(); // 重绘父控件, 避免残留 } @Override public void onNothingSelected () { // 再次点击时调用这个, 要不非高亮 mLcChart.highlightValue(mIndex, 0 ); } }); // 外部设置图表高亮 private void setChartHighlight ( int index) { if (mLcChart.getData() == null ) return ; mMarkerView.setDateText(mMarkers. get (index)); mLcChart.highlightValue(index, 0 ); mLlContainer.invalidate(); // 重绘父控件, 避免残留 } 在图表控件中, 内部外部都会触发高亮位置. OK, Enjoy It! 上一篇 逆向工程 顶 2 踩 0 我的同类文章 Work随笔 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u012515223 访问： 900307次 积分： 17712 等级： 积分：17712 排名： 第257名 原创： 637篇 转载： 1篇 译文： 0篇 评论： 185条 自我简介 本人代码娴熟, 涉猎广泛. 文章搜索 文章分类 Android开发 (14) RN开发 (14) Work随笔 (7) Android (150) IOS (33) Python (42) Java (35) C++ (102) Algorithm (92) Design Pattern (27) 文章存档 2015年12月 (10) 2015年11月 (17) 2015年10月 (11) 2015年09月 (6) 2015年08月 (15) 2015年07月 (55) 2015年05月 (1) 2015年04月 (1) 2015年02月 (13) 2015年01月 (13) 2014年12月 (18) 2014年11月 (53) 2014年10月 (24) 2014年09月 (28) 2014年07月 (61) 2014年06月 (51) 2014年05月 (21) 2014年04月 (67) 2014年03月 (56) 2014年02月 (5) 2014年01月 (3) 2013年12月 (38) 2013年11月 (51) 2013年10月 (21) 阅读排行 Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (17139) Android - Android Studio修改字体(font)大小(size) (12242) 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 (9731) Python - 字符串(string) 详解 及 代码 (9403) C++ - "emplace_back" 和 "push_back" 的区别 (9003) OpenCV - cv::Mat 和 IplImage 的转换 (8627) Android - Android Studio 安装 及 设置 [最新] (8058) Android - Android Studio 自动(auto)添加import 语句 (7648) Eclipse - "Eclipse CDT" (Eclipse C++) 安装 与 配置 (支持C++11) (6700) 笔试 - 高德软件有限公司python试题 及 答案 (6038) 评论排行 使用RecyclerView实现滚动控件 (11) ReactNative的Atom编辑器 (7) IOS - Xcode 6创建空应用(Empty Application) (6) 笔试 - 高德软件有限公司python试题 及 答案 (6) 闪屏(Splash) (6) Android - ViewHolder优化ListView (5) Algorithms - 判断素数(prime) 详解 及 代码 (4) C++ - 类模板(class template)友元(friend) 的 全部六种形式 及 代码 (4) Microsoft Visual Studio 2012 (VS2012) 更改编码格式 "UTF-8" (4) 博客说明 (4) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 重写MPAndroidChart显示标记 yemh111 : @u012515223:AppUtils.getPerDp()这个方法类可以提供下吗 重写MPAndroidChart显示标记 yemh111 : @u012515223:597150633是我的Q,麻烦加下呗,谢谢了,改源码太费劲了,看到你这样继... 闪屏(Splash) wangbin_learn : @u012515223:嗯嗯，很看好这个技术的发展前景。 重写MPAndroidChart显示标记 u012515223 : @yemh111:是的, 这里面有些坑, 像我文里写的尽量继承修改, 方便后续的升级, 不要随便修改... 重写MPAndroidChart显示标记 yemh111 : 您好,能留个QQ吗,我也在用mpchart做图表,做完了一版,有些地方不好改,想请教下你. 使用RecyclerView实现滚动控件 adfghjkl : 根据楼主代码写出来一个，在我的github上，楼主我可以贴网址不？ 模式识别 - 局部二值模式(Local Binary Patterns) 简介 及 代码 u010355944 : 简单明了，赞! 使用RecyclerView实现滚动控件 u012515223 : @Rookie_nan1:线上项目, 暂时不提供, 可以自己实现一下, 很简单. 闪屏(Splash) u012515223 : @wangbin_learn:我好像没写过关于RN本质的一些东西. 主要是这样的, RN的思想就是编... 闪屏(Splash) wangbin_learn : 大神你好，想请问几个问题。看你博客有很多用ReactNative写的APPDemo，这个ReactN...

Recno:: 26
URL:: http://blog.csdn.net/catoop/article/details/50161605

ParseText::
MySQL 加锁处理分析 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 MySQL 加锁处理分析 2015-12-03 15:40 211人阅读 评论 (0) 收藏 举报 分类： mysql （7） 作者同类文章 X 数据库 （8） 作者同类文章 X 首先声明，本文转载自：http://hedengcheng.com/?p=771#_Toc374698320 1      背景    1 1.1      MVCC：Snapshot Read vs Current Read    2 1.2      Cluster Index：聚簇索引    3 1.3      2PL：Two-Phase Locking    3 1.4      Isolation Level    4 2      一条简单SQL的加锁实现分析    5 2.1      组合一：id主键+RC    6 2.2      组合二：id唯一索引+RC    6 2.3      组合三：id非唯一索引+RC    7 2.4      组合四：id无索引+RC    8 2.5      组合五：id主键+RR    9 2.6      组合六：id唯一索引+RR    9 2.7      组合七：id非唯一索引+RR    9 2.8      组合八：id无索引+RR    11 2.9      组合九：Serializable    12 3      一条复杂的SQL    12 4      死锁原理与分析    14 5      总结    16   背景   MySQL/InnoDB的加锁分析，一直是一个比较困难的话题。我在工作过程中，经常会有同事咨询这方面的问题。同时，微博上也经常会收到MySQL锁相关的私信，让我帮助解决一些死锁的问题。本文，准备就MySQL/InnoDB的加锁问题，展开较为深入的分析与讨论，主要是介绍一种思路，运用此思路，拿到任何一条SQL语句，都能完整的分析出这条语句会加什么锁？会有什么样的使用风险？甚至是分析线上的一个死锁场景，了解死锁产生的原因。   注： MySQL是一个支持插件式存储引擎的数据库系统。本文下面的所有介绍，都是基于InnoDB存储引擎，其他引擎的表现，会有较大的区别。 MVCC：Snapshot Read vs Current Read   MySQL InnoDB存储引擎，实现的是基于多版本的并发控制协议——MVCC ( Multi-Version Concurrency Control ) (注：与MVCC相对的，是基于锁的并发控制，Lock-Based Concurrency Control)。MVCC最大的好处，相信也是耳熟能详：读不加锁，读写不冲突。在读多写少的OLTP应用中，读写不冲突是非常重要的，极大的增加了系统的并发性能，这也是为什么现阶段，几乎所有的RDBMS，都支持了MVCC。   在MVCC并发控制中，读操作可以分成两类：快照读 (snapshot read)与当前读 (current read)。快照读，读取的是记录的可见版本 (有可能是历史版本)，不用加锁。当前读，读取的是记录的最新版本，并且，当前读返回的记录，都会加上锁，保证其他事务不会再并发修改这条记录。   在一个支持MVCC并发控制的系统中，哪些读操作是快照读？哪些操作又是当前读呢？以MySQL InnoDB为例：   快照读： 简单的select操作，属于快照读，不加锁。(当然，也有例外，下面会分析) select * from table where ?; 当前读： 特殊的读操作，插入/更新/删除操作，属于当前读，需要加锁。 select * from table where ? lock in share mode; select * from table where ? for update; insert into table values (…); update table set ? where ?; delete from table where ?; 所有以上的语句，都属于当前读，读取记录的最新版本。并且，读取之后，还需要保证其他并发事务不能修改当前记录，对读取记录加锁。其中，除了第一条语句，对读取记录加S锁 (共享锁)外，其他的操作，都加的是X锁 (排它锁)。   为什么将 插入/更新/删除 操作，都归为当前读？可以看看下面这个 更新 操作，在数据库中的执行流程： 从图中，可以看到，一个Update操作的具体流程。当Update SQL被发给MySQL后，MySQL Server会根据where条件，读取第一条满足条件的记录，然后InnoDB引擎会将第一条记录返回，并加锁 (current read)。待MySQL Server收到这条加锁的记录之后，会再发起一个Update请求，更新这条记录。一条记录操作完成，再读取下一条记录，直至没有满足条件的记录为止。因此，Update操作内部，就包含了一个当前读。同理，Delete操作也一样。Insert操作会稍微有些不同，简单来说，就是Insert操作可能会触发Unique Key的冲突检查，也会进行一个当前读。   注 ： 根据上图的交互，针对一条当前读的SQL语句，InnoDB与MySQL Server的交互，是一条一条进行的，因此，加锁也是一条一条进行的。先对一条满足条件的记录加锁，返回给MySQL Server，做一些DML操作；然后在读取下一条加锁，直至读取完毕。   Cluster Index：聚簇索引   InnoDB存储引擎的数据组织方式，是聚簇索引表：完整的记录，存储在主键索引中，通过主键索引，就可以获取记录所有的列。关于聚簇索引表的组织方式，可以参考MySQL的官方文档： Clustered and Secondary Indexes  。本文假设读者对这个，已经有了一定的认识，就不再做具体的介绍。接下来的部分，主键索引/聚簇索引 两个名称，会有一些混用，望读者知晓。   2PL：Two-Phase Locking   传统RDBMS加锁的一个原则，就是2PL (二阶段锁)： Two-Phase Locking 。相对而言，2PL比较容易理解，说的是锁操作分为两个阶段：加锁阶段与解锁阶段，并且保证加锁阶段与解锁阶段不相交。下面，仍旧以MySQL为例，来简单看看2PL在MySQL中的实现。   从上图可以看出，2PL就是将加锁/解锁分为两个完全不相交的阶段。加锁阶段：只加锁，不放锁。解锁阶段：只放锁，不加锁。   Isolation Level   隔离级别： Isolation Level ，也是RDBMS的一个关键特性。相信对数据库有所了解的朋友，对于4种隔离级别：Read Uncommited，Read Committed，Repeatable Read，Serializable，都有了深入的认识。本文不打算讨论数据库理论中，是如何定义这4种隔离级别的含义的，而是跟大家介绍一下MySQL/InnoDB是如何定义这4种隔离级别的。   MySQL/InnoDB定义的4种隔离级别： Read Uncommited 可以读取未提交记录。此隔离级别，不会使用，忽略。 Read Committed (RC) 快照读忽略，本文不考虑。 针对当前读， RC隔离级别保证对读取到的记录加锁 (记录锁) ，存在幻读现象。 Repeatable Read (RR) 快照读忽略，本文不考虑。 针对当前读， RR隔离级别保证对读取到的记录加锁 (记录锁)，同时保证对读取的范围加锁，新的满足查询条件的记录不能够插入 (间隙锁) ，不存在幻读现象。 Serializable 从MVCC并发控制退化为基于锁的并发控制。不区别快照读与当前读，所有的读操作均为当前读，读加读锁 (S锁)，写加写锁 (X锁)。 Serializable隔离级别下，读写冲突，因此并发度急剧下降，在MySQL/InnoDB下不建议使用。   一条简单SQL的加锁实现分析   在介绍完一些背景知识之后，本文接下来将选择几个有代表性的例子，来详细分析MySQL的加锁处理。当然，还是从最简单的例子说起。经常有朋友发给我一个SQL，然后问我，这个SQL加什么锁？就如同下面两条简单的SQL，他们加什么锁？   SQL1： select * from t1 where id = 10; SQL2： delete from t1 where id = 10;   针对这个问题，该怎么回答？我能想象到的一个答案是：   SQL1： 不加锁。因为MySQL是使用多版本并发控制的，读不加锁。 SQL2： 对id = 10的记录加写锁 (走主键索引)。   这个答案对吗？说不上来。即可能是正确的，也有可能是错误的，已知条件不足，这个问题没有答案。如果让我来回答这个问题，我必须还要知道以下的一些前提，前提不同，我能给出的答案也就不同。要回答这个问题，还缺少哪些前提条件？   前提一： id列是不是主键？   前提二： 当前系统的隔离级别是什么？ 前提三： id列如果不是主键，那么id列上有索引吗？ 前提四： id列上如果有二级索引，那么这个索引是唯一索引吗？ 前提五： 两个SQL的执行计划是什么？索引扫描？全表扫描？   没有这些前提，直接就给定一条SQL，然后问这个SQL会加什么锁，都是很业余的表现。而当这些问题有了明确的答案之后，给定的SQL会加什么锁，也就一目了然。下面，我将这些问题的答案进行组合，然后按照从易到难的顺序，逐个分析每种组合下，对应的SQL会加哪些锁？   注： 下面的这些组合，我做了一个前提假设，也就是有索引时，执行计划一定会选择使用索引进行过滤 (索引扫描)。但实际情况会复杂很多，真正的执行计划，还是需要根据MySQL输出的为准。   组合一 ： id列是主键，RC隔离级别 组合二 ： id列是二级唯一索引，RC隔离级别 组合三 ： id列是二级非唯一索引，RC隔离级别 组合四 ： id列上没有索引，RC隔离级别 组合五 ： id列是主键，RR隔离级别 组合六 ： id列是二级唯一索引，RR隔离级别 组合七 ： id列是二级非唯一索引，RR隔离级别 组合八 ： id列上没有索引，RR隔离级别 组合九 ： Serializable隔离级别   排列组合还没有列举完全，但是看起来，已经很多了。真的有必要这么复杂吗？事实上，要分析加锁，就是需要这么复杂。但是从另一个角度来说，只要你选定了一种组合，SQL需要加哪些锁，其实也就确定了。接下来，就让我们来逐个分析这9种组合下的SQL加锁策略。   注：在前面八种组合下，也就是RC，RR隔离级别下，SQL1：select操作均不加锁，采用的是快照读，因此在下面的讨论中就忽略了，主要讨论SQL2：delete操作的加锁。   组合一：id主键+RC   这个组合，是最简单，最容易分析的组合。id是主键，Read Committed隔离级别，给定SQL：delete from t1 where id = 10; 只需要将主键上，id = 10的记录加上X锁即可。如下图所示： 结论： id是主键时，此SQL只需要在id=10这条记录上加X锁即可。   组合二：id唯一索引+RC   这个组合，id不是主键，而是一个Unique的二级索引键值。那么在RC隔离级别下，delete from t1 where id = 10; 需要加什么锁呢？见下图： 此组合中，id是unique索引，而主键是name列。此时，加锁的情况由于组合一有所不同。由于id是unique索引，因此delete语句会选择�

Recno:: 27
URL:: http://blog.csdn.net/catoop/article/details/50175553

ParseText::
Android 复制文本 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android 复制文本 标签： android 2015-12-04 15:21 591人阅读 评论 (0) 收藏 举报 分类： android （61） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 安卓中，客户端中提供直接复制相关内容的功能，已经算是比较实用的功能了，Android 也提供了相关的API。 需要说明的是，兼容低版本手机在使用时，注意判断API版本呢，法代码如下： new View .OnClickListener () { @SuppressLint( "NewApi" ) @Override public void onClick(View v) { if(getSDKVersionNumber() >= 11 ){ android .text .ClipboardManager clipboardManager = (android .text .ClipboardManager )context .getSystemService (Context .CLIPBOARD _SERVICE) ; clipboardManager .setText (linkUrl) ; }else{ // 得到剪贴板管理器 android .content .ClipboardManager clipboardManager = (android .content .ClipboardManager )context .getSystemService (Context .CLIPBOARD _SERVICE) ; clipboardManager .setPrimaryClip (ClipData .newPlainText (null, linkUrl)) ; } ToastUtil .show (context, "已复制到粘贴板" ) ; } } 获取手机操作系统版本的方法： /** * 获取手机操作系统版本 * @return * @author SHANHY * @date 2015年12月4日 */ public static int getSDKVersionNumber () { int sdkVersion; try { sdkVersion = Integer.valueOf(android.os.Build.VERSION.SDK); } catch (NumberFormatException e) { sdkVersion = 0 ; } return sdkVersion; } 上一篇 MySQL 加锁处理分析 下一篇 Android自定义Dialog简单实例 顶 3 踩 0 我的同类文章 android （61） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591118次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 28
URL:: http://blog.csdn.net/catoop/article/details/50177147

ParseText::
Android自定义Dialog简单实例 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android自定义Dialog简单实例 标签： android 2015-12-04 16:55 763人阅读 评论 (0) 收藏 举报 分类： android （61） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 做Android应用中，最缺少不了的就是自定义Dialog，对于系统默认提供的Dialog样式，一般都不复合我们应用的样式。 自定义Dialog需要3步骤即可： 1、主要的重写Dialog的Java类 2、自定义布局文件、并设置Dialog Theme，在style.xml文件中加一个即可 3、使用方法 一、创建CustomPopDialog2.java类 import android.app.Dialog; import android.content.Context; import android.graphics.Bitmap; import android.view.LayoutInflater; import android.view.View; import android.view.WindowManager.LayoutParams; import android.widget.ImageView; /** * 该自定义Dialog应用在：弹出框居中显示图片，点击其他区域自动关闭Dialog * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月4日 */ public class CustomPopDialog2 extends Dialog { public CustomPopDialog2 (Context context) { super (context); } public CustomPopDialog2 (Context context, int theme) { super (context, theme); } public static class Builder { private Context context; private Bitmap image; public Builder (Context context) { this .context = context; } public Bitmap getImage () { return image; } public void setImage (Bitmap image) { this .image = image; } public CustomPopDialog2 create () { LayoutInflater inflater = (LayoutInflater) context .getSystemService(Context.LAYOUT_INFLATER_SERVICE); final CustomPopDialog2 dialog = new CustomPopDialog2(context,R.style.Dialog); View layout = inflater.inflate(R.layout.dialog_share_qrcode, null ); dialog.addContentView(layout, new LayoutParams( android.view.ViewGroup.LayoutParams.WRAP_CONTENT , android.view.ViewGroup.LayoutParams.WRAP_CONTENT)); dialog.setContentView(layout); ImageView img = (ImageView)layout.findViewById(R.id.img_qrcode); img.setImageBitmap(getImage()); return dialog; } } } 这里简单说明下，我们自定义Dialog需要准备一个自己的View布局文件，主要关注create()方法即可，本例中就是直接显示一个图片。 二、自定义View的布局文件、并在style.xml中添加theme <?xml version="1.0" encoding="utf-8"?> < LinearLayout xmlns:android = "http://schemas.android.com/apk/res/android" android:layout_width = "match_parent" android:layout_height = "match_parent" android:orientation = "vertical" android:gravity = "center" android:id = "@+id/rootLayout" > < ImageView android:id = "@+id/img_qrcode" android:layout_width = "wrap_content" android:layout_height = "wrap_content" android:contentDescription = "二维码" /> </ LinearLayout > <style name = "Dialog" parent= "android:style/Theme.Dialog" > < item name = "android:background" > #00000000</item> < item name = "android:windowBackground" >@android:color/transparent</ item > < item name = "android:windowNoTitle" > true </ item > < item name = "android:windowIsFloating" > true </ item > </style> 三、使用自定义的Dialog Bitmap bitmap = xxxxx ;// 这里是获取图片Bitmap，也可以传入其他参数到Dialog中 CustomPopDialog2 .Builder dialogBuild = new CustomPopDialog2 .Builder (context) ; dialogBuild .setImage (bitmap) ; CustomPopDialog2 dialog = dialogBuild .create () ; dialog .setCanceledOnTouchOutside (true) ;// 点击外部区域关闭 dialog .show () ; 最终效果图： 上一篇 Android 复制文本 下一篇 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） 顶 6 踩 1 我的同类文章 android （61） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591121次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 29
URL:: http://blog.csdn.net/catoop/article/details/50178175

ParseText::
Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） 标签： android 2015-12-04 18:12 1111人阅读 评论 (3) 收藏 举报 分类： android （61） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 本文，提供“Android应用被卸载后，自动使用 浏览器打开指定连接”的方法。 原理：在安卓程序中某处，基于JNI调用C代码开启一个子进程监控应用在系统中的文件目录，一旦应用被卸载，该目录将会被系统删除，此时触发子进程执行相关代码（本例调用浏览器执行打开一个连接） 1、在安卓项目下创建jni目录 2、在jni目录下创建文件observer.c /* * Copyright (C) 2009 The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the "License" ); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http : // www.apache.org/licenses/LICENSE- 2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * */ #include <string.h> #include <jni.h> #include <jni.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <android/log.h> #include <unistd.h> #include <sys/inotify.h> /* 宏定义begin */ // 清 0 宏 #define MEM_ZERO(pDest, destSize) memset(pDest, 0, destSize) // LOG宏定义 #define LOG_INFO(tag, msg) __android_log_write(ANDROID_LOG_INFO, tag, msg) #define LOG_DEBUG(tag, msg) __android_log_write(ANDROID_LOG_DEBUG, tag, msg) #define LOG_WARN(tag, msg) __android_log_write(ANDROID_LOG_WARN, tag, msg) #define LOG_ERROR(tag, msg) __android_log_write(ANDROID_LOG_ERROR, tag, msg) /* 内全局变量begin */ static char c_TAG[] = "OnAppUninstall" ; static jboolean b_IS_COPY = JNI_TRUE; /* native方法定义 */ JNIEXPORT jstring JNICALL Java_com_zgy_catchuninstallself_UninstallObserver_startWork( JNIEnv* env, jobject thiz, jstring dirStr, jstring data_packagedir, jstring activity, jstring action, jstring action_data, jstring userSerial) { jstring tag = (*env) -> NewStringUTF(env, c_TAG); LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "start------------------" ), &b_IS_COPY)) ; //初始化 log LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "init OK" ), &b_IS_COPY)) ; // fork 子进程，以执行轮询任务 pid_t pid = fork () ; char showpid [10]; sprintf (showpid, "%d" , pid) ; LOG_INFO ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, showpid), &b_IS_COPY)) ; if (pid < 0 ) { //出错 log LOG_ERROR ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "fork failed !!!" ), &b_IS_COPY)) ; } else if (pid == 0 ) { LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "childen process" ), &b_IS_COPY)) ; int fileDescriptor = inotify_init () ; if (fileDescriptor < 0 ) { //初始化文件监听器失败 LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "inotify_init failed !!!" ), &b_IS_COPY)) ; exit ( 1 ) ; } LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "will creat a lockfile" ), &b_IS_COPY)) ; LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, dirStr, &b_IS_COPY)) ; LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "creat a new process" ), &b_IS_COPY)) ; //子进程注册"/ data / data /{ package }"目录监听器 int watchDescriptor ; watchDescriptor = inotify_add_watch (fileDescriptor, (*env)->GetStringUTFChars(env, dirStr, &b_IS_COPY), IN_DELETE) ; if (watchDescriptor < 0 ) { LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "inotify_add_watch failed !!!" ), &b_IS_COPY)) ; exit ( 1 ) ; } //分配缓存，以便读取 event ，缓存大小=一个 struct inotify_event 的大小，这样一次处理一个 event void * p_buf = malloc (sizeof(struct inotify_event)) ; if (p_buf == NULL) { LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "malloc failed !!!" ), &b_IS_COPY)) ; exit ( 1 ) ; } //开始监听 LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "start observer" ), &b_IS_COPY)) ; size_t readBytes = read (fileDescriptor, p_buf, sizeof(struct inotify_event)) ; //等待5秒 LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "sleep 2 seconds" ), &b_IS_COPY)) ; sleep ( 2 ) ; //如果是覆盖安装跳过 FILE * p_appDir = fopen (data_packagedir, "r" ) ; if (p_appDir != NULL) { LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "reinstall" ), &b_IS_COPY)) ; exit ( 1 ) ; } // read 会阻塞进程，走到这里说明收到目录被删除的事件，注销监听器 free (p_buf) ; inotify_rm_watch (fileDescriptor, IN_DELETE) ; //目录不存在 log LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "uninstalled" ), &b_IS_COPY)) ; //执行命令 am start - a android . intent . action . VIEW - d http :// ww . baidu . com // execlp ( "am" , "am" , "start" , "-a" , "android.intent.action.VIEW" , "-d" , "http://ww.baidu.com" , (char *)NULL) ; //4.2以上的系统由于用户权限管理更严格，需要加上 -- user 0 if (userSerial == NULL) { // 执行命令 am start - a android . intent . action . VIEW - d $ (url) execlp ( "am" , "am" , "start" , "-a" , "android.intent.action.VIEW" , "-d" , (*env)->GetStringUTFChars(env, action_data, &b_IS_COPY), (char *) NULL) ; } else { if (activity == NULL || (*env)->GetStringUTFLength(env, activity) < 1 ) { execlp ( "am" , "am" , "start" , "--user" , (*env)->GetStringUTFChars(env, userSerial, &b_IS_COPY), "-a" , (*env)->GetStringUTFChars(env, action, &b_IS_COPY), "-d" , (*env)->GetStringUTFChars(env, action_data, &b_IS_COPY), (char *) NULL) ; } else { if (action == NULL || (*env)->GetStringUTFLength(env, action) < 1 ) { if (action_data == NULL || (*env)->GetStringUTFLength(env, action_data) < 1 ) { execlp ( "am" , "am" , "start" , "--user" , (*env)->GetStringUTFChars(env, userSerial, &b_IS_COPY), "-n" , (*env)->GetStringUTFChars(env, activity, &b_IS_COPY), (char *) NULL) ; } else { execlp ( "am" , "am" , "start" , "--user" , (*env)->GetStringUTFChars(env, userSerial, &b_IS_COPY), "-n" , (*env)->GetStringUTFChars(env, activity, &b_IS_COPY), "-d" , (*env)->GetStringUTFChars(env, action_data, &b_IS_COPY), (char *) NULL) ; } } else { if (action_data == NULL || (*env)->GetStringUTFLength(env, action_data) < 1 ) { execlp ( "am" , "am" , "start" , "--user" , (*env)->GetStringUTFChars(env, userSerial, &b_IS_COPY), "-n" , (*env)->GetStringUTFChars(env, activity, &b_IS_COPY), "-a" , (*env)->GetStringUTFChars(env, action, &b_IS_COPY), (char *) NULL) ; } else { execlp ( "am" , "am" , "start" , "--user" , (*env)->GetStringUTFChars(env, userSerial, &b_IS_COPY), "-n" , (*env)->GetStringUTFChars(env, activity, &b_IS_COPY), "-a" , (*env)->GetStringUTFChars(env, action, &b_IS_COPY), "-d" , (*env)->GetStringUTFChars(env, action_data, &b_IS_COPY), (char *) NULL) ; } } } } //扩展：可以执行其他 shell 命令， am (即activity manager) ，可以打开某程序、服务， broadcast intent ，等等 } else { //父进程直接退出，使子进程被 init 进程领养，以避免子进程僵死 LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "fork pid > 0" ), &b_IS_COPY)) ; } LOG_DEBUG ((*env)->GetStringUTFChars(env, tag, &b_IS_COPY), (*env)->GetStringUTFChars(env, (*env)->NewStringUTF(env, "end------------------" ), &b_IS_COPY)) ; return (*env) -> NewStringUTF(env, showpid); } 3、在jni目录下创建文件Android.mk LOCAL_PATH : = $( call my-dir) include $( CLEAR_VARS ) LOCAL_MODULE : =observer LOCAL_SRC_FILES : =observer.c LOCAL_C_INCLUDES : = $( LOCAL_PATH )/ include LOCAL_LDLIBS += - L $( SYSROOT )/usr/lib -llog include $( BUILD_SHARED_LIBRARY ) 4、在创建natvie方法，并在Android中调用JNI方法 package com.zgy.catchuninstallself; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map; import android.content.Context; import android.content.SharedPreferences; import android.content.pm.PackageInfo; import android.os.Build; import android.util.Log; /** * 应用程序卸载监控，入口调用方法：openUrlWhenUninstall(……) * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月15日 */ public class UninstallObserver { // path：data/data/[packageNmae]/lib // url:跳转的页面，需要http://或https://开头 /** * Native 方法 * * @param dirStr 要监听的目录，传值：/data/data/{packageNmae}/lib * @param activity Activity对象 * @param action android.intent.action.VIEW * @param actionData 要在浏览器中打开的URL * @param userSerial * @return * @author SHANHY * @date 2015年12月15日 */ private static native String startWork (String dirStr,String dataPackageDir, String activity, String action, String actionData, String userSerial); static { System.loadLibrary( "observer" ); } private static SharedPreferences sharedPreferences; private static SharedPreferences.Editor editor; /** * 在需要开启子进程监听的地方调用该方法 * * @param context * @param openUrl * @author SHANHY * @date 2015年12月15日 */ public static void openUrlWhenUninstall (Context context, String openUrl) { sharedPreferences = context.getSharedPreferences( "process" , Context.MODE_PRIVATE); editor = sharedPreferences.edit(); String pid = sharedPreferences.getString( "pid" , "0" ); if (checkChildProcess(context, pid)) { Log.i( "OnAppUninstall" , "已经开启过守护进程" ); return ; } Log.i( "OnAppUninstall" , "执行开启过守护进程" ); String dataPackageDir = context.getApplicationInfo().dataDir; String dirStr = context.getApplicationInfo().dataDir + "/lib" ; // 监听lib目录是因为：lib目录在进行应用清理的时候不会被清理 String activity = null ; if (checkInstall(context, "com.android.browser" )) { activity = "com.android.browser/com.android.browser.BrowserActivity" ; } String action = "android.intent.action.VIEW" ; String gpid; if (Build.VERSION.SDK_INT < 17 ) { gpid = startWork(dirStr, dataPackageDir, activity, action, openUrl, null ); } else { //4.2以上的系统由于用户权限管理更严格，调用API有所区别 gpid = startWork(dirStr, dataPackageDir, activity, action, openUrl, getUserSerial(context)); } if (gpid != null && !gpid.equals( "" ) && !gpid.equals( "0" )) { Log.i( "OnAppUninstall" , "获得守护进程pid-->" + gpid); editor.putString( "pid" , gpid); editor.commit(); } } /** * 检查安装 * * @param context * @param packageName * @return * @author SHANHY * @date 2015年12月15日 */ private static boolean checkInstall (Context context, String packageName) { try { PackageInfo packageInfo = context.getPackageManager().getPackageInfo(packageName, 0 ); if (packageInfo == null ) { return false ; } else { return true ; } } catch (Exception e) { return false ; } } /** * 获取 UserSerial * * @param ctx * @return * @author SHANHY * @date 2015年12月15日 */ private static String getUserSerial (Context ctx) { Object userManager = ctx.getSystemService( "user" ); if (userManager == null ) { return null ; } try { Method myUserHandleMethod = android.os.Process.class.getMethod( "myUserHandle" , (Class<?>[]) null ); Object myUserHandle = myUserHandleMethod.invoke(android.os.Process.class, (Object[]) null ); Method getSerialNumberForUser = userManager.getClass().getMethod( "getSerialNumberForUser" , myUserHandle.getClass()); long userSerial = (Long) getSerialNumberForUser.invoke(userManager, myUserHandle); return String.valueOf(userSerial); } catch (NoSuchMethodException e) { } catch (IllegalArgumentException e) { } catch (IllegalAccessException e) { } catch (InvocationTargetException e) { } return null ; } /** * 检查子进程 * * @param context * @param mpid * @return * @author SHANHY * @date 2015年12月15日 */ private static boolean checkChildProcess (Context context, String mpid) { boolean resflag = false ; int mypid = android.os.Process.myPid(); Log.i( "OnAppUninstall" , "mypid-->" + mypid); BufferedReader in = null ; long starttime = System.currentTimeMillis(); List<Map<String, String>> listdata = new ArrayList<Map<String, String>>(); try { Process p = Runtime.getRuntime().exec( "ps" ); in = new BufferedReader( new InputStreamReader(p.getInputStream())); String line = null ; String[] temp; boolean flag = false ; // int length = 0; while ((line = in.readLine()) != null ) { // Log.i("OnAppUninstall", "ps-->" + line); if (!flag) { flag = true ; continue ; } line = line.replaceAll( " +" , " " ); temp = line.split( " " ); // System.out.println(context.getPackageName()); // System.out.println(temp[8]); if (temp[ 8 ].trim().equals(context.getPackageName().trim()) && (temp[ 2 ].trim().equals(mypid + "" ) || temp[ 2 ].trim().equals( "1" ))) { Log.i( "OnAppUninstall" , "get it" ); Map<String, String> map = new HashMap<String, String>(); map.put( "pid" , temp[ 1 ]); map.put( "pname" , temp[ 8 ]); listdata.add(map); } } } catch (IOException e) { e.printStackTrace(); } finally { if (in != null ) { try { in.close(); } catch (IOException e) { e.printStackTrace(); } in = null ; } } long endtime = System.currentTimeMillis(); long spendtime = endtime - starttime; for ( int i = 0 ; i < listdata.size(); i++) { if (listdata.get(i).get( "pid" ).equals(mpid)) { resflag = true ; } else { Log.w( "OnAppUninstall" , "捕获到多余守护进程-->" + listdata.get(i).get( "pid" ) + " " + listdata.get(i).get( "pname" )); try { android.os.Process.killProcess(Integer.valueOf(listdata.get(i).get( "pid" ).trim())); } catch (NumberFormatException e) { e.printStackTrace(); } } Log.i( "OnAppUninstall" , listdata.get(i).get( "pid" ) + " " + listdata.get(i).get( "pname" )); } Log.i( "OnAppUninstall" , "spendtime-->" + spendtime); return resflag; } } String url = "http://www.baidu.com" ; UninstallObserver.openUrlWhenUninstall( this , url); 注：本文已经更新，并解决了之前“fork多个子进程”的问题。 上一篇 Android自定义Dialog简单实例 下一篇 Java线程池例子 顶 0 踩 0 我的同类文章 android （61） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591118次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1)

Recno:: 30
URL:: http://blog.csdn.net/catoop/article/details/50180949

ParseText::
Java线程池例子 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Java线程池例子 标签： 线程池 线程 2015-12-04 23:16 1040人阅读 评论 (1) 收藏 举报 分类： 线程 （6） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在做很多高并发应用的时候，单线程的瓶颈已经满足不了我们的需求，此时使用多线程来提高处理速度已经是比较常规的方案了。在使用多线程的时候，我们可以使用线程池来管理我们的线程，至于使用线程池的优点就不多说了。 对于多线程的线程安全处理，这个也非常重要，有些同学还是要多补补课。 Java线程池说起来也简单，简单说下继承关系： ThreadPoolExecutor extends AbstractExecutorService implements ExecutorService extends Executor 还有一个支持延时执行线程和可以重复执行线程的实现类： ScheduledThreadPoolExecutor extends ThreadPoolExecutor implements ScheduledExecutorService 大家把这些类中的相关方法弄清楚，使用线程池就不在话下了。其实弄清楚里面各个方法的功能也就够了。 最重要的还是在实践中总结经验，企业需要的是能实际解决问题的人。 下面是我写的一个例子，包括3个Java文件，分别是： ExecutorServiceFactory.java ExecutorProcessPool.java ExecutorTest.java 下面贴出代码： 1、ExecutorServiceFactory.java package com.test.threadpool; import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; import java.util.concurrent.ThreadFactory; import java.util.concurrent.atomic.AtomicInteger; /** * 线程池构造工厂 * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月4日 */ public class ExecutorServiceFactory { private static ExecutorServiceFactory executorFactory = new ExecutorServiceFactory(); /** * 定时任务线程池 */ private ExecutorService executors; private ExecutorServiceFactory () { } /** * 获取ExecutorServiceFactory * * @return */ public static ExecutorServiceFactory getInstance () { return executorFactory; } /** * 创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。 * * @return */ public ExecutorService createScheduledThreadPool () { // CPU个数 int availableProcessors = Runtime.getRuntime().availableProcessors(); // 创建 executors = Executors.newScheduledThreadPool(availableProcessors * 10 , getThreadFactory()); return executors; } /** * 创建一个使用单个 worker 线程的 * Executor，以无界队列方式来运行该线程。（注意，如果因为在关闭前的执行期间出现失败而终止了此单个线程， * 那么如果需要，一个新线程将代替它执行后续的任务）。可保证顺序地执行各个任务，并且在任意给定的时间不会有多个线程是活动的。与其他等效的 * newFixedThreadPool(1) 不同，可保证无需重新配置此方法所返回的执行程序即可使用其他的线程。 * * @return */ public ExecutorService createSingleThreadExecutor () { // 创建 executors = Executors.newSingleThreadExecutor(getThreadFactory()); return executors; } /** * 创建一个可根据需要创建新线程的线程池，但是在以前构造的线程可用时将重用它们。对于执行很多短期异步任务的程序而言，这些线程池通常可提高程序性能。调用 * execute 将重用以前构造的线程（如果线程可用）。如果现有线程没有可用的，则创建一个新线程并添加到池中。终止并从缓存中移除那些已有 60 * 秒钟未被使用的线程。因此，长时间保持空闲的线程池不会使用任何资源。注意，可以使用 ThreadPoolExecutor * 构造方法创建具有类似属性但细节不同（例如超时参数）的线程池。 * * @return */ public ExecutorService createCachedThreadPool () { // 创建 executors = Executors.newCachedThreadPool(getThreadFactory()); return executors; } /** * 创建一个可重用固定线程数的线程池，以共享的无界队列方式来运行这些线程。在任意点，在大多数 nThreads * 线程会处于处理任务的活动状态。如果在所有线程处于活动状态时提交附加任务 * ，则在有可用线程之前，附加任务将在队列中等待。如果在关闭前的执行期间由于失败而导致任何线程终止 * ，那么一个新线程将代替它执行后续的任务（如果需要）。在某个线程被显式地关闭之前，池中的线程将一直存在。 * * @return */ public ExecutorService createFixedThreadPool ( int count) { // 创建 executors = Executors.newFixedThreadPool(count, getThreadFactory()); return executors; } /** * 获取线程池工厂 * * @return */ private ThreadFactory getThreadFactory () { return new ThreadFactory() { AtomicInteger sn = new AtomicInteger(); public Thread newThread (Runnable r) { SecurityManager s = System.getSecurityManager(); ThreadGroup group = (s != null ) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup(); Thread t = new Thread(group, r); t.setName( "任务线程 - " + sn.incrementAndGet()); return t; } }; } } 2、ExecutorProcessPool.java package com.test.threadpool; import java.util.concurrent.Callable; import java.util.concurrent.ExecutorService; import java.util.concurrent.Future; /** * 线程处理类 * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月4日 */ public class ExecutorProcessPool { private ExecutorService executor; private static ExecutorProcessPool pool = new ExecutorProcessPool(); private final int threadMax = 10 ; private ExecutorProcessPool () { System.out.println( "threadMax>>>>>>>" + threadMax); executor = ExecutorServiceFactory.getInstance().createFixedThreadPool(threadMax); } public static ExecutorProcessPool getInstance () { return pool; } /** * 关闭线程池，这里要说明的是：调用关闭线程池方法后，线程池会执行完队列中的所有任务才退出 * * @author SHANHY * @date 2015年12月4日 */ public void shutdown (){ executor.shutdown(); } /** * 提交任务到线程池，可以接收线程返回值 * * @param task * @return * @author SHANHY * @date 2015年12月4日 */ public Future<?> submit (Runnable task) { return executor.submit(task); } /** * 提交任务到线程池，可以接收线程返回值 * * @param task * @return * @author SHANHY * @date 2015年12月4日 */ public Future<?> submit (Callable<?> task) { return executor.submit(task); } /** * 直接提交任务到线程池，无返回值 * * @param task * @author SHANHY * @date 2015年12月4日 */ public void execute (Runnable task){ executor.execute(task); } } 3、ExecutorTest.java package com.test.threadpool; import java.util.concurrent.Callable; import java.util.concurrent.Future; import java.util.concurrent.TimeUnit; /** * 测试类 * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月4日 */ public class ExecutorTest { public static void main (String[] args) { ExecutorProcessPool pool = ExecutorProcessPool.getInstance(); for ( int i = 0 ; i < 200 ; i++) { Future<?> future = pool.submit( new ExcuteTask1(i+ "" )); // try { // 如果接收线程返回值，future.get() 会阻塞，如果这样写就是一个线程一个线程执行。所以非特殊情况不建议使用接收返回值的。 // System.out.println(future.get()); // } catch (Exception e) { // e.printStackTrace(); // } } for ( int i = 0 ; i < 200 ; i++) { pool.execute( new ExcuteTask2(i+ "" )); } //关闭线程池，如果是需要长期运行的线程池，不用调用该方法。 //监听程序退出的时候最好执行一下。 pool.shutdown(); } /** * 执行任务1，实现Callable方式 * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月4日 */ static class ExcuteTask1 implements Callable<String> { private String taskName; public ExcuteTask1 (String taskName) { this .taskName = taskName; } @Override public String call () throws Exception { try { // Java 6/7最佳的休眠方法为TimeUnit.MILLISECONDS.sleep(100); // 最好不要用 Thread.sleep(100); TimeUnit.MILLISECONDS.sleep(( int )(Math.random() * 1000 )); // 1000毫秒以内的随机数，模拟业务逻辑处理 } catch (Exception e) { e.printStackTrace(); } System.out.println( "-------------这里执行业务逻辑，Callable TaskName = " + taskName + "-------------" ); return ">>>>>>>>>>>>>线程返回值，Callable TaskName = " + taskName + "<<<<<<<<<<<<<<" ; } } /** * 执行任务2，实现Runable方式 * * @author SHANHY(365384722@QQ.COM) * @date 2015年12月4日 */ static class ExcuteTask2 implements Runnable { private String taskName; public ExcuteTask2 (String taskName) { this .taskName = taskName; } @Override public void run () { try { TimeUnit.MILLISECONDS.sleep(( int )(Math.random() * 1000 )); // 1000毫秒以内的随机数，模拟业务逻辑处理 } catch (Exception e) { e.printStackTrace(); } System.out.println( "-------------这里执行业务逻辑，Runnable TaskName = " + taskName + "-------------" ); } } } 上面代码中也有一些注释说明，自己把代码自己运行一遍看看效果。 上一篇 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） 下一篇 远程调用服务(RPC)和消息(Message Queue)对比及其适用/不适用场合 顶 0 踩 0 我的同类文章 线程 （6） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591119次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！

Recno:: 31
URL:: http://blog.csdn.net/catoop/article/details/50182111

ParseText::
远程调用服务(RPC)和消息(Message Queue)对比及其适用/不适用场合 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 远程调用服务(RPC)和消息(Message Queue)对比及其适用/不适用场合 标签： RPC 解决方案 2015-12-05 00:25 273人阅读 评论 (0) 收藏 举报 分类： RPC 本文转载，因网上版本几乎都是转载，故不知道哪个才是原版。 重点是共享知识！ 在阿里的平台技术部参与开发了Dubbo（远程调用服务）和Napoli（消息解决方案），又给网站应用支持这2个产品2年，了解了这2个产品的实现及应用对这两个产品的用法。 大部分情况下，“给定场景下应该使用这两个产品中哪个”这个问题，大家都会容易决定，而且不需要多少讨论。 我为什么要拿出来讨论一下： 一些场景会比较模糊，觉得都可以使用。这时需要知道产品缺点，而不是看到优势。 一些新人会觉得产品功能是可以替换的，要给说明一下。 这里简单说一下两者的区别。 系统结构 RPC系统结构： +———————————–+ | Consumer | <=> | Provider | +———————————–+ Consumer调用的Provider提供的服务。 Message Queue系统结构： +—————————————————+ | Sender | <=> | Queue | <=> | Receiver | +—————————————————+ Sender发送消息给Queue；Receiver从Queue拿到消息来处理。 RPC系统结构： +———————————–+ | Consumer | <=> | Provider | +———————————–+ Consumer调用的Provider提供的服务。 Message Queue系统结构： +—————————————————+ | Sender | <=> | Queue | <=> | Receiver | +—————————————————+ Sender发送消息给Queue；Receiver从Queue拿到消息来处理。 功能特点 在架构上，RPC和Message的差异点是，Message有一个中间结点Message Queue，可以把消息存储。 消息的特点 Message Queue把请求的压力保存一下，逐渐释放出来，让处理者按照自己的节奏来处理。 Message Queue引入一下新的结点，让系统的可靠性会受Message Queue结点的影响。 Message Queue是异步单向的消息。发送消息设计成是不需要等待消息处理的完成。 所以对于有同步返回需求，用Message Queue则变得麻烦了。 RPC的特点 同步调用，对于要等待返回结果/处理结果的场景，RPC是可以非常自然直觉的使用方式。 RPC也可以是异步调用。 由于等待结果，Consumer（Client）会有线程消耗。 如果以异步RPC的方式使用，Consumer（Client）线程消耗可以去掉。但不能做到像消息一样暂存消息/请求，压力会直接传导到服务Provider。 适用场合说明 希望同步得到结果的场合，RPC合适。 希望使用简单，则RPC；RPC操作基于接口，使用简单，使用方式模拟本地调用。异步的方式编程比较复杂。 不希望发送端（RPC Consumer、Message Sender）受限于处理端（RPC Provider、Message Receiver）的速度时，使用Message Queue。 随着业务增长，有的处理端处理量会成为瓶颈，会进行同步调用到异步消息的改造。 这样的改造实际上有调整业务的使用方式。 比如原来一个操作页面提交后就下一个页面会看到处理结果；改造后异步消息后，下一个页面就会变成“操作已提交，完成后会得到通知”。 不适用场合说明 RPC同步调用使用Message Queue来传输调用信息。 上面分析可以知道，这样的做法，发送端是在等待，同时占用一个中间点的资源。变得复杂了，但没有对等的收益。 对于返回值是void的调用，可以这样做，因为实际上这个调用业务上往往不需要同步得到处理结果的，只要保证会处理即可。（RPC的方式可以保证调用返回即处理完成，使用消息方式后这一点不能保证了。） 返回值是void的调用，使用消息，效果上是把消息的使用方式Wrap成了服务调用（服务调用使用方式成简单，基于业务接口）。 补记，关于解耦讨论 微博上 inter12 的一些讨论，觉得很有意义补记下来。 inter12 ：这两者可以拿来比较，但是个人感觉并不是同一个层面的问题。RPC是分布式服务之间调用的一种解决方案，是我们在做架构设计决策时同分布式对象，REST等层面的东西比较，决策的一个方案！ 消息系统更多是我们为了解决系统之间的解耦，以及性能问题等方面所考虑的方案！ 说的有些乱，望鼎哥指点下。 oldratlee ：回复@inter12:你说到很多关键点了，“分布式对象”“解耦”“性能”，这些都可以用来看两者的差异。 如果从两个机器间数据的传递（调用、消息都是数据）角度看，两者效果相同，区别只是使用方式、技术指标：同步异步（比如 是否等反馈 ）、数据是否暂存、强弱类型（比如 有独立的业务方法，数据类型）等等 inter12 提到了“解耦”，“解决系统之间的解耦”使用消息时大家常常说到的一点，一个重要权衡方面！ 个人觉得，“解耦”不如“暂存”，是消息相对RPC的关键区别，原因说明如下： 消息的解耦特征，主要体现在： 消息的发送者，不需要关心接收者的信息。 服务通过注册中心也可以做到，即服务调用者到注册中心查询服务提供者信息，调用者不需知道。 消息的发送者，不用关心可以发个几个关心的消息组件。 这一点RPC可以通过服务编排做到。 上一篇 Java线程池例子 下一篇 Tomcat中JVM内存溢出及合理配置 顶 0 踩 0 我的同类文章 http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591121次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 32
URL:: http://blog.csdn.net/catoop/article/details/50203851

ParseText::
Tomcat中JVM内存溢出及合理配置 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Tomcat中JVM内存溢出及合理配置 2015-12-07 11:35 250人阅读 评论 (0) 收藏 举报 分类： JVM堆栈和GC （3） 作者同类文章 X Tomcat本身不能直接在计算机上运行，需要依赖于硬件基础之上的操作系统和一个Java虚拟机。Tomcat的内存溢出本质就是JVM内存溢出，所以在本文开始时，应该先对Java JVM有关内存方面的知识进行详细介绍。 一、Java JVM内存介绍 JVM管理两种类型的内存，堆和非堆。按照官方的说法：“Java 虚拟机具有一个堆，堆是运行时数据区域，所有类实例和数组的内存均从此处分配。堆是在 Java 虚拟机启动时创建的。”“在JVM中堆之外的内存称为非堆内存(Non-heap memory)”。简单来说堆就是Java代码可及的内存，是留给开发人员使用的；非堆就是JVM留给自己用的，所以方法区、JVM内部处理或优化所需的内存(如JIT编译后的代码缓存)、每个类结构(如运行时常数池、字段和方法数据)以及方法和构造方法的代码都在非堆内存中，它和堆不同，运行期内GC不会释放其空间。 (1). 堆内存分配   JVM初始分配的内存由-Xms指定，默认是物理内存的1/64；JVM最大分配的内存由-Xmx指 定，默认是物理内存的1/4。默认空余堆内存小于 40%时，JVM就会增大堆直到-Xmx的最大限制；空余堆内存大于70%时，JVM会减少堆直到-Xms的最小限制。因此服务器一般设置-Xms、 -Xmx相等以避免在每次GC 后调整堆的大小。可以利用JVM提供的-Xmn -Xms -Xmx等选项可进行堆内存设置，一般的要将-Xms和-Xmx选项设置为相同，而-Xmn为1/4的-Xmx值，建议堆的最大值设置为可用内存的最大值的80%。 初始化堆的大小是JVM在启动时向系统申请的内存的大小。一般而言，这个参数不重要。但是有的应用程序在大负载的情况下会急剧地占用更多的内存，此时这个参数就是显得非常重要，如果JVM启动时设置使用的内存比较小而在这种情况下有许多对象进行初始化，JVM就必须重复地增加内存来满足使用。由于这种原因，我们一般把-Xms和-Xmx设为一样大，而堆的最大值受限于系统使用的物理内存。一般使用数据量较大的应用程序会使用持久对象，内存使用有可能迅速地增长。当应用程序需要的内存超出堆的最大值时JVM就会提示内存溢出，并且导致应用服务崩溃。所以，如果Xms超过了Xmx值，或者堆最大值和非堆最大值的总和超过了物理内存或者操作系统的最大限制都会引起服务器启动不起来。 (2). 非堆内存分配   也叫永久保存的区域，用于存放Class和Meta信息,Class在被Load的时候被放入该区域。它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理。JVM使用-XX:PermSize设置非堆内存初始值，默认是物理内存的1/64；由XX:MaxPermSize设置最大非堆内存的大小，默认是物理内存的1/4。 GC不会对PermGen space进行清理，所以如果你的APP会LOAD很多CLASS的话,就很可能出现PermGen space错误。 (3). JVM内存限制(最大值)  首先JVM内存限制于实际的最大物理内存（废话！，呵呵），假设物理内存无限大的话，JVM内存的最大值跟操作系统有很大的关系。简单的说就32位处理器虽然可控内存空间有4GB,但是具体的操作系统会给一个限制，这个限制一般是2GB-3GB（一般来说Windows系统下为1.5G-2G，Linux系统 下为2G-3G），而64bit以上的处理器就不会有限制了。 二、三种内存溢出异常介绍 1. OutOfMemoryError： Java heap space  堆溢出 内存溢出主要存在问题就是出现在这个情况中。当在JVM中如果98％的时间是用于GC且可用的 Heap size 不足2％的时候将抛出此异常信息。   2. OutOfMemoryError： PermGen space   非堆溢出（永久保存区域溢出） 这种错误常见在web服务器对JSP进行pre compile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。如果web app用了大量的第三方jar或者应用有太多的class文件而恰好MaxPermSize设置较小，超出了也会导致这块内存的占用过多造成溢出，或者tomcat热部署时侯不会清理前面加载的环境，只会将context更改为新部署的，非堆存的内容就会越来越多。 3. OutOfMemoryError： unable to create new native thread.   无法创建新的线程 这种现象比较少见，也比较奇怪，主要是和jvm与系统内存的比例有关。这种怪事是因为JVM已经被系统分配了大量的内存（比如1.5G），并且它至少要占用可用内存的一半。 三、Java JVM内存配置 1. JVM内存分配设置的参数有四个 -Xmx    Java Heap最大值，默认值为物理内存的1/4； -Xms    Java Heap初始值，Server端JVM最好将-Xms和-Xmx设为相同值，开发测试机JVM可以保留默认值； -Xmn    Java Heap Young区大小，不熟悉最好保留默认值； -Xss      每个线程的Stack大小，不熟悉最好保留默认值； -XX:PermSize：设定内存的永久保存区域；  -XX:MaxPermSize：设定最大内存的永久保存区域； -XX:PermSize：设定内存的永久保存区域； -XX:NewSize：设置JVM堆的‘新生代’的默认大小； -XX:MaxNewSize：设置JVM堆的‘新生代’的最大大小；  2. 如何设置JVM的内存分配 （1）当在命令提示符下启动并使用JVM时（只对当前运行的类Test生效）： java -Xmx128m -Xms64m -Xmn32m -Xss16m Test （2）当在集成开发环境下（如eclipse）启动并使用JVM时： a. 在eclipse根目录下打开eclipse.ini，默认内容为（这里设置的是运行当前开发工具的JVM内存分配）：  -vmargs -Xms40m -Xmx256m -vmargs表示以下为虚拟机设置参数，可修改其中的参数值，也可添加-Xmn，-Xss，另外，eclipse.ini内还可以设置非   堆内存，如：-XX:PermSize=56m，-XX:MaxPermSize=128m。 b. 打开eclipse－窗口－首选项－Java－已安装的JRE（对在当前开发环境中运行的java程序皆生效）  编辑当前使用的JRE，在缺省VM参数中输入：-Xmx128m -Xms64m -Xmn32m –Xss16m。 c. 打开eclipse－运行－运行－Java应用程序（只对所设置的java类生效）  选定需设置内存分配的类－自变量，在VM自变量中输入：-Xmx128m -Xms64m -Xmn32m -Xss16m  注：如果在同一开发环境中同时进行了b和c设置，则b设置生效，c设置无效，如：  开发环境的设置为：-Xmx256m，而类Test的设置为：-Xmx128m -Xms64m，则运行Test时生效的设置为：  -Xmx256m -Xms64m。 （3）当在服务器环境下（如Tomcat）启动并使用JVM时（对当前服务器环境下所以Java程序生效）： a. 设置环境变量：  变量名：CATALINA_OPTS  变量值：-Xmx128m -Xms64m -Xmn32m -Xss16m。 b. 打开Tomcat根目录下的bin文件夹，编辑catalina.bat，将其中的%CATALINA_OPTS%（共有四处）替换为：-Xmx128m -Xms64m -Xmn32m -Xss16m。 c. 若没有catalina.bat，只有tomcat.exe,tomcat6w.exe;则可以在启动tomcat6w.exe 后 右键配置--Java--java option 下面输入： -Xmx256m –Xms64m 也可以找到注册表HKEY_LOCAL_MACHINE\SOFTWARE\Apache Software Foundation\TomcatService Manager\Tomcat6\Parameters\JavaOptions原值为 -Dcatalina.home="C:\ApacheGroup\Tomcat 6.0" -Djava.endorsed.dirs="C:\ApacheGroup\Tomcat 6.0\common\endorsed" -Xrs 加入  -Xms300m  -Xmx350m  （我的是加入-Xmx350m，tomcat才能启动，加入-Xms300m  -Xmx350m反而tomcat都不能启动）重起tomcat服务,设置生效。 3. 查看JVM内存信息 Runtime.getRuntime().maxMemory(); //最大可用内存，对应-Xmx  Runtime.getRuntime().freeMemory(); //当前JVM空闲内存  Runtime.getRuntime().totalMemory(); //当前JVM占用的内存总数，其值相当于当前JVM已使用的内存及freeMemory()的总和  关于maxMemory()，freeMemory()和totalMemory()：maxMemory()为JVM的最大可用内存，可通过-Xmx设置，默认值为物理内存的1/4，设置不能高于计算机物理内存；  totalMemory()为当前JVM占用的内存总数，其值相当于当前JVM已使用的内存及freeMemory()的总和，会随着JVM使用内存的增加而增加；  freeMemory()为当前JVM空闲内存，因为JVM只有在需要内存时才占用物理内存使用，所以freeMemory()的值一般情况下都很小，而JVM实际可用内存并不等于freeMemory()，而应该等于maxMemory()-totalMemory()+freeMemory()。 4. 实例，以下给出1G内存环境下java jvm 的参数设置参考 JAVA_OPTS="-server -Xms800m -Xmx800m -XX:PermSize=64M -XX:MaxNewSize=256m -XX:MaxPermSize=128m -Djava.awt.headless=true " 大型的web工程，用tomcat默认分配的内存空间无法启动，如果不是在myeclipse中启动tomcat可以对tomcat这样设置： TOMCAT_HOME\bin\catalina.bat 中添加这样一句话： set JAVA_OPTS= -Xmx1024M -Xms512M -XX:MaxPermSize=256m 如果要在myeclipse中启动，上述的修改就不起作用了，可如下设置： Myeclipse->preferences->myeclipse->servers->tomcat->tomcat×.×->JDK面板中的 Optional Java VM arguments中添加：-Xmx1024M -Xms512M -XX:MaxPermSize=256m 对于单独的.class，可以用下面的方法对Test运行时的jvm内存进行设置。 java -Xms64m -Xmx256m Test -Xms是设置内存初始化的大小 -Xmx是设置最大能够使用内存的大小。 四、JVM内存配置与GC 需要考虑的是Java提供的垃圾回收机制。JVM的堆大小决定了JVM花费在收集垃圾上的时间和频度。收集垃圾可以接受的速度与应用有关，应该通过分析实际的垃圾收集的时间和频率来调整。如果堆的大小很大，那么完全垃圾收集就会很慢，但是频度会降低。如果你把堆的大小和内存的需要一致，完全收集就很快，但是会更加频繁。调整堆大小的的目的是最小化垃圾收集的时间，以在特定的时间内最大化处理客户的请求。在基准测试的时候，为保证最好的性能，要把堆的大小设大，保证垃圾收集不在整个基准测试的过程中出现。如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过 3-5 秒。如果垃圾收集成为瓶颈，那么需要指定堆的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理内存的 80% 作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。 Java Heap分为3个区： 1.Young 2.Old 3.Permanent。Young保存刚实例化的对象。当该区被填满时，GC会将对象移到Old区。Permanent区则负责保存反射对象，本文不讨论该区。 JVM有2个GC线程：  第一个线程负责回收Heap的Young区；  第二个线程在Heap不足时，遍历Heap，将Young 区升级为Older区，Older区的大小等于-Xmx减去-Xmn，不能将-Xms的值设的过大，因为第二个线程被迫运行会降低JVM的性能。 为什么一些程序频繁发生GC？有如下原因：  1. 程序内调用了System.gc()或Runtime.gc()。  2. 一些中间件软件调用自己的GC方法，此时需要设置参数禁止这些GC。  3. Java的Heap太小，一般默认的Heap值都很小。  4. 频繁实例化对象，Release对象 此时尽量保存并重用对象，例如使用StringBuffer()和String()。 如果你发现每次GC后，Heap的剩余空间会是总空间的50%，这表示你的Heap处于健康状态许多Server端的Java程序每次GC后最好能有65%的剩余空间。 经验之谈：  1．Server端JVM最好将-Xms和-Xmx设为相同值。为了优化GC，最好让-Xmn值约等于-Xmx的1/3。  2．一个GUI程序最好是每10到20秒间运行一次GC，每次在半秒之内完成。 注意：  1．增加Heap的大小虽然会降低GC的频率，但也增加了每次GC的时间。并且GC运行时，所有的用户线程将暂停，也就是GC期间，Java应用程序不做任何工作。 2．Heap大小并不决定进程的内存使用量。进程的内存使用量要大于-Xmx定义的值，因为Java为其他任务分配内存，例如每个线程的Stack等。 转载地址：http://blog.csdn.net/ye1992/article/details/9344807 上一篇 远程调用服务(RPC)和消息(Message Queue)对比及其适用/不适用场合 下一篇 简单读取TOMCAT的内存使用情况 顶 0 踩 0 我的同类文章 JVM堆栈和GC （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591115次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务）

Recno:: 33
URL:: http://blog.csdn.net/catoop/article/details/50203929

ParseText::
简单读取TOMCAT的内存使用情况 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 简单读取TOMCAT的内存使用情况 标签： jvm 2015-12-07 11:40 761人阅读 评论 (0) 收藏 举报 分类： JVM堆栈和GC （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 关于如何配置指定内存大小，详见博客： http://blog.csdn.net/catoop/article/details/50203851 本文出一个简单读取JVM内存使用情况的例子。 创建文件memory.jsp，将该文件放到任意WEB项目里面，能访问即可，代码如下： <%@page contentType= "text/html" pageEncoding= "UTF-8" %> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> < html > < head > < meta http-equiv = "Content-Type" content = "text/html; charset=UTF-8" > < title > JVM memory </ title > </ head > < body > <% double total = (Runtime.getRuntime().totalMemory()) / ( 1024.0 * 1024 ); double max = (Runtime.getRuntime().maxMemory()) / ( 1024.0 * 1024 ); double free = (Runtime.getRuntime().freeMemory()) / ( 1024.0 * 1024 ); out.println( "Java 虚拟机试图使用的最大内存量(当前JVM的最大可用内存) maxMemory(): " + max + "MB<br/>" ); out.println( "Java 虚拟机中的内存总量(当前JVM占用的内存总数) totalMemory(): " + total + "MB<br/>" ); out.println( "Java 虚拟机中的空闲内存量(当前JVM空闲内存) freeMemory(): " + free + "MB<br/>" ); out.println( "因为JVM只有在需要内存时才占用物理内存使用，所以freeMemory()的值一般情况下都很小，<br/>" + "而JVM实际可用内存并不等于freeMemory()，而应该等于 maxMemory() - totalMemory() + freeMemory()。<br/>" ); out.println( "JVM实际可用内存: " + (max - total + free) + "MB<br/>" ); %> </ body > </ html > 下图就是我的一个Tomcat应用输出的结果： 上一篇 Tomcat中JVM内存溢出及合理配置 下一篇 Android清除本地数据缓存代码 顶 0 踩 0 我的同类文章 JVM堆栈和GC （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591117次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 34
URL:: http://blog.csdn.net/catoop/article/details/50318983

ParseText::
Android清除本地数据缓存代码 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android清除本地数据缓存代码 标签： android 2015-12-15 18:13 648人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 /** * 文 件 名: DataCleanManager.java * 描 述: 主要功能有清除内/外缓存，清除数据库，清除sharedPreference，清除files和清除自定义目录 */ import java.io.File; import android.content.Context; import android.os.Environment; /** * 本应用数据清除管理器 */ public class DataCleanManager { /** * 清除本应用内部缓存(/data/data/com.xxx.xxx/cache) * @param context */ public static void cleanInternalCache (Context context) { deleteFilesByDirectory(context.getCacheDir()); } /** * 清除本应用所有数据库(/data/data/com.xxx.xxx/databases) * @param context */ public static void cleanDatabases (Context context) { deleteFilesByDirectory( new File( "/data/data/" + context.getPackageName() + "/databases" )); } /** * 清除本应用SharedPreference(/data/data/com.xxx.xxx/shared_prefs) * * @param context */ public static void cleanSharedPreference (Context context) { deleteFilesByDirectory( new File( "/data/data/" + context.getPackageName() + "/shared_prefs" )); } /** * 按名字清除本应用数据库 * @param context * @param dbName */ public static void cleanDatabaseByName (Context context, String dbName) { context.deleteDatabase(dbName); } /** * 清除/data/data/com.xxx.xxx/files下的内容 * @param context */ public static void cleanFiles (Context context) { deleteFilesByDirectory(context.getFilesDir()); } /** * 清除外部cache下的内容(/mnt/sdcard/android/data/com.xxx.xxx/cache) * @param context */ public static void cleanExternalCache (Context context) { if (Environment.getExternalStorageState().equals( Environment.MEDIA_MOUNTED)) { deleteFilesByDirectory(context.getExternalCacheDir()); } } /** * 清除自定义路径下的文件，使用需小心，请不要误删。而且只支持目录下的文件删除 * @param filePath */ public static void cleanCustomCache (String filePath) { deleteFilesByDirectory( new File(filePath)); } /** * 清除本应用所有的数据 * @param context * @param filepath */ public static void cleanApplicationData (Context context, String... filepath) { cleanInternalCache(context); cleanExternalCache(context); cleanDatabases(context); cleanSharedPreference(context); cleanFiles(context); for (String filePath : filepath) { cleanCustomCache(filePath); } } /** * 删除方法 这里只会删除某个文件夹下的文件，如果传入的directory是个文件，将不做处理 * @param directory */ private static void deleteFilesByDirectory (File directory) { if (directory != null && directory.exists() && directory.isDirectory()) { for (File item : directory.listFiles()) { item.delete(); } } } } 上一篇 简单读取TOMCAT的内存使用情况 下一篇 SpringMVC+MyBatis+JMS+JTA（分布式事务） 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591131次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 35
URL:: http://blog.csdn.net/catoop/article/details/50337613

ParseText::
SpringMVC+MyBatis+JMS+JTA（分布式事务） - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 SpringMVC+MyBatis+JMS+JTA（分布式事务） 标签： spring mvc jms jta 2015-12-17 09:51 631人阅读 评论 (2) 收藏 举报 分类： spring mvc （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 SpringMVC+MyBatis 相信已经是现在企业开发中常用技术了。 因为一些需求，我们需要集成JMS（我使用的是ActiveMQ），大家应该都知道，MQ也可以认为是一个数据源，数据也是数据源。这种情况下，如果我们在一个方法内操作JMS和数据库，我们就需要保证这个方法执行需要满足原子性。 这也就意味这一个问题，我们要多个数据源在同一个事务中。这里不枚举市面上的所有解决方案，其实atomikos JTA 是一个比较不错分布式事务管理器。 当然如果没有使用到JMS，在需要多数据源（也就是需要连接多个数据库）的情况同样适用。 下面将项目的主要配置贴出来共享： 1、applicationContext.xml <?xml version="1.0" encoding="GBK"?> < beans xmlns = "http://www.springframework.org/schema/beans" xmlns:context = "http://www.springframework.org/schema/context" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xmlns:amq = "http://activemq.apache.org/schema/core" xsi:schemaLocation = "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.13.0.xsd" > < bean class = "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" /> <!-- 配置扫描路径 --> < context:component-scan base-package = "com.hvgroup.zhuhai10086.jms" > <!-- 只扫描Service，也可以添加Repostory，但是要把Controller排除在外，Controller由spring-mvc.xml去加载 --> <!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" /> --> <!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" /> --> <!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Component" /> --> < context:exclude-filter type = "annotation" expression = "org.springframework.stereotype.Controller" /> </ context:component-scan > <!-- 读取环境变量(自定义扩展) --> < bean class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" > < property name = "locations" > < list > < value > classpath:config/config.properties </ value > </ list > </ property > </ bean > < import resource = "classpath:spring/applicationContext-Service.xml" /> </ beans > 2、applicationContext-Service.xml <?xml version="1.0" encoding="GBK"?> < beans xmlns = "http://www.springframework.org/schema/beans" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xmlns:jee = "http://www.springframework.org/schema/jee" xmlns:mvc = "http://www.springframework.org/schema/mvc" xmlns:tx = "http://www.springframework.org/schema/tx" xmlns:context = "http://www.springframework.org/schema/context" xsi:schemaLocation = "http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" > <!-- JDBC连接数据库数据源 --> <!-- <bean id="dataSource" --> <!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> --> <!-- <property name="driverClassName" value="${jdbc.driverClassName}" /> --> <!-- <property name="url" value="${jdbc.url}" /> --> <!-- <property name="username" value="${jdbc.username}" /> --> <!-- <property name="password" value="${jdbc.password}" /> --> <!-- </bean> --> <!-- DBCP连接池 --> <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" --> <!-- destroy-method="close"> --> <!-- <property name="driverClassName" value="${jdbc.driverClassName}" /> --> <!-- <property name="url" value="${jdbc.url}" /> --> <!-- <property name="username" value="${jdbc.username}" /> --> <!-- <property name="password" value="${jdbc.password}" /> --> <!-- <property name="initialSize" value="20" /> --> <!-- <property name="maxActive" value="80" /> --> <!-- <property name="maxIdle" value="100" /> --> <!-- <property name="minIdle" value="20" /> --> <!-- <property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"></property> --> <!-- <property name="testOnBorrow" value="true"></property> --> <!-- <property name="testOnReturn" value="true"></property> --> <!-- <property name="testWhileIdle" value="true"></property> --> <!-- </bean> --> < bean id = "dataSource" class = "com.atomikos.jdbc.AtomikosDataSourceBean" init-method = "init" destroy-method = "close" > < property name = "uniqueResourceName" value = "ds1" /> <!-- <property name="xaDataSourceClassName" value="${jdbc.driverClassName}" /> --> < property name = "xaDataSourceClassName" value = "com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" /> < property name = "xaProperties" > < props > < prop key = "URL" > ${jdbc.url} </ prop > < prop key = "user" > ${jdbc.username} </ prop > < prop key = "password" > ${jdbc.password} </ prop > </ props > </ property > <!-- #连接池中保留的最小连接数 --> < property name = "minPoolSize" value = "5" /> <!-- #连接池中保留的最大连接数 --> < property name = "maxPoolSize" value = "20" /> <!-- #最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: --> < property name = "maxIdleTime" value = "60" /> < property name = "testQuery" > < value > select 1 </ value > </ property > </ bean > <!-- JNDI连接池 --> <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> --> <!-- <property name="jndiName"> --> <!-- <value>java:comp/env/jdbc/huiyzl</value> --> <!-- </property> --> <!-- </bean> --> <!-- 配置SqlSessionFactoryBean --> < bean id = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean" > < property name = "dataSource" ref = "dataSource" /> <!-- mapper和resultmap配置路径 --> < property name = "mapperLocations" > < list > <!-- 注意classpath后面的星号不可省略，否则不能加载jar包中的xml文件 --> < value > classpath*:com/hvgroup/zhuhai10086/jms/**/sql/mysql/*Mapper.xml </ value > </ list > </ property > < property name = "plugins" > < array > <!-- 关于分页插件的使用说明：http://git.oschina.net/free/Mybatis_PageHelper/blob/master/wikis/HowToUse.markdown --> < bean class = "com.github.pagehelper.PageHelper" > < property name = "properties" > < value > offsetAsPageNum=true rowBoundsWithCount=true reasonable=true </ value > </ property > </ bean > </ array > </ property > </ bean > <!-- 事务管理 --> <!-- <bean id="transactionManager" --> <!-- class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> --> <!-- <property name="dataSource" ref="dataSource" /> --> <!-- </bean> --> <!-- MapperScanner配置，Spring 自动去搜索mapper里的对象,并注入。指定markerInterface表示只有继承SqlMapper接口的接口，才会被扫描映射 --> < bean class = "org.mybatis.spring.mapper.MapperScannerConfigurer" > < property name = "basePackage" value = "com.hvgroup.zhuhai10086.jms.**.mapper" /> < property name = "markerInterface" value = "com.hvgroup.zhuhai10086.jms.mapper.SqlMapper" /> < property name = "sqlSessionFactoryBeanName" value = "sqlSessionFactory" /> </ bean > < bean id = "userTransactionService" class = "com.atomikos.icatch.config.UserTransactionServiceImp" init-method = "init" destroy-method = "shutdownForce" > < constructor-arg > < props > < prop key = "com.atomikos.icatch.service" > com.atomikos.icatch.standalone.UserTransactionServiceFactory </ prop > </ props > </ constructor-arg > </ bean > < bean id = "atomikosTransactionManager" class = "com.atomikos.icatch.jta.UserTransactionManager" depends-on = "userTransactionService" init-method = "init" destroy-method = "close" > < property name = "forceShutdown" value = "false" /> </ bean > < bean id = "atomikosUserTransaction" class = "com.atomikos.icatch.jta.UserTransactionImp" > < property name = "transactionTimeout" value = "300" /> </ bean > <!-- 分布式事务 --> < bean id = "jtaTransactionManager" class = "org.springframework.transaction.jta.JtaTransactionManager" > < property name = "transactionManager" ref = "atomikosTransactionManager" /> < property name = "userTransaction" ref = "atomikosUserTransaction" /> </ bean > <!-- <tx:jta-transaction-manager /> --> <!-- 可通过注解控制事务，也可以配置拦截器方式配置事务 --> < tx:annotation-driven transaction-manager = "jtaTransactionManager" /> </ beans > 3、ActiveMQ-XA.xml <?xml version="1.0" encoding="GBK"?> < beans xmlns = "http://www.springframework.org/schema/beans" xmlns:context = "http://www.springframework.org/schema/context" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xmlns:amq = "http://activemq.apache.org/schema/core" xmlns:jms = "http://www.springframework.org/schema/jms" xmlns:tx = "http://www.springframework.org/schema/tx" xsi:schemaLocation = "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.13.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" > <!-- 重发策略：最多重发次数=maximumRedeliveries --> < amq:redeliveryPolicy id = "redeliveryPolicy" maximumRedeliveries = "6" /> <!-- 抓取策略 --> < amq:prefetchPolicy id = "prefetchPolicy" queuePrefetch = "5" topicPrefetch = "5" /> <!-- activeMQ连接信息，XA事务 --> < amq:xaConnectionFactory id = "jmsXaConnectionFactory" brokerURL = "${activemq.brokerURL}" userName = "${activemq.username}" password = "${activemq.password}" redeliveryPolicy = "#redeliveryPolicy" alwaysSessionAsync = "false" alwaysSyncSend = "true" prefetchPolicy = "#prefetchPolicy" /> < bean id = "amqConnectionFactory" class = "com.atomikos.jms.AtomikosConnectionFactoryBean" init-method = "init" destroy-method = "close" > < property name = "uniqueResourceName" value = "XAactiveMQ" /> < property name = "xaConnectionFactory" ref = "jmsXaConnectionFactory" /> < property name = "poolSize" value = "100" /> </ bean > <!-- ====Producer side start==== --> <!-- 定义JmsTemplate的Queue类型 --> < bean id = "jmsQueueTemplate" class = "org.springframework.jms.core.JmsTemplate" > < constructor-arg ref = "amqConnectionFactory" /> <!-- 非pub/sub模型（发布/订阅），即队列模式 --> < property name = "pubSubDomain" value = "false" /> </ bean > <!-- 定义JmsTemplate的Topic类型 --> < bean id = "jmsTopicTemplate" class = "org.springframework.jms.core.JmsTemplate" > < constructor-arg ref = "amqConnectionFactory" /> <!-- pub/sub模型（发布/订阅） --> < property name = "pubSubDomain" value = "true" /> </ bean > <!-- ====Producer side end==== --> <!-- ====Consumer side start==== --> <!--这个是sessionAwareQueue目的地（响应消息）--> < amq:queue id = "queueReceiver2ResponseDestination" physicalName = "test.queue2.response" /> <!-- 定义Queue监听器（无事务） --> < jms:listener-container destination-type = "queue" container-type = "default" connection-factory = "amqConnectionFactory" error-handler = "jmsErrorHandler" acknowledge = "auto" > < jms:listener destination = "xinge.queue.push" ref = "xgMessageReceiver" concurrency = "5-100" /> < jms:listener destination = "xinge.queue.push.device.multiple" ref = "xgMessageReceiverMultiple" concurrency = "5-100" /> </ jms:listener-container > <!-- 定义Queue监听器（有事务） --> < jms:listener-container destination-type = "queue" container-type = "default" connection-factory = "amqConnectionFactory" transaction-manager = "jtaTransactionManager" error-handler = "jmsErrorHandler" acknowledge = "transacted" > < jms:listener destination = "xinge.queue.push.invokelog" ref = "xgMessageReceiverInvokeLog" concurrency = "5-100" /> <!-- <jms:listener destination="test.queue" ref="queueReceiver" concurrency="10-100" /> --> <!-- <jms:listener destination="test.queue2" ref="queueReceiver2" concurrency="2-10"/> --> <!-- <jms:listener destination="test.queue2.response" ref="queueReceiver2Response" concurrency="2-10" /> --> </ jms:listener-container > <!-- 定义Topic监听器 --> <!-- <jms:listener-container --> <!-- destination-type="topic" --> <!-- container-type="default" --> <!-- connection-factory="amqConnectionFactory" --> <!-- transaction-manager="jtaTransactionManager" --> <!-- error-handler="jmsErrorHandler" --> <!-- acknowledge="transacted" > --> <!-- <jms:listener destination="test.topic" ref="topicReceiver" /> --> <!-- <jms:listener destination="test.topic" ref="topicReceiver2" /> --> <!-- </jms:listener-container> --> <!-- ====Consumer side end==== --> < bean id = "xingeApp" class = "com.tencent.xinge.XingeApp" > < constructor-arg index = "0" value = "2100170086" /> <!-- accessId --> < constructor-arg index = "1" value = "2d257b10220bc3849743ffe0e9bd233a" /> <!-- secretKey --> </ bean > </ beans > 4、spring-mvc.xml <?xml version="1.0" encoding="GBK"?> < beans xmlns = "http://www.springframework.org/schema/beans" xmlns:aop = "http://www.springframework.org/schema/aop" xmlns:context = "http://www.springframework.org/schema/context" xmlns:mvc = "http://www.springframework.org/schema/mvc" xmlns:tx = "http://www.springframework.org/schema/tx" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" > <!-- 启用MVC注解 --> < mvc:annotation-driven /> <!-- 静态资源文件，不会被Spring MVC拦截 --> < mvc:resources location = "/resources/" mapping = "/resources/**" /> <!-- 指定Sping组件扫描的基本包路径 --> < context:component-scan base-package = "com.hvgroup.zhuhai10086.jms" > <!-- 这里只扫描Controller，不可重复加载Service --> < context:include-filter type = "annotation" expression = "org.springframework.stereotype.Controller" /> </ context:component-scan > <!-- JSP视图解析器--> < bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver" > < property name = "prefix" value = "/WEB-INF/views/" /> < property name = "suffix" value = ".jsp" /> < property name = "order" value = "1" /> </ bean > </ beans > 5、config.properties jdbc .url =jdbc:mysql://localhost: 3306 /xgmessage?useUnicode=true&amp ;characterEncoding=utf-8&amp;relaxAutoCommit=true jdbc .username =root jdbc .password = 123456 activemq .brokerURL =tcp://localhost: 61616 activemq .username =admin activemq .password =admin 6、web.xml <?xml version="1.0" encoding="UTF-8"?> < web-app xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xmlns:web = "http://java.sun.com/xml/ns/javaee" xmlns = "http://java.sun.com/xml/ns/javaee" xsi:schemaLocation = "http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version = "3.0" > < display-name > zhuhai10086-jms </ display-name > < context-param > < param-name > webAppRootKey </ param-name > < param-value > zhuhai10086-jms </ param-value > </ context-param > <!-- Log4j配置 --> < context-param > < param-name > log4jConfigLocation </ param-name > < param-value > classpath:log4j/log4j.xml </ param-value > </ context-param > <!-- 加载log4j配置文件 --> < listener > < listener-class > org.springframework.web.util.Log4jConfigListener </ listener-class > </ listener > < filter > < filter-name > characterEncoding </ filter-name > < filter-class > org.springframework.web.filter.CharacterEncodingFilter </ filter-class > < init-param > < param-name > encoding </ param-name > < param-value > UTF-8 </ param-value > </ init-param > < init-param > < param-name > forceEncoding </ param-name > < param-value > true </ param-value > </ init-param > </ filter > < filter-mapping > < filter-name > characterEncoding </ filter-name > < url-pattern > /* </ url-pattern > </ filter-mapping > < context-param > < param-name > contextConfigLocation </ param-name > < param-value > classpath*:spring/applicationContext.xml,classpath*:activemq/ActiveMQ-XA.xml </ param-value > </ context-param > < listener > < listener-class > org.springframework.web.context.ContextLoaderListener </ listener-class > </ listener > < servlet > < servlet-name > SpringMVC </ servlet-name > < servlet-class > org.springframework.web.servlet.DispatcherServlet </ servlet-class > < init-param > < param-name > contextConfigLocation </ param-name > < param-value > classpath:spring/spring-mvc.xml </ param-value > </ init-param > < load-on-startup > 1 </ load-on-startup > </ servlet > < servlet-mapping > < servlet-name > SpringMVC </ servlet-name > < url-pattern > / </ url-pattern > </ servlet-mapping > </ web-app > 7、把log4j.xml 也贴出来吧，兴许有的同学能用上 <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd"> < log4j:configuration debug = "true" xmlns:log4j = "http://jakarta.apache.org/log4j/" > < appender name = "CONSOLE" class = "org.apache.log4j.ConsoleAppender" > < layout class = "org.apache.log4j.PatternLayout" > < param name = "ConversionPattern" value = "[%d][%p][%13F:%L] %m%n" /> </ layout > </ appender > < appender name = "DEBUG" class = "org.apache.log4j.DailyRollingFileAppender" > < param name = "File" value = "${log4j.logfile.path}" /> < param name = "Encoding" value = "UTF-8" /> < param name = "DatePattern" value = "'.'yyyy-MM-dd" /> < param name = "ImmediateFlush" value = "true" /> < param name = "Append" value = "true" /> < layout class = "org.apache.log4j.PatternLayout" > < param name = "ConversionPattern" value = "[%d][%p] %m%n" /> </ layout > </ appender > < logger name = "java.sql.Connection" > < level value = "DEBUG" /> < appender-ref ref = "DEBUG" /> < appender-ref ref = "CONSOLE" /> </ logger > < logger name = "java.sql.PreparedStatement" > < level value = "DEBUG" /> < appender-ref ref = "DEBUG" /> < appender-ref ref = "CONSOLE" /> </ logger > < logger name = "java.sql.Statement" > < level value = "DEBUG" /> < appender-ref ref = "DEBUG" /> < appender-ref ref = "CONSOLE" /> </ logger > < logger name = "java.sql.ResultSet" > < level value = "DEBUG" /> < appender-ref ref = "DEBUG" /> < appender-ref ref = "CONSOLE" /> </ logger > < logger name = "org.mybatis" > < level value = "DEBUG" /> < appender-ref ref = "DEBUG" /> < appender-ref ref = "CONSOLE" /> </ logger > < logger name = "org.springframework" > < level value

Recno:: 36
URL:: http://blog.csdn.net/catoop/article/details/50338259

ParseText::
预防XSS攻击，(参数/响应值)特殊字符过滤 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 预防XSS攻击，(参数/响应值)特殊字符过滤 标签： 安全漏洞 web应用 2015-12-17 10:28 510人阅读 评论 (1) 收藏 举报 分类： spring mvc （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、什么是XSS攻击 XSS是一种经常出现在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。比如这些代码包括HTML代码和客户端脚本。攻击者利用XSS漏洞旁路掉访问控制——例如同源策略(same origin policy)。这种类型的漏洞由于被黑客用来编写危害性更大的网络钓鱼(Phishing)攻击而变得广为人知。对于跨站脚本攻击，黑客界共识是：跨站脚本攻击是新型的“缓冲区溢出攻击“，而JavaScript是新型的“ShellCode”。 二、XSS漏洞的危害 （1）网络钓鱼，包括盗取各类用户账号； （2）窃取用户cookies资料，从而获取用户隐私信息，或利用用户身份进一步对网站执行操作； （3）劫持用户（浏览器）会话，从而执行任意操作，例如进行非法转账、强制发表日志、发送电子邮件等； （4）强制弹出广告页面、刷流量等； （5）网页挂马； （6）进行恶意操作，例如任意篡改页面信息、删除文章等； （7）进行大量的客户端攻击，如DDoS攻击； （8）获取客户端信息，例如用户的浏览历史、真实IP、开放端口等； （9）控制受害者机器向其他网站发起攻击； （10）结合其他漏洞，如CSRF漏洞，实施进一步作恶； （11）提升用户权限，包括进一步渗透网站； （12）传播跨站脚本蠕虫等； …… 三、如何编写代码来避免 如下代码可以避免XSS注入，但是作者因知识面有限，故不能保证100%能完全将XSS攻击者拒之门外，还需大家根据实际情况进行优化和改进。 既然我们通过代码来解决问题，就尽可能的不涉及开发人员的对原有代码修改，所以我们增加过滤器来拦截处理，本文原有框架使用springmvc。 1、IllegalCharacterFilter.java package com.lenovo.common.filter; import java.io.IOException; import javax.servlet.Filter; import javax.servlet.FilterChain; import javax.servlet.FilterConfig; import javax.servlet.ServletException; import javax.servlet.ServletRequest; import javax.servlet.ServletResponse; import javax.servlet.http.HttpServletRequest; /** * 非法字符过滤器，用来处理request.getParamater中的非法字符。如<script>alert('123');</script> * * @author 单红宇(365384722) * @myblog http://blog.csdn.net/catoop/ * @create 2015年9月18日 */ public class IllegalCharacterFilter implements Filter { @Override public void init (FilterConfig filterConfig) throws ServletException { } @Override public void doFilter (ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException { HttpServletRequest request = (HttpServletRequest)req; request = new MHttpServletRequest(request); chain.doFilter(request, res); } @Override public void destroy () { } } 2、MHttpServletRequest.java package com.lenovo.common.filter; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletRequestWrapper; import com.lenovo.common.utils.XssShieldUtil; /** * 参数特殊字符过滤 * * @author 单红宇(365384722) * @myblog http://blog.csdn.net/catoop/ * @create 2015年9月18日 */ public class MHttpServletRequest extends HttpServletRequestWrapper { public MHttpServletRequest (HttpServletRequest request) { super (request); } @Override public String getParameter (String name) { // 返回值之前 先进行过滤 return XssShieldUtil.stripXss( super .getParameter(name)); } @Override public String[] getParameterValues (String name) { // 返回值之前 先进行过滤 String[] values = super .getParameterValues(name); if (values != null ){ for ( int i = 0 ; i < values.length; i++) { values[i] = XssShieldUtil.stripXss(values[i]); } } return values; } } 3、XssShieldUtil.java package com.lenovo.common.utils; import java.util.ArrayList; import java.util.List; import java.util.regex.Matcher; import java.util.regex.Pattern; import org.apache.commons.lang.StringUtils; /** * 处理非法字符 * * @author 单红宇(365384722) * @myblog http://blog.csdn.net/catoop/ * @create 2015年9月18日 */ public class XssShieldUtil { private static List<Pattern> patterns = null ; private static List<Object[]> getXssPatternList () { List<Object[]> ret = new ArrayList<Object[]>(); ret.add( new Object[]{ "<(no)?script[^>]*>.*?</(no)?script>" , Pattern.CASE_INSENSITIVE}); ret.add( new Object[]{ "eval\\((.*?)\\)" , Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL}); ret.add( new Object[]{ "expression\\((.*?)\\)" , Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL}); ret.add( new Object[]{ "(javascript:|vbscript:|view-source:)*" , Pattern.CASE_INSENSITIVE}); ret.add( new Object[]{ "<(\"[^\"]*\"|\'[^\']*\'|[^\'\">])*>" , Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL}); ret.add( new Object[]{ "(window\\.location|window\\.|\\.location|document\\.cookie|document\\.|alert\\(.*?\\)|window\\.open\\()*" , Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL}); ret.add( new Object[]{ "<+\\s*\\w*\\s*(oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondblclick|ondeactivate|ondrag|ondragend|ondragenter|ondragleave|ondragover|ondragstart|ondrop|onerror=|onerroupdate|onfilterchange|onfinish|onfocus|onfocusin|onfocusout|onhelp|onkeydown|onkeypress|onkeyup|onlayoutcomplete|onload|onlosecapture|onmousedown|onmouseenter|onmouseleave|onmousemove|onmousout|onmouseover|onmouseup|onmousewheel|onmove|onmoveend|onmovestart|onabort|onactivate|onafterprint|onafterupdate|onbefore|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onblur|onbounce|oncellchange|onchange|onclick|oncontextmenu|onpaste|onpropertychange|onreadystatechange|onreset|onresize|onresizend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onselect|onselectionchange|onselectstart|onstart|onstop|onsubmit|onunload)+\\s*=+" , Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL}); return ret; } private static List<Pattern> getPatterns () { if (patterns == null ) { List<Pattern> list = new ArrayList<Pattern>(); String regex = null ; Integer flag = null ; int arrLength = 0 ; for (Object[] arr : getXssPatternList()) { arrLength = arr.length; for ( int i = 0 ; i < arrLength; i++) { regex = (String)arr[ 0 ]; flag = (Integer)arr[ 1 ]; list.add(Pattern.compile(regex, flag)); } } patterns = list; } return patterns; } public static String stripXss (String value ) { if (StringUtils.isNotBlank( value )) { Matcher matcher = null ; for (Pattern pattern : getPatterns()) { matcher = pattern.matcher( value ); //해당하는 패턴이 있으면 if (matcher.find()) { //해당 문자열 제거 value = matcher.replaceAll( "" ); } } value = value .replaceAll( "<" , "&lt;" ).replaceAll( ">" , "&gt;" ); } // if (LOG.isDebugEnabled()) // LOG.debug("strip value: " + value); return value ; } public static void main (String[] args) { String value = null ; value = XssShieldUtil.stripXss( "<script language=text/javascript>alert(document.cookie);</script>" ); System. out .println( "type-1: '" + value + "'" ); value = XssShieldUtil.stripXss( "<script src='' onerror='alert(document.cookie)'></script>" ); System. out .println( "type-2: '" + value + "'" ); value = XssShieldUtil.stripXss( "</script>" ); System. out .println( "type-3: '" + value + "'" ); value = XssShieldUtil.stripXss( " eval(abc);" ); System. out .println( "type-4: '" + value + "'" ); value = XssShieldUtil.stripXss( " expression(abc);" ); System. out .println( "type-5: '" + value + "'" ); value = XssShieldUtil.stripXss( "<img src='' onerror='alert(document.cookie);'></img>" ); System. out .println( "type-6: '" + value + "'" ); value = XssShieldUtil.stripXss( "<img src='' onerror='alert(document.cookie);'/>" ); System. out .println( "type-7: '" + value + "'" ); value = XssShieldUtil.stripXss( "<img src='' onerror='alert(document.cookie);'>" ); System. out .println( "type-8: '" + value + "'" ); value = XssShieldUtil.stripXss( "<script language=text/javascript>alert(document.cookie);" ); System. out .println( "type-9: '" + value + "'" ); value = XssShieldUtil.stripXss( "<script>window.location='url'" ); System. out .println( "type-10: '" + value + "'" ); value = XssShieldUtil.stripXss( " onload='alert(\"abc\");" ); System. out .println( "type-11: '" + value + "'" ); value = XssShieldUtil.stripXss( "<img src=x<!--'<\"-->>" ); System. out .println( "type-12: '" + value + "'" ); value = XssShieldUtil.stripXss( "<=img onstop=" ); System. out .println( "type-13: '" + value + "'" ); } } 4、web.xml 配置 <!-- 非法参数过滤器 --> < filter > < filter-name > IllegalCharacterFilter </ filter-name > < filter-class > com.lenovo.common.filter.IllegalCharacterFilter </ filter-class > </ filter > < filter-mapping > < filter-name > IllegalCharacterFilter </ filter-name > < url-pattern > *.do </ url-pattern > </ filter-mapping > 上一篇 SpringMVC+MyBatis+JMS+JTA（分布式事务） 下一篇 Linux网络监控工具nethogs 顶 1 踩 0 我的同类文章 spring mvc （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591129次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐

Recno:: 37
URL:: http://blog.csdn.net/catoop/article/details/50347357

ParseText::
Linux网络监控工具nethogs - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Linux网络监控工具nethogs 标签： 监控工具 linux 2015-12-17 22:06 533人阅读 评论 (0) 收藏 举报 分类： linux （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Nethogs 是一个终端下的网络流量监控工具，它的特别之处在于可以显示每个进程的带宽占用情况，这样可以更直观获取网络使用情况。它支持 IPv4 和 IPv6 协议、支持本地网卡及 PPP 链接。 有些时候服务器莫名其妙的向外发送大量的包，占用大量带宽，导致其他服务器受到影响。那么在流量异常的情况下，如何查看每个进程使用的带宽呢？可以使用nethogs工具来查看。 当然还有一些其他宽带分析工具，需要的同学可以多了解了解，有个帖子 http://os.51cto.com/art/201404/435279.htm 做了介绍。按应用分析还是比较常见，所以我一般使用nethogs，关于nethogs的安装下面做下说明： 1、下载 地址： http://sourceforge.net/projects/nethogs/files/nethogs/ 下载安装包：nethogs-0.8.0.tar.gz (38.0 kB) 2、安装 yum install ncurses* tar -zxvf nethogs-0.8.0.tar.gz cd nethogs make && make install 如果报错如下： [root@localhost nethogs]# make && make install g++ -g -Wall -Wextra -c packet.cpp g++ -g -Wall -Wextra -c connection.cpp g++ -g -Wall -Wextra -c process.cpp g++ -g -Wall -Wextra -c refresh.cpp refresh.cpp:9: warning: unused parameter ‘i’ cc -g -Wall -Wextra -c decpcap.c decpcap.c:7:18: error: pcap.h: No such file or directory In file included from decpcap.c:8: decpcap.h:34: error: expected specifier-qualifier-list before ‘pcap_t’ decpcap.c:14: error: expected ‘)’ before ‘*’ token decpcap.c: In function ‘dp_open_offline’: decpcap.c:48: error: ‘pcap_t’ undeclared (first use in this function) decpcap.c:48: error: (Each undeclared identifier is reported only once decpcap.c:48: error: for each function it appears in.) decpcap.c:48: error: ‘temp’ undeclared (first use in this function) decpcap.c:48: warning: implicit declaration of function ‘pcap_open_offline’ decpcap.c:55: warning: implicit declaration of function ‘dp_fillhandle’ decpcap.c: In function ‘dp_open_live’: decpcap.c:60: error: ‘pcap_t’ undeclared (first use in this function) decpcap.c:60: error: ‘temp’ undeclared (first use in this function) decpcap.c:60: warning: implicit declaration of function ‘pcap_open_live’ decpcap.c: In function ‘dp_addcb’: decpcap.c:74: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c: In function ‘dp_parse_tcp’: decpcap.c:84: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:86: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:87: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c: In function ‘dp_parse_ip’: decpcap.c:99: error: dereferencing pointer to incomplete type decpcap.c:103: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:105: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:106: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c: In function ‘dp_parse_ip6’: decpcap.c:126: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:128: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:129: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c: In function ‘dp_parse_ethernet’: decpcap.c:150: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:152: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:153: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c: In function ‘dp_parse_ppp’: decpcap.c:196: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:198: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:199: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c: In function ‘dp_parse_linux_cooked’: decpcap.c:238: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:240: error: ‘struct dp_handle’ has no member named ‘callback’ decpcap.c:241: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c: In function ‘dp_pcap_callback’: decpcap.c:270: error: ‘struct dp_handle’ has no member named ‘userdata_size’ decpcap.c:271: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c:271: error: ‘struct dp_handle’ has no member named ‘userdata_size’ decpcap.c:273: error: ‘struct dp_handle’ has no member named ‘linktype’ decpcap.c:274: error: ‘DLT_EN10MB’ undeclared (first use in this function) decpcap.c:277: error: ‘DLT_PPP’ undeclared (first use in this function) decpcap.c:280: error: ‘DLT_LINUX_SLL’ undeclared (first use in this function) decpcap.c:283: error: ‘DLT_RAW’ undeclared (first use in this function) decpcap.c:284: error: ‘DLT_NULL’ undeclared (first use in this function) decpcap.c:289: error: ‘struct dp_handle’ has no member named ‘linktype’ decpcap.c: In function ‘dp_dispatch’: decpcap.c:296: error: ‘struct dp_handle’ has no member named ‘userdata’ decpcap.c:297: error: ‘struct dp_handle’ has no member named ‘userdata_size’ decpcap.c:298: warning: implicit declaration of function ‘pcap_dispatch’ decpcap.c:298: error: ‘struct dp_handle’ has no member named ‘pcap_handle’ decpcap.c: In function ‘dp_setnonblock’: decpcap.c:302: warning: implicit declaration of function ‘pcap_setnonblock’ decpcap.c:302: error: ‘struct dp_handle’ has no member named ‘pcap_handle’ decpcap.c: In function ‘dp_geterr’: decpcap.c:307: warning: implicit declaration of function ‘pcap_geterr’ decpcap.c:307: error: ‘struct dp_handle’ has no member named ‘pcap_handle’ make: * [decpcap.o] Error 1 执行命令 yum install libpcap-dev* libncurses5-dev* 然后再重新编译安装，如下： [root@localhost nethogs]# make && make install cc -g -Wall -Wextra -c decpcap.c decpcap.c: In function ‘dp_open_live’: decpcap.c:60: warning: passing argument 5 of ‘pcap_open_live’ discards qualifiers from pointer /usr/include/pcap/pcap.h:349: note: expected ‘char ’ but argument is of type ‘const char ’ g++ -g -Wall -Wextra -c cui.cpp -DVERSION=\”0\” -DSUBVERSION=\”8\” -DMINORVERSION=\”0\” g++ -g -Wall -Wextra -c inode2prog.cpp g++ -g -Wall -Wextra -c conninode.cpp g++ -c -o devices.o devices.cpp g++ -g -Wall -Wextra nethogs.cpp packet.o connection.o process.o refresh.o decpcap.o cui.o inodee.o devices.o -o nethogs -lpcap -lm -lncurses -DVERSION=\”0\” -DSUBVERSION=\”8\” -DMINORVERSION= g++ -g -Wall -Wextra decpcap_test.cpp decpcap.o -o decpcap_test -lpcap -lm install -d -m 755 /usr/local/sbin install -m 755 nethogs /usr/local/sbin install -d -m 755 /usr/local/share/man/man8/ install -m 644 nethogs.8 /usr/local/share/man/man8/ 这样已经算是成功安装完成，输入命令 nethogs 即可查看应用的宽带占用情况。 下图是我开启了2个命令窗口做的测试： 上一篇 预防XSS攻击，(参数/响应值)特殊字符过滤 下一篇 Linux命令行测试网速 顶 0 踩 0 我的同类文章 linux （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591135次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 38
URL:: http://blog.csdn.net/catoop/article/details/50350623

ParseText::
Linux命令行测试网速 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Linux命令行测试网速 标签： linux 2015-12-18 11:28 437人阅读 评论 (0) 收藏 举报 分类： linux （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 很多时候我们需要测试Linux服务器的上行和下行宽带。在可用于测试宽带速度的网站中，Speedtest.net也许是使用最广泛的应用“之一”。 Speedtest.net提供了一个命令行版本——speedtest-cli。下面将向你演示如何在Linux的命令行中使用speedtest-cli来测试宽带连接速度。 一、安装speedtest-cli speedtest-cli是一个用Python编写的轻量级Linux命令行工具，在Python2.4至3.4版本下均可运行。它基于Speedtest.net的基础架构来测量网络的上/下行速率。安装speedtest-cli很简单——只需要下载其Python脚本文件。 [root@localhost temp]# wget https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py [root@localhost temp]# chmod a+rx speedtest_cli.py [root@localhost temp]# mv speedtest_cli.py /usr/local/bin/speedtest-cli [root@localhost temp]# chown root:root /usr/local/bin/speedtest-cli 也可以在自己电脑上下载好 speedtest_cli.py 然后上传到服务器上。 二、使用speedtest-cli测试网速 使用speedtest-cli命令也很简单，它不需要任何参数即可工作。 [root@localhost temp]# speedtest-cli 输入这个命令后，它会自动发现离你最近的Speedtest.net服务器（地理距离），然后打印出测试的网络上/下行速率。 [root@localhost temp]# speedtest-cli Retrieving speedtest.net configuration… Retrieving speedtest.net server list… Testing from China Telecom (219.135.214.145)… Selecting best server based on latency… Hosted by CTM Internet Services (Macau) [106.48 km]: 55.974 ms Testing download speed…………………………………. Download: 3.15 Mbit/s Testing upload speed………………………………………….. Upload: 0.58 Mbit/s 测试结果说明：上行为 0.58Mbit/s 下行为 3.15 Mbit/s 当然对于测试结果，一般在实际应用中不一定能达到这个值，仅作为参考使用。 上一篇 Linux网络监控工具nethogs 下一篇 Http请求连接池 - HttpClient 的 PoolingHttpClientConnectionManager 顶 0 踩 0 我的同类文章 linux （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591123次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 39
URL:: http://blog.csdn.net/catoop/article/details/50352334

ParseText::
Http请求连接池 - HttpClient 的 PoolingHttpClientConnectionManager - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Http请求连接池 - HttpClient 的 PoolingHttpClientConnectionManager 标签： 网络 2015-12-18 15:54 429人阅读 评论 (0) 收藏 举报 分类： httpclient （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 两个主机建立连接的过程是很复杂的一个过程，涉及到多个数据包的交换，并且也很耗时间。Http连接需要的三次握手开销很大，这一开销对于比较小的http消息来说更大。但是如果我们直接使用已经建立好的http连接，这样花费就比较小，吞吐率更大。 传统的HttpURLConnection并不支持连接池，如果要实现连接池的机制，还需要自己来管理连接对象。对于网络请求这种底层相对复杂的操作，个人以为如果有可用的其他方案，也没有必要自己去管理连接对象。 除了HttpURLConnection，大家肯定还知道HttpClient。一般情况下，普通使用HttpClient已经能满足我们的需求，不过有时候，在我们需要高并发大量的请求网络的时候，还是用“连接池”这样的概念能提升吞吐量。 我们来看下怎么使用 org.apache.httpcomponents.httpclient（版本4.4）提供的连接池来实现我们的高并发网络请求。 使用到的jar包： org\apache\httpcomponents\httpclient\4.4-beta1\httpclient-4.4-beta1.jar org\apache\httpcomponents\httpclient-cache\4.4-beta1\httpclient-cache-4.4-beta1.jar org\apache\httpcomponents\httpcore\4.4-beta1\httpcore-4.4-beta1.jar 下面代码实例中主要使用到 PoolingHttpClientConnectionManager package com.hvgroup.zhuhai10086.jms.utils; import java.io.IOException; import java.io.InterruptedIOException; import java.io.UnsupportedEncodingException; import java.net.UnknownHostException; import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.CountDownLatch; import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; import javax.net.ssl.SSLException; import javax.net.ssl.SSLHandshakeException; import org.apache.http.HttpEntity; import org.apache.http.HttpEntityEnclosingRequest; import org.apache.http.HttpHost; import org.apache.http.HttpRequest; import org.apache.http.NameValuePair; import org.apache.http.NoHttpResponseException; import org.apache.http.client.HttpRequestRetryHandler; import org.apache.http.client.config.RequestConfig; import org.apache.http.client.entity.UrlEncodedFormEntity; import org.apache.http.client.methods.CloseableHttpResponse; import org.apache.http.client.methods.HttpGet; import org.apache.http.client.methods.HttpPost; import org.apache.http.client.methods.HttpRequestBase; import org.apache.http.client.protocol.HttpClientContext; import org.apache.http.config.Registry; import org.apache.http.config.RegistryBuilder; import org.apache.http.conn.ConnectTimeoutException; import org.apache.http.conn.routing.HttpRoute; import org.apache.http.conn.socket.ConnectionSocketFactory; import org.apache.http.conn.socket.LayeredConnectionSocketFactory; import org.apache.http.conn.socket.PlainConnectionSocketFactory; import org.apache.http.conn.ssl.SSLConnectionSocketFactory; import org.apache.http.impl.client.CloseableHttpClient; import org.apache.http.impl.client.HttpClients; import org.apache.http.impl.conn.PoolingHttpClientConnectionManager; import org.apache.http.message.BasicNameValuePair; import org.apache.http.protocol.HttpContext; import org.apache.http.util.EntityUtils; /** * HttpClient工具类 * * @return * @author SHANHY * @create 2015年12月18日 */ public class HttpClientUtil { static final int timeOut = 10 * 1000 ; private static CloseableHttpClient httpClient = null ; private final static Object syncLock = new Object(); private static void config (HttpRequestBase httpRequestBase) { // 设置Header等 // httpRequestBase.setHeader("User-Agent", "Mozilla/5.0"); // httpRequestBase // .setHeader("Accept", // "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"); // httpRequestBase.setHeader("Accept-Language", // "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3");// "en-US,en;q=0.5"); // httpRequestBase.setHeader("Accept-Charset", // "ISO-8859-1,utf-8,gbk,gb2312;q=0.7,*;q=0.7"); // 配置请求的超时设置 RequestConfig requestConfig = RequestConfig.custom() .setConnectionRequestTimeout(timeOut) .setConnectTimeout(timeOut).setSocketTimeout(timeOut).build(); httpRequestBase.setConfig(requestConfig); } /** * 获取HttpClient对象 * * @return * @author SHANHY * @create 2015年12月18日 */ public static CloseableHttpClient getHttpClient (String url) { String hostname = url.split( "/" )[ 2 ]; int port = 80 ; if (hostname.contains( ":" )) { String[] arr = hostname.split( ":" ); hostname = arr[ 0 ]; port = Integer.parseInt(arr[ 1 ]); } if (httpClient == null ) { synchronized (syncLock) { if (httpClient == null ) { httpClient = createHttpClient( 200 , 40 , 100 , hostname, port); } } } return httpClient; } /** * 创建HttpClient对象 * * @return * @author SHANHY * @create 2015年12月18日 */ public static CloseableHttpClient createHttpClient ( int maxTotal, int maxPerRoute, int maxRoute, String hostname, int port) { ConnectionSocketFactory plainsf = PlainConnectionSocketFactory .getSocketFactory(); LayeredConnectionSocketFactory sslsf = SSLConnectionSocketFactory .getSocketFactory(); Registry<ConnectionSocketFactory> registry = RegistryBuilder .<ConnectionSocketFactory> create().register( "http" , plainsf) .register( "https" , sslsf).build(); PoolingHttpClientConnectionManager cm = new PoolingHttpClientConnectionManager( registry); // 将最大连接数增加 cm.setMaxTotal(maxTotal); // 将每个路由基础的连接增加 cm.setDefaultMaxPerRoute(maxPerRoute); HttpHost httpHost = new HttpHost(hostname, port); // 将目标主机的最大连接数增加 cm.setMaxPerRoute( new HttpRoute(httpHost), maxRoute); // 请求重试处理 HttpRequestRetryHandler httpRequestRetryHandler = new HttpRequestRetryHandler() { public boolean retryRequest (IOException exception, int executionCount, HttpContext context) { if (executionCount >= 5 ) { // 如果已经重试了5次，就放弃 return false ; } if (exception instanceof NoHttpResponseException) { // 如果服务器丢掉了连接，那么就重试 return true ; } if (exception instanceof SSLHandshakeException) { // 不要重试SSL握手异常 return false ; } if (exception instanceof InterruptedIOException) { // 超时 return false ; } if (exception instanceof UnknownHostException) { // 目标服务器不可达 return false ; } if (exception instanceof ConnectTimeoutException) { // 连接被拒绝 return false ; } if (exception instanceof SSLException) { // SSL握手异常 return false ; } HttpClientContext clientContext = HttpClientContext .adapt(context); HttpRequest request = clientContext.getRequest(); // 如果请求是幂等的，就再次尝试 if (!(request instanceof HttpEntityEnclosingRequest)) { return true ; } return false ; } }; CloseableHttpClient httpClient = HttpClients.custom() .setConnectionManager(cm) .setRetryHandler(httpRequestRetryHandler).build(); return httpClient; } private static void setPostParams (HttpPost httpost, Map<String, Object> params) { List<NameValuePair> nvps = new ArrayList<NameValuePair>(); Set<String> keySet = params.keySet(); for (String key : keySet) { nvps.add( new BasicNameValuePair(key, params.get(key).toString())); } try { httpost.setEntity( new UrlEncodedFormEntity(nvps, "UTF-8" )); } catch (UnsupportedEncodingException e) { e.printStackTrace(); } } /** * GET请求URL获取内容 * * @param url * @return * @author SHANHY * @throws IOException * @create 2015年12月18日 */ public static String post (String url, Map<String, Object> params) throws IOException { HttpPost httppost = new HttpPost(url); config(httppost); setPostParams(httppost, params); CloseableHttpResponse response = null ; try { response = getHttpClient(url).execute(httppost, HttpClientContext.create()); HttpEntity entity = response.getEntity(); String result = EntityUtils.toString(entity, "utf-8" ); EntityUtils.consume(entity); return result; } catch (Exception e) { // e.printStackTrace(); throw e; } finally { try { if (response != null ) response.close(); } catch (IOException e) { e.printStackTrace(); } } } /** * GET请求URL获取内容 * * @param url * @return * @author SHANHY * @create 2015年12月18日 */ public static String get (String url) { HttpGet httpget = new HttpGet(url); config(httpget); CloseableHttpResponse response = null ; try { response = getHttpClient(url).execute(httpget, HttpClientContext.create()); HttpEntity entity = response.getEntity(); String result = EntityUtils.toString(entity, "utf-8" ); EntityUtils.consume(entity); return result; } catch (IOException e) { e.printStackTrace(); } finally { try { if (response != null ) response.close(); } catch (IOException e) { e.printStackTrace(); } } return null ; } public static void main (String[] args) { // URL列表数组 String[] urisToGet = { "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" , "http://blog.csdn.net/catoop/article/details/38849497" }; long start = System.currentTimeMillis(); try { int pagecount = urisToGet.length; ExecutorService executors = Executors.newFixedThreadPool(pagecount); CountDownLatch countDownLatch = new CountDownLatch(pagecount); for ( int i = 0 ; i < pagecount; i++) { HttpGet httpget = new HttpGet(urisToGet[i]); config(httpget); // 启动线程抓取 executors .execute( new GetRunnable(urisToGet[i], countDownLatch)); } countDownLatch.await(); executors.shutdown(); } catch (InterruptedException e) { e.printStackTrace(); } finally { System.out.println( "线程" + Thread.currentThread().getName() + "," + System.currentTimeMillis() + ", 所有线程已完成，开始进入下一步！" ); } long end = System.currentTimeMillis(); System.out.println( "consume -> " + (end - start)); } static class GetRunnable implements Runnable { private CountDownLatch countDownLatch; private String url; public GetRunnable (String url, CountDownLatch countDownLatch) { this .url = url; this .countDownLatch = countDownLatch; } @Override public void run () { try { System.out.println(HttpClientUtil.get(url)); } finally { countDownLatch.countDown(); } } } } Post使用方法 // 其中 params 为 Map < String , Object> params String ret = HttpClientUtil.post(url, params); jsonRet = new JSONObject(ret); 一开始我是使用传统的 HttpURLConnection 来做网络请求的，查了很多资料，有不少说 HttpURLConnection 效率高的。可是经过我修改实现方法后，HttpClient 连接池版本的网络请求相对比较稳定。这也说明， 我们并不请尽信他人解说，凡事还是要寻找适合自己的方法，真正的解决自己的问题，才是王道。 =========================================== 在使用 HttpURLConnection 的时候，大并发对外做网络请求的时候，前期请求耗时还好，后面耗时越来越高。下面是我之前的实现代码： @Deprecated protected JSONObject callRestfulOld(String url, Map<String, Object> params) { String temp ; String ret = "" ; JSONObject jsonRet=null ; String sign = generateSign( "POST" , url, params) ;// 对参数进行加密签名 if(sign .isEmpty ()) return new JSONObject( "{\"ret_code\":-1,\"err_msg\":\"generateSign error\"}" ) ; params .put ( "sign" , sign) ; try{ URL u = new URL(url) ; HttpURLConnection conn = (HttpURLConnection)u .openConnection () ; conn .setRequestMethod ( "POST" ) ; conn .setConnectTimeout ( 10000 ) ; conn .setDoOutput (true) ; conn .setDoInput (true) ; conn .setUseCaches (false) ; StringBuffer param = new StringBuffer() ; for (String key: params .keySet ()) { param .append (key) .append ( "=" ) .append (URLEncoder .encode (params .get (key) .toString (), "UTF-8" )) .append ( "&" ) ; } conn .getOutputStream () .write (param .toString () .getBytes ( "UTF-8" )) ; //System .out .println (param) ; conn .getOutputStream () .flush () ; conn .getOutputStream () .close () ; InputStreamReader isr = new InputStreamReader(conn .getInputStream ()) ; BufferedReader br = new BufferedReader(isr) ; while((temp = br .readLine ()) != null){ ret += temp ; } br .close () ; isr .close () ; conn .disconnect () ; //System .out .println ( ret ) ; jsonRet = new JSONObject( ret ) ; } catch(java .net .SocketTimeoutException e) { //e .printStackTrace () ; jsonRet = new JSONObject( "{\"ret_code\":-1,\"err_msg\":\"call restful timeout\"}" ) ; } catch(Exception e) { //e .printStackTrace () ; jsonRet = new JSONObject( "{\"ret_code\":-1,\"err_msg\":\"call restful error\"}" ) ; } return jsonRet ; } （完） 上一篇 Linux命令行测试网速 下一篇 RabbitMq、ActiveMq、ZeroMq、kafka之间的比较,资料汇总 顶 0 踩 0 我的同类文章 httpclient （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591120次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1)

Recno:: 40
URL:: http://blog.csdn.net/catoop/article/details/50382906

ParseText::
RabbitMq、ActiveMq、ZeroMq、kafka之间的比较,资料汇总 - 小单的博客专栏 - 博客频道 - CSDN.NET 小单的博客专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 RabbitMq、ActiveMq、ZeroMq、kafka之间的比较,资料汇总 2015-12-22 22:53 97人阅读 评论 (0) 收藏 举报 本文转载自：http://blog.csdn.net/linsongbin1/article/details/47781187 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- MQ框架非常之多，比较流行的有RabbitMq、ActiveMq、ZeroMq、kafka。这几种MQ到底应该选择哪个？要根据自己项目的业务场景和需求。下面我列出这些MQ之间的对比数据和资料。 第一部分： RabbitMQ,ActiveMq,ZeroMq 比较 1、  TPS 比较 一 ZeroMq 最好，RabbitMq 次之， ActiveMq 最差。这个结论来自于以下这篇文章。 http://blog.x-aeon.com/2013/04/10/a-quick-message-queue-benchmark-activemq-rabbitmq-hornetq-qpid-apollo/ 测试环境：      Model: Dell Studio 1749      CPU: Intel Core i3 @ 2.40 GHz      RAM: 4 Gb      OS: Windows 7 64 bits 其中包括 持久化 消息和 瞬时 消息的测试。注意这篇文章里面提到的 MQ ，都是采用 默认配置 的，并无调优。 更多的统计图请参看我提供的文章url。 2 、 TPS 比较 二 ZeroMq  最好， RabbitMq 次之，  ActiveMq 最差。这个结论来自于一下这篇文章。 http://www.cnblogs.com/amityat/archive/2011/08/31/2160293.html   显示的是发送和接受的每秒钟的消息数。整个过程共产生1百万条1K的消息。测试的执行是在一个Windows Vista上进行的。 3 、持久化消息比较        zeroMq 不支持 ， activeMq 和 rabbitMq 都 支持 。 持久化消息主要是指： MQ down 或者 MQ 所在的服务器 down 了，消息不会丢失的机制。 4 、技术点：可靠性、灵活的路由、集群、事务、高可用的队列、消息排序、问题追踪、可视化管理工具、插件系统、社区       RabbitMq最好，ActiveMq次之，ZeroMq最差。当然ZeroMq也可以做到，不过自己必须手动写代码实现，代码量不小。尤其是可靠性中的： 持久性 、 投递确认 、 发布者证实 和 高可用性 。        所以在可靠性和可用性上， RabbitMQ 是首选，虽然 ActiveMQ 也具备，但是它性能不及 RabbitMQ 。  5 、高并发 从实现语言来看，RabbitMQ最高，原因是它的实现语言是天生具备高并发高可用的 erlang 语言。 总结： 按照目前网络上的资料，RabbitMQ、activeM、zeroMQ三者中，综合来看，RabbitMQ是首选。下面提供一篇文章，是淘宝使用RabbitMQ的心得，可以参看一些业务场景。 http://www.docin.com/p-462677246.html 第二部分： kafka 和 RabbitMQ 的比较 关于这两种MQ的比较，网上的资料并不多，最权威的的是kafka的提交者写一篇文章。 http://www.quora.com/What-are-the-differences-between-Apache-Kafka-and-RabbitMQ 里面提到的要点： 1、  RabbitMq比kafka成熟，在可用性上，稳定性上，可靠性上，RabbitMq超过kafka 2、  Kafka设计的初衷就是处理日志的，可以看做是一个日志系统，针对性很强，所以它并没有具备一个成熟MQ应该具备的特性 3、  Kafka的性能（吞吐量、tps）比RabbitMq要强，这篇文章的作者认为，两者在这方面没有可比性。 这里在附上两篇文章，也是关于kafka和RabbitMq之间的比较的： 1、http://www.mrhaoting.com/?p=139 2、http://www.liaoqiqi.com/post/227 总结： 两者对比后，我仍然是选择RabbitMq，性能其实是很强劲的，同时具备了一个成熟的MQ应该具有的特性，我们无需重新发明轮子。 好资料推荐：             1、最全最给力的kafka博客：http://blog.csdn.net/lizhitao/article/category/2194509            2、淘宝对rabbitmq的使用：http://www.docin.com/p-462677246.html 上一篇 Http请求连接池 - HttpClient 的 PoolingHttpClientConnectionManager 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 catoop 访问： 591122次 积分： 7621 等级： 积分：7621 排名： 第1421名 原创： 179篇 转载： 35篇 译文： 10篇 评论： 290条 文章搜索 文章分类 android (62) 应用部署 (11) firefox代理 (1) linux ssh (4) 代理 (1) Socket (1) 缓存 (1) redis (1) svn (1) 乱码 (2) 广播 (1) androidService (2) ddms (1) linux (41) sqllite (2) 知识论 (1) eclipse (2) ant (4) android sdk (1) ant循环 (1) ant字符串处理 (1) linux目录说明 (1) Access (1) httpclient (3) 断点下载 (1) 测试 (2) mysql (8) 加密 (2) 数据库 (9) 图片处理 (2) 线程 (7) synchronized (2) Java基础 (3) 设计模式 (1) 短彩信 (2) JavaScript (2) office (3) SSH (1) CA证书 (1) J2EE (3) Http请求 (1) ftp (1) tomcat (7) 文件转换 (1) pdf (1) 天气 (1) json (1) Excel (1) apache (4) spring mvc (4) maven (2) 并发 (1) JVM堆栈和GC (4) 算法 (1) spring (0) RPC (1) MQ (0) 文章存档 2015年12月 (15) 2015年11月 (17) 2015年10月 (10) 2015年09月 (13) 2015年08月 (21) 2015年07月 (12) 2015年06月 (5) 2015年05月 (1) 2015年01月 (9) 2014年12月 (4) 2014年11月 (6) 2014年10月 (8) 2014年09月 (2) 2014年08月 (3) 2014年07月 (2) 2014年06月 (5) 2014年05月 (2) 2014年04月 (6) 2014年03月 (4) 2013年11月 (2) 2013年10月 (1) 2013年09月 (2) 2013年08月 (1) 2013年07月 (2) 2013年04月 (1) 2013年01月 (7) 2012年12月 (14) 2012年10月 (7) 2012年09月 (5) 2012年08月 (3) 2012年07月 (1) 2012年06月 (2) 2012年05月 (19) 2012年04月 (9) 2012年03月 (3) 阅读排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (32347) 手机dpi换算方法，以iPhone4为例 (27593) redis缓存的安装和使用 (21745) linux下配置android sdk (21158) 使用 Linux 搭建 VPN (16903) 修改Tomcat内存大小 (16615) Linux 磁盘挂载和mount共享、NFS与防火墙配置 (13307) Android数据库(SqlLite)操作和db文件查看 (12788) Android——摇一摇 (12322) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (11812) 评论排行 安卓首页图片轮播效果(淘宝、京东首页广告效果) (41) Android——摇一摇 (17) 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 (9) Android的AlertDialog，setView后去除黑色边框 (8) android webView.loadData乱码解决 (7) linux下配置android sdk (6) android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 (6) 当webview遇到360wifi (5) 安卓在代码中设置TextView的drawableLeft、drawableRight、drawableTop、drawableBottom (5) android ListView隐藏FooterView(headerView) (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 安卓首页图片轮播效果(淘宝、京东首页广告效果) qq_24032059 : @y78431967:如何做缓存？？求教 安卓首页图片轮播效果(淘宝、京东首页广告效果) silly007_0425 : 我给你发 android解决同一个界面上ScrollView和百度地图（ListView等可滚动控件）滚动冲突问题 wuzhiguo1314 : View v = mMapView.getChildAt(0);v.setOnTouchListen... 自定义控件让TextView、Button的drawableLeft和drawableRight与文本一起居中显示 dengbin_tote : 赞 预防XSS攻击，(参数/响应值)特殊字符过滤 yszjq2011 : 说明非常详细，在安全方面，现在的项目必须经过第三方安全测试，这一项是必须的，楼主是否能把所有的安全漏... SpringMVC+MyBatis+JMS+JTA（分布式事务） zhanghongjie0302 : 不错的文章！ SpringMVC+MyBatis+JMS+JTA（分布式事务） cytzrs : 学习了，对java配置还需要好好学习。以前做c系列多这一块没有什么积累。刚开始看这些配置是感觉很反感 Android TextView 文本自动对齐 getchance : 效果图能贴上来看看嘛 Android应用被卸载后，自动使用 浏览器打开指定连接（或编写C代码执行其他操作） catoop : @x359981514:我最近没去看这块，你现在有新方案了没？ 安卓首页图片轮播效果(淘宝、京东首页广告效果) baidu_22089179 : 学习了，熬夜整合中......

Recno:: 41
URL:: http://blog.csdn.net/cnbragon/article/details/10238693

ParseText::
我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 标签： Win8 Bootkit Rootkit 2013-08-23 19:10 1501人阅读 评论 (2) 收藏 举报 分类： win8 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 只有写过一个BootKit，才能比较深刻的理解其整个过程与机制，也能加深对Windows系统引导各个过程的熟悉和理解。 我写的这个bootkit，暂时还没想到一个比较好的名字，它 1.  支持xp到win8的所有32位系统，当然win8不能开启Secure Boot 2.  可加载任意驱动，执行任意shellcode，以管理员权限执行任意exe   下一步准备开发支持x64系统的   说到Win8，微软确实在安全性方面增强了很多，尤其是针对bootkit，做特征匹配需要特别精心挑选，BootKit的核心代码也要写的比较稳定才行。 上一篇 应用层和驱动如何判断当前的启动模式 下一篇 驱动中如何给ring3层应用程序提权 顶 0 踩 0 我的同类文章 win8 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87712次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 42
URL:: http://blog.csdn.net/cnbragon/article/details/11993057

ParseText::
驱动中如何给ring3层应用程序提权 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 驱动中如何给ring3层应用程序提权 标签： 提权 Token bootkit 2013-09-24 23:21 1400人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 为什么会有这个需求就不用我多说了吧：） 目前在驱动中提权我知道的有三种办法 1.  该方法来源于stoned bootkit，主要原理是把services.exe的EPROCESS中的Token值取出来，直接赋值给需要提权的应用程序， 这种方法需要硬编码，并且有较大的机率蓝屏。主要是因为Token值会被释放和DeReference 2. 在进程创建时，使用 ZwOpenProcess、ZwOpenProcessTokenEx、ZwDuplicateToken和ZwSetInformationProcess(ProcessAccessToken)来把具有管理员权限 的token赋值给需要提权的程序 遗憾的是，在vista以后，微软限制了这种方法，会返回0xc00000bb，即STATUS_NOT_SUPPORTED 具体原因还需进一步分析 3. 第三种方法是前面两种的结合，主要原理是先把token duplicate出来，然后再通过硬编码偏移，把token赋值给需要提权的程序   Token在EPROCESS中定义为   // // Security. // EX_FAST_REF Token; EX_FAST_REF的定义如下： typedef struct _EX_FAST_REF { union { PVOID Object; #if defined (_WIN64) ULONG_PTR RefCnt : 4; #else ULONG_PTR RefCnt : 3; #endif ULONG_PTR Value; }; } EX_FAST_REF, *PEX_FAST_REF;   从这个结构体当中取Object，可以参考如下的函数 NTKERNELAPI PVOID FORCEINLINE ExFastRefGetObject ( __in EX_FAST_REF FastRef ) /*++ Routine Description: This routine allows the caller to obtain the object pointer from a fast reference structure. Arguments: FastRef - Fast reference block to be used Return Value: PVOID - The contained object or NULL if there isn't one. --*/ { return (PVOID) (FastRef.Value & ~MAX_FAST_REFS); }   MAX_FAST_REFS值为7 在win7 sp1下面，调用NtSetInformationProcess(ProcessAccessToken)会走到如下的代码   在PspAssignPrimaryToken函数中，在如下代码处跳走了，导致返回status_not_supported错误码   edi是EPROCESS, 这里是判断EPROCESS的PrimaryTokenFrozen字段值是否为真，如果为真，则出错 这个标志位是在PspUserThreadStartup函数中设置的，如下     上一篇 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 下一篇 VS2008界面语言设置 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87717次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 43
URL:: http://blog.csdn.net/cnbragon/article/details/17221421

ParseText::
VS2008界面语言设置 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 VS2008界面语言设置 2013-12-09 13:05 3130人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在卸载某个软件的时候，不知道什么原因导致vs2008的界面变成中文的了，但是菜单还是英文的，很不美观。 几经查找，最后可以在如下的地方设置界面语言   Tools -> Options     如果设置成 same as Microsoft Windows，则会变成与系统相同的语言设置。 上一篇 驱动中如何给ring3层应用程序提权 下一篇 metasploit使用 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87721次 积分： 1323 等级： 积分：1323 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 44
URL:: http://blog.csdn.net/cnbragon/article/details/26616851

ParseText::
metasploit使用 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 metasploit使用 标签： metasploit 2014-05-22 20:13 538人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 新版本的Metasploit分为Pro和Communicate版本，都可以使用WebUI的方式和Console的方式 下面主要介绍console方式的使用 1.   use 2. show options 3.  show payloads 4. set payload 5. show options 6. set cmd 7. exploit 8.  通过IE浏览器访问，或者使用WinWget把html内容下载下来也可以 meta里面生成的poc大多是针对英文版系统或IE的，所以如果在中文版环境下面，自己得进行修改 WinWget里面配置HTTP Options -> User Agent时，要把IE6.0改成8.0，NT 5.2改成5.1 上一篇 VS2008界面语言设置 下一篇 调试bootmgr&winload vista&win7 x86&x64 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net

Recno:: 45
URL:: http://blog.csdn.net/cnbragon/article/details/28131281

ParseText::
调试bootmgr&winload vista&win7 x86&x64 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 调试bootmgr&winload vista&win7 x86&x64 2014-06-02 21:11 1080人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 设置调试bootmgr 1、以管理员权限运行cmd.exe 2、执行以下命令 3.  参照我的另一篇文章《 win8 + vmware + windbg 双机调试 》中的第1、3步， 建立windbg双机联调的环境 4.  重启虚拟机，此时就可以用windbg来调试bootmgr了，效果如下 ﻿﻿ 设置调试winload.exe 1.  先查看winload的启动GUID

Recno:: 46
URL:: http://blog.csdn.net/cnbragon/article/details/28610863

ParseText::
bootmgr解压缩 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 bootmgr解压缩 2014-06-05 12:59 1008人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 主要参考以下两个文章： 1.  http://bbs.wuyou.com/forum.php?mod=viewthread&tid=211314 2.  http://reboot.pro/files/file/121-lznt1-tools-bootmgrntfs/ 简单来说，bootmgr在win7环境下面是压缩了的，采用的算法是LZNT1，可以使用LZNT1 Tools解压缩，其实就是调用的 RtlDecompressBuffer http://msdn.microsoft.com/en-us/library/ff552191.aspx win8采用了xpress huffman压缩算法 解压了以后，最好查看一下数字签名是否有效，以确保解压出来的数据是正确的 另外，32位的win7 sp1和64位的win7 sp1的bootmgr是相同的 winload则分别为32位和64位 上一篇 调试bootmgr&winload vista&win7 x86&x64 下一篇 ntoskrnl符号在IDA中查看的问题 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87707次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 47
URL:: http://blog.csdn.net/cnbragon/article/details/32179445

ParseText::
ntoskrnl符号在IDA中查看的问题 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ntoskrnl符号在IDA中查看的问题 标签： ntoskrnl x64 INIT IDA 2014-06-18 22:17 783人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近发现x64的ntoskrnl.exe，如果直接在IDA中查看，会有一些函数IDA没有识别出来，比如 查看以后，发现1405AE2B0这个地址在IDA中并不存在，查看ntoskrnl的section信息，发现这个地址是属于INIT节，这个节属性如下 表示可丢弃，原来IDA在加载这种节数据的时候，并不load进来解析，所以解决这个问题也比较好办，去掉这个属性，重新保存一份exe，重命名为 ntkrnlmp.exe，再用IDA加载，发现就可以解析了

Recno:: 48
URL:: http://blog.csdn.net/cnbragon/article/details/47340861

ParseText::
Zigbee技术开发一 设置NV_RESTORE - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Zigbee技术开发一 设置NV_RESTORE 标签： zigbee nv_restore 2015-08-07 16:08 140人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 需要试验一下设置NV_RESTORE之后，终端设备的处理逻辑，在IAR里面设置NV_RESTORE的地方如下   上一篇 ntoskrnl符号在IDA中查看的问题 下一篇 windbg分析运行在64位环境下的32位程序的dump 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87711次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 49
URL:: http://blog.csdn.net/cnbragon/article/details/50343331

ParseText::
windbg分析运行在64位环境下的32位程序的dump - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 windbg分析运行在64位环境下的32位程序的dump 标签： windbg wow64exts sw 2015-12-17 16:21 490人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 windbg命令如下 1.   .load wow64exts 2.   !sw 3.   ~* kvnf 上一篇 Zigbee技术开发一 设置NV_RESTORE 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87707次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 50
URL:: http://blog.csdn.net/cnbragon/article/details/5886894

ParseText::
解决win7下面图标显示不正常的问题 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 解决win7下面图标显示不正常的问题 标签： command each search menu kill cache 2010-09-15 21:01 3319人阅读 评论 (2) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 某日win7图标显示不正常，不显示应用程序内嵌的图标，却显示系统默认的没有被识别的文件类型的图标，试了很多方法都不行， 最后找到一种方法轻松解决，即清除图标缓存。   To Manually Rebuild the Icon Cache using the Command Prompt 1. Close and save anything that you are working on. This command will kill explorer and restart the computer when completed. 2. Open the Start Menu, and type cmd in the search box and press enter. 3. In the command prompt, Copy and Paste each command line below and press enter after each command. taskkill /IM explorer.exe /F CD /d %userprofile%/AppData/Local DEL IconCache.db /a shutdown /r 4. The IconCache.db file has now been rebuilt . 上一篇 彻底解决VC6在编译，链接时的假死问题 下一篇 解决vs2005 出现调试文件损坏的情况 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87723次 积分： 1323 等级： 积分：1323 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 51
URL:: http://blog.csdn.net/cnbragon/article/details/5886909

ParseText::
解决vs2005 出现调试文件损坏的情况 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 解决vs2005 出现调试文件损坏的情况 标签： debugging build 2010-09-15 21:05 1058人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 具体表现是build的时候，出现如下错误   Fatal error LNK1103: debugging information corrupt   解决方法：   下载该补丁即可 https://connect.microsoft.com/VisualStudio/Downloads/DownloadDetails.aspx?DownloadID=18623   注意，安装此补丁之前需要先安装vs2005 sp1 上一篇 解决win7下面图标显示不正常的问题 下一篇 MFC中上下控件的使用 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87716次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 52
URL:: http://blog.csdn.net/cnbragon/article/details/5887384

ParseText::
MFC中上下控件的使用 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 MFC中上下控件的使用 标签： mfc alignment variables integer 2010-09-16 01:14 1499人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 像这种样子控件的称之为“上下控件”，其实它是一个EditBox和一个Spin组合而成的。 在MFC里，先拖一个EditBox，在其右边拖一个Spin， 然后设置Spin控件的属性： Alignment: Right Align No Thousands: True （是否不显示千分符） Auto Buddy: FALSE Set Buddy Integer: TRUE   添加Variables，命名为m_Spin，假设EditBox的控件ID为IDC_EDIT1， 则在代码中，OnInitDialog()里加入如下代码就可以了 m_Spin.SetBuddy( GetDlgItem(IDC_EDIT1) ); m_Spin.SetRange32(0, INT_MAX);     上一篇 解决vs2005 出现调试文件损坏的情况 下一篇 Windbg 常用命令 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87719次 积分： 1323 等级： 积分：1323 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 53
URL:: http://blog.csdn.net/cnbragon/article/details/5912619

ParseText::
Windbg 常用命令 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Windbg 常用命令 2010-09-28 19:01 1031人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 1. g 2. k,     kb     kd 3. dd     db     du 4. u 5. !process 0 0     !process 6. .process PID     .process 7. bp     bu     bl     bc 8. lm     lm m PATTERN     lm n t 9. !handle 上一篇 MFC中上下控件的使用 下一篇 一些常用的消息 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87726次 积分： 1323 等级： 积分：1323 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 54
URL:: http://blog.csdn.net/cnbragon/article/details/5942614

ParseText::
一些常用的消息 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 一些常用的消息 2010-10-15 10:28 974人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 1. EM_SETREADONLY 2. EM_LIMITTEXT 3. CB_GETCURSEL 4. CB_ADDSTRINGG 5. CB_SETCURSEL 6. WM_GETTEXT 7. WM_SETTEXT 8. EM_SETSEL 9. WM_COPY   10. WM_QUERYENDSESSION 0x11 11. WM_ENDSESSION 0x16 12. CBN_SELCHANGE 上一篇 Windbg 常用命令 下一篇 GetVersion与GetVersionExW/A 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87708次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 55
URL:: http://blog.csdn.net/cnbragon/article/details/6030347

ParseText::
GetVersion与GetVersionExW/A - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 GetVersion与GetVersionExW/A 标签： c 2010-11-23 17:53 1789人阅读 评论 (1) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 1. GetVersion   GetVersion 的实现如下：   7C81127A > 64:A1 18000000 mov eax, dword ptr fs:[18] ; 取TEB 7C811280 8B48 30 mov ecx, dword ptr [eax+30] ; 取PEB 7C811283 8B81 B0000000 mov eax, dword ptr [ecx+B0] ; 取OSPlatformId 7C811289 0FB791 AC000000 movzx edx, word ptr [ecx+AC]; 取OSBuildNumber 7C811290 83F0 FE xor eax, FFFFFFFE 7C811293 C1E0 0E shl eax, 0E 7C811296 0BC2 or eax, edx 7C811298 C1E0 08 shl eax, 8 7C81129B 0B81 A8000000 or eax, dword ptr [ecx+A8] ; 取OSMinorVersion 7C8112A1 C1E0 08 shl eax, 8 7C8112A4 0B81 A4000000 or eax, dword ptr [ecx+A4] ; 取OSMajorVersion 7C8112AA C3 retn   2. GetVersionExW/A   GetVersionExA调用GetVersionExW，而GetVersionExW则是调用RtlGetVersion，RtlGetVersion如下： 7C939673 64:A1 18000000 mov eax, dword ptr fs:[18] 7C939679 8B78 30 mov edi, dword ptr [eax+30] 7C93967C 8B87 A4000000 mov eax, dword ptr [edi+A4] 7C939682 8B75 08 mov esi, dword ptr [ebp+8] 7C939685 8946 04 mov dword ptr [esi+4], eax 7C939688 8B87 A8000000 mov eax, dword ptr [edi+A8] 7C93968E 8946 08 mov dword ptr [esi+8], eax 7C939691 0FB787 AC000000 movzx eax, word ptr [edi+AC] 7C939698 8946 0C mov dword ptr [esi+C], eax 7C93969B 8B87 B0000000 mov eax, dword ptr [edi+B0] 7C9396A1 8946 10 mov dword ptr [esi+10], eax 7C9396A4 8B87 F4010000 mov eax, dword ptr [edi+1F4] 可以看出其也是读取PEB中的字段 上一篇 一些常用的消息 下一篇 Shell_NotifyIcon后tray退出的问题 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87713次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 56
URL:: http://blog.csdn.net/cnbragon/article/details/6409937

ParseText::
Shell_NotifyIcon后tray退出的问题 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Shell_NotifyIcon后tray退出的问题 标签： shell 2011-05-10 19:05 1117人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在填充NOTIFYICONDATA结构体中的hwnd成员时，如果hwnd成员不对， 则当鼠标移动到tray上的图标时，会自动退出。 上一篇 GetVersion与GetVersionExW/A 下一篇 win7激活DbgPrint输出 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87715次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 57
URL:: http://blog.csdn.net/cnbragon/article/details/6653896

ParseText::
win7激活DbgPrint输出 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 win7激活DbgPrint输出 标签： manager filter session windows system 2011-08-02 15:01 1646人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 创建文件1.reg，复制下面的内容，然后导入注册表即可。   Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Debug Print Filter] "DEFAULT"=dword:0000000f   顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87707次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 58
URL:: http://blog.csdn.net/cnbragon/article/details/7407648

ParseText::
win8 + vmware + windbg 双机调试 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 win8 + vmware + windbg 双机调试 标签： vmware windows system debugging tools 2012-03-29 16:20 2986人阅读 评论 (0) 收藏 举报 分类： win8 （1） 作者同类文章 X vmware windbg 关机回调 版权声明：本文为博主原创文章，未经博主允许不得转载。 由于最近需要调试win8下面驱动的一个bug，所以尝试了一下用windbg进行双机联调，发现VirtualKD v2.6版本对windows 8 Consumer Preview版的支持不好，用target里面的vminstall.exe可以安装成功，但是重启之后，win8就会不停的尝试修复~~，完全无法调试。具体原因未知。 无奈只好用最原始的双机联调的办法来试一下。 过程和调试win7类似。 1.  首先设置一下Virtual Machine Settings，创建一个Serial Port，使用named pipe， 以VMWare 10.0中文版为例

Recno:: 59
URL:: http://blog.csdn.net/cnbragon/article/details/8255238

ParseText::
对某bootkit的驱动分析 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 对某bootkit的驱动分析 标签： bootkit guntior 2012-12-04 13:10 1139人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一．基本信息 驱动文件名： 1F273549.sys （驱动名称随机） 病毒类型：感染 MBR MD5:xxx 文件大小： 9,104  字节   二．危害简介 1. hook了4个SSDT函数，用于对抗杀软的驱动加载，以及保护自身样本不被复制 2. 替换了Disk.sys的StartIo处理例程，隐藏MBR的修改 3. 根据上层传入的进程pid来杀进程，主要用于结束杀软的进程 4. 使用磁盘IO来直接操作MBR 三．详细分析 1.   DriverEntry a)  创建设备名为 \\Device\\Guntior 的设备对象 b)  获取如下4个函数的地址 ZwLoadDriver ZwSetSystemInformation ZwSetValueKey ZwReadFile c)  SSDT hook以上的4个函数 d)  获取Disk.sys的DEVICE_OBJECT e)  直接发IRP读取MBR f)   对读取出的MBR内容进行判断，判断是否是感染过的MBR g)  Hook Apapi StartIo 2.  SSDT hook函数的处理 a) ZwLoadDriver & ZwSetSystemInformation 这两个驱动都是判断要加载的驱动是否在如下的列表中，如果在，则拒绝。 在ZwLoadDriver的处理中还会删除相关的服务注册表项。 这个是用来对抗杀软的驱动加载的。 b)  ZwSetValueKey 这个函数的处理中主要是判断注册表路径是否包含如下的两个列表，如果有，则拒绝 c) ZwReadFile 样本hook了这个函数，主要是判断要读取的文件是否是sfc_os.dll，如果是，则拒绝。 这里sfc_os.dll已经被样本替换了。 3.  Device Io的处理 该驱动一共有4个Control Code， Control Code 222440用于接收sfc_os.dll打下来的如下4个函数的地址以及函数内部的偏移和指令 MmGetSystemRoutineAddress PspTerminaterProcessByPointer KeInsertQueueApc KiInterQueueApc ControlCode 222444: 用于根据sfc_os.dll打下的进程pid来调用PspTerminaterProcessByPointer来结束进程，同时还会根据222440传入的指令来检查上面的4个函数是否被hook，如果有被hook，则恢复钩子。 Control Code 22243D用来通过磁盘IO来读取MBR，并且返回给上层的sfc_os.dll。 Control Code 222439主要是为磁盘IO的相关操作做前期的准备，比如硬盘状态的判断等。 4. StartIo处理 在Guntior的StartIo函数中，会根据IRP判断来隐藏MBR 上一篇 win8 + vmware + windbg 双机调试 下一篇 应用层和驱动如何判断当前的启动模式 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87714次 积分： 1322 等级： 积分：1322 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 60
URL:: http://blog.csdn.net/cnbragon/article/details/9335611

ParseText::
应用层和驱动如何判断当前的启动模式 - 我爱密码学 - 博客频道 - CSDN.NET 我爱密码学 密码学，一个神奇的世界！Cryptology is my world！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 应用层和驱动如何判断当前的启动模式 标签： 安全模式 启动模式 2013-07-15 19:35 730人阅读 评论 (0) 收藏 举报 分类： 我的日记 （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 1. 应用层 调用 int nBootType = GetSystemMetrics(SM_CLEANBOOT) MSDN解释： The value that specifies how the system is started:          0 Normal boot 1 Fail-safe boot 2 Fail-safe with network boot A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files. 值为0表示正常模式，1表示安全模式，2表示带网络连接的安全模式   2. 驱动层   需要 extern PULONG InitSafeBootMode 引用时需要加*号 *InitSafeBootMode 值为0表示正常启动， #define SAFEBOOT_MINIMAL                1 #define SAFEBOOT_NETWORK             2 #define SAFEBOOT_DSREPAIR             3   上一篇 对某bootkit的驱动分析 下一篇 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 顶 0 踩 0 我的同类文章 我的日记 （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnbragon 访问： 87720次 积分： 1323 等级： 积分：1323 排名： 第18694名 原创： 44篇 转载： 0篇 译文： 0篇 评论： 19条 文章搜索 文章分类 我的日记 (16) win8 (2) vmware (1) windbg (1) 关机回调 (1) 文章存档 2015年12月 (1) 2015年08月 (1) 2014年06月 (3) 2014年05月 (1) 2013年12月 (1) 2013年09月 (1) 2013年08月 (1) 2013年07月 (1) 2012年12月 (1) 2012年03月 (1) 2011年08月 (1) 2011年05月 (1) 2010年11月 (1) 2010年10月 (1) 2010年09月 (11) 2010年08月 (1) 2009年09月 (1) 2009年08月 (2) 2008年03月 (1) 2008年02月 (3) 2008年01月 (1) 2007年02月 (2) 2006年10月 (1) 2006年09月 (1) 2006年08月 (2) 2006年05月 (1) 2005年08月 (1) 阅读排行 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (9393) linux使用技巧 (4670) ASP错误类型：Microsoft JET Database Engine (0x80040E09) 不能更新。数据库或对象为只读。 (3585) 无线局域网产品使用的SMS4密码算法及其实现 (3560) 解决win7下面图标显示不正常的问题 (3313) VS2008界面语言设置 (3119) IMAGE_DIRECTORY_ENTRY_RESOURCE (2999) win8 + vmware + windbg 双机调试 (2978) JAVA反编译技术研究心得 (2675) Rabbit流密码的Java实现 (2514) 评论排行 Rabbit流密码的Java实现 (4) 编程技术点滴三（C/C++） (3) 无线局域网产品使用的SMS4密码算法及其实现 (2) 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 (2) 解决win7下面图标显示不正常的问题 (2) JAVA反编译技术研究心得 (1) GetVersion与GetVersionExW/A (1) 对CryptEncrypt/CryptDecrypt中的几个参数的解释 (1) linux使用技巧 (1) perl程序设计技巧 (1) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 GetVersion与GetVersionExW/A stuartcn : https://msdn.microsoft.com/zh-cn/library/dn424972(... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 u013698939 : 能交流下吗 Rabbit流密码的Java实现 dyz4250801 : 感谢作者的分享，在http://www.cryptico.com里面找到了C版本的rabbit，但是... 我的第一个RootKit，支持XP、Vista、Win7、Win8 RTM 32位 hellotjc : 能分享 交流下吗 正在学习中！ 无线局域网产品使用的SMS4密码算法及其实现 dengdai8 : 无线局域网产品使用的SMS4密码算法及其实现 yangqing320119 : 解决win7下面图标显示不正常的问题 WL_Only : 解决win7下面图标显示不正常的问题 WL_Only : 能用中文说吗？？看不懂啊！！ 可能是ReadFile的一个Bug ynicle : AV软件可以去马赛克吗 对CryptEncrypt/CryptDecrypt中的几个参数的解释 xddy1009 : 楼主你好，我想问一下CryptDecrypt这个api 函数怎么解密经过3DES加密过的数据呢？补充... Some Links DCP 看雪软件安全论坛 CryptoKeyGenMe tHE Egoiste !(TMG) Crackmes.de cryptool jB(A talented cryptoguy!) 野战萍果的blog

Recno:: 61
URL:: http://blog.csdn.net/cnsword/article/details/16994059

ParseText::
sshuttle全局代理的实现简析 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 sshuttle全局代理的实现简析 标签： Linux iptables ssh sshuttle 2013-11-27 22:38 2783人阅读 评论 (0) 收藏 举报 分类： 技术天地 （21） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近使用sshuttle实现全局代理，顺便研究了一下实现的具体原理。 直接进入主题，先看一下启动的输出信息： 先绑定到本地的12300端口，将数据通过远端的ssh服务器进行路由转发。sshuttle和ssh的tunnle不同不是基于TCP-over-TCP的，而是叫data over tcp的，省去了一次包裹。然后 建立端口映射，输出信息如下： 很明显是通过iptables的代理转发来实现的，具体步骤： 新建nat表的处理链sshuttle-12300 清空处理链 将OUTPUT数据路由给sshuttle-12300处理 添加sshuttle-12300的处理过程，目标是本机则返回，目标是远程主机的tcp转发REDIRECT到12300端口，目标是dns服务器的udp数据通过12300端口来转发 当然代理结束时就会将映射信息从iptables中删除： sshuttle是使用python实现的，安装很方便几乎是直接portable的。当然如果条件限制可以先使用ssh tunnle然后通过iptables的转发来实现代理。 其实不光是sshuttle，android的gae代理也是基于这个iptables来实现的。 上一篇 gdb调试脚本 下一篇 golang记录 顶 0 踩 0 我的同类文章 技术天地 （21） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548630次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 62
URL:: http://blog.csdn.net/cnsword/article/details/17039073

ParseText::
golang记录 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] golang记录 标签： golang go语言 2013-11-30 12:29 2275人阅读 评论 (0) 收藏 举报 分类： golang （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 原文链接: http://blog.csdn.net/cnsword/article/details/17039073 作者: cnsworder 记录一下学习go语言的一些知识点，网上go语言的入门教程很多，也有对某个点深入分析的教程，这篇文章不是入门教程只是对于学习golang过程中的一些特殊点进行记录，当然这些点是建立在个人（c,c++,python）基础上的。 GOPATH是go查找包的路径，GOROOT是go的安装目录，GOBIN是go build生成的bin的目录 go是强类型语言，类型声明在后边 import . "fmt"开放包内容，import f "fmt" 包别名 var p = fmt.Println 定义函数引用 空是nil而不是NULL或null go中没有枚举 const、var和import可以加()来搞定多个 := 不能声明全局变量，只能通过var来声明全局变量 rune = uint，byte = int8 a := [...]int{1, 2, 20: 3} switch类型比C更多了，省略匹配值后case可以是任意条件语句 每个文件可以有一个init()函数负责初始化，但不能被显式调用 typedef可以使用type来实现 函数返回值在后边 func可以返回多个值，也可以直接返回，返回值储存在声明的变量中 可以为任意的struct增加func，包括内置类型，但是内置类型需要先type typename a_type成一个本地类型 不定参数通过...type来实现，通过for rangs来取值 if else for可以不加括号，没有while语句 分号可以省略 大括号必须在行为 指针也用.而不用->，指针是这样写的*int，指针不能运算 new是函数用来给指针分配内存，只清零不初始化,new([] int) make可以初始化切片，map，chan。返回的不是指针，是一个初始化的实例,make([]int, 10, 100) 没有class，只有struct，多了interface，没有继承和虚函数的概念 struct的变量前没有var interface中的方法前没有func T Interface{}定义空接口，空接口可以对应任意类型，可以通过T.(Type)转换到相应类型，这种写法只适用于空接口 interface通过interfacename(*struct)生成一个绑定 string是内置类型 没有char类型了，使用byte，字符串直接是string 操作string可以借助strings包 panic对应catch，defer对应try，而恢复运行需要revcover chan默认是阻塞的非阻塞他哦难过select + default来实现，或者借助time超时来实现，close(channel)关闭chan NewTimer的time.C只执行一次，而newTicker的ticker.C借助for rang可以循环，ticker.Stop()停止循环 mutex等在sync包中 原子操作在sync/atomic包中 socket在net包中,net.Listen监听，net.Accept接受，net.Dail建立链接，conn.Close关闭 httpserver用net/http包 系统调用用os包和syscall包 与C交互用cgo包 go自己进程见通讯使用，目前go与其他语言程序的进程间通讯需要借助c来实现 //include <stdio.h> import "C" import “unsafe”   来引入Cgo cgo申请的内存需要手动释放C.free(unsafe.Pointer(Char)) cloud9构建go语言开发环境参考： http://www.oschina.net/translate/go-up-and-running-on-cloud-9 入门可以看一下皓哥的： http://coolshell.cn/articles/8460.html   http://coolshell.cn/articles/8489.html 个人窃以为，go语言是魔法，目前对ruby的冲击最大，目前还无法对c/c++和python造成冲击，但后期发展前景在docker采用后一切光明了。 上一篇 sshuttle全局代理的实现简析 下一篇 docker lxc cgroup namespace入门 顶 1 踩 0 我的同类文章 golang （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548614次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 63
URL:: http://blog.csdn.net/cnsword/article/details/17053865

ParseText::
docker lxc cgroup namespace入门 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 docker lxc cgroup namespace入门 标签： Linux lxc docker cgourp 2013-12-01 10:48 7268人阅读 评论 (3) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 docker、lxc、cgroup、namespace是最近比较的技术。先了解一下他们分别是什么，然后说一下他们怎么用，具体实现机制以后再单独研究。 docker是lxc的管理器，lxc是cgroup的管理工具，cgroup是namespace的用户空间的管理接口。namespace是linux内核在task_struct中对进程组管理的基础机制。 再详细点说： docker是用go来实现的，自动化了对lxc的管理过程，能够自动在线下载相应的发行版本的rootfs。 lxc可以直接chroot到任意的系统的rootfs上并通过cgroup的限制机制来控制容器内系统的资源占有率。 cgroup通过配置文件或者命令配置后，限制相应进程或一组进程使用的系统资源。 很明显，在lxc以上已经借助于chroot机制在一个限制的容器中运行一个完整的系统了，这样多个不通过虚拟化技术的新系统就在特定的占有物理资源的限制上运行起来。据说运行效率直逼实际机器。 下面说一下用法吧，先从下往上说： cgroup 步骤： 在文件系统上建立层次结构 挂载文件系统并关联子系统 建立控制组 设置控制参数 将进程加入到控制组 通过/etc/cgconfig.conf配置或者cgroup-bin的相关指令来配置： mount {     cpuset = /sys/fs/cgroup/cpuset;     momory = /sys/fs/cgroup/momory; } group cnsworder/my  {    perm {         task {                uid = root;                gid = root;         }         admin {               uid = root;               gid = root;         }    }     cpu {          cpu.shares = 1000;    } } 命令如下 mount -t group -o cpu cpu /sys/fs/cgroup/cpuset cgcreate -g cpu,momory:/cnsworder chown root:root /sys/fs/cgroup/cpuset/cnsworder/my/* chown root:root /sys/fs/cgroup/cpuset/cnsworder/my/task cgrun -g cpu,momory:/cnsworder/my bash lxc 建立新容器 lxc-create -n name -t type 删除容器 lxc-destory -n name 运行容器lxc-start -n name 运行容器中的指令 lxc-execute -n name command 停止运行容器 lxc-stop -n name 连接运行容器 lxc-attach -n name 配置cgroup lxc-cgroup -n name 你当然可以借助一下命令做更多的事情 lxc的配置文件位于/etc/lxc中 支持发行版本的template位于/usr/share/lxc/templates中，我的archlinux上支持的如下： lxc-start和lxc-execute区别是lxc-execute会启动lxc-init进程来作为启动其他程序的入口。 对容器的资源控制配置在${path}/config中 lxc.mount = $path/fstab lxc.pivotdir = lxc_putold lxc.devttydir =$ttydir lxc.tty = 4 lxc.pts = 1024 lxc.utsname = $name lxc.arch = $arch lxc.cap.drop = sys_module mac_admin mac_override # When using LXC with apparmor, uncomment the next line to run unconfined: #lxc.aa_profile = unconfined lxc.cgroup.devices.deny = a # Allow any mknod (but not using the node) lxc.cgroup.devices.allow = c *:* m lxc.cgroup.devices.allow = b *:* m # /dev/null and zero lxc.cgroup.devices.allow = c 1:3 rwm lxc.cgroup.devices.allow = c 1:5 rwm # consoles lxc.cgroup.devices.allow = c 5:1 rwm lxc.cgroup.devices.allow = c 5:0 rwm #lxc.cgroup.devices.allow = c 4:0 rwm #lxc.cgroup.devices.allow = c 4:1 rwm # /dev/{,u}random lxc.cgroup.devices.allow = c 1:9 rwm lxc.cgroup.devices.allow = c 1:8 rwm lxc.cgroup.devices.allow = c 136:* rwm lxc.cgroup.devices.allow = c 5:2 rwm # rtc lxc.cgroup.devices.allow = c 254:0 rwm #fuse lxc.cgroup.devices.allow = c 10:229 rwm #tun lxc.cgroup.devices.allow = c 10:200 rwm #full lxc.cgroup.devices.allow = c 1:7 rwm #hpet lxc.cgroup.devices.allow = c 10:228 rwm #kvm lxc.cgroup.devices.allow = c 10:232 rwm docker docker run -t type command直接在线下载 如果有dockerfile一切将变得更简单，借助于github你可以直接运行一个桌面环境 docker build -t cnsworder/docker-desktop git://github.com/rogaha/docker-desktop.git docker run -d cnsworder docker run常用的选项有：   -e 设置容器的运行env环境变量   -v 映射服务的一个目录到容器中   -p 容器对服务器暴露的端口   -c cpu使用的权重   -m 限制容器的内存使用量   -i 标准输出到当前term   -t 分配一个tty 另外更让人羡慕的是借助有vargant可以在mac和windows上使用docker，当然vargant就是在virtualbox中跑了linux虚拟机。 顶 1 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548624次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 64
URL:: http://blog.csdn.net/cnsword/article/details/17239285

ParseText::
ajenti源码安装 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ajenti源码安装 标签： Linux ajenti 2013-12-10 09:37 1893人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 先下载源码git clone  https://github.com/Eugeny/ajenti.git ajenti 从requirements.txt文件中可以看到ajenti的python环境的依赖项，逐一确认安装就可以。依赖如下： gevent gevent-socketio lxml>=2.2.4 passlib psutil>=0.6.0 python-catcher python-daemon python-exconsole>=0.1.5 python-ldap requests>=0.12.0 reconfigure>=0.1.36 pyOpenSSL PIL 现在如果直接运行服务是可以起来的，但是界面是没有的，或者是混乱的，这是需要编译一下。 因为ajenti前端编译依赖nodejs、cofeescript、lesscss和yui compressor。所以需要先安装他们。 执行make编译，如果没有错误恭喜你已经编译成功，执行ajenti-panel -v先调试运行一下如果不出什么错误，然后你就可以安装到系统了：make install。 ajenti配置ssl支持依赖stunnel，也需要安装。使用ajenti-ssl-gen生成ssl的pem文件，他会默认生成到/etc/ajenti目录下。 另外他支持的有些工具是直接调用系统的命令的，所以如果没有安装会在运行中出现错误页面，如果我们不需要这个功能当然可以不用管他，如果需要就安装响应的管理工具即可。 上一篇 docker lxc cgroup namespace入门 下一篇 clang static analyze 顶 0 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548619次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 65
URL:: http://blog.csdn.net/cnsword/article/details/18357289

ParseText::
clang static analyze - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 clang static analyze 标签： c clang c++ cpp 2014-01-16 14:22 2013人阅读 评论 (4) 收藏 举报 分类： C++ （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 C++静态检查一般使用cppcheck直接一条 cppcheck ./*.{h,cpp,hpp} 命令搞定整个项目，最近发现用clang进行代码补全和代码分析更加强大，借助 scan-build 工具更好的完成整个过程 直接使用clang扫描 --analyze 选项可以直接静态扫描源码 --analyzer-check 设置检查的内容 -analyzer-checker-help 可以列出可以检测的内容 -c 将会只运行预处理、编译和汇编的步骤 首先使用scan-build扫描一下构建 使用格式为: scan-build [scan-build options] <command> [command options] 我们可以这样使用它: scan-build ./configure scan-build make or scan-build xcodebuild or scan-build gcc 生成检查文件 scan-build 几个有用的选项如下： 参数 描述 –use-analyzer 设置检查的工具来替换默认的clang -o 生成检查报告的目录，默认/tmp下 -v 详细输出结果 -V 直接在浏览器中查看结果 查看检查结果 scan-veiw /file 生成查看文件 上一篇 ajenti源码安装 下一篇 博客和笔记 顶 0 踩 0 我的同类文章 C++ （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548617次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 66
URL:: http://blog.csdn.net/cnsword/article/details/20399515

ParseText::
博客和笔记 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 博客和笔记 2014-03-03 21:58 1630人阅读 评论 (2) 收藏 举报 分类： 技术天地 （21） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近很少更新博客了，是因为最近迷恋上了用markdown来写文章和记笔记。最近系统的学习了一下markdown和reStructuredText两种markup语言，感觉markdown确实很适合来做笔记和写一些文字性的东西（比如：博客），很多的地方 oschina ， SegmentFault ， 知乎 等都支持markdown语法来写文章或者讨论留言，并且还有专门提倡用markdown来分享文章的 简书 这样的网站，但是很遗憾的是 CSDN 却不支持，OSCHINA的markdown编辑器也不咋地。 说一下自己的使用使用体验吧。 程序猿写文章自然少不了代码了，他们都能够直接将代码块格式化并高亮显示，秒杀所有的富文本编辑器自带的代码插入功能，看效果 Python: import os class Mark (Object) : def __init__ (self) : super.__init__(self); go package main import ( "fmt" ) func main(){ fmt.Println( "Mark" ) } C: #include <stdio.h> int main(int arg, char **argv){ return 0; } 偶尔插入个图片也是非常简单 使用 马克飞象 来写evernote笔记，不再为如何记笔记而烦恼，直接将知识点记录成列表就好了 使用 Markdown Here 的 chrome 和 firefox 插件直接格式化输入的文本框可以将markdown语法的内容直接格式化，这样还好吧，只是没有了预览功能，但是集中精力码字的情况下预览的意义不大了。用来格式化邮件和不支持markdown语法的blog是不错的选择 没有复杂的语法，但是自动列表的自动完成功能确实在某些工具帮助下确实提升效率，比如用sublimeText，vim，emacs的相关相关插件。 用reStructuredText写文档性质的东西是很合适的，没有wiki语法那么繁琐，比markdown支持更多的语法，并且有大量的python工具集支持，生成html，man，pdf易如反掌，并且很流行生成s5的幻灯片 使用sphinx生成项目并托管到github上，使用readthedoc自动在线生成和发布文档，让整个文档工作变得那样的清爽 markdown支持插入html语言来扩展自己，特别是表格 reStructuredText的命令可以直接 自定义role来添加class，例如添加下划线 .. role:: strike :class: strike :strike:`This text is crossed out` .strike { text-decoration: line-through; } 记录知识与分享知识不应该太过于繁琐，而应该在自由的表述自己的意图 上一篇 clang static analyze 下一篇 个人知识管理 顶 1 踩 0 我的同类文章 技术天地 （21） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548624次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 67
URL:: http://blog.csdn.net/cnsword/article/details/23754213

ParseText::
个人知识管理 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 个人知识管理 标签： 编辑器 文档 博客 markdown 2014-04-15 13:35 1536人阅读 评论 (1) 收藏 举报 分类： 技术天地 （21） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 这个话题大家都有自己的想法和做法，我不想布道，在这里把自己的知识管理发展过程和现在的知识管理方法和大家分享一下，同时也请大家能给出更好的思路和方法。 最初个人的知识记录在本子上（主要还是学生的时代），这个过程大家都有过，现在能够翻出来看别有一番滋味，但是大部分也已经无从找到，从知识保存的角度来说就是都 没了 。当然有很多通过手工的记录都已经记录到自己的脑子里了。 后来开始经常在电脑前了，将自己的学习的资料保存起来，很多的pdf（ 惭愧的是都是盗版 ）被分类放到文件夹里。发现这样的后果是只收集了文档却忘记了看，渐渐的开始用word来记一些笔记，这些笔记内容翻看起来是很好的的学习成长的记录，但当时的时代没有云存储服务，所以保存在电脑和移动硬盘随着时间的推移也已经找不到了。 然后开始有了博客，开始记录和摘抄一些东西，其实博客很重要的是分享原创，用来做笔记真的不合适。07年左右开始在 csdn  上安家，但是感觉自己的太水了写，写出东西来让人笑话，要么就是转贴一些东西意义不大，中间有一年左右的时间没有写任何的内容。 evernote  在接写来的很长一段时间成为了我摘录笔记的良好平台，我可以将自己的学习知识记录在上面，权当私藏。 evernote 的web剪辑功能确实不错可以快速的将别人的文章中自己需要的部分选取保存起来。但是时间长了感觉有些缺憾，记录起笔记来感觉不爽， evernote 实际上不太适合程序员使用，代码的支持不好。后来学习了 markdown 语法借助 马克飞象 这个工具来用markdown语法来写笔记。笔记还算是圆满了。让后对 markdown 就像着迷一样，它用来做程序员的比较工具太爽了，找 csdn 上支持markdown的方法，并且在找支持 markdown 的替换的blog。借助 markdownhere 可以将自己输入的文档直接转成相应的富文本，但是修改起来很麻烦。其实 马克飞象 也存在这个问题，没有办法修改已经发布的文章。 wri.pe 借助dropbox保存markdown源码同时将编译后的富文本发布到 evernote 上解决了这个问题。至此笔记的问题解决了。 blog的对 markdown 或者 restructuredtext 支持的问题，一直是个遗憾， csdn 压根就不支持 markdown ，  oschina  的 markdown 编辑器可用性太差了，简书这样的网站对 markdown 支持倒是不错，但不是程序员的社区。 segmentfault 的 markdown 编辑器还算不错。（一会儿写完，看看是否还能修改～～～， OK，可以很好的修改 ）。 很多人推荐用 wiki 来组织管理知识，个人感觉需要搭建相应的服务，并且还需要学习比 markdown 和 restructuredtext 更复杂的 wiki format 语法。个人没有采用这种做法，组织化的文档知识还是用 restructuredtext 放到 gihub 上用 readthedocs 自动管理吧。 最终的解决方法： 笔记  wri.pe  +  evernote 分享 组织化文档  github  +  readthedocs  +  restructuredtext  +  sphinx 文章 blog +  penlican 代码片  gist 手册  zeal  +  man 程序员知识范围和组织形式不同很可能采用的方法产生的效果有所不同。 做前端的希望很快的看到自己代码的效果和展示形式自然会用一些能够可见的工具来管理。都有很多更好的工具来辅助，但是我这样的只写代码的猿就没有必要了。 另外大家有Linux平台下代码片管理工具可以推荐给我。 上一篇 博客和笔记 下一篇 编译系统对跨平台代码的支持 顶 0 踩 0 我的同类文章 技术天地 （21） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548620次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 68
URL:: http://blog.csdn.net/cnsword/article/details/25380767

ParseText::
编译系统对跨平台代码的支持 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 编译系统对跨平台代码的支持 2014-05-09 11:47 1357人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X C++ （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 问题 起因 项目需要跑在不同的平台上 不希望代码中掺杂大量的 define 宏做平台判断（ 有洁癖呀～～～ ） 定义一些通用宏来处理只能解决一些类型差异的问题 处理 将跨平台代码写入不同的文件夹下  os/linux  和  os/win 在外部暴露的 .h 文件加入判断宏 //file: public.h #ifdef WIN32 # include "os/windows/public.h" #else # include "os/linux/public.h" #endif //WIN32 其他代码直接使用 #include "public.h" 产生问题 使用的编译构建系统如何来识别这些编译哪个目录下的文件,在链接的时候如何选择库 不同的编译系统下的解决 直接Makefile 通过宏来区分 ifdef WIN32 SOURCES += $(wildcard os/win/*.cpp) else SOURCES += $(wildcard os/linux/*.cpp) endif cmake cmake通过逻辑语句和预定义变量来判定 if ( WIN32 ) aux_source_directory (os/win SOURCES ) else ( APPLE ) aux_source_directory (os/mac SOURCES ) else ( UNIX ) aux_source_directory (os/linux SOURCES ) endif ( WIN ) qmake qt的 .pro 文件支持直接以 !unix { SOURCES += comm.cpp } win32:debug { TARGET = client_debug.exe } win32 | macx { HEADERS += debug.h } linux-g++ { CONFIGS += c++ 11 } 的方式来定义跨平台代码。 上一篇 个人知识管理 下一篇 编译synergy 顶 1 踩 0 我的同类文章 linux （74） C++ （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548629次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 69
URL:: http://blog.csdn.net/cnsword/article/details/27197203

ParseText::
编译synergy - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 编译synergy 2014-05-27 13:48 2219人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X 开源 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 起因 由于我的 archlinux 的openssl版本过高，与源内以及发布的deb/rpm包的版本不兼容，无法验证登陆（ 我也是捐过的 ）。虽然无法登陆可以使用但总是心痛。前几天 synergy 发布了1.5版而源内的版本没有即使跟进更新。所以自己编译一下。 下载源码 从 http://synergy-project.org/download/ 上下载源码，注意不要从souceforge.net上下载，上面的代码已经过时了，现在项目的SVN地址是 http://synergy-project.org/code 编译 将ext目录下的cryptopp56.zip解压 如果需要测试可以解压gmock和gtest两个压缩包，如果不测试直接将 src/CMakeLists.txt 中测试内容注释掉或者设置 CMAKE_SYSTEM_NAME 为 IRIX if (NOT ${CMAKE_SYSTEM_NAME} MATCHES "IRIX" ) add_subdirectory (test) endif () cmake生成Makefile make，生成的文件到项目顶级目录的bin目录下 编译GUI gui在 src/gui 目录下，没有使用cmake来管理 qmake gui.pro make，生成 synergy 也会在顶级目录的bin目录下 安装 直接复制 bin 目录下可执行文件到 /usr/bin 目录下 OK，可以顺利验证运行了。 补充说明一下synergy synergy 是一个可以使用一套鼠标键盘控制多台电脑的工具。他提供了夸平台支持Linux、Mac、Windows。并且他支持文本内容的粘贴复制。 它是开源的，你可以免费使用，你可以捐献任意金额成为高级用户（强烈推荐捐献 http://synergy-project.org/donate/ ）。 ​ 上一篇 编译系统对跨平台代码的支持 下一篇 Scribefire发CSDN博客 顶 0 踩 0 我的同类文章 linux （74） 开源 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548616次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 70
URL:: http://blog.csdn.net/cnsword/article/details/27582331

ParseText::
Scribefire发CSDN博客 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Scribefire发CSDN博客 2014-05-29 22:38 2072人阅读 评论 (6) 收藏 举报 分类： 技术天地 （21） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 历史 在很久很久以前，CSDN是支持外部工具来写文章的，可是在另一个很久很久以前就不行了。 突然看到CSDN有能够用外部工具来写博客了（ CSDN的公告 ），一直以来都纠结这个问题，CSDN的编辑器不好用，不支持Markdown这样的语法，虽然一直用markdownhere来解决。 现在，看到可以用Windows Live Write来发文章了，可以我是Linux系统没有Live，怎么办～～～，怎么办～～，还好在chromme和firefox上有Scribfire这个插件来发blog。 配置方法 新建 Add New Blog 按填写以下内容 注意 : 1. 发布地址（API URL）是 http://write.blog.csdn.net/xmlrpc/index 2. Blog Type 选择 Metaweblog 3. 填写用户名和密码 好了，现在可以用Scriberfire来写CSDN 的博客了。 上一篇 编译synergy 下一篇 cmake管理visual studio无法显示头文件解决方法 顶 2 踩 0 我的同类文章 技术天地 （21） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548628次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 71
URL:: http://blog.csdn.net/cnsword/article/details/36435341

ParseText::
cmake管理visual studio无法显示头文件解决方法 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 cmake管理visual studio无法显示头文件解决方法 标签： visual studio cmake C++ 2014-07-02 17:25 1958人阅读 评论 (2) 收藏 举报 分类： C++ （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 原因 我们的跨平台项目使用cmake来管理的，但是windows下的小伙伴发现在visual studio上头文件没有加载进来，于是手工加载，事情过去了。然后，有一天我修改了CMakeLists.txt文件，visual studio居然自动去重新生成了项目，然后头文件就没有了。哭吧～～～～ 解决方法 source_group 　可以将文件分目录来显示在IDE中。 所以，修改了一下base.cmake文件让所有的项目都能检索出头文件并显示在　 include 文件夹中。 file(GLOB_RECURSE CURRENT_HEADERS *.h *.hpp) source_group ( "Include" FILES ${CURRENT_HEADERS} ) add_executable ( ${MODULE_NAME} ${SOURCES} ${CURRENT_HEADERS} ) 重新生成windows项目，头文件自动出现了，win下的小伙伴们幸福了。 vim、emacs党徒直接无视～～～ ​ 顶 1 踩 0 我的同类文章 C++ （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548623次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4)

Recno:: 72
URL:: http://blog.csdn.net/cnsword/article/details/36697345

ParseText::
qml可以这么玩 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 qml可以这么玩 标签： C++ qt 2014-07-03 20:58 1082人阅读 评论 (0) 收藏 举报 分类： C++ （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Qt 5以后qmlscene被qml所替代，/usr/bin/qml可以用来执行.qml文件。 所以，我们就可以和sh一样的来写界面了。 #!/usr/bin/env qml import QtQuick 2.2 Rectangle { width: 200 height: 100 Text { anchors.centerIn: parent text: "Qml" } } 然后， chmod a+x test.qml 之后就可以直接运行 ./test.qml 了 ​ 上一篇 cmake管理visual studio无法显示头文件解决方法 下一篇 vim-snippets Ultisnips的写法 顶 0 踩 0 我的同类文章 C++ （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548613次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 73
URL:: http://blog.csdn.net/cnsword/article/details/38091363

ParseText::
vim-snippets Ultisnips的写法 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 vim-snippets Ultisnips的写法 标签： LINUX vim 2014-07-24 20:41 3129人阅读 评论 (2) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 vim的代码片段补全插件有名气的有vim-snipmate和Ultsnips，我的环境中snipmate因为冲突一直没法使用，所以使用的是Ultisnips。他们都是采用一样的vim-snippets做为配置文件，并且分别存放在对应名称的目录下。他们的格式基本上是相同的，但是也有少许差别，个人感觉ultisnips提供了更多的扩展。 UltiSnipsEdit快速打开编辑配置文件，名字为<当前文件的扩展名>.snippets 基本格式： snippet <tigger> "注解" <flag> ${1:name} ${1/(\w+).*/${1}/} endsnippet 支持直接用shell script，也可以通过 !v 嵌入vimscript或者 !p 嵌入python snippet date "date" `echo $(date)` end snippet 通过 global !p 直接嵌入python脚本 global !p endglobal python的变量 fn: 文件名 path: 路径 t: 占位符t[1] snip: 提供方法 示例： snippet def "def" def ${1:name}: ${2:`!p `} endsnippet snippet "rep (\d+) (\w+)" "def" r def ${1:name}: ${2:`!p snip.rv=int(match.group(1))*match.group(2)`} endsnippet extends c 引用其他配置 ​ 上一篇 qml可以这么玩 下一篇 龙芯2f笔记本安装debian错误--bzcat 顶 0 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548631次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 74
URL:: http://blog.csdn.net/cnsword/article/details/38865595

ParseText::
龙芯2f笔记本安装debian错误--bzcat - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 龙芯2f笔记本安装debian错误--bzcat 标签： 龙芯 debian 2014-08-27 10:09 1522人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在正常安装龙芯2f的debian系统时出现如下错误: requires the bzcat command which is not available 说明,原有的安装镜像中没有将bzip2这个包打入到系统中,所以需要自己手动将其安装.先将其下载到根目录 / . wget http://ftp.us.debian.org/debian/pool/main/b/bzip2/libbz2- 1.0 _1. 0.6 - 7 _mipsel.deb wget http://ftp.us.debian.org/debian/pool/main/b/bzip2/[bzip2_1. 0.6 - 7 _mipsel.deb 注意 ,是下载的mipsel架构的安装包. 因为没有dpkg所以不能直接安装,所以手动解包: ar x libbz2-1.0_1.0.6-7_mipsel.deb unxz data.tar.xz tar xvf data.tar rm -rf data.tar data.tar.xz debian-binary control.tar.gz ar x bzip2_1.0.6-7_mipsel.deb unxz data.tar.xz tar xvf data.tar 注意 , 第二次解包需要把第一次的中间文件删除否则会解包失败. 附: 硬盘安装龙芯2f 由于没有2G一些的U盘,也不想单独分2G分区来安装,本来绝望阶段发现160G盘是分区的.所以有希望了~~ 将安装系统文件 vmlinux-3.bin和initrd.gz放到最后一个分区, load (wd0, 2 )/vmlinux- 3 .bin initrd (wd0, 3 )/initrd.gz g 然后进入debian的安装界面,可以开始正常安装了,注意在分区的时候, 不要全部格式化硬盘 ,因为你的系统安装文件在硬盘的第三个分区上. ​ 上一篇 vim-snippets Ultisnips的写法 下一篇 linux chrome运行android应用方法 顶 0 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548618次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 75
URL:: http://blog.csdn.net/cnsword/article/details/39505565

ParseText::
linux chrome运行android应用方法 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 linux chrome运行android应用方法 标签： Linux chrome android应用 2014-09-23 22:46 4867人阅读 评论 (5) 收藏 举报 分类： linux （74） 作者同类文章 X android （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 chromeos-apk 是一个可以讲android的apk程序包装成chrome可以运行的插件的工具。github的地址是： https://github.com/vladikoff/chromeos-apk 使用方法： 安装 npm install chromeos-apk -g 转换 chromeos-apk chrome 通过开发者模式来加载生成的插件 现在加载会不成功，因为chrome缺少 ARC 库，所以通过 https://bitbucket.org/vladikoff/archon/ 项目来安装chrome的android运行时库。 然后，先通过开发者模式加载archon插件，然后在加载生成的插件。如图： 运行Flipboard如图： 测试应用，手机QQ和QQ浏览器、海豚浏览器直接挂掉，hd版QQ失败： 发现的问题 ：卸载应用插件，archon也会卸载。 ​ 上一篇 龙芯2f笔记本安装debian错误--bzcat 下一篇 fedora20升级到21 顶 2 踩 0 我的同类文章 linux （74） android （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548615次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 76
URL:: http://blog.csdn.net/cnsword/article/details/4176636

ParseText::
c/c++资源（源码、开发工具、开发库）2014-05-09更新 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] c/c++资源（源码、开发工具、开发库）2014-05-09更新 标签： 开发工具 netbeans qt gtk xcode 2009-05-13 12:45 16944人阅读 评论 (31) 收藏 举报 分类： 编程 （11） 作者同类文章 X C++ （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 作者:cnsworder 原文地址：http://blog.csdn.net/cnsword/article/details/4176636 开发工具： VIM 骨灰级玩家专属 emacs   骨灰级玩家专属 sublimetext 很好用的编辑器 code::blocks 入门级推荐 codelite 入门级首选 eclipse+CDT 如果你经常用eclipse就直接装个cdt的插件吧 netbeans   习惯netbeans的首选 anjuta gtk首选 KDeveloper   曾经的Linux下经典开发工具 Xcode Mac系开发首选 QtCreator Qt默认的开发工具，上升势头很猛，Qt开发推荐 Vistual C++ windows系开发嫡系 dev-c++ 似乎停止更新了 编译器： gcc vc clang/llvm intel 调试分析： gdb valgrind gprof cppcheck（静态代码检查） 自动化构建： make autotools（autoconf、aclocal、automake） cmake nmake(ms) qmake(qt) 版本管理： CVS SVN GIT HG 开发库： 一、通用库 STL boost 二、界面库(WTL、MFC外其余跨平台) Qt gtkmm（c是gtk+） wxwidget WTL MFC 三、通讯库 ACE boost::asio libevent （C） 四、辅助库 日志：log4cpp、log4cplus xml：TinyXML 单元测试：cppunit、GTest 源码： 国内网站： http://fayaa.com/code/view/?lang=cpp 代码发芽 http://www.stlchina.org/ stl中文站 http://www.vckbase.com/ VCBASE http://www.hellocpp.net/Index.aspx 国外网站： http://www.github.com http://code.google.com http://www.gitorious.org http://www.sgi.com/tech/stl/ http://www.boost.org/ http://www.planetsourcecode.com/vb/default.asp?lngWId=3 http://freshmeat.net/browse/164/ http://www.daniweb.com/code/ http://www.programmersheaven.com/tags/C/ http://www.ddj.com/code/ddj.html http://www.cprogramming.com/cgi-bin/source/source.cgi http://www.codecogs.com/ http://www.google.com/codesearch?q=programming++lang:c&cs_r=lang:c http://www.codepedia.com/1/C http://www.cis.temple.edu/~ingargio/cis71/code/ http://www.codeproject.com/?cat=2 http://www.thefreecountry.com/sourcecode/cpp.shtml http://people.sc.fsu.edu/~burkardt/cpp_src/cpp_src.html http://www.cplusplus.com/src/ http://users.cs.fiu.edu/~weiss/dsaa_c++/code/ http://c.snippets.org/ http://www.bbdsoft.com/downloads.html http://www.moshier.net/ http://cplus.about.com/od/cgames/C_Games_with_Source_Code.htm http://cliodhna.cop.uop.edu/~hetrick/c-sources.html http://www.mathtools.net/C_C__/Utilities/index.html http://www.programmerworld.net/resources/c_library.htm http://freshmeat.net/browse/165/ http://www.robertnz.net/cpp_site.html http://www.josuttis.com/libbook/examples.html http://www.einet.net/directory/65892/Developers.htm http://c.ittoolbox.com/topics/core-c/ http://snippets.dzone.com/tag/c http://www.programmersheaven.com/tags/C http://www.google.com/codesearch?hl=en&lr=&q=programming http://www.codepedia.com/1/Cpp http://cpp.snippets.org/ http://emr.cs.uiuc.edu/~reingold/calendars.shtml http://cplus.about.com/od/codelibrary/Code_Library_for_C_C_and_C.htm http://www.c.happycodings.com/ http://www.blueparrots.com/ http://www.java2s.com/Code/Cpp/CatalogCpp.htm http://www.yeohhs.com/modules/mydownloads/ http://www.brpreiss.com/books/opus4/programs/index.html http://www.sourceforge.net http://www.josuttis.com/libbook/examples.html http://pasite.org/ http://www.hotscripts.com/category/c-cpp/scripts-programs/ http://snippets.dzone.com/tag/c/ http://www.codeguru.com/ http://download.dre.vanderbilt.edu/ http://stackoverflow.com/ http://www.dmoz.org/Computers/Programming/Languages/C/ 随着我自己积累，我会一直更新的..... 上一篇 OpenGL初始化与销毁 下一篇 模板的静态变量的初始化 顶 16 踩 0 我的同类文章 编程 （11） C++ （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548632次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 77
URL:: http://blog.csdn.net/cnsword/article/details/41843015

ParseText::
fedora20升级到21 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 fedora20升级到21 标签： Linux fedora 2014-12-10 10:34 3133人阅读 评论 (2) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 fedora18以后的版本都是采用 fedup 来做升级工具,这里不再细说,可以参考 fedora17升级到18 的内容. 但是现在直接直接使用 fedup --network 21 会出现以下的提示: 根据提示,原来 fedora 21 根据不同的使用特点分别分包了不同的版本.主要包括: workstation 工作站 server 服务器 cloude 云 nonproduct 非生产性 而在安装和升级时需要通过 --prouduct 参数明确指定需要的的哪个版本. 所以工作站的升级指令应该为: fedup --network 21 --product=workstation ​ 上一篇 linux chrome运行android应用方法 下一篇 Linux init系统 顶 0 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548622次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 78
URL:: http://blog.csdn.net/cnsword/article/details/42272505

ParseText::
Linux init系统 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Linux init系统 标签： Linux uefi 2014-12-30 20:53 1130人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 我手上的版本有archlinux、fedora20、debian7、centos6我主要以以上这些版本为例来描述，BSD init以上版本默认都没有了，所以无法验证，描述很可能有漏洞。其中archlinux、fedora20使用systemd，debian7使用system V init，centOS6使用upstart。 在谈init之前先说一下linux kernel的启动过程，在PC上和arm嵌入式开发板上会有所不同。 系统启动 PC 设备在上电以后会在指定的位置来运行某段代码，这个位置 0xFFFF0 就是固化在主板上的BIOS（现在是UEFI了），BOIS自检后会从磁盘的某个位置加载程序，如果mbr分区会运行位于磁盘0道0柱1扇区上512字节的mbr程序，mbr程序会通过446+1字节的位置读取64字节的分区表，并在boot标志的分区上加载bootload，一般会使grub、lilo。UEFI引导的情况下，UEFI会直接到GPT分区的fat文件系统下找到efi的引导文件并加载，这个文件会加载grub或者其他引导（lilo是否支持有待验证）。grub本身是一个缩减版的内核，grub本身会包含stage1,stage1.5，stage2 三步。它通过kernel指令加载kernel(grub2是linux指令) vmlinuz文件并传递给内核启动参数，通过initrd指令加载ram disk文件，然后内核就被加载进内存中运行了。 efi启动模式下的boot目录如下图： bios启动模式下的boot目录如下图： vimlinuz-linux是kernel指令加载的kernel文件，initramfs-linux.publication/image是initrd指令加载的ramfs文件。 efi目录如下图： efi目录是挂载的一个fat文件系统的分区。包括了可以被UEFI加载的多个efi文件。 grub加载的配置如下图: 开发板 开发板上电后会从norflash或者nandflash上的某个位置来读取bootload，然后由bootload加载内核到内存，内核直接开始运行。在3.0以后的arm linux上kernel会从flash的某个位置读取LDS来加载板载资源的配置信息。 在内核初始化完成后，需要和根文件系统建立关联，pc版的kernel会借助initrd来做桥梁加载根文件系统，而armlinux则直接根据配置加载跟文件系统。 早期init 系统简介 在内核所有的操作完成以后就会从根文件系统中加载地一个要执行的程序，他是所有程序的父进程，也是我们今天的主角 init 。恩，前面的废话太多了，现在才进入正题… init的历史很久远，早期Linux使用的init有两个版本： sysV 和 BSD 。现在他们仍旧没有完全被废弃，现在还有不少发行版本采用这两个系统比如dibian还采用system V init,archlinux在20jenk12年前后才放弃BSD init切换到systemd。废话不多说，分别描述一下。 BSD - 使用/etc目录下以rc.x作为文件名的文件来描述init的操作 - rc.sysinit - rc.single单用户执行 - rc.multi2～5执行 - rc.local是杂项 - init系统会按照以上顺序加载运行 - rc.conf包含了相关的配置 system V - 脚本文件目录在`/etc/init.d/` - `/etc/rc{runlevel}.d`目录标识相应运行级别的目录 - 目录下的文件以S开头的是启动的服务，以K开头的是不启动的服务 - 启动标识后紧跟的数字表示启动优先级，数值越小运行越早 - 通过service命令来起停服务 - 通过chkconf来管理服务 - 通过`/etc/inittab`文件来配置相应的运行级别 以上两种init系统加载的文件本身都是一些脚本文件，通过这些脚本可以加载相应的模块或者启动需要的程序。 BSD init 具体服务的内容: #!/bin/sh . /etc/rc.subr name= "dummy" start_cmd= " ${name} _start" stop_cmd= ":" dummy_start () { echo "Nothing started." } load_rc_config $name run_rc_command " $1 " SystemV init具体服务的配置内容： #! /bin/sh ### BEGIN INIT INFO # Provides: sudo # Required-Start: $local_fs $remote_fs # Required-Stop: # X-Start-Before: rmnologin # Default-Start: 2 3 4 5 # Default-Stop: # Short-Description: Provide limited super user privileges to specific users # Description: Provide limited super user privileges to specific users. ### END INIT INFO N=/etc/init.d/ sudo set -e case " $1 " in start) # make sure privileges don't persist across reboots if [ -d /var/lib/ sudo ] then find /var/lib/ sudo -exec touch -t 198501010000 '{}' \; fi ;; stop|reload|restart|force-reload|status) ;; *) echo "Usage: $N {start|stop|restart|force-reload|status}" >& 2 exit 1 ;; esac exit 0 从语法角度来看两者没有什么区别。 早期的init系统存在若干问题，比如，无法并行任务，任务之间缺乏有效的通信机制，对进程的监控只能通过PID来进行… 现代init系统简介 systemd和upstart在这种情况下产生了，他们都是事件驱动的，不得不说的是由于systemd开始时间晚于upstart所以很多特性也借鉴了upstart，同时systemd还借鉴了Mac OS X的Launcher系统。 systemd systemd 是 Linux 下的一款系统和服务管理器，兼容 SysV 和 LSB 的启动脚本。systemd 的特性有：支持并行化任务；同时采用 socket 式与 D-Bus 总线式激活服务；按需启动守护进程（daemon）；利用 Linux 的 cgroups 监视进程；支持快照和系统恢复；维护挂载点和自动挂载点；各服务间基于依赖关系进行精密控制。 --维基百科 systemctl来管理systemd，同时也兼容service命令 所有的systemd配置在 /usr/lib/systemd 目录下,当启动用后会被链接或者拷贝到/etc/systemd目录下 upstart 使用initctl来管理upstart 配置项在 /etc/init/ 目录下 ubuntu中在 /etc/rc.conf 的最后一行通过 exec /etc/init.d/rc $RUNLEVEL 来启动相应级别系统，debina中是在 /etc/inittab 中添加 id:2:initdefault: 我印象中ubuntu的upstart的配置和centos的配置方法是有区别的，这里无法进一步验证。 systemd和upstart的使用 先分别上一段代码,sytemd： [Unit] Description=OpenSSH Daemon Wants=sshdgenkeys.service After=sshdgenkeys.service After=network.target [Service] ExecStart=/usr/bin/sshd -D ExecReload=/bin/kill -HUP $MAINPID KillMode=process Restart=always [Install] WantedBy=multi-user.target upstart: start on fedora.serial-console-available DEV=* and stopped rc RUNLEVEL=[ 2345 ] stop on runlevel [S016] instance $DEV respawn pre-start exec /sbin/securetty $DEV exec /sbin/agetty /dev/ $DEV $SPEED vt100-nav post-stop exec /sbin/initctl emit --no-wait fedora.serial-console-available DEV= $DEV SPEED= $SPEED usage 'DEV=ttySX SPEED=Y - where X is console id and Y is baud rate' 看出什么区别来了吗？ upstart和systemd是全新的方式，upstart是命令的方式，systemd则是conf形式。 systemd Unit 用来描述服务的相关信息和依赖关系 Service 对服务本身进行描述 Install 说明他的运行环境 运行级别也通过systemd来进行管理 upstart 通过 start on runlevel [012345] 和 stop on runlevel [!RUNLEVEL] 来制定具体运行级别 通过 exec 来运行相应的程序 通过 script ... end script 指令可以直接嵌入脚本 一些更加细节的配置请查阅相关手册吧。 我们可以通过 --init=xxx 内核参数来指定所使用的init系统。当然指定的这个init可以是任意的程序，你完全可以直接指定成为你想要的任何程序。 目前大部分Linux发行版本都已经采用systemd作为默认的init系统，ubuntu现在使用的是upstart系统，而Debain也在投票的结果是选择了systemd，ubuntu也宣布会接受debian的上游选择决定。 貌似现在systemd有统一Linux世界init系统的趋势。 ​ 上一篇 fedora20升级到21 下一篇 whiptail 顶 1 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548627次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) <

Recno:: 79
URL:: http://blog.csdn.net/cnsword/article/details/42459331

ParseText::
whiptail - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 whiptail 标签： terminal linux 2015-01-06 14:58 1273人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 whiptail 是替代 dialog 的实现,它基于 newt 库.而 newt 则是为了简化 ncurses 开发而产生的新的 tty 下的UI库。gui界面的对话框gtk是zenity，kde是 kdialog。 所以说一切都是新的. whiptail与dialog比较 从使用角度来看 whiptail 和 dialog 几乎是相同的. 先看一个messgebox的代码: #whiptail whiptail --title "Message Box" --msgbox "Message Info" 0 0 # dialog dialog --msgbox "Message Info" 0 0 风格上稍有差异外总体还是一致的. 现在默认情况下主要的发行版本(fedora, ubuntu, archlinux确认)默认提供的是 whiptail 和 newt ,而 dialog 和 ncurses 需要手动安装. whiptail使用技巧 这些技巧大部分在使用 dialog 时也是适用的. 获取返回值 yesno 是否的选择根据返回值来获取用户选择 whiptail --yesno "choose yes or no" 0 0 value=$? menu checklist 等 菜单的选择返回标准输出字符串 whiptail --menu "Choose Menu" 0 0 2 "Linux" "Tux" "Mac" "Darwin" 2 > data value=cat data 通过重定向获取 COLOR=$(whiptail --inputbox "What is your favorite Color?" 0 0 Blue --title "Example Dialog" 3 >& 1 1 >& 2 2 >& 3 ) echo $COLOR 修改显示大小 resize 指令会导出 LINES 和 COLUMNS 变量, 然后使用变量来调整窗口的大小 eval `resize` whiptail --title "Title" --msgbox "Message" $LINES $COLUMNS 基本参数 Box options: —msgbox —yesno —infobox —inputbox [init] —passwordbox [init] —textbox —menu [tag item] … —checklist [tag item status]… —radiolist [tag item status]… —gauge ​ 上一篇 Linux init系统 下一篇 emacs使用elpa升级插件 顶 0 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548621次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 80
URL:: http://blog.csdn.net/cnsword/article/details/42918215

ParseText::
emacs使用elpa升级插件 - 缘起 - 博客频道 - CSDN.NET 缘起 专注于Linux智能设备与云开发 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 emacs使用elpa升级插件 标签： emacs elpa 2015-01-20 15:16 2374人阅读 评论 (0) 收藏 举报 分类： linux （74） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 emacs 24以后自动支持了elpa包管理功能,直接 package-list-packages 列出插件来,然后 Ctrl-s 搜索插件,选择安装就可以.这样很是方便,本来以为这样就可以了,但是随着时间推移,插件列表中出现了大量的插件版本,并且有很多 obsolete 标识的插件.所以想到了我需要elpa来更新插件和删除插件. 更新管理插件需要进入package-list中进行操作: package-list-packages 进入列表 package-menu-mark-upgrade [U] 设置更新标识 package-menu-execute [x]执行更新操作 完成更新操作. emacs 24 以前的版本需要安装elpa package 插件来实现以上功能. 参考文档: How to Install Packages Using ELPA, MELPA, Marmalade ELPA (中文) ​ 顶 0 踩 0 我的同类文章 linux （74） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 cnsword 访问： 548625次 积分： 7787 等级： 积分：7787 排名： 第1356名 原创： 185篇 转载： 21篇 译文： 1篇 评论： 190条 微博 github github Linux开发微信 Linux开发 linux_developer Linux开发群 Linux开发 Linux开发1群[内核] Linux开发3群[应用] 山东Linux用户组SDLUG 文章搜索 文章分类 C++ (55) linux (75) 个人心情 (2) Qt (13) Python (8) golang (2) ardunio (1) Raspberry Pi (2) cloud (2) asm (1) iphone (3) android (4) 手机开发 (5) WEB (4) 编程 (12) 产品发布 (1) 开源 (2) 技术天地 (22) 最新评论 cmake与autoconf+automake的对比 waruqi : 可以试试xmake，api比cmake简洁易用。。 windows error code list kwm_tnk : 这是什么鬼 vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... vim-snippets Ultisnips的写法 u010710809 : 请问我编写了一个snippets，但是python代码没有奇效，vim是支持Python2的，并且u... OpenGL库下载 wangydong2009 : xiexie emacs 24安装ecb与cedet jxz_007 : 我看了一下内置的cedet是2.0的，按照楼上的修改了还是不行(defconst ecb-requi... emacs 24安装ecb与cedet jxz_007 : 我在安装cedet-1.1的时候配置如下，(load-file "~/.emacs.d/plugin... 博客和笔记 cnsword : @a1342830239:github page是不错，但是现在的网络环境和服务稳定性，还是在csd... fedora20升级到21 cnsword : @watrz:已修改，谢谢 fedora20升级到21 watrz : 升级指令出现拼写错误，应该是fedup ；) 阅读排行 windows error code list (25815) 实践EFI、GPT安装windows 8和archlinux双系统 (18252) c/c++资源（源码、开发工具、开发库）2014-05-09更新 (16944) 删除二叉树的节点 (16075) emacs 24安装ecb与cedet (11458) 疯狂了，Archlinux+Openbox+Rox+fbpanel我的极速系统 (10153) OpenGL库下载 (9972) cmake与autoconf+automake的对比 (9174) hadoop部署错误 (8740) 破解神州数码 (7744) 评论排行 c/c++资源（源码、开发工具、开发库）2014-05-09更新 (31) 2011的个人总结 (14) 我们需要什么样的电脑环境 (9) cmake与autoconf+automake的对比 (9) 也说说12306 (7) Scribefire发CSDN博客 (6) linux chrome运行android应用方法 (5) undefined reference to 'GetStockObject@4 linker error (4) 删除二叉树的节点 (4) emacs 24安装ecb与cedet (4) 文章存档 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年09月 (1) 2014年08月 (1) 2014年07月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年01月 (1) 2013年12月 (2) 2013年11月 (3) 2013年10月 (1) 2013年09月 (1) 2013年08月 (3) 2013年07月 (3) 2013年06月 (2) 2013年05月 (4) 2013年04月 (2) 2013年03月 (4) 2013年02月 (4) 2013年01月 (5) 2012年12月 (4) 2012年11月 (4) 2012年10月 (4) 2012年09月 (4) 2012年08月 (4) 2012年07月 (4) 2012年06月 (4) 2012年05月 (4) 2012年04月 (6) 2012年03月 (5) 2012年02月 (6) 2012年01月 (6) 2011年12月 (11) 2011年11月 (1) 2011年10月 (2) 2011年08月 (3) 2011年05月 (3) 2011年03月 (2) 2011年02月 (2) 2011年01月 (1) 2010年12月 (3) 2010年11月 (1) 2010年10月 (1) 2010年09月 (2) 2010年08月 (1) 2010年06月 (3) 2010年03月 (2) 2010年02月 (1) 2009年10月 (1) 2009年07月 (1) 2009年06月 (1) 2009年05月 (2) 2009年04月 (2) 2009年02月 (1) 2009年01月 (2) 2008年10月 (1) 2008年08月 (1) 2008年07月 (1) 2008年04月 (2) 2008年01月 (2) 2007年12月 (4) 2007年09月 (3) 2007年08月 (14) 2007年07月 (4) 2007年06月 (4) 2007年05月 (10) 2005年12月 (1) 2005年10月 (5) 2005年09月 (1) 2005年01月 (1) 2004年07月 (1)

Recno:: 81
URL:: http://blog.csdn.net/column/details/azure.html

ParseText::
专栏：Windows Azure入门教学系列 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 云计算专栏 > Windows Azure入门教学系列 分享到： 新浪微博 腾讯微博 Windows Azure入门教学系列 Windows Azure的主要目标是为开发者提供一个平台，帮助开发可运行在云服务器、数据中心、Web和PC上的应用程序。本专栏提供一系列 Windows Azure入门学习文章。 订阅 最新更新文章 Windows Azure平台简介(四)：SQL Azure以及其他服务  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。  SQL Azure是一个部署在云端的关系型数据库引擎，它支持SQL Server中绝大多数和开发有关的功能。作为一个部署在云端的数据库引擎，绝大多数的管理工作都由微软为你完成，因此你不用担心任何诸如备份，集群，等管理方面的问题，我们的SLA (Service ... sql windows 平台 sql server 数据库 dataset azurechina 2010-05-16 13:15 阅读(1301) 评论(1) Windows Azure平台简介(三)：AppFabric  公告<span style="LINE-HEIGHT: 115%; FONT-FAMI... windows 平台 service access internet authorization azurechina 2010-05-16 13:13 阅读(1036) 评论(0) Windows Azure入门教学系列 (八)：使用Windows Azure Drive  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。  本文是Windows Azure入门教学的第八篇文章。 本文将会介绍如何使用Windows Azure Drive。我们知道，由于云端的特殊... windows service asp.net encoding 开发工具 button azurechina 2010-05-16 12:56 阅读(4589) 评论(9) Windows Azure入门教学系列 (七)：使用REST API访问Storage Service  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。   本文是Windows Azure入门教学的第七篇文章。 本文将会介绍如何使用REST API来直接访问Storage Service。... windows api rest service authorization string azurechina 2010-05-16 12:53 阅读(1561) 评论(0) Windows Azure入门教学系列 (六)：使用Table Storage  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。   本文是Windows Azure入门教学的第六篇文章。 本文将会介绍如何使用Table Storage。Table Storage提供给我们一... table windows credentials 开发工具 rest .net azurechina 2010-05-15 10:33 阅读(1778) 评论(3) Windows Azure入门教学系列 (五)：使用Queue Storage  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。 本文是Windows Azure入门教学的第五篇文章。本文将会介绍如何使用Queue Storage。Queue Storage提供给我们一个云端的队列。我们可以用Queue Stora... windows server 开发工具 服务器 .net string azurechina 2010-05-15 10:32 阅读(1481) 评论(0) Windows Azure入门教学系列 (四)：使用Blob Storage  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。   本文是Windows Azure入门教学的第四篇文章。 本文将会介绍如何使用Blob Storage。Blob Storage可以看做是云端的文件系统... windows silverlight url access 开发工具 .net azurechina 2010-05-15 10:31 阅读(4943) 评论(37) Windows Azure入门教学系列 (三)：创建第一个Worker Role程序  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。    本文是Windows Azure入门教学的第三篇文章。本文将会引导大家创建一个简单的Worker Role程序，并且部署在Windows Azu... windows diagnostics service 任务 开发工具 library azurechina 2010-05-15 10:29 阅读(2596) 评论(0) Windows Azure入门教学系列 (二): 部署第一个Web Role程序  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。   本文是Windows Azure入门教学的第二篇文章。 在第一篇教学中，我们已经创建了第一个Web Role程序。在这篇教学中，我们将学习如何把该Web Role... windows web service deployment silverlight 开发工具 azurechina 2010-05-15 10:26 阅读(2935) 评论(6) Windows Azure平台简介(二)：Windows Azure  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。  计算Windows Azure的计算功能可以这样被使用：作为一个部署服务的平台用户可以在Windows Azure上部署自行开发的服务，例如使用WCF开发的Web Service，使用WF开发的工作流，使用ASP.NET开发的运行在服务器上的网... windows 平台 分布式计算 table 存储 diagnostics azurechina 2010-05-14 16:28 阅读(3374) 评论(4) Windows Azure平台简介(一)：定位与产品结构  公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。  定位首先我们来看一看Windows Azure平台在微软产品大家族中的定位，并且把它和大家所熟悉的产品作个比较。  由上图可知，无论你的目标面向的是桌面，是服务器，还是云，我们都为你们提供了统一的开发和管理模式。Windows Az... windows 产品 平台 silverlight 服务器 sql server azurechina 2010-05-14 16:27 阅读(3188) 评论(2) Windows Azure入门教学系列 (一): 创建第一个WebRole程序 公告：本博客为微软云计算中文博客的镜像博客。部分文章因为博客兼容性问题，会影响阅读体验。如遇此情况，请访问原博客。    这是一系列Windows Azure入门教学文章的第一篇。 在第一篇教学中，我们将学习如何在Visual Studio 2010中创建一个WebRole程序(C#语言)。... windows 开发工具 asp.net 2010 测试 公告 azurechina 2010-05-14 13:58 阅读(2973) 评论(0) 申请专栏 我的专栏 专栏创建者： azurechina 创建时间：2011-09-14 文章数：12篇 浏览量： 31755 次 热门文章 最新评论

Recno:: 82
URL:: http://blog.csdn.net/column/details/cciccat.html

ParseText::
专栏：CCIC CAT Azure Advice - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 云计算专栏 > CCIC CAT Azure Advice 分享到： 新浪微博 腾讯微博 CCIC CAT Azure Advice CCIC CAT - 中国云计算创新中心客户咨询团队提供给您关于Windows Azure 平台的最佳技术实践和案例分析。这些分析着重针对使用云计算, 移动互联网, 物联网，大数据的跨行业场景中的各种系统和应用程序，内容涵盖解决方案体系结构, 开发/测试, 部署时所采用的产品特性, 开发, 管理以及性能优化. 订阅 最新更新文章 如何将虚拟机迁移至新的存储账户 Joy Qiao from MSFT  Thu, Mar 12 2015 10:56 AM  Contributors: Blair Chen, Sun Wei, Liu Qing 我们在使用Azure的过程中，有时会需要把Azure虚拟机的相关VHD文件从现有的存储账户迁移到其它存储账户。比如说，当现有的存储账户下面已经存在超过了40个活跃使用的VHD文件，而由于每个V... azurechina 2015-04-08 15:44 阅读(937) 评论(0) 如何在CentOS 5.x 中安装Windows Azure Linux Agent (WALA) Qing Liu  Tue, Mar 10 2015 3:06 AM   在今天的这一个章节中，我们主要讨论在CentOs 5.x 中如何安装Windows Azure Linux Agent 2.11 (简称WALA）。如果你是需要对CentOS 6.x 发行版本进行Windows Azure 基本镜像进行配置，请参考Azure 中文官网 "创建并上传包含 Linux 操作系... azurechina 2015-04-08 15:11 阅读(1176) 评论(0) 如何在Azure Websites中配置PHP从而改变系统默认时区 Shirley_Wang  Tue, Mar 3 2015 7:29 AM Azure Website为我们提供了可高度扩展的网站部署平台。由于Website是PaaS(平台即服务)层的服务，当用户把原有的PHP网站迁移到Azure Websites时，有一些配置方法与传统的方法不同。例如，在Azure Websites中，我们访问不到运行PHP引擎的服务器，也不能访问php.in... azurechina 2015-04-08 14:57 阅读(561) 评论(0) Azure HDInsight HBase DR解决方案 Sun wei  Sat, Feb 28 2015 3:07 AM  Apache HBase是目前非常流行的NoSQL数据库，通过HDFS+Zookeep+Master+Region Server的架构避免了单点故障具有很高的可靠性。在Azure HDInsight中的HBase也提供了相应的功能，通过Azure Storage来代替HDFS并提供了3个zookeeper及在多个... azurechina 2015-04-08 14:30 阅读(474) 评论(0) Reduce对Pig作业性能的影响 Amber Zhao  Wed, Feb 25 2015 3:36 AM 很多用户在使用HDInsight的Pig功能时，发现有时很简单一个Pig Latin的relation会花费很长时间执行，当HDI使用MR框架时，由于Pig会根据具体的relation拆分成相应的Map和Reduce任务。根据Hadoop的MR框架如下特点，针对Reduce并行度的优化，会对Pig的作业有很大... azurechina 2015-04-08 13:49 阅读(435) 评论(0) 在Azure HDInsight HBase集群中使用Thrift接口 Sun wei  Wed, Feb 25 2015 2:17 AM Apache Thrift 是一种可扩展的跨语言服务接口，可以通过内置的代码生成引擎帮助创建跨语言服务类库，Apache HBase 也是通过Thrift sever与Python，Ruby等其他程序开发语言进行交互。但是默认情况下Thrift Server默认不是启动的，需要手工处理一下。在Azure HDInig... azurechina 2015-04-08 13:33 阅读(460) 评论(0) 如何配置Flash Media Live Encoder (FMLE)从而使用Azure直播服务 Azure媒体服务中的直播服务已经在中国Azure开始公共预览。通过这篇英文博客，您可以了解到直播服务对RTMP协议的支持、以及多种客户端编码器的配置。 http://azure.microsoft.com/blog/2014/09/18/azure-media-services-rtmp-support-and-live-encoders/ 。本文主要介绍Flash Media Live... azurechina 2015-02-15 21:02 阅读(636) 评论(0) 基于VPN搭建混合云架构需要考虑的网络因素 Joy Qiao from MSFT Wed, Jan 21 2015 8:44 AM 很多用户在搭建混合云架构时，会使用到微软Azure虚拟网络中的 VPN功能，来实现Azure中的虚拟网络与用户本地数据中心的网络连接。由于Azure VPN连接是基于公网Internet建立，而公网偶尔丢包的现象普遍存在，比如由于某台交换机繁忙或者物理线路不稳定等各种因素导致丢包。根据很多使用Azure... azurechina 2015-02-15 17:24 阅读(752) 评论(0) Azure HDInsight与Hadoop周边系统集成 Sunwei 9 Dec 2014 1:54 AM 传统的Hadoop系统提供给用户2个非常优秀的框架，MR计算框架和HDFS存储框架，尽管MR已经显得有些老迈而缓慢，但是HDFS还是很多应用系统的基石，很多应用都可以把HDFS作为系统的基本数据输入和输出方式。HDFS的基本特征就是数据是分布式切块存储，通过多副本冗余的方式来提供数据持久性保障，并且可以通过节点的增加来进行系统的扩容，这也是... azurechina 2015-02-13 23:22 阅读(473) 评论(0) 避免由于Windows Update自动安装安全补丁导致VM意外重启 ﻿﻿ 最近我们遇到一些客户报告他们的Windows VM被意外重启导致了其服务中断，我们查看了Event Log发现这个重启的操作时由于Windows update自动安装了安全补丁导致的重启操作。默认情况下基于Microsoft的安全最佳实践，我们建议客户定期检查并安装安全更新。通常在企业内部可以通过Windows Server Update Service(WSUS)或其他的方式集中安装经过... azurechina 2014-11-23 18:39 阅读(533) 评论(0) 如何修复在Microsoft Azure中“虚拟机防火墙打开，关闭RDP的连接端口”问题 ﻿﻿ 注：下列步骤并不一定适用所有场景，提供思路，请灵活应用 我们在使用Microsoft Azure 中Windows 虚拟机，有时会发生错误打开防火墙或一些管家软件错误的关闭了“远程桌面” ，会发生无法再次使用MSTSC.exe 连接到虚拟机的情况。 在下面的步骤中我假定无法RDP的虚拟机名字为VM01, 管理员为Azureuser, 密码为Password, Cloud Service... azurechina 2014-11-23 18:37 阅读(615) 评论(0) 如何实现Azure虚拟网络中点到站VPN的自动重连 ﻿﻿ 在Windows Azure早期版本中，用户要在某台Azure平台之外的机器与Azure平台内部的机器建立专用连接，可以借助Azure Connect这个功能。当前的Azure版本，已经没有Azure Connect功能，取而代之的是Azure P2S (Point-to-Site) VPN. 新的功能P2S VPN较之以前提高了传输速率。但也有一点不足：之前的Azure Connec... azurechina 2014-11-23 18:34 阅读(665) 评论(0) 关于Azure Auto Scale的高级属性配置 Auto Sacle是一种自动化管理云服务负载的功能，系统可以根据预先制定的规则，在满足条件的情况下对计算实例的数量进行增减从而可以用来优化使用Azure的计算资源，可以适用于Cloud Service、VM、WebSite以及Mobile Service。 Auto Scale有3种主要时间类型的配置，固定时间、周期性时间及无时间配置。每个配置需要指定最小、最大和默认实例数。 固... azurechina 2014-11-23 18:32 阅读(548) 评论(0) 在Azure中使用Load Runner测试TCP最大并发连接数 对于Azure中的每一台虚机，它所能支持的TCP最大并发连接数是50万(参考微软官网: http://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/#networkinglimits)。在绝大部分情况下，应用程序不会触及这一限制，从而感觉不到这个限制的存在。但是，在一些极端情... azurechina 2014-11-23 18:28 阅读(581) 评论(0) Windows Azure案例分析: 选择虚拟机或云服务？ 作者 王枫 发布于 2013年6月27日... azurechina 2014-11-23 18:09 阅读(620) 评论(0) Windows Server基础架构云参考架构：硬件之上的设计 作者 王枫 发布于 2014年1月27日... azurechina 2014-11-23 17:40 阅读(489) 评论(0) 浅析基于微软SQL Server 2012 Parallel Data Warehouse的大数据解决方案 作者 王枫 发布于 2014年2月19日         综述... azurechina 2014-11-23 17:19 阅读(493) 评论(0) 在Windows Azure公有云环境部署企业应用 作者 王枫 发布于 2014年4月5日         企业内部应用转换为在线服务 Windows Azure已经成为众多IT服务提供商们热议的话题，其中，有的认为只有提供互连网用户服务的应用才适合放在公有云环境内运行。然而，事实上，在当前Windows Azure环境上，有许多企业也把企业内部的应用放在公有云上，它们包括： Web/Brower架构。Web服务器直接放在Win... azurechina 2014-11-23 16:56 阅读(453) 评论(0) 通过Microsoft Azure服务设计网络架构的经验分享 作者 王枫 发布于 2014年4月8日 本文从产品设计和架构角度分享了Microsoft Azure网络服务方面的使用经验，希望你在阅读本文之后能够了解这些服务之间，从而更好地设计你的架构。 Microsoft Azure的网络架构特别针对企业私有云和混合云进行了设计，其中包含三个常用的服务： 虚拟网络（Virtual Network）：连接本地网络与云端基础设施流量管理器（... azurechina 2014-11-23 16:39 阅读(433) 评论(0) 如何在Azure环境里做好信息传递可扩展性经验分享 综述... azurechina 2014-11-23 16:17 阅读(388) 评论(0) 22条数据 共2页 1 2 下一页 尾页 申请专栏 我的专栏 专栏创建者： azurechina 创建时间：2014-11-17 文章数：22篇 浏览量： 12530 次 热门文章 最新评论

Recno:: 83
URL:: http://blog.csdn.net/column/details/msopentech-azure.html

ParseText::
专栏：Windows Azure 开源解决方案 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 云计算专栏 > Windows Azure 开源解决方案 分享到： 新浪微博 腾讯微博 Windows Azure 开源解决方案 Windows Azure是个开放的平台 – 支持各类协议、标准、语言、开源软件包、开发工具、服务器操作系统以及客户端设备。微软开放技术与Azure的工程师团队以及各大开源社区、标准化机构紧密合作为客户提供“业界最佳”工具和技术. 订阅 最新更新文章 禅道，然之和蝉知入驻VM Depot Posted on 四月 21, 2015 by 陈阳 近日, 易软天创与微软开放技术合作，在虚拟镜像中国站点vmdepot.msopentech.cn上成功部署易软天创的集成管理环境，为希望快速基于微软Azure云平台体验易软天创开源管理方案的朋友们提供了方便。该集成环境内置了禅道项目管理软件、蝉知企业门户系统和然之协同管理系统三个产品，可以作为一个集成环境来体验开源一体化管理解决方案... azurechina 2015-04-24 09:41 阅读(632) 评论(0) 微软公有云事件中心（Azure Event Hubs）在开放物联网大会（OIOT）啼声初试 ﻿﻿ 发布于 2014-12-29 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/tedliu/" rel="author">刘 天栋 2014年12月18日，InfoQ在京召开开放物联网大会（Open IOT Conference），微软开放技术（中国）资深项目经理陈岭在大会中针对“物联网基础架构... azurechina 2015-01-06 11:43 阅读(878) 评论(0) VM Depot 分布式计算框架主题应用精选 ﻿﻿ 发布于 2014-12-24 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 在前几期为各位介绍了大数据应用主题以及开发运营主题的各类镜像后，这次我们精选了 VM Depot 站点中分布式计算相关主题的虚拟机镜像和大家一起分享。这些技术框架全部来自国... azurechina 2015-01-06 11:25 阅读(528) 评论(0) 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 ﻿﻿ 发布于 2014-12-11 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/emchen/" target="_blank" rel="author" style="color:rgb(244,114,208)">陈阳 FreeBSD 基础镜像现已登陆中国的 VM Depot！ 对于青睐 BSD 而非... azurechina 2014-12-16 10:17 阅读(978) 评论(1) Docker在云环境中的应用实践初探：优势、局限性与效能评测 作者 商之狄 发布于 2014年11月10日 |... azurechina 2014-11-17 14:37 阅读(523) 评论(0) 微软开放技术（中国）携 CKAN 和 OData 技术引入基于 Azure 的开放数据平台 ﻿﻿ 发布于 2014-11-10 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/emchen/" target="_blank" rel="author" style="color:rgb(244,114,208)">陈阳... azurechina 2014-11-13 14:14 阅读(719) 评论(0) 新一批电子商务解决方案和企业管理应用加入 VM Depot 中国站点 ﻿﻿ 新一批电子商务解决方案和企业管理应用加入 VM Depot 中国站点。... azurechina 2014-10-25 22:29 阅读(684) 评论(0) 使用 Puppet 在 Windows Azure 中配备 Linux 和 Windows 环境 ﻿﻿ 发布于 2013-12-11 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/rogardle/" rel="author">Ross Gardler 微软开放技术有限公司 (MS Open Tech) 很高兴地宣布发行新的 Windows Azure Puppet 模块。通过这个模块，可以使用流行... azurechina 2014-10-25 22:16 阅读(614) 评论(0) 微软开放技术发布针对 Mac 和 Linux 的更新版 Azure Node.JS SDK 和命令行工具 ﻿﻿ verbose: Updating Network Configuration info: network vnet create command OK 想了解更多信息，请到我们的wiki 网页查阅如何管理 Windows Azure 虚拟网络的完整命令列表。 2.虚拟机停止账单功能 第一版的 Windows Azure 的基础结构服务中，Windows Azure 为每个停止的虚... azurechina 2014-10-25 22:09 阅读(572) 评论(0) 微软开放技术开发了适用于 Windows Azure 移动服务的开源 Android SDK ﻿﻿ 发布于 2014-02-10 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳... azurechina 2014-10-25 22:00 阅读(546) 评论(0) 微软开放技术发布开源 Jenkins 插件以将 Windows Azure Blob 服务用的开作存储库 ﻿﻿ 发布于 2014-02-10 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 持续集成 (CI) 的历史源远流长， 其宗旨在于软件团队在敏捷环境中不断将他们的工作整合为持续构建。管理 CI 进程的工具已存在一段时间。过去几年中，鉴于 CI 管理进程变... azurechina 2014-10-25 21:38 阅读(582) 评论(0) VM Depot 登陆中国! ﻿﻿ 发布于 2014-03-24 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 今天我很高兴地向大家宣布，来自微软开放技术（上海）有限公司的首个产品 VM Depot 正式在中国发布！VM Depot是为Windows Azure打造且由社区用... azurechina 2014-10-25 21:26 阅读(590) 评论(0) VM Depot 喜迎中国本土开源镜像! ﻿﻿ 发布于 2014-04-07 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 VM Depot 登陆中国之际，我非常高兴地告诉大家，一批各位耳熟能详的中国本地开源镜像已同时上线！得益于开源社区的大力支持，Ubuntu 麒麟13.10，PHPWind ... azurechina 2014-10-25 21:19 阅读(470) 评论(0) VM Depot 助您使用本地开源软件架设开发 Web 站点 ﻿﻿ 发布于 2014-04-25 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/shlan/" rel="author">云 浪生 使用 VM Depot 中的镜像在 Azure 上创建、开发、部署网站与应用不仅方便快捷而且省时省力！感谢开源社区的大力支持，我们的VM Depot 吸引了一批源自中国本... azurechina 2014-10-25 21:14 阅读(468) 评论(0) VM Depot 新功能：直接通过 Windows Azure 管理门户部署虚拟机 ﻿﻿ 发布于 2014-05-09 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 想要尝试 VM Depot 上数以百计的各类开源虚拟机，却因为复杂的命令行操作而感到烦恼？微软开放技术想您所想，及时推出 VM Depot 最新功能! 现在您可以直接使用 ... azurechina 2014-10-25 21:11 阅读(518) 评论(0) 教程：使用 MongoDB、WCF、OData 和 PowerBI 构建 Azure 上的商业智能解决方案 ﻿﻿ 发布于 2014-05-20 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 目录 概述前提条件创建 Windows Server 2012 Datacenter 虚拟机通过 WCF（Windows Communication Foundati... azurechina 2014-10-23 21:49 阅读(993) 评论(0) 面向中国 Azure 开发者发布开源解决方案指南 ﻿﻿ 发布于 2014-05-23 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/tedliu/" rel="author">刘 天栋 Azure 是一个开放、灵活的云平台，可支持大量且不断增长的开源应用程序、框架和语言。微软及微软开放技术通过与全球及中国本地的开源社区不懈地合作，将 Azure 的开放... azurechina 2014-10-23 21:35 阅读(440) 评论(0) Windows Azure 上的 Symfony，适用于 PHP 开发者的强大组合 ﻿﻿ 发布于 2014-06-13 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/leon/" rel="author">陈 忠岳 Symfony 是针对 PHP 开发者的流行开源 Web 应用框架。现在，您可以更轻松地在 Windows Azure 上使用它，这都归功于 Benjamin Eberle... azurechina 2014-10-23 21:30 阅读(476) 评论(0) VM Depot 镜像新增系列II – 学习管理系统，内容管理系统以及平台管理工具 ﻿﻿ 发布于 2014-06-23 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/tedliu/" rel="author">刘 天栋 继上周企业管理软件和电子商务镜像的加盟之后，我们看到又有一批内容管理解决方案（CMS），学习管理解决方案（LMS）以及平台管理工具 (如 Open NMS, phpMy... azurechina 2014-10-23 21:18 阅读(462) 评论(0) VM Depot 镜像新增系列III – 社交媒体，内容管理 与 项目协同系统 ﻿﻿ 发布于 2014-06-30 作者 " class="url fn n" href="http://cn.msopentech.com/blog/author/tedliu/" rel="author">刘 天栋... azurechina 2014-10-23 21:04 阅读(488) 评论(0) 28条数据 共2页 1 2 下一页 尾页 申请专栏 我的专栏 专栏创建者： azurechina 创建时间：2014-08-28 文章数：29篇 浏览量： 15702 次 热门文章 最新评论

Recno:: 84
URL:: http://blog.csdn.net/foruok/article/details/50201563

ParseText::
假如你想成为全栈工程师… - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 假如你想成为全栈工程师… 标签： javascript 工程师 软件开发 全栈工程师 2015-12-07 07:35 9080人阅读 评论 (14) 收藏 举报 分类： 随笔 （68） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 让我来发挥一下剪报君的特长，下面是百度百科对[ 全栈工程师 ]的说明： 全栈工程师，也叫全端工程师，英文Full Stack developer，是指掌握多种技能，并能利用多种技能独立完成产品的人。 上面的定义，基本上已经比较直白了，我们再举两个例子就更明白了。 假如你是一个Web开发者，如果你既能做前端（需要熟悉HTML、CSS、JavaScript、H5以及Bootstrap、EasyUI等各种前端框架），又能做后端（需要熟悉Java或ASP.net或php或Node.js或Go，选项太多就不一一列举了），可以独自一个人完成一个类似电子商务网站的产品的开发，那你就算是全栈工程师了。 假如你是一个App开发者，既能开发Android应用（需要熟悉Java和Android框架），又能开发iOS应用（需要熟悉Objective-C或Swift以及Cocoa for iOS），又可以开发应用需要的后台（需要熟悉Node.js或Java或Go或……），总之你可以独自一个人开发出一个覆盖Android和iOS的且有业务后台的App，那你也就算是全栈工程师了。 嗯，现在估计我们真的明白[ 全栈工程师 ]是什么鬼了。那让我们来看看，假如你想成为全栈工程师，都该了解些什么……比如怎么成为全栈工程师，比如全栈的好与坏，比如选择哪条技术栈来贯通…… 全栈ABC 关于全栈工程师，有一些周边是你必须了解的。 对自己产品的渴望 注意，我放在第一位的，不是对技术的渴望，而是，[ 对自己产品的渴望 ]。就像一个男人，渴望要一个自己的孩子，99%会选择走“谈对象、结婚、做爱、生娃、养娃”这样一条路。作为一个工程师，如果你对产品的渴望就像那些思子若狂见了人家孩子就想抱走的男人或女人，那你就可能会愿意成为全栈工程师。 一个真正的全栈工程师，会从生活中发现问题，洞察需求，设计解决方案并迫不及待的实现产品。而为了实现产品，他愿意去学习任何领域的知识和技能。注意，他们学习某个领域的知识和技能，并不是为了成为那个领域的专家，而是为了完成自己的目标。他们视野开阔心存高远，不会拘泥于技术，假如挥一挥手，就有产品、设计、开发蜂拥而至为他们开发想要的产品，那他们丝毫也不介意扔掉所有的技术。换句话说，只有在一个人既对产品有迫切的渴望又没人帮他实现时，他才会走上全栈之路。所以，全栈，只是实现目标过程中的副产品，目标，才是首要的。 时势造全栈 前面我们说了，当一个人渴望自己的产品又没人帮他实现时，他如果不能放下灼心的渴望，就可能走上全栈之路。这其实是形势逼迫。那类似的还有另外一种情况，也可以逼着一个人成为全栈工程师。那就是：[ 加入一个缺人的创业型公司 ]。 大公司人员充沛，一个萝卜一个坑，个个都是螺丝钉，让你一个人搞定所有事情的概率很小。而小公司、创业型公司则不同，他们往往是人员极度匮乏，一个人得顶几个人用。你搞前端的，后端没人你也得顶上。你搞Android开发的，iOS没人你也得顶上，后台没人说不得也得顶上。就这么着，你很快就全栈了。所以，有一种全栈工程师，是被别人养成的。 思维方式和学习能力 有的人，拿刀逼着也成不了全栈工程师。有的人，把他扔到没电没网络的荒漠，他也可以走上全栈之路。有的人…… 这其间的差别，就是思维方式和学习能力。 从思维上讲，要想全栈，你就不能给自己设限。把自己定位在前端工程师或iOS工程师上，任尔东西南北风，咬定青山不放松。这样是不行的。应该心随好猫意纵天高或者鹤舞白沙我心飞翔，总之因时而变、因势而变，需要用什么就学什么，服务器没人搞那我来搞，Android App没人写那我来写……这样打破了自我设限，就具备了成为全栈工程师的基础。 除了这种自我设限的思维模式需要破除，还有一种定势要破，那就是精通每一项技术。对于热爱技术的人来讲，搞精每一项技术是很强的诱惑啊，简直比门口走过的妙龄女郎的吸引力还大。这种思想要破除，因为把门门技术都精通必然会耗时很长，影响你实现自己的产品，所以，只要你学到的那部分能够顺利帮你实现目标，那就可以挥一挥衣袖，继续前行了。 一旦思维上破除了定势，具备了成为全栈工程师的基础，如果你有很强的自我学习能力，那就真的可以顺利走上全栈之路了。而假如你学习能力稍差，面对新技术总是寻寻觅觅寻不到入门的路，那恐怕也把自己逼不成全栈，或者得逼到白头。 全栈的好与坏 全栈工程师的好处就是涉猎技术很广，能够很快运用他所了解的技术开发出产品原型。所以，很多全栈工程师后来走上了创业之路，成了创业者；或者进了创业公司，成了技术合伙人。他们视野开阔，思维活跃，对技术和产品都很敏感，是创业期不可或缺的核心。 然而，正因为全栈工程师的技术是横向发展的，广博有余而精深不足，所以你提到什么，他都能侃上半天，但你要问一些基础的知识点，他可能答不上来。假如全栈工程师不去创业或不加入创业型公司，而是应聘某一个技术方向的岗位，那在面试时就会比较吃亏，因为他用到的大部分技术，细问起来，别人可能都会觉得有了解但不深入。所以，这可能会影响他的求职。不过，如果先一专再多能，然后有意识的选择目标职业，就可以避免这种情况。 选择哪条技术栈 额，其实，对于全栈工程师来讲，往往是没得选择的。比如你做App，你要全栈，你基本上就很少选择余地，Java、Objective-C都是必须的。所以，很多时候是产品和形势选择你成为全栈，是做着做着成了全栈。而不是为了全栈而全栈，假如是为了全栈而全栈，那你是可以选的哦。比如选择MEAN（MongoDB+Express+AngularJS+Node.js），比如J2SE + SSH + Android + Objective-C + Cocoa…… 假如你的目标就是成为全栈工程师，你会发现，哇哦，好多东西要学嗳，吓死人啦。那假如你要做一个产品，比如因为你酷爱炒股，你要做一个简单的股票App：跟踪自选股行情，支持自定义提醒，界面要清爽干净，平台呢要支持Android、iOS和Web。那你在做这样产品的过程中，就会被逼成全栈而不自觉。因为，做你喜欢的事儿，是不会觉得累的。 最后，娱乐一下，送给全栈er一个来自Twitter的段子 ： 刚来这家公司面试的时候，老板语重心长的对我说：“虽然工资不高， 但是你可以在这里获得快速的成长，这对做IT的人来说是最重要的。” 现在，两年过去了，老板没有骗我， 我看起来已经像是60岁的人了。 　　——From. Scswga（ https://twitter.com/Scswga/status/548684273717215232 ） 更多精彩文章，参看“ 漫谈程序员 ”专栏。 困惑、成长、发展、增值、新知，尽在微信订阅号“程序视界”： 上一篇 写一本技术书能赚多少钱 下一篇 35岁程序员的独家面试经历 顶 7 踩 0 我的同类文章 随笔 （68） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1820000次 积分： 20930 等级： 积分：20930 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3193条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911300 Qt Quick简明教程 文章：30篇 阅读：192477 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35167 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022) 漫谈程序员系列：看看你离优秀有多远 (25604) 月薪3万的程序员都避开了哪些坑 (23708) 评论排行 漫谈程序员系列：一个老程序员的2014年终总结 (137) 漫谈程序员系列：一张图道尽程序员的出路 (84) 月薪3万的程序员都避开了哪些坑 (83) 程序员保值的4个秘密 (79) 漫谈程序员系列：咦，你也在混日子啊 (75) 漫谈程序员系列：看看你离优秀有多远 (74) 漫谈程序员系列：怎样成为技术达人 (74) 程序员跳槽神级攻略 (64) 大龄程序员的未来在何方 (60) 漫谈程序员系列：请区别对待女程序员 (59)

Recno:: 85
URL:: http://blog.csdn.net/kkdelta/article/details/42173781

ParseText::
onload事件和js的defer设置 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 onload事件和js的defer设置 标签： web js onload defer 并行 2014-12-26 16:56 1063人阅读 评论 (0) 收藏 举报 分类： WEBUI （30） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 onload事件在html文档中所有的节点都下载完成后执行，包括js,css,图片的资源完全下载后才执行。 如果js 设置了defer之后,js的解析执行在浏览器生成了html文档后执行，不包括图片的资源下载 如果js没有设置defer，将一个js放在head加载，会阻塞后面的内容加载。 如下面的例子 如果将defer=true去掉，直到x1.jscript和x2.jscript下载完成后，后面的alert('inline script');才会执行。 alert('win onload');会在图片加载完成后才会执行。 因为浏览器对资源加载的并行下载有限制,如果js和图片的资源是同一个host,js的加载会阻塞图片的加载，只有等js下载完成后才开始下载图片。 在firefox中对同一种资源的并行下载是5个。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> <title>test defer and onload</title> <script type="text/javascript" src="http://localhost:9080/temp/x1.jscript?delaySec=10" defer=true></script> <script type="text/javascript" src="http://localhost:9080/temp/x2.jscript?delaySec=5" defer=true></script> <script type=text/javascript charset=utf-8 > alert('inline script'); window.onload = function(){ alert('win onload'); } </script> </head> <body> <img src="http://localhost:9080/temp/test.img?delaySec=10&x=1" alt="long loading"> <img src="http://localhost:9080/temp/test.img?delaySec=10&x=2" alt="long loading"> <img src="http://localhost:9080/temp/test.img?delaySec=10&x=3" alt="long loading"> <img src="http://localhost:9080/temp/test.img?delaySec=10&x=4" alt="long loading"> <img src="http://localhost:9080/temp/test.img?delaySec=10&x=5" alt="long loading"> </body> </html> .jscript通过一个java servlet来实现，模拟一个需要一个比较长时间的javascript文件下载 public class JSProcessor extends HttpServlet { protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { try { System.out.println("begin processing"); String delaySec = req.getParameter("delaySec"); Thread.currentThread().sleep(Integer.parseInt(delaySec)*1000); PrintWriter writer = resp.getWriter(); writer.write("alert('done,delay + " + delaySec + "seconds')"); System.out.println("end processing"); } catch (InterruptedException e) { // TODO Auto-generated catch block e.printStackTrace(); } } protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { doGet(req, resp); } } .img也是通过一个java servlet来实现，模拟一个需要一个比较长时间的图片下载 public class ImageProcessor extends HttpServlet { protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { try { resp.setContentType("image/jpeg;charset=GB2312"); System.out.println("begin processing"); String delaySec = req.getParameter("delaySec"); Thread.currentThread().sleep(Integer.parseInt(delaySec)*1000); String imageFile = getServletContext().getRealPath("/blog_logo.jpg"); System.out.println(imageFile); InputStream imageIn = new FileInputStream(new File(imageFile)); JPEGImageDecoder decoder = JPEGCodec.createJPEGDecoder(imageIn); BufferedImage image = decoder.decodeAsBufferedImage(); JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(resp.getOutputStream()); encoder.encode(image); imageIn.close(); System.out.println("end processing"); } catch (Exception e) { // TODO Auto-generated catch block e.printStackTrace(); } } protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { doGet(req, resp); } } 上一篇 SSH免密码登录设置 下一篇 如何打造成功的数据归档策略 顶 1 踩 0 我的同类文章 WEBUI （30） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180827次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 86
URL:: http://blog.csdn.net/leftfist/article/details/50396541

ParseText::
条件编译符号与发布 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 条件编译符号与发布 标签： 条件编译符 2015-12-24 19:52 349人阅读 评论 (0) 收藏 举报 分类： .NET （209） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 一、条件编译符号 条件编译的作用就是可以在代码中设置一些使用场景。最常见的就是假如是DEBUG，就怎样怎样；否则又如何如何。 如果要添加一些除了DEBUG、TRACE之类的场景，条件，可以自己定义。定义的方法是：右击项目，属性，在生成页签中，输入自定义的条件编译符号。 好比说，现在我们做的项目早早就把登录模块放上去了，搞到经常登录，烦死了，浪费不少时间。那么，我可以设置一个条件编译符号，比方说NoLogin，然后在代码里： # if NoLogin //伪造一个登录信息，不登录 。。。 # else //乖乖地登录 。。。 # endif 这样只要我这个NoLogin条件编译符号成立，存在，则可不必登录矣。 条件编译符号保存在项目文件里。 二、发布 WEB项目里的web.config如果展开，将会发现存在着 web.debug.config、web.release.config。这就是发布的时候，因应不同的编译选项的。比如说，你选了“Release”，那么系统将会用web.release.config里的配置覆盖web.config里的，发布出来的web.config将是覆盖后的版本。 注意这些供发布替换的config，有一些格式要求，不过里面有详细的说明，照写可也。 如果除了debug，release，还有其他发布要求的话，也可以自行添加。方法是： 点VS菜单栏的生成，选配置管理器，新建即可。比如说，我新建了一个名为 NoLogin 的配置方案，那么系统会自动为你添加一个web.NoLogin.config 三、条件编译符 与 发布的关系 似乎没有啥关系。条件编译符 在 web.config 中是不支持的。条件编译符只对代码起作。不过看上去，选debug、release方案发布出来的代码，自定义的那些条件编译符都不起作用了。可能debug,release是系统保留方案，会自动清除自定义的条件编译符。算了，不去试了。 上一篇 操作系统学习笔记：I/O输入系统 顶 0 踩 0 我的同类文章 .NET （209） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042252次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 87
URL:: http://blog.csdn.net/qingrun/article/details/48709383

ParseText::
关于中部城市人才外流问题的思考 - 青润心情 - 博客频道 - CSDN.NET 青润心情 苦寒沉寂无声事，落花缤纷没落熵。青风借问今何在，润言万语皆成觞。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 关于中部城市人才外流问题的思考 2015-09-24 12:17 817人阅读 评论 (0) 收藏 举报 分类： 企业管理 （152） 作者同类文章 X 软件人生 （161） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 今天看到那个关于苏北问题的帖子，作为一个长期外地漂泊的人，随便写一点。 我中学是新乡铁一中，初高中同一学校，但我们班是部分被骗的，因为大都是铁路子弟，自然容易被铁路系统骗，算铁路系统保送班。 班主任一开始大家以为很严厉，后来都失望了，其实就是个为个人利益而来的主，甚至包括她曾经最得意的几个学生都看不上她，因为中间的琐事太多。 全班从最开始的47人，高一就变成56人，到了高三毕业前已经拓展到了73人。 目前在新乡市工作的不到10个人，在河南省内的还有6个，其他人全部都在外地，甚至国外。 其实不是不想回去，刚毕业的时候是回去无法生活，现在是回去已经找不到工作，自己创业又没有合适的土壤。 我今年去了趟银川，环境真是不一般的好，河南确实没法比，至少新乡，焦作，郑州，洛阳都比不了。我对我同学说，如果我老家是宁夏的，我也不出去，至少有个环境，至少活得安心，舒服，从吃住行来看都是很舒服的。 但这些在河南，都不具备。 前面一年在襄阳带团队，就评价了一下襄阳市政府的短视行为： 襄阳想要拓展东津新区，可是，市区房子都盖到30多层以上（不讨论开发商行为，赚钱行为，这个我都清楚，但是对于政府来说，城市规划决定了城市的未来），一共两百多万人的小城市，最后弄得市中心无比拥挤，居然堵车堵到死的状态。所谓的东津新区自然没有人愿意去。 我就对当地的同事说，一个中小城市要发展，首先房地产必须控制楼层，限制7层的高度，人自然就分流出去了，也绝对不会拥堵了，因为上下班的路线自然就分散了。所谓东津新区的房子也会有人买了，而现在，市区的房子都卖不完，谁还可能去东津新区那个荒地上买房子，去工作。开发商也不愿意去那边盖房子，因为卖不上价格。 现在只有华为一个部门在那边要了块地，很大，可是，周边都是荒草，据说电都是拖了一年多才通上。 市长因为没有得到省里的升迁，居然辞职不干了，后来又给了一个同级别的某地市长位置就去了。唉，一帮官迷，怎么能给老百姓带来幸福。 襄阳做为湖北省的省域副中心城市，居然这个水平，也实在是贻笑大方了。 这就是中部中小城市的一个典型形态。 而襄阳比起河南的各个城市还有一个优势，就是有水路，一条汉江增色很多。 换句话说，河南的各个城市都处于比襄阳还要尴尬的处境上。 想让人才回去，没有环境是不行的，想要产业上来，没有人才是不行的。 从历史发展的角度看，河南的没落属于正常的情况，因为这是交通运输方式改变的结果。 明清以前是因为海运不发达，所以，内陆运输为主力，自然逐鹿中原才是最便利的，最容易对全国产生控制核辐射的，所以，那个时代，内陆中心城市就容易成为首都。 当海运发展起来以后，沿海的发展就会加快而内陆的没落是可预见的结果。 但是，将来还有机会，也就是随着航空技术的变革带来的均衡发展机会，只不过，未必是我们这一代人能看到的了。 就目前而言，要想留住人，不仅仅是靠乡情，而更多的应该是为人的发展和整体做考虑，这恰恰是目前政府所欠缺的，所以，有能力的人只能走，只能选择离开。 不是想要走，不是想要离开，所有的背井离乡都是被迫的，上面的内容同样适用于所有中部和西部的内陆城市。 不小心打多了，不写了，先这样吧。 上一篇 [企业管理]到了移动互联网泡沫破裂的时候了 下一篇 [技术讨论]又看到99%的言辞 顶 1 踩 0 我的同类文章 企业管理 （152） 软件人生 （161） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qingrun 访问： 1325276次 积分： 19874 等级： 积分：19874 排名： 第209名 原创： 443篇 转载： 12篇 译文： 0篇 评论： 2723条 文章搜索 文章分类 iTSP工作组 (17) 企业管理 (153) 全程建模 (150) 建议 (32) 技术讨论 (158) 电子商务 (7) 软件人生 (162) 软件工程类 (139) 绩效管理 (6) 度量 (5) 文章存档 2015年12月 (2) 2015年11月 (3) 2015年10月 (1) 2015年09月 (3) 2015年08月 (5) 2015年07月 (1) 2015年06月 (2) 2015年05月 (2) 2015年02月 (1) 2015年01月 (1) 2014年10月 (2) 2014年09月 (1) 2014年08月 (2) 2014年07月 (5) 2014年06月 (1) 2013年11月 (2) 2013年09月 (3) 2013年08月 (1) 2013年06月 (2) 2013年05月 (1) 2013年04月 (1) 2013年03月 (5) 2013年02月 (5) 2013年01月 (5) 2012年12月 (3) 2012年11月 (10) 2012年10月 (2) 2012年09月 (4) 2012年07月 (2) 2012年06月 (2) 2012年05月 (1) 2012年04月 (2) 2012年03月 (1) 2012年02月 (3) 2012年01月 (1) 2011年12月 (1) 2011年11月 (1) 2011年09月 (3) 2011年08月 (3) 2011年07月 (1) 2011年06月 (3) 2011年05月 (1) 2011年04月 (2) 2011年03月 (5) 2011年02月 (2) 2011年01月 (7) 2010年12月 (5) 2010年11月 (7) 2010年10月 (7) 2010年09月 (2) 2010年08月 (5) 2010年07月 (5) 2010年06月 (2) 2010年05月 (4) 2010年04月 (3) 2010年03月 (5) 2010年02月 (3) 2010年01月 (6) 2009年12月 (5) 2009年11月 (5) 2009年10月 (3) 2009年09月 (7) 2009年08月 (1) 2009年07月 (4) 2009年06月 (3) 2009年05月 (1) 2009年04月 (5) 2009年03月 (3) 2009年02月 (1) 2009年01月 (3) 2008年12月 (3) 2008年11月 (8) 2008年10月 (3) 2008年09月 (3) 2008年08月 (3) 2008年07月 (7) 2008年06月 (5) 2008年05月 (8) 2008年04月 (7) 2008年03月 (5) 2008年02月 (2) 2008年01月 (2) 2007年12月 (3) 2007年11月 (2) 2007年10月 (2) 2007年09月 (1) 2007年08月 (1) 2007年07月 (4) 2007年06月 (10) 2007年05月 (9) 2007年04月 (6) 2007年03月 (3) 2007年02月 (2) 2007年01月 (2) 2006年12月 (7) 2006年11月 (5) 2006年10月 (5) 2006年09月 (4) 2006年08月 (7) 2006年07月 (5) 2006年06月 (1) 2006年05月 (6) 2006年04月 (5) 2006年03月 (3) 2006年01月 (1) 2005年12月 (8) 2005年11月 (3) 2005年08月 (1) 2005年07月 (1) 2005年06月 (1) 2005年05月 (6) 2005年04月 (2) 2005年03月 (3) 2005年02月 (2) 2005年01月 (9) 2004年12月 (7) 2004年11月 (18) 2004年10月 (24) 2004年09月 (1) 2004年07月 (4) 2004年06月 (1) 2004年04月 (1) 2001年05月 (1) 阅读排行 [软件人生]给一个刚毕业学生朋友的建议 (25269) [软件人生]什么是程序员 (19003) [软件人生]大学生应该如何度过四年 (18332) [软件人生]程序员与语言选择——给一个刚毕业的大学生工作方向的分析对话 (16031) [软件人生]外包兼职与绝路 (13709) [技术讨论]看了73篇极限编程论文后的感觉和一点总结 (13235) [建模技术]精通它，才能毁灭它！——谈Uml与科学和工程的关系。 (12223) [软件人生]不知发展前景时该做什么 (11863) [软件人生]毕业设计做不出来，学校勒令退学——谈谈问问题和当前教育的一个小点 (11753) [企业管理]警示！软件行业收入不断降低的一个原因——初学者的问题与不良的资本家企图，一同在侵蚀着我们的生命！ (11489) 评论排行 [软件人生]什么是程序员 (118) [软件人生]外包兼职与绝路 (103) [软件人生]大学生应该如何度过四年 (103) [技术讨论]程序员的基本技能和素质 (97) [软件人生]不知发展前景时该做什么 (72) [软件人生]毕业设计做不出来，学校勒令退学——谈谈问问题和当前教育的一个小点 (67) [软件人生]外包小项目如何承接防止欺骗 (62) [软件工程]我对软件工程领域划分的认识之一 (61) [软件人生]学生选择项目与学生和程序员的差异对话 (52) [技术讨论]引入第三方组件，好还是坏！ (51) 最新评论 [软件人生]关于劳动关系中如何保护自己 qingrun : @bobo90326:我是2013年7月被忽悠进入软通动力信息技术（集团）有限公司，2014年4月转... [软件人生]关于劳动关系中如何保护自己 bobo90326 : 你是不是北京分公司的，我之前在成都分公司工作过，刚开始去的时候，报销的确是拖了几个月，不过最后还是发... [软件人生]关于劳动关系中如何保护自己 zdc524 : 这种事一般是很难得，报销问题在很多公司都有 [技术讨论]京东产品业务逻辑错误分析 qingrun : @u010694337:京东的产品人员缺少社会经验，从招聘相关职位的要求可以看出来，这点看上去是阿里... [技术讨论]京东产品业务逻辑错误分析 u010694337 : 之前京东买东西也遇到这样的逻辑问题，最后我退货，再买，损失京东承担，不知道亚马逊是不是这样 浅谈信息无障碍人才的培养 qt1982 : 问题很尖锐，很值得思考。 [软件人生]给一个刚毕业学生朋友的建议 qing_gee : 说的挺不错的，哈哈，感觉有点中招的感觉， [技术讨论]都用敏捷么，为什么要用，怎样才对？ qing_gee : 如果看了Steve yegge的《敏捷好，敏捷坏》，就知道所谓的敏捷不过是一种掩人耳目的高调子，这种... [软件人生]各大学的软件工程硕士 qingrun : @Alan_Zhang:管不了那么多，也不了解那么多，只能说自己看到的和经历的。 [软件人生]各大学的软件工程硕士 Alan_Zhang : 现在什么硕士都一样混.学历都有水分.不能完全说软工. iTSP加盟组织 软件共创组织 雕塑网站——青润曾为其做规划，现规划文档已经发布 技术站点 InfoQ中文站 青润制造 青润空间 《软件工程之全程建模》第二版china-pub链接 青润意愿 青润风度 青润风格 青润风雅 青润自在 楚凡科技——全程建模方法论注入UML工具的场所 青云珠语——最后33本《软件工程之全程建模实现》第一版购买地址 《软件工程之全程建模》第二版当当网链接 《软件工程之全程建模》第二版京东购买链接 优秀个人空间 demo也好@virushuo 测试时代——贺忻的blog

Recno:: 88
URL:: http://blog.csdn.net/u010850027/article/details/47207855

ParseText::
深入浅出Tabhost+简单入门Demo - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 深入浅出Tabhost+简单入门Demo 2015-11-16 08:04 846人阅读 评论 (24) 收藏 举报 分类： --------【项目实战】 （41） 作者同类文章 X --------【Android】 （13） 作者同类文章 X --------【实习之旅】 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        小伙伴们在手机上逛淘宝的时候，会发现在淘宝的下面有个按钮，分别是首页、微淘、社区、购物车和我的淘宝，点击不同的按钮会跳转到不同的页面，目前小编所接手的这个项目，也需要用到类似这样的功能，小编就发挥网络的强大力量，原来人家使用的技术叫做Tabhost，用Tabhost来控制各个选项卡的切换，Tabhost的实现分为两种，一种是继承自TabActivity，继承TabActivity，从TabActivity中用getTabHost()方法获取TabHost。只要定义具体Tab内容布局就行了。另一种是不继承TabActivity，在布局文件中定义TabHost即可，但是TabWidget的id必须是 @android:id/tabs，FrameLayout的id必须是@android:id/tabcontent，TabHost的id可以自定义。今天这篇博文，小编就来简单的介绍一下有关于Tabhost的故事，还请小伙伴多多指教哦`(*∩_∩*)′！         首先，我们来看第一种实现方式，继承自TabActivity，首先我们来看xml的布局代码，具体代码如下所示：         <?xml version="1.0" encoding="utf-8"?> <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="fill_parent" android:layout_height="fill_parent"> <!-- 第一个布局 --> <LinearLayout android:id="@+id/view_one" android:layout_width="match_parent" android:layout_height="match_parent" > <TextView android:id="@+id/textView_one" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="等一个故事" /> </LinearLayout> <!-- 第二个布局 --> <LinearLayout android:id="@+id/view_two" android:layout_width="match_parent" android:layout_height="match_parent" > <TextView android:id="@+id/textView_two" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="当幸福来敲门" /> </LinearLayout> <!-- 第三个布局 --> <LinearLayout android:id="@+id/view_three" android:layout_width="match_parent" android:layout_height="match_parent" > <TextView android:id="@+id/textView_three" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="微笑闪亮未来" /> </LinearLayout> </FrameLayout>        接着，我们来看java类中的代码，具体代码如下所示：       package com.example.tabhost_trynew; import com.example.tabhost_trynew.R; import android.app.TabActivity; import android.os.Bundle; import android.view.LayoutInflater; import android.view.Menu; import android.widget.TabHost; import android.widget.TabHost.OnTabChangeListener; public class MainActivity extends TabActivity{ @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setTitle("TabDemoActivity"); TabHost tabHost = getTabHost(); LayoutInflater.from(this).inflate(R.layout.activity_main, tabHost.getTabContentView(), true); tabHost.addTab(tabHost.newTabSpec("tab_one").setIndicator("tab_one", getResources().getDrawable(R.drawable.flower)) .setContent(R.id.view_one)); tabHost.addTab(tabHost.newTabSpec("tab_two").setIndicator("tab_two", getResources().getDrawable(R.drawable.flower)) .setContent(R.id.view_two)); tabHost.addTab(tabHost.newTabSpec("tab_three").setIndicator("tab_three", getResources().getDrawable(R.drawable.flower)) .setContent(R.id.view_three)); //标签切换事件处理，setOnTabChangedListener tabHost.setOnTabChangedListener(new OnTabChangeListener(){ @Override public void onTabChanged(String tabId) { if (tabId.equals("tab_one")) { //第一个标签 } if (tabId.equals("tab_two")) { //第二个标签 } if (tabId.equals("tab_three")) { //第三个标签 } } }); } @Override public boolean onCreateOptionsMenu(Menu menu) { getMenuInflater().inflate(R.menu.main, menu); return true; } }        我们来看一下运行效果，如下图所示：                接着，我们来看第二种实现方式，不继承自TabActivity，首先，我们来看xml的布局代码，具体代码如下所示：         <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" android:orientation="vertical" tools:context=".MainActivity" > <TabHost android:id="@+id/tabhost" android:layout_width="match_parent" android:layout_height="wrap_content"> <LinearLayout android:layout_width="match_parent" android:layout_height="match_parent" android:orientation="vertical" > <TabWidget android:id="@android:id/tabs" android:layout_width="match_parent" android:layout_height="wrap_content" > </TabWidget> <FrameLayout android:id="@android:id/tabcontent" android:layout_width="match_parent" android:layout_height="match_parent" > <!-- 第一个tab的布局 --> <LinearLayout android:id="@+id/tab1" android:layout_width="match_parent" android:layout_height="match_parent" > <TextView android:id="@+id/textView1" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="等一个故事" /> </LinearLayout> <!-- 第二个tab的布局 --> <LinearLayout android:id="@+id/tab2" android:layout_width="match_parent" android:layout_height="match_parent" > <TextView android:id="@+id/textView2" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="当幸福来敲门" /> </LinearLayout> <!-- 第三个tab的布局 --> <LinearLayout android:id="@+id/tab3" android:layout_width="match_parent" android:layout_height="match_parent" > <TextView android:id="@+id/textView3" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="微笑闪亮未来" /> </LinearLayout> </FrameLayout> </LinearLayout> </TabHost> </LinearLayout>        接着，我们来看java类中的代码，代码如下所示： package com.example.tabhost_try2; import android.os.Bundle; import android.app.Activity; import android.view.Menu; import android.widget.TabHost; public class MainActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); //初始化TabHost容器 TabHost th=(TabHost)findViewById(R.id.tabhost); th.setup(); //在TabHost创建标签，然后设置：标题／图标／标签页布局 th.addTab(th.newTabSpec("tab1").setIndicator("tab_one",getResources().getDrawable(R.drawable.flower)).setContent(R.id.tab1)); th.addTab(th.newTabSpec("tab2").setIndicator("tab_two",getResources().getDrawable(R.drawable.flower)).setContent(R.id.tab2)); th.addTab(th.newTabSpec("tab3").setIndicator("tab_three",getResources().getDrawable(R.drawable.flower)).setContent(R.id.tab3)); //上面的null可以为getResources().getDrawable(R.drawable.图片名)设置图标 } @Override public boolean onCreateOptionsMenu(Menu menu) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.main, menu); return true; } }       我们来看一下运行效果，如下所示：               小编寄语：该博客小编主要简单的介绍了Tabhost的相关知识，一个是不继承TabActivity，一个是继承自TabActivity； 还是那句话对于小编来说，既是挑战更是机遇，因为知识都是相通的，再者来说，在小编的程序人生中，留下最珍贵的记忆，虽然以后小编不一定从事安卓这个行业，代码世界里，很多种事，有的甜蜜，有的温馨，有的婉转成歌，有的绵延不息，在这些故事里，我们唯一的共通之处就是，某年，某月，某个波澜不惊的日子里，曾经很爱很爱你！爱你--这段接触Android日子里，安卓带给小编的种种的惊喜。      顶 4 踩 1 我的同类文章 --------【项目实战】 （41） --------【Android】 （13） --------【实习之旅】 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397334次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 89
URL:: http://blog.csdn.net/u010850027/article/details/48029805

ParseText::
Android Demo---实现从底部弹出窗口 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android Demo---实现从底部弹出窗口 2015-10-05 07:55 911人阅读 评论 (32) 收藏 举报 分类： --------【Android】 （13） 作者同类文章 X --------【实习之旅】 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        在前面的博文中，小编简单的介绍了如何制作圆角的按钮以及圆角的图片，伴着键盘和手指之间的舞步，迎来新的问题，不知道小伙伴有没有这样的经历，以App为例，点击头像的时候，会从底部弹出一个窗口，有从相册中选择、拍照、取消的字样，点击相应的按钮，完成相应的操作，在小编做项目的过程中遇到类似的问题，小编经过一番捣鼓，终于搞定了ing，今天这篇博文博文，小编简单的介绍一下，如何点击头像，实现从底部弹出窗口的故事，这个故事实现的是弹出滑动窗口，主要是使用了一些设置Activity的样式来实现弹出效果和滑动效果。        首先，第一步我们来编写xml代码，如下所示： <?xml version="1.0" encoding="utf-8"?> <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="fill_parent" android:layout_height="wrap_content" android:gravity="center_horizontal" android:orientation="vertical"> <LinearLayout android:id="@+id/pop_layout" android:layout_width="fill_parent" android:layout_height="wrap_content" android:gravity="center_horizontal" android:orientation="vertical" android:layout_alignParentBottom="true" android:background="@drawable/btn_style_alert_dialog_background"> <Button android:id="@+id/btn_take_photo" android:layout_marginLeft="20dip" android:layout_marginRight="20dip" android:layout_marginTop="20dip" android:layout_width="fill_parent" android:layout_height="wrap_content" android:text="拍照" android:background="@drawable/btn_style_alert_dialog_button" android:textStyle="bold"/> <Button android:id="@+id/btn_pick_photo" android:layout_marginLeft="20dip" android:layout_marginRight="20dip" android:layout_marginTop="5dip" android:layout_width="fill_parent" android:layout_height="wrap_content" android:text="从相册选择" android:background="@drawable/btn_style_alert_dialog_button" android:textStyle="bold"/> <Button android:id="@+id/btn_cancel" android:layout_marginLeft="20dip" android:layout_marginRight="20dip" android:layout_marginTop="15dip" android:layout_marginBottom="15dip" android:layout_width="fill_parent" android:layout_height="wrap_content" android:text="取消" android:background="@drawable/btn_style_alert_dialog_cancel" android:textColor="#ffffff" android:textStyle="bold"/> </LinearLayout> </RelativeLayout>         第二步，新建java类，命名为SelectPicPopupWindow，继承Activity类并实现OnClickListener接口，这个接口可以不用实现，具体代码如下所示：   package com.h8.imageroundcorner; import android.app.Activity; import android.os.Bundle; import android.view.MotionEvent; import android.view.View; import android.view.View.OnClickListener; import android.widget.Button; import android.widget.LinearLayout; import android.widget.Toast; public class SelectPicPopupWindow extends Activity implements OnClickListener{ private Button btn_take_photo, btn_pick_photo, btn_cancel; private LinearLayout layout; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.alert_dialog); btn_take_photo = (Button) this.findViewById(R.id.btn_take_photo); btn_pick_photo = (Button) this.findViewById(R.id.btn_pick_photo); btn_cancel = (Button) this.findViewById(R.id.btn_cancel); layout=(LinearLayout)findViewById(R.id.pop_layout); //添加选择窗口范围监听可以优先获取触点，即不再执行onTouchEvent()函数，点击其他地方时执行onTouchEvent()函数销毁Activity layout.setOnClickListener(new OnClickListener() { public void onClick(View v) { // TODO Auto-generated method stub Toast.makeText(getApplicationContext(), "提示：点击窗口外部关闭窗口！", Toast.LENGTH_SHORT).show(); } }); //添加按钮监听 btn_cancel.setOnClickListener(this); btn_pick_photo.setOnClickListener(this); btn_take_photo.setOnClickListener(this); } //实现onTouchEvent触屏函数但点击屏幕时销毁本Activity @Override public boolean onTouchEvent(MotionEvent event){ finish(); return true; } public void onClick(View v) { switch (v.getId()) { case R.id.btn_take_photo: break; case R.id.btn_pick_photo: break; case R.id.btn_cancel: break; default: break; } finish(); } }        第三步，编写MainActivity类，点击头像的时候，让她从底部滑出一定弹出框，代码如下所示：    package com.h8.imageroundcorner; import android.app.Activity; import android.content.Intent; import android.graphics.Bitmap; import android.graphics.BitmapFactory; import android.graphics.Canvas; import android.graphics.Paint; import android.graphics.PorterDuffXfermode; import android.graphics.Rect; import android.graphics.RectF; import android.graphics.Bitmap.Config; import android.graphics.PorterDuff.Mode; import android.os.Bundle; import android.view.View; import android.view.View.OnClickListener; import android.widget.ImageView; import android.widget.TextView; public class TestActivity extends Activity { ImageView imageView; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.test); imageView = (ImageView) findViewById(R.id.imageView2); Bitmap b = BitmapFactory.decodeResource(getResources(), R.drawable.my); imageView.setImageBitmap(toRoundCorner(b,200)); //把文字控件添加监听，点击弹出自定义窗口 imageView.setOnClickListener(new OnClickListener() { public void onClick(View v) { startActivity(new Intent(TestActivity.this,SelectPicPopupWindow.class)); } }); } public static Bitmap toRoundCorner(Bitmap bitmap, int pixels) { Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888); Canvas canvas = new Canvas(output); final int color = 0xff424242; final Paint paint = new Paint(); final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()); final RectF rectF = new RectF(rect); final float roundPx = pixels; paint.setAntiAlias(true); canvas.drawARGB(0, 0, 0, 0); paint.setColor(color); canvas.drawRoundRect(rectF, roundPx, roundPx, paint); paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN)); canvas.drawBitmap(bitmap, rect, rect, paint); return output; } }        第四步，设置属性样式实现我们所需要的效果，代码如下所示： <resources> <!-- Base application theme, dependent on API level. This theme is replaced by AppBaseTheme from res/values-vXX/styles.xml on newer devices. --> <style name="AppBaseTheme" parent="android:Theme.Light"> <!-- Theme customizations available in newer API levels can go in res/values-vXX/styles.xml, while customizations related to backward-compatibility can go here. --> </style> <!-- Application theme. --> <style name="AppTheme" parent="AppBaseTheme"> <!-- All customizations that are NOT specific to a particular API-level can go here. --> </style> <style name="AnimBottom" parent="@android:style/Animation"> <item name="android:windowEnterAnimation">@anim/push_bottom_in</item> <item name="android:windowExitAnimation">@anim/push_bottom_out</item> </style> <style name="MyDialogStyleBottom" parent="android:Theme.Dialog"> <item name="android:windowAnimationStyle">@style/AnimBottom</item> <item name="android:windowFrame">@null</item> <!-- 边框 --> <item name="android:windowIsFloating">true</item> <!-- 是否浮现在activity之上 --> <item name="android:windowIsTranslucent">true</item> <!-- 半透明 --> <item name="android:windowNoTitle">true</item> <!-- 无标题 --> <item name="android:windowBackground">@android:color/transparent</item> <!-- 背景透明 --> <item name="android:backgroundDimEnabled">true</item> <!-- 模糊 --> </style> </resources>         第五步，在点击头像的时候，我们需要她是上下滑入式的效果，点击取消的时候需要她是上下滑出式的效果，怎么实现nie，具体代码如下图所示，首先是滑入式的效果： <?xml version="1.0" encoding="utf-8"?> <!-- 上下滑入式 --> <set xmlns:android="http://schemas.android.com/apk/res/android" > <translate android:duration="200" android:fromYDelta="100%p" android:toYDelta="0"/> </set>        接着，滑出式的效果代码如下所示：      <?xml version="1.0" encoding="utf-8"?> <!-- 上下滑出式 --> <set xmlns:android="http://schemas.android.com/apk/res/android" > <translate android:duration="200" android:fromYDelta="0" android:toYDelta="50%p" /> </set>         最后，我们来看一下运行的效果，如下图所示：                  小编寄语： 该博文小编主要简单的介绍了如何从底部滑出弹出框，希望可以帮助到需要的小伙伴们，每次实现一个简单的效果，小编都会特别开心，伴着实习的脚步，小编慢慢长大`(*∩_∩*)′， 这就是生命的意义，还是那句话 对于小编来说，既是挑战更是机遇，因为知识都是相通的，再者来说，在小编的程序人生中，留下最珍贵的记忆，虽然以后小编不一定从事安卓这个行业，代码世界里，很多种事，有的甜蜜，有的温馨，有的婉转成歌，有的绵延不息，在这些故事里，我们唯一的共通之处就是，某年，某月，某个波澜不惊的日子里，曾经很爱很爱你！爱你--这段实习的日子里，安卓带给小编的种种的惊喜。      上一篇 Android Demo---如何敲出圆角的Button+圆角头像 下一篇 IT女孩特不烦恼---九月实习总结 顶 4 踩 0 我的同类文章 --------【Android】 （13） --------【实习之旅】 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397332次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 90
URL:: http://blog.csdn.net/u010850027/article/details/48338509

ParseText::
发现----Android Demo - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 发现----Android Demo 2015-10-15 00:00 1258人阅读 评论 (28) 收藏 举报 分类： --------【实习之旅】 （13） 作者同类文章 X --------【Android】 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        时间悄悄的走，转眼来实习已经三个月了，三个月的时间，小编慢慢的成长着，从刚开始的电商项目到现在的车段子项目，小编在走过一个又一个项目的同时，走过了一个又一个战胜自己的奇迹，每次遇到一个新的技术点，小编就开始捣鼓，捣鼓这回事，真的需要勇气，捣鼓捣鼓，duang，功能出来了，好开心`(*∩_∩*)′，能力往往是做了才会获得，而不是有了能力才去做，丫头加油。小伙伴们可能都在某些app上看见过发现的功能，点击发现的按钮自动加载最热门的信息，在小编最近捣鼓的项目里面就有这个功能，经过几天的捣鼓，终于新鲜出炉了，今天这篇博客小编就来简单的介绍一下如何点击发现按钮，自动加载我们所需要的相关信息，希望可以帮助到需要的小伙伴们，还请小伙伴多多指教`(*∩_∩*)′。        首先，我们来编写我们的实体层，需要用到两个实体，第一个content如下所示： package com.jczb.car.bean; import java.util.Date; import java.util.List; import android.R.integer; import android.R.integer; /** * 说明：段子内容实体 * 作者：丁国华 * 时间：2015年9月10日 10:41:43 */ @SuppressWarnings("serial") public class Content extends Entity { /** 内容表标识 */ private int uid; /** 显示标题 */ private String title; /** 视频或者图片路径 */ private String path; /**详情*/ private String details; /**频道类型*/ private String channelType; /**频道名称*/ private String channelName; /**作者*/ private String author; /**是否推荐*/ private String isRecommend; /**阅读或者播放数量*/ private int browseNumber; /**评论数*/ private int commentbrowseNumber; /**赞数*/ private int praiseNumber; /**踩数*/ private int treadNumber; /**发布时间*/ private String issueTime; /**是否收藏*/ private int isCollect; /**关联视频*/ private List<VideoRelation> Content; public String getTitle() { return title; } public void setTitle(String title) { this.title = title; } public String getPath() { return path; } public void setPath(String path) { this.path = path; } public String getDetails() { return details; } public void setDetails(String details) { this.details = details; } public String getChannelType() { return channelType; } public void setChannelType(String channelType) { this.channelType = channelType; } public String getAuthor() { return author; } public void setAuthor(String author) { this.author = author; } public String getIsRecommend() { return isRecommend; } public void setIsRecommend(String isRecommend) { this.isRecommend = isRecommend; } public int getBrowseNumber() { return browseNumber; } public void setBrowseNumber(int browseNumber) { this.browseNumber = browseNumber; } public int getCommentbrowseNumber() { return commentbrowseNumber; } public void setCommentbrowseNumber(int commentbrowseNumber) { this.commentbrowseNumber = commentbrowseNumber; } public int getPraiseNumber() { return praiseNumber; } public void setPraiseNumber(int praiseNumber) { this.praiseNumber = praiseNumber; } public int getTreadNumber() { return treadNumber; } public void setTreadNumber(int treadNumber) { this.treadNumber = treadNumber; } public String getIssueTime() { return issueTime; } public void setIssueTime(String issueTime) { this.issueTime = issueTime; } public String getChannelName() { return channelName; } public void setChannelName(String channelName) { this.channelName = channelName; } public int getIsCollect() { return isCollect; } public void setIsCollect(int isCollect) { this.isCollect = isCollect; } public List<VideoRelation> getContent() { return Content; } public void setContent(List<VideoRelation> content) { Content = content; } public int getUid() { return uid; } public void setUid(int uid) { this.uid = uid; } }       第二个实体contentVo，具体代码如下所示：         package com.jczb.car.bean; import java.util.List; /** *说明： 内容集合，用于Json串的解析 *作者：丁国华 *时间：2015年9月10日 10:38:38 */ @SuppressWarnings("serial") public class ContentVo extends Entity { /** 服务器返回结果:true或false */ private String result; /** 服务器返回的Json串解析为List结合 */ private List<Content> Content; public String getResult() { return result; } public void setResult(String result) { this.result = result; } public List<Content> getContent() { return Content; } public void setContent(List<Content> content) { Content = content; } }      接着，来编写我们的需要调用的接口方法，代码如下所示：        /** * 说明：发现 * @user 丁国华 * @date 2015-8-31 下午2:10:59 */ public ContentVo discover(boolean isFirst, int contentVoId) throws AppException { ContentVo contentVo = null; // 构建缓存文件的key String key = "contentVo_" + contentVoId; // 1.如果联网则首先从服务器获取数据 if (isNetworkConnected() &&(isReadDataCache(key) || isFirst)) { try { // 从服务器获取Content的集合 contentVo = ApiClient.discover(this); // 如果能够获取到服务器中的数据则保存到本地缓存,只有保证数据不为空，且获取到的结果为true的时候才缓存到本地 if (contentVo != null && contentVo.getResult().equals("false")) { contentVo.setCacheKey(key); saveObject(contentVo, key); } } catch (AppException e) { // 如果出现访问中途断网，则获取本地缓存中的数据 contentVo = (ContentVo) readObject(key); // 如果本地缓存中数据为空，则抛出异常 if (contentVo == null) { throw e; } } } // 2.如果未联网则从缓存中获取数据 else { contentVo = (ContentVo) readObject(key); if (contentVo == null) { contentVo = new ContentVo(); } return contentVo; } return contentVo; }        第三步，我们来编写我们的xml布局，具体代码如下所示： <?xml version="1.0" encoding="utf-8"?> <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent" android:background="#F7F7F7" android:orientation="vertical" > <LinearLayout style="@style/top_title_style" > <!-- 尖括号的布局 --> <ImageButton android:id="@+id/about_us_back" android:layout_width="14dp" android:layout_height="25.5dp" android:layout_gravity="center_vertical" android:layout_marginLeft="10dp" android:background="@drawable/back" /> <!-- 车段子布局 --> <TextView style="@style/top_title_word_style" android:text="车段子" /> </LinearLayout> <!-- 搜索 --> <RelativeLayout android:id="@+id/rl_search_id" android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="2dp" android:orientation="horizontal" > <TextView android:id="@+id/et_seachkey_id" android:layout_width="match_parent" android:layout_height="50dp" android:background="@drawable/search_photo" android:textSize="15sp" /> <ImageView android:id="@+id/iv_search_id" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_gravity="center" android:layout_marginLeft="290dp" android:layout_marginTop="15dp" android:background="@drawable/search" /> <TextView android:id="@+id/iv_search_id" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_gravity="center" android:layout_marginLeft="10dp" android:layout_marginTop="15dp" android:textSize="15sp" android:hint="请输入搜索关键字" /> </RelativeLayout> <!-- 热门儿 --> <LinearLayout android:layout_width="match_parent" android:layout_height="50dp" android:layout_marginTop="5dp" android:orientation="vertical" > <TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_gravity="center" android:gravity="center" android:text="@string/hot_channels_str" android:textColor="@color/light_blue" android:textSize="25sp" /> <View android:layout_width="match_parent" android:layout_height="1dp" android:layout_marginTop="2dp" android:background="@color/lightgray" /> </LinearLayout> <!-- 热门儿内容 --> <LinearLayout android:layout_width="match_parent" android:layout_height="wrap_content" android:minHeight="?android:attr/listPreferredItemHeight" android:orientation="vertical" > <ListView android:id="@+id/lv_hotchannel_id" android:layout_width="match_parent" android:layout_height="wrap_content" android:divider="@null" android:minHeight="200dp" > </ListView> </LinearLayout> </LinearLayout>       第四步，编写java类里面所需要的代码，如下所示： package com.jczb.car.ui; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map; import android.app.Activity; import android.content.Intent; import android.os.Bundle; import android.os.Handler; import android.os.Message; import android.view.View; import android.view.View.OnClickListener; import android.widget.AdapterView; import android.widget.AdapterView.OnItemClickListener; import android.widget.EditText; import android.widget.ImageView; import android.widget.ListView; import android.widget.RelativeLayout; import android.widget.SimpleAdapter; import android.widget.TextView; import android.widget.Toast; import com.jczb.car.AppContext; import com.jczb.car.AppException; import com.jczb.car.R; import com.jczb.car.bean.Content; import com.jczb.car.bean.ContentVo; /** * 说明：发现功能页面 * 作者：丁国华 * 时间： 2015-9-2下午2:02:58 */ public class DiscoveryActivity extends Activity implements OnClickListener, OnItemClickListener { //RelativeLayout rlFoundSearch; //ImageView ivTuBiaoSearch; // 声明用到的几个控件 private TextView etSearch; private ImageView ivSearch; private ListView lvHotChannel; private RelativeLayout rlFoundSearchEmpty; //private ImageView ivTuBiao; /**解析发现接口用的实体类*/ private ContentVo contentVo = null; /**用来填充ListView的List*/ private List<Map<String, Object>> data = new ArrayList<Map<String,Object>>(); /**用来获得服务器接口的发现内容集合*/ private List<Content> discoverContent; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.discovery); findViewById(); // 初始化页面控件 initView(); /*跳转到搜索关键字的空白的页面*/ rlFoundSearchEmpty.setOnClickListener(this); //ivTuBiao.setOnClickListener(this); // 启动子线程,获取服务器数据 discoverThread.start(); } private void findViewById() { // TODO Auto-generated method stub rlFoundSearchEmpty=(RelativeLayout) findViewById(R.id.rl_search_id); //ivTuBiao=(ImageView) findViewById(R.id.iv_search_tubiao_id); } @Override public void onClick(View v) { switch (v.getId()) { /*case R.id.iv_search_tubiao_id: break;*/ case R.id.rl_search_id: Intent intentFoundSerch = new Intent(this,SearchResourceActivity.class); startActivity(intentFoundSerch); break; default: break; } } /** *说明：初始化控件和监听事件 *作者：丁国华 * 时间：2015-9-2 下午2:12:49 */ public void initView() { // 初始化控件 etSearch = (TextView) findViewById(R.id.et_seachkey_id); ivSearch = (ImageView) findViewById(R.id.iv_search_id); lvHotChannel = (ListView) findViewById(R.id.lv_hotchannel_id); //rlFoundSearch=(RelativeLayout)findViewById(R.id.rl_search_id); // 初始化监听事件 ivSearch.setOnClickListener(this); // ListView想要实现点击事件本Activity必须实现OnItemClickListener接口 lvHotChannel.setOnItemClickListener(new OnItemClickListener() { @Override public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) { //点击item之后能够根据点击位置获取将要携带的参数跳转到搜索结果页 Intent intent = new Intent(DiscoveryActivity.this, VedioInfoActivity.class); intent.putExtra("channelType", discoverContent.get(position).getChannelType()); intent.putExtra("Id", discoverContent.get(position).getId()); startActivity(intent); } }); }; /** * 说明：从服务器端获取并加载数据到ListView中 * 作者： 丁国华 * 时间： 2015-9-2 下午2:54:27 */ public void loadData() { } /** * 定义一个线程等待 */ Handler handler = new Handler() { @Override public void handleMessage(Message msg) { super.handleMessage(msg); // 需要根据线程中传递的msg中what的返回值进行判断 // 消息的what值为1，为空what为-1，异常为0 switch (msg.what) { case 1: //获取线程得到的服务器数据 contentVo = (ContentVo)msg.obj; discoverContent = contentVo.getContent(); //将数据赋给List<Map<>>集合 for (int i = 0; i< discoverContent.size(); i++) { Map<String, Object> map = new HashMap<String, Object>(); //map.put("Id", discoverContent.get(i).getId()); //map.put("channelType", discoverContent.get(i).getChannelType()); map.put("title", discoverContent.get(i).getTitle()); map.put("channelName", discoverContent.get(i).getChannelName()); data.add(map); } //定义填充ListView的Adapter并填充到ListView中 //String[]{}与map中填的名字必须保持一致 SimpleAdapter contentAdapter = new SimpleAdapter(DiscoveryActivity.this, data, R.layout.discovery_item,new String[]{"title","channelName"}, new int[]{R.id.tv_channelTopNews_id,R.id.tv_channelName_id}); lvHotChannel.setAdapter(contentAdapter); break; case -1: Toast.makeText(DiscoveryActivity.this, "数据为空!", Toast.LENGTH_LONG) .show(); break; case 0: Toast.makeText(DiscoveryActivity.this, "数据获取失败!", Toast.LENGTH_LONG) .show(); break; default: break; } } }; /** * 开启一个发现子线程 */ Thread discoverThread = new Thread(new Runnable() { @Override public void run() { Message msg = new Message(); // 获取全局对象Application AppContext appContext = (AppContext) getApplication(); try { // 获取服务器数据 contentVo = appContext.discover(true, 1); // 返回contentVo则将消息的what值为1，为空what为-1，异常为0 if (contentVo != null) { msg.what = 1; msg.obj = contentVo; } else { msg.what = -1; } } catch (AppException e) { msg.what = 0; e.printStackTrace(); } handler.sendMessage(msg); } }); /** * 说明：根据handler传过来的类型显示不同的Toast提示 * 作者：丁国华 * 时间：2015-9-2 下午3:53:30 */ public void showToast(int what) { switch (what) { case -1: Toast.makeText(DiscoveryActivity.this, "数据为空!", Toast.LENGTH_LONG) .show(); break; case 0: Toast.makeText(DiscoveryActivity.this, "数据获取失败!", Toast.LENGTH_LONG) .show(); default: break; } } @Override public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) { // TODO Auto-generated method stub } }        到此，我们的发现这个功能的一条线就走下来了，最后，我们来看一下我们的运行效果，如下所示：                  小编寄语： 发现的实现功能，小编就简单的介绍到这里，发现 实现了，但是 小编到现在还是云里雾里，不过没关系，小编会越挫越勇的，这就是生命的意义，还是那句话 对于小编来说，既是挑战更是机遇，因为知识都是相通的，再者来说，在小编的程序人生中，留下最珍贵的记忆，虽然以后小编不一定从事安卓这个行业，代码世界里，很多种事，有的甜蜜，有的温馨，有的婉转成歌，有的绵延不息，在这些故事里，我们唯一的共通之处就是，某年，某月，某个波澜不惊的日子里，曾经很爱很爱你！爱你--这段实习的日子里，安卓带给小编的种种的惊喜。在 下篇博文中小将和小伙伴们一起来分享，如何输入关键字，搜索出相应内容，敬请期待`(*∩_∩*)′！ 上一篇 IT女孩特不烦恼---九月实习总结 下一篇 搜索----Android Demo 顶 5 踩 4 我的同类文章 --------【实习之旅】 （13） --------【Android】 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397333次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentPro

Recno:: 91
URL:: http://blog.csdn.net/u011225629/rss/list

ParseText::


Recno:: 92
URL:: http://blog.csdn.net/wangyangzhizhou/article/details/48462453

ParseText::
如何设计一个可用的web容器 - wangyangzhizhou的专栏 - 博客频道 - CSDN.NET wangyangzhizhou的专栏 追求思想自由，追求技术自由，追求研究自由 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 如何设计一个可用的web容器 标签： web容器 设计 2015-09-15 08:20 704人阅读 评论 (1) 收藏 举报 分类： 设计 （2） 作者同类文章 X JAVA （71） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 之前在另外一个平台（ http://www.jointforce.com/jfperiodical/article/1035 ）发表的一篇文章，现在发布到自己的博客上。     开发一个web容器涉及很多不同方面不同层面的技术，例如通信层的知识，程序语言层面的知识等等，且一个可用的web容器是一个比较庞大的系统，要说清楚需要很长的篇幅，本文旨在介绍如何设计一个web容器，只探讨实现的思路，并不涉及过多的具体实现。把它分解划分成若干模块和组件，每个组件模块负责不同的功能，下图列出一些基本的组件，并将对每个组件进行介绍。   连接接收器 主要的职责就是监听是否有客户端套接字连接并接收socket，再将socket交由任务执行器（线程池）执行。不断从系统底层读取socket，做尽可能少的处理，再扔进线程池。为什么强调要做尽可能少的处理？这里关系到系统性能问题，过多的处理会严重影响吞吐量。因为一般只有一个接收器（一条线程负责套接字接收工作），所以它对每次接收处理的时间长短将很可能对整体性能产生影响。于是接收器所干的活都是非常少且简单的，仅仅维护了几个状态变量、流量控制闸门的累加操作、serverSocket的接收操作、设置接收到的socket的一些属性、将接收到的socket放入线程池以及一些异常处理。其他需要较长时间处理的逻辑就交给了线程池，例如对socket底层数据的读取，对http协议报文的解析及响应客户端的一些操作等等。 连接数控制器 对于一台机器而言，访问请求的总流量有高峰期且服务器有物理极限，为了保证web服务器不被冲垮我们需要采取一些措施进行保护预防，需要稍微说明的此处的流量更多的是指套接字的连接数，通过控制套接字连接个数来控制流量。其中一种有效的方法就是采取流量控制，它就像在流量的入口增加了一道闸门，闸门的大小决定了流量的大小，一旦达到最大流量将关闭闸门停止接收直到有空闲通道。计数器可用JDK的AQS框架实现。 套接字工厂 不同的使用场合可能需要不同的安全级别，例如在支付相关的交易就必须对信息加密后再发送，这其中还涉及到密钥协商的过程，而在另外一些普通场合则无需对报文加密。反应到应用层则是使用http与https的问题。 简单讲TLS\SSL协议给每次通信①提供认证服务，认证本次会话实体身份的合法性。②提供加密服务，强加密机制能保证通信过程中的消息不会被破译。③提供防篡改服务，利用Hash算法对消息进行签名，通过验证签名保证通信内容不被篡改。 http协议对应Socket，而https则对应SSLSocket。如何生成Socket及SSLSocket则交由套接字工厂。 任务定义器——Task 定义需要执行的任务，告诉线程池要执行什么样的任务。任务主要分为三点：处理socket并响应客户端、连接数计数器减一、关闭socket。其中对socket的处理是最重要也是最复杂的，它包括对底层socket字节流的读取、http协议请求报文的解析（请求行、请求头、请求体等信息的解析）、根据请求行解析得到路径去寻找相应主机上web项目的资源、根据处理的结果组装好http协议响应报文输出到客户端。 任务执行器 一个拥有最大最小线程数限制的线程池，之所以称之为“任务执行器”是因为线程池可以看做是启动了若干线程不断检测某个任务队列，一旦发现有需要执行的任务则执行。最大最小线程数限制、多余线程回收时间限制、超出最大线程数时线程池做出的拒绝动作等等。 报文读取 用于向操作系统底层读取来自客户端的报文并提供缓冲机制。报文复制到desBuf。 报文输出 用于向操作系统底层写入由web容器处理后的报文并提供缓冲机制。将报文outputBuf通过缓冲区写入到操作系统。 输入过滤器 在这个读取的过程中希望做一些额外的处理，并且这些额外处理可能是根据不同条件做不同的处理，考虑到程序解耦与扩展，于是引入过滤器。通过一层层的过滤器完成过滤操作后才能到desBuf，这个过程就像被加入了一道道处理关卡，经过关卡都会被执行相应操作，最终完成源数据到目的数据的操作。 输出过滤器 与输入过滤器功能类似，用于在报文输出的时候。 报文解析器 提供解析http协议各个部分的能力。 请求生成器 按照面向对象的思想，把每个请求过程中与请求相关的属性及协议字段等抽象成一个Request对象。包括请求行、请求头、请求体三部分信息，在处理过程中需要什么值可直接从request对象中获取。为实现servlet标准提供方便。 响应生成器 与请求相对应，需要一个响应对象生成器。包括响应行、响应头、响应体三部分信息，在处理结果相关值可直接设置到response对象中。为实现servlet标准提供方便。 地址映射器 地址映射器是请求与各个web项目、各个资源的路由器。一个请求的访问根据路径被映射找到响应的资源输出给请求客户端。 生命周期 为了进一步模块化，整个容器拥有很多组件，这些组件可能在不同的时刻需要做不同的事件，需要一个生命周期统一把所有组件管理起来。例如所有组件的启动、停止、关闭等操作都抽离由生命周期统一管理，就可以方便管理这些组件的生命周期。希望在某某状态事情发生之前之后做点什么？添加一个生命周期监听器即可优雅实现。 JMX管理器 系统运行状态的监控及管理，服务器性能、服务器相关参数的收集、JVM负载、web连接数、线程池、数据库连接池、缓存管理、配置文件重新加载等方面。可提供一些远程可视化管理，实时性高。同时也为分布式系统的管理提供了一个解决方案。 Web载入器 WebLoader用于加载web应用项目，一个web容器可能包含了若干个web应用。为了达到lib及servlet的隔离，对于每个web应用要使用不同的类加载器ClassLoader，且这些类加载器不是父子关系，以此达到class隔离效果，即一个web应用的lib不会被其他web应用使用。 会话管理器 会话管理器主要对session进行管理，包括：①生成sessionid，一般cookies或url未带jsessionid值则认为不存在会话，需要重新生成sessionid用作会话id。②很多客户端的会话都保存在服务器中，对于超时的会话要定期清理以确保服务器内存不会浪费。③对于一些重要的会话可以持久化到磁盘，需要时可重新加载到内存中使用。 运行日志 对运行时一些警告、异常、错误进行记录。 访问日志 访问日志一般会记录客户端的访问相关信息，包括客户端ip、请求时间、请求协议、请求方法、请求字节数、响应码、会话id、处理时间等等。访问日志可以统计访问用户的数量、访问时间分布等规律及个人爱好等等，这些数据可以帮助公司在运营策略上做出抉择。 安全管理器 Web项目运行在web容器平台上，这就好比将一个应用嵌入到一个平台上面运行，要使嵌入的程序能正常运行，首先平台要能安全正常运行。并且要最大程度做到平台不受嵌入的应用程序影响，两者在一定程度上达到隔离的效果。启动时通过-Djava.security.manager -Djava.security.policy==web.policy指定policy文件，此文件定义了各种权限。 运行监控&远程管理 提供一个可以实时监控web容器运行状态的平台，并且能进行远程管理。 集群 集群一般有两种：①负载均衡集群，一般是通过一定的分发算法把访问流量均匀分布到集群里面的各个机器上进行处理。②高可用集群，集群通信把若干机器连接起来，这种集群更偏重的是当集群中某个机器发生故障后能通过自动切换或流量转移等措施来保证整个集群对外的可用性。 web一般请求都是无状态，可以直接做集群，但涉及session则属于有状态，需要使用集群通信技术进行session拷贝。相关技术包括组播、单播。 Servlet引擎 servlet引擎利用反射把web应用中的servlet及jsp生成对象并放入servlet对象池中，并根据实际调用相应的方法。web应用将业务逻辑处理都放在dopost或doget方法中，web容器处理请求时就会按照这里定义好的处理逻辑进行处理，处理完响应客户端。 JSP编译器 按照规范JSP最终都是被编译成servlet执行，所以要按照规范对jsp文件进行编译。JSP编译器其实就是对jsp语法进行翻译，根据jsp语法处理。 一个web容器基本包含以上介绍的组件的功能，根据各个组件模块进行实现即可搭建起一个可以让你的web运行起来的web容器。             喜欢java的同学可以交个朋友 上一篇 tomcat会话之持久化会话管理器 下一篇 增量会话对象——DeltaSession 顶 0 踩 0 我的同类文章 设计 （2） JAVA （71） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 作者 笔名：seaboat 汪洋之舟 微信： 个人资料 wangyangzhizhou 访问： 103414次 积分： 2516 等级： 积分：2516 排名： 第8399名 原创： 117篇 转载： 5篇 译文： 0篇 评论： 46条 文章搜索 博客专栏 集群 文章：15篇 阅读：9289 tomcat内核 文章：48篇 阅读：32188 Java并发 文章：18篇 阅读：17190 java开源研究 文章：32篇 阅读：28841 文章分类 阿里技术 (0) 杂 (1) 英语 (0) 资讯 (0) J2EE (3) 标准 (1) 安全 (5) JAVA (71) 架构模型 (8) 设计 (3) tomcat内核 (52) 设计模式 (1) 支付 (3) 算法 (1) 阿汪梦中入侵故事 (2) 协议 (5) 多线程&并发 (22) JVM (9) 软件设计 (2) web中间件 (2) 集群 (4) 中间件 (1) tomcat (1) 文章存档 2015年12月 (5) 2015年11月 (2) 2015年10月 (3) 2015年09月 (6) 2015年08月 (6) 2015年07月 (4) 2015年06月 (4) 2015年05月 (5) 2015年04月 (4) 2015年03月 (6) 2015年02月 (6) 2015年01月 (6) 2014年12月 (10) 2014年11月 (10) 2014年10月 (7) 2014年09月 (5) 2014年08月 (18) 2014年07月 (1) 2014年06月 (1) 2014年05月 (1) 2014年04月 (2) 2014年03月 (10) 阅读排行 支付平台风控系统架构模型设计 (2461) 监控平台架构设计 (1547) Java多线程的调度策略 (1446) 乐观的并发策略——基于CAS的自旋 (1372) tomcat如何避免遭遇ClassNotFoundException (1274) 支付平台PCI认证整改 (1222) 悲观的并发策略——Synchronized互斥锁 (1217) 多线程之Java线程阻塞与唤醒 (1191) 系统支付金额效能监控设计 (1104) 动态令牌认证 (1082) 评论排行 tomcat会话之持久化会话管理器 (3) 集群增量会话管理器——DeltaManager (3) Tomcat的管道 (3) 支付平台风控系统架构模型设计 (2) socket系列之客户端socket——Socket类 (2) 设计一个中间件的访问日志组件 (2) 集群通信组件tribes之使用方法 (2) 从单机到集群会话的管理之集群模式一 (2) 集群通信组件tribes之应用程序处理入口 (2) 管道模式——pipeline与valve (1) 最新评论 Tomcat的管道 JackieLiuLixi : 不错，非常不错，谢谢 连接器与容器的桥梁——CoyoteAdapter CXBY1187819603 : 一般般 NIO模式例子 u013047005 : NIO模式主要优势是体现在对多连接的管理，对众多连接各种事件的转发让处理变得更加高效，所以一般是服务... NIO模式例子 u013047005 : NIO模式主要优势是体现在对多连接的管理，对众多连接各种事件的转发让处理变得更加高效，所以一般是服务... 从单机到集群会话的管理之集群模式一 wangyangzhizhou : @u010786678:一起进步 从单机到集群会话的管理之集群模式一 u010786678 : 谢谢小伙伴的分享，学习了 支付平台风控系统架构模型设计 wangyangzhizhou : @rainbowmiaoyun:黑名单是已经确认了的list，但假如这个黑名单已经合法了是可以从黑名... 支付平台风控系统架构模型设计 rainbowmiaoyun : 很有用处，但是我想了解一下，黑名单和白名单的区别在哪里？黑名单应该是做排除，那么黑名单那块能否处理成... 集群增量会话管理器——DeltaManager wangdan199112 : 没用过，学习啦！ 管道模式——pipeline与valve zhanghongjie0302 : 多谢楼主的分享！

Recno:: 93
URL:: http://blog.csdn.net/woxueliuyun/article/details/45293317

ParseText::
前端跨域数据访问 - 清箫的专栏 - 博客频道 - CSDN.NET 清箫的专栏 生命的可能,贵在自我实现;生命的欠缺,是努力的空间 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 前端跨域数据访问 2015-04-26 22:20 609人阅读 评论 (1) 收藏 举报 分类： 前端开发 （19） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 术语 同源 请求URL拥有相同protocol、host、port。参考 Table 1 同源举例 。 用户认证(User Credential) 在CORS中，用户认证指cookies, HTTP基本认证，客户端SSL认证。不指代理端的认证或Origin头。 缺乏用户认证 是指响应中不包含cookie，而且请求中不包含HTTP认证和SSL证书。 简单方法（Simple method） 指的是GET, HEAD, POST这三个method。 简单头 指Accept, Accept-Language, Content-Language, Content-Type满足application/x-www-form-urlencoded,multipart/form-data或text/plain。 简单响应头 指的是下列几个header字段：Cache-Control, Content-Language, Content-Type, Expires,Last-Modified, Pragma。 背景 为了网络安全， 用户代理（即浏览器） 对客户端Web应用程序应用了同源政策，一个域的脚本不能访问其他域的document。这样的好处是虽然脚本可以欺骗用户打开另一个域的敏感页面，但可以防止脚本读取敏感数据。 缺点就是给资源共享带来了困难，跨域数据访问的目的就是实现跨域的资源共享。 理解同源政策 Script通过src引用，Script的域就是引用它的页面所在的域，与Script原来在哪无关。 同源政策：Prevents access to DOM on different sites. 理解：假设脚本Script在域A.com中，然后在B.com中有一个页面通过src引用了A.com的Script。这个Script可以访问B.com中页面的任何内容，但如果Script打开一个新窗口并加载A.com或其他域的页面，根据同源政策，Script不能访问A.com或其他域中页面的内容或属性。虽然可以打开新窗口（并加载其他域的页面）或关闭这个窗口，但无法访问窗口内页面的内容。 解决办法一  document.domain 如果两个窗口（windows or frames）各自有自己的脚本同时把document.domain设置为相同的值，即使不是同源的，两个窗口依然可以相互访问。 解决办法二  JSONP（JSON withPadding） JSONP是一种跨域手段。 由于同源策略，不同域的网页不能进行数据沟通，而HTML的script元素是个例外，script元素可以加载不同域的脚本。如果加载的不是脚本，而是动态的JSON资料，则这个就是JSONP了。用script抓取的并不是JSON，而是任意的JavaScript，因此是由JavaScript直译器执行，而不是用JSON解析器解析。 原理 把<script>元素的src属性设成一个回传JSON的URL是可以想象的，这也代表从HTML页面通过script元素抓取JSON是可能的。 问题是JSON文件不是JavaScript程序，无法执行，从src里URL回传的必须是可执行的JavaScript。在JSONP的使用模式里，这个URL回传的JSON是由函数呼叫包起来的，这就是JSONP的“填充(padding)”或是“前缀（prefix）”的由来。 惯例上浏览器提供回调函数的名称当作送至服务器的请求中命名查询参数的一部分，例如： <scripttype="text/javascript" src = "http://server2.example.com/RetrieveUser?UserId=1823&jsonp=parseResponse"> </script> 服务器会在传给浏览器前将 JSON 回应用这个前辍（或称作填充）包起来。浏览器得到的回应已不是单纯的资料叙述而是一个脚本。在本例中，浏览器得到的是： parseResponse({"Name":"Cheeso", "Id" : 1823, "Rank": 7}) 填充 填充不一定是浏览器页面中已定义的某个回调函数，也可以是变量赋值，if叙述或其它Javascript叙述。回传内容可以是任意的运算式，甚至不需要任何的JSON，不过惯例上填充部分还是会触发函数调用的一小段JavaScript片段，而这个函数呼叫是作用在JSON格式的资料上的。 Script元素“注入” 需要为每一个JSONP请求加一个新的、有所需src值的script元素到HTML中。 安全问题 从其它域返回的函数或脚本可以访问该域下任何数据，这有安全问题。为了达到安全的要求，于是定义了更严格的JSON-P，使浏览器可以对MIME类型是"application/json-p"的请求做强制处理，如果回应不能被解析为严格的JSON-P，浏览器可以丢出一个错误或忽略整个回应。 JSON-P严格模式 就是强制使返回的JSONP满足这个约束： functionName({JSON}); obj.functionName({JSON}); obj["function-name"]({JSON});   解决办法三  CORS (Cross-Origin ResourceSharing) 这是W3C从2005年开始起草的一个标准，专门用于解决跨域请求。 原理 用户代理通过访问HTTP响应返回的头信息来授权认证该资源是否可以访问当前域。 跨域请求信息 从当前域的页面给另一个域的URL发送请求，用户代理会在请求中添加请求头Origin表示发送请求的域。另外还有请求头Referer表示发送请求页的URL。 服务器应用程序可以根据请求头Origin判断请求是不是跨域请求，并作出反应是否什么也不返回（响应头是要返回的，只是可能没有响应体）。 跨域响应信息 Web应用程序如果允许其他域的应用程序访问，服务器可以在响应中添加响应头Access-Control-Allow-Origin，表示允许访问的域。用户代理（浏览器）检测到这个响应头之后会比较请求的域，如果请求域属于被允许访问的域，则发送请求的域可以访问响应中的内容。 另外，还可以在响应中添加其他响应头控制允许访问的时间长度，允许使用什么方法访问。 使用经验 1.      如果某个资源对其它域没用（比如登陆页面），就不需要返回Access-Control-Allow-Origin头。要保护自己被CSRF攻击，还需要要求在请求中添加一个token来做判断。 2.      不需要做访问控制检查的页面，可以返回Access-Control-Allow-Origin为"*"。 3.      一个GET响应的整个内容都可以解析成ECMAScript，可以返回Access-Control-Allow-Origin为"*"。 有用户认证或Origin头的请求需要特殊考虑： 1.      CORS是JSONP，Server-to-Serverback channel，cross-document messaging的替代品。但这个替代也有自己的缺陷，比如，与Server-to-Server back channel相比，被请求的资源有更高的特权。与JSONP相比，则有很好的优越性，因为JSONP是通过注入代码来完成跨域的。与cross-document messaging相比，则差不多，因为对于不完全信任的域的资源还是要做格式验证或值验证。 一般请求语法 通过设置请求头或响应头的方式，允许不同域的脚本可以访问当前域的数据。 请求头 Origin 表明请求的来源。 响应头 Access-Control-Allow-Origin 允许访问的域名，“*”号，“null”，或空格分开的字符串。如果请求的域匹配这个响应头中某个域名，则请求页面可以访问响应的内容。 Preflight请求和响应 有些浏览器会先发一个请求到另一个域的服务器中，告诉服务器请求大概会是什么样子，以询问服务器是否支持这样的跨域。这就叫preflight request。 preflight请求头 Access-Control-Request-Method 表明请求将通过何种方法（post, get和head）去获取目标域的数据。 Access-Control-Request-Headers 表明请求将所包含的头信息。 preflight 响应头 Access-Control-Allow-Methods 告诉请求域，服务器只支持使用这些方法访问这个域。 Access-Control-Allow-Headers 告诉请求域，你只能在请求中添加这些请求头。 Access-Control-Allow-Credentials 如果preflight请求暗示实际的请求可能包含用户认证，这个头的信息表示在缺乏用户认证的情况下，是否暴露响应。 "Access-Control-Allow-Credentials"":" true                             true: %x74.72.75.65; "true", case-sensitive 解决办法四 XDomainRequest XDomainRequest是IE8和IE9提供的一个CORS实现，IE10又被删除了。 使用XDomainRequest需要满足两个条件： 请求源的安全协议必须和被请求的URL的协议一致，即http对http，https对https，否则请求返回"Access is Denined"。 请求的服务器必须在响应中设置Acces-Control-Allow-Origin头保证请求源可以访问这个服务器。 属性 解释 timeout 设置请求超时时间 responseText   方法 解释 open(method, url) 打开一个请求，GET/POST send(data) 发送请求 abort() 放弃请求 事件处理 解释 onprogress   ontimeout   onerror   onload   索引 同源举例 Table 1 同源举例 Compared URL Outcome Reason httpː//www.example.com /dir/page2.html Success Same protocol and host httpː//www.example.com /dir2/other.html Success Same protocol and host httpː// username:password@ www.example.com /dir2/other.html Success Same protocol and host httpː//www.example.com: 81 /dir/other.html Failure Same protocol and host but different port https ://www.example.com/dir/other.html Failure Different protocol http:// en.example.com /dir/other.html Failure Different host http:// example.com /dir/other.html Failure Different host (exact match required) http:// v2.www.example.com /dir/other.html Failure Different host (exact match required) httpː//www.example.com: 80 /dir/other.html Don't use Port explicit. Depends on implementation in browser. postMessage HTML5中最酷的新功能之一就是 跨文档消息传输CrossDocument Messaging。 下一代浏览器都将支持这个功能：Chrome 2.0+、Internet Explorer 8.0+, Firefox 3.0+, Opera 9.6+, 和 Safari 4.0+ 。 Facebook已经使用了这个功能，用postMessage支持基于web的实时消息传递。 otherWindow.postMessage(message,targetOrigin); otherWindow: 对接收信息页面的window的引用。可以是页面中iframe的contentWindow属性；window.open的返回值；通过name或下标从window.frames取到的值。 message: 所要发送的数据，string类型。 targetOrigin: 用于限制otherWindow，“*”表示不作限制 a.com/index.html中的代码： <iframe id="ifr" src="b.com/index.html"></iframe> <script type="text/javascript"> window.onload = function() { var ifr = document.getElementById('ifr'); var targetOrigin = 'http://b.com'; // 若写成'http://b.com/c/proxy.html'效果一样 // 若写成'http://c.com'就不会执行postMessage了 ifr.contentWindow.postMessage('I was there!', targetOrigin); }; </script> b.com/index.html中的代码： <script type="text/javascript"> window.addEventListener('message', function(event){ // 通过origin属性判断消息来源地址 if (event.origin == 'http://a.com') { alert(event.data); // 弹出"I was there!" alert(event.source); // 对a.com、index.html中window对象的引用 // 但由于同源策略，这里event.source不可以访问window对象 } }, false); </script>   上一篇 鼠标事件比较与鼠标位置 下一篇 Web应用设置Context Path的方式 顶 0 踩 0 我的同类文章 前端开发 （19） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 woxueliuyun 访问： 345062次 积分： 4894 等级： 积分：4894 排名： 第3063名 原创： 133篇 转载： 17篇 译文： 12篇 评论： 71条 文章搜索 文章分类 c++ (2) Flex (9) hibernate (6) html (15) j2ee (27) javascipt (31) MySQL (1) oracle (2) UML (1) VC (4) windows (9) 学习 (19) 汇编 (2) 网络 (4) 计算机组成原理 (2) 软件工程 (5) 移动 (1) 版本控制 (3) interface (8) 前端开发 (20) 架构 (1) jsp (1) security (1) java (6) 设计模式 (4) build (2) 正则表达式 (1) CSS (3) 文章存档 2015年12月 (3) 2015年09月 (1) 2015年07月 (1) 2015年06月 (2) 2015年05月 (3) 2015年04月 (8) 2015年01月 (2) 2014年12月 (1) 2014年11月 (3) 2014年09月 (2) 2014年07月 (1) 2014年03月 (3) 2014年02月 (2) 2014年01月 (1) 2013年10月 (4) 2013年08月 (1) 2013年06月 (1) 2013年05月 (1) 2013年04月 (3) 2013年03月 (4) 2013年02月 (2) 2013年01月 (2) 2012年12月 (4) 2012年07月 (1) 2012年06月 (4) 2012年04月 (1) 2011年09月 (2) 2011年06月 (1) 2011年05月 (1) 2011年03月 (2) 2010年05月 (1) 2010年03月 (1) 2010年02月 (2) 2009年12月 (2) 2009年11月 (1) 2009年10月 (4) 2009年09月 (2) 2009年06月 (2) 2009年05月 (8) 2009年04月 (4) 2009年03月 (5) 2009年02月 (17) 2009年01月 (5) 2008年12月 (9) 2008年05月 (3) 2008年04月 (1) 2008年03月 (5) 2008年02月 (7) 2008年01月 (17) 2007年12月 (3) 2007年11月 (1) 2007年08月 (1) 阅读排行 随机函数rand()[c++] (29043) package.json字段全解 (13515) window.open()打开窗口的几种方式 (12286) Hibernate配置过程可能发生的问题及解决方法 (10416) document.createElement()介绍与用法 (9884) 详解HttpURLConnection (9769) Form表单传递数组 (9660) War包 (9292) offsetHeight, clientHeight与scrollHeight的区别 (9286) Arrays.copyOf()&Arrays.copyOfRange() (8599) 评论排行 Hibernate配置过程可能发生的问题及解决方法 (8) 随机函数rand()[c++] (7) 垂直居中的几种方法比较（纯CSS） (5) 高效回文判断方法(java) (5) DataTable在支持滚动时的实现方式与遗留问题 (4) Log4j 2 XML 配置 (3) org.hibernate.dialect.MySQLInnoDBDialect与org.hibernate.dialect.MySQLMyISAMDialect (3) package.json字段全解 (3) 什么时候使用JavaScript (3) revealTrans的神奇运用 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 HTTP Cache如何计算Age buwuzhe90 : 博主您好！这里一直有个不明白的地方，希望博主能指点：response_time - date_val... HTTP Cache如何计算Age buwuzhe90 : 博主您好！这里一直有个不明白的地方，希望博主能指点：response_time - date_val... 垂直居中的几种方法比较（纯CSS） mevicky : @woxueliuyun:嗯，向你学习 垂直居中的几种方法比较（纯CSS） woxueliuyun : @mevicky:多谢提醒，因为你说的这些支持性还不是很好，比如IE9不支持flex，所以一般不使用... 垂直居中的几种方法比较（纯CSS） mevicky : 还有很多居中方法 比如利用transform。flex等等 package.json字段全解 jiangcaiyang123 : 博主您好。我也是新写这样的模块，请问package.json这个文件是要程序生成的吗？还是说这些字段... 元素样式控制 clover1107 : 楼主好啊！看到你的博客写了很多web前端的内容，很钦佩，目前我们也在这方面的课程，不知道你有没有兴趣... 详解HttpURLConnection GXG_HONEYLOVE : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 eclipse3.2下解决数据插入mysql数据库时乱码无法插入问题(Hibernate) chenyanmoting : 学习了，给个赞 DataTable在支持滚动时的实现方式与遗留问题 woxueliuyun : @koki_cy:不好意思，回复晚了，不是经常在线。不让它换行只能通过样式td{white-spac...

Recno:: 94
URL:: http://blog.csdn.net/youxin2012/article/details/43703579

ParseText::
tomcat 热加载 - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 tomcat 热加载 标签： tomcat热加载 2015-02-10 15:21 957人阅读 评论 (0) 收藏 举报 分类： java开发 （12） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 近期在servlet开发。由于servlet在tomcat中的生命周期问题（请查阅其他文档），导致调试过程很不方便。 修改后的文件，无法在servlet中重新加载（重启tomcat当然可以，效率是个问题），解决方法是采用 热部署 和 热加载，两者在调试过程中各有自己的优缺点。 此处以热加载，描述下tomcat中的配置。 修改文件：apache-tomcat/conf/server.xml 修改内容：标签中添加 如下 标签 以下是我的配置： <Context debug = "0" path= "/mytest" docBase= "D:/apache-tomcat-8.0.15/webapps/mytest" reloadable= "true" /> 其中 debug：表示log中记录异常的控制等级，数值越大，记录越详细。 path：访问目录 此例即 127.0.0.1/mytest/ docBase：项目目录 可以为绝对路径（注意 ‘/’ 方向），也可以为相对路径（相对 webapps ，此例 docBase=”/mytest”） reloadable：字面意思可看出，是否加载新的class文件，实现热加载。 重启tomcat，完成配置。 上一篇 java中equals与==的对比 下一篇 java 相对路径获取 -- getResource的应用 顶 0 踩 0 我的同类文章 java开发 （12） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375728次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章存档 2015年12月 (3) 2015年11月 (1) 2015年06月 (3) 2015年05月 (2) 2015年03月 (1) 2015年02月 (1) 2015年01月 (2) 2014年12月 (1) 2014年11月 (4) 2014年09月 (3) 2014年08月 (1) 2014年07月 (2) 2014年06月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年02月 (3) 2014年01月 (1) 2013年12月 (8) 2013年11月 (6) 2013年10月 (8) 2013年09月 (6) 2013年08月 (3) 2013年07月 (2) 2013年06月 (4) 2013年05月 (11) 2013年04月 (6) 2013年03月 (7) 2013年02月 (3) 2013年01月 (20) 2012年12月 (2) 2012年10月 (3) 文章搜索

Recno:: 95
URL:: http://blog.csdn.net/youxin2012/article/details/46449365

ParseText::
java中访问修饰符 - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 java中访问修饰符 标签： java 2015-06-11 00:13 531人阅读 评论 (0) 收藏 举报 分类： java开发 （12） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 较之c＋＋ 中 public，proctected, private 三种访问控制， java多了默认访问控制。 java中四种访问控制权限 简单描述为一下四句： 1）private 仅本类可见 （同c＋＋） 2）默认 对本包可见/包内访问 （c＋＋没有） 3）protected 对本包和所有子类可见 （c++中没有本包概念，较 默认访问 可以被在其他包下的子类访问） 4）public 对所有类可见 （同c＋＋） 其中1）4）与c＋＋相同，对2）3）做简单测试 3）protected 对本包可见测试如下： package com.behavior; public class Parent { protected int i = 3 ; } package com.behavior; //与Parent在同一个包下，无继承关系 public class Children { public void action () { Parent parent = new Parent(); System. out .print(parent.i); } } package com.stratege; import com.behavior.Children; public class ChildrenTest { public static void main (String [] args) { Children children = new Children(); children.action(); } } 验证：protected 对包内访问的权限 2）默认 对包内访问测试 将Parent中变量i 访问权限做如下修改，Children, ChildrenTest不变 package com.behavior; public class Parent { int i = 3 ; } 验证：默认对包内访问的权限 顶 0 踩 1 我的同类文章 java开发 （12） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375729次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章搜索

Recno:: 96
URL:: http://blog.csdn.net/yuanziok/article/details/50174857

ParseText::
制药企业核算报表系统整体方案 - IT小牛的IT见解 - 博客频道 - CSDN.NET IT小牛的IT见解 资深IT人士吐血打造IT专业博客，贡献给广大网民最干货的企业信息化建设方案和工具的分析、点评。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 制药企业核算报表系统整体方案 标签： 制药企业 报表核算 2015-12-04 14:53 524人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 整体目标 总体目标 建立全面核算报表系统，从不同的主题、视角与维度，进行信息数据的分析与挖掘，统一展现企业运营管理的现实状况和问题。为企业数据核算建好基础。 需求目标 针对制药企业报表需求内容，以目标使用用户群为主要服务对象，完成数据核算的报表需求开发。 数据解决方案 需求描述： 数据统计口径不同, 当前的财务报表相互独立，已有系统产供销不能实现联动，跨公司的数据不能关联，很难得到统一、完整、直观，并能从各个财务主题与维度展现运营活动的管理数据。 需求分析与解决方案     建立数据仓库（finecube）以及中间库处理数据从而对主数据规范与系统数据清洗解决数据统计口径的问题。 中间库 方案设计思路 价值链管理系统蓝图     全面掌控企业的各种业务活动，及时准确的展现它们的状况与趋势，评估其达成的效果、存在的问题与风险。支持企业管理决策和决策落地跟踪，以及效果评估。支持对企业价值链的信息数据的分析与价值发现，为决策管理、经营管理、业务活动的优化提供真实的数据依据，控制风险，辅助企业管理优化、战略抉择、创新转型。整体方案中包含数据管理、价值链管理（VCM）、协同管理一体化平台三大部分。 价值链管理系统建设  ● 建设目标： 构筑完整的价值链管理体系，建设企业智能化运营的核心系统。分析挖掘企业价值链环节的所有活动，监控运营状况、趋势与一切可能风险，辅助企业的战略与决策、改革创新以及运营管理的优化，提升核心竞争力，最终达成管理的睿智。  ● 建设方针： 通过建立严格、细化、符合统计学原理的数据整合规则，不断提升数据质量。在高质量的数据基础保障之下，建立和扩充价值链管理应用。  ● 建设步骤： 移动互联网应用 全面支持移动互联网应用，支持iPhone、Android、iPad等移动终端应用。   上一篇 大数据时代下的“管理”要素数据化 下一篇 制药企业BI系统方案整体设计分享 顶 5 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 yuanziok 访问： 83472次 积分： 1775 等级： 积分：1775 排名： 第13331名 原创： 77篇 转载： 0篇 译文： 0篇 评论： 104条 文章搜索 文章分类 知识科普 (5) IT产品论 (4) IT秘籍 (24) IT茶社 (3) 保险行业 (2) BI报表 (4) 实例 (4) 技术架构 (2) 数据仓库解析 (1) 能源企业 (1) 信息化系统 (3) 客户管理 (1) 数据分析 (5) 银行行业 (2) 商业智能 (1) 决策分析 (2) 化工企业 (3) 销售模块 (1) 应收款模块 (1) 采购模块 (1) 大数据 (1) 管理要素 (1) 数据化 (2) 制药企业 (2) 报表核算 (0) 电力企业 (4) 信息化 (3) 调度信息 (2) 整体解决 (1) 文章存档 2015年12月 (11) 2015年11月 (11) 2015年10月 (2) 2015年09月 (8) 2015年08月 (11) 2015年07月 (6) 2015年04月 (7) 2015年03月 (14) 2015年02月 (1) 2014年12月 (3) 2014年07月 (1) 2014年05月 (2) 阅读排行 正确选择报表工具的十大标准 (22544) 价值5000元的web报表分享 (3810) 绝对干货：保险公司决策分析系统建设方案 (3446) 报表引擎API开发入门—带参程序数据集 (1823) web报表工具FineReport常用函数的用法总结（文本函数） (1684) 报表填报时，如何实现多个单元格绑定一个字段？ (1657) 电信业务支撑报表系统解决方案 (1587) web报表工具FineReport常用函数的用法总结（日期和时间函数） (1562) 报表软件公司悬赏 BUG，100块钱1个的真实用意 (1498) FineReport性能调优的一些办法 (1426) 评论排行 绝对干货：保险公司决策分析系统建设方案 (40) 正确选择报表工具的十大标准 (13) 价值5000元的web报表分享 (7) 报表引擎API开发入门—带参程序数据集 (7) web报表工具FineReport常用函数的用法总结（文本函数） (3) 巧用FineReport搭建成本管控监测系统 (3) 在开发过程中调试报表插件详细教程 (3) 如何对报表的参数控件赋值 (2) 报表与微信公众号(企业号)集成方案 (2) 报表填报时，如何实现多个单元格绑定一个字段？ (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 电力企业信息化系统主要报表展示 ikkmme28206 : 支持一个！ 化工企业数据分析中心项目之采购模块分析 u012466304 : 突然觉得程序员都懂得好多 化工企业数据分析中心项目之采购模块分析 u010786678 : 感谢楼主的分享，学习了！！ （干货分享）农商行中商业智能建设的整体思路与架构 ggf123456789 : 学习了，呵呵～ 能源企业信息化系统中的典型客户管理数据分析模块展示 u012377333 : 不错， 财务报表开发实例分析：几个通用维度介绍与关键点 laotou99 : 长财务知识了，谢谢博主 报表session与应用session常识普及 wangdan199112 : 写的真心好，学习了！ 报表session与应用session常识普及 u010786678 : 严格的讲，做不到这一点。可以做一点努力的办法是在所有的客户端页面里使用javascript代码win... 报表性能优化方案之多种报表服务器内存修改方法 lipintang0825 : 很有帮助 报表性能优化方案之单数据集分页SQL实现层式报表 IThuabanxie : 感谢楼主分享，学习了

Recno:: 97
URL:: http://my.csdn.net/azurechina

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 212 关注 762 粉丝 azurechina 中国 | 没有内容可显示 V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 212 人 被关注： 762 人

Recno:: 98
URL:: http://my.csdn.net/bisal

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 23 关注 102 粉丝 bisal 计算机软件 | 运维工程师/系统管理员/网络管理员 | 北京-朝阳区 | 10g/11g OCP，YEP成员(Oracle Young Expert Program，Oracle用户组年轻专家项目)，我不是DBA，但我的爱好是Oracle V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 23 人 被关注： 102 人

Recno:: 99
URL:: http://my.csdn.net/kkdelta

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 65 关注 379 粉丝 IT农夫 中国 | 古人学问无遗力, 少壮工夫老始成。 纸上得来终觉浅, 绝知此事要躬行。 V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 65 人 被关注： 379 人
