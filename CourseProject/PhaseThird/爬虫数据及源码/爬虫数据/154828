
Recno:: 0
URL:: http://blog.csdn.net/azurechina/article/details/44940695

ParseText::
如何在Azure Websites中配置PHP从而改变系统默认时区 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何在Azure Websites中配置PHP从而改变系统默认时区 2015-04-08 14:57 561人阅读 评论 (0) 收藏 举报 Shirley_Wang    Tue, Mar 3 2015 7:29 AM Azure Website为我们提供了可高度扩展的网站部署平台。由于Website是PaaS(平台即服务)层的服务，当用户把原有的PHP网站迁移到Azure Websites时，有一些配置方法与传统的方法不同。例如，在Azure Websites中，我们访问不到运行PHP引擎的服务器，也不能访问php.ini文件。 Azure websites提供的运行环境中，默认时区是UTC时间。对于中国区域的客户，我们往往希望通过date对象，直接得到GMT+8的时区。这时，我们需要在PHP应用的根目录下，创建.user.ini文件，并在其中指明: date.timezone = Asia/Chongqing 注意：添加.user.ini文件后，要重启Azure Websites。 这样，如果我们的PHP源代码如下: < html > < head >   < title > PHP Demo page </ title > </ head > < body >      <?php echo  date( "r" );      ?> </ body > </ html > 上面的代码会得到下面的页面输出: 另:  一般来说，php.ini文件中的配置信息，只要不是System级别的配置项，我��都可以通过.user.ini文件来在应用程序的作用域里修改。这里( http://php.net/manual/en/ini.list.php ) 是php.ini的配置项列表和作用级别。 如果你有任何疑问 , 欢迎访问 MSDN 社区，由专家来为您解答 Windows Azure 各种技术问题，或者拨打世纪互联客户服务热线 400-089-0365/010-84563652 咨询各类服务信息 。 本文转载自： http://blogs.msdn.com/b/cciccat/archive/2015/03/03/change-azure-websites-timezone-in-php.aspx 上一篇 Azure HDInsight HBase DR解决方案 下一篇 如何在CentOS 5.x 中安装Windows Azure Linux Agent (WALA) 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840710次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 1
URL:: http://blog.csdn.net/azurechina/article/details/44941023

ParseText::
如何在CentOS 5.x 中安装Windows Azure Linux Agent (WALA) - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何在CentOS 5.x 中安装Windows Azure Linux Agent (WALA) 2015-04-08 15:11 1176人阅读 评论 (0) 收藏 举报 Qing Liu    Tue, Mar 10 2015 3:06 AM   在今天的这一个章节中，我们主要讨论在CentOs 5.x 中如何安装Windows Azure Linux Agent 2.11 (简称WALA）。如果你是需要对CentOS 6.x 发行版本进行Windows Azure 基本镜像进行配置，请参考Azure 中文官网 " 创建并上传包含 Linux 操作系统的虚拟硬盘 " 对应6.x 的相关步骤，在CentOS 5.x中进行Windows Azure Linux Agent 主要步骤和区别如下， 需要手工安装Python 2.6 以上版本 需要手工安装python-pyasn1 需要修改resource disk 类型为ext3 需要手工安装WALA (waagent -install) 准备 CentOS 5.x 客户虚拟机，您必须在本地有HyperV 功能的操作系统中完成特定的配置步骤才能使虚拟机在 Azure 中运行，如Windows 8.0 or Windows 2008 R2 或以上版本的Windows 操作系统 在 Hyper-V 管理器中，选择已经通过ISO镜像安装完成的虚拟机 单击 “连接” 以打开虚拟机窗口。使用root账号登录系统 通过运行以下命令卸载 NetworkManager # yum remove NetworkManager 注意：如果未安装此包，则该命令将失败，并显示一条错误消息。这是正常情况。 在  /etc/sysconfig/  目录中创建一个名为  network  的文件，该文件包含以下文本： NETWORKING=yes NETWORKING_IPV6=no HOSTNAME=localhost.localdomain 在  /etc/sysconfig/network-scripts/  目录中创建一个名为  ifcfg-eth0  的文件，该文件包含以下文本：  DEVICE=eth0 ONBOOT=yes BOOTPROTO=dhcp TYPE=Ethernet USERCTL=no PEERDNS=yes IPV6INIT=no 移动（或删除）udev 规则，以避免产生以太网接口的静态规则。在 Windows Azure 或 Hyper-V 中克隆虚拟机时，这些规则会引发问题 # mkdir -m 0700 /var/lib/waagent # mv /lib/udev/rules.d/75-persistent-net-generator.rules /var/lib/waagent/ # mv /etc/udev/rules.d/70-persistent-net.rules /var/lib/waagent/ 通过运行以下命令，确保网络服务将在引导时启动： # chkconfig network on 安装适用于 Linux Integration Services 的驱动程序 , 注意此处5.5 、5.6 、5.7、5.8 需要安装相应版本的LIS, 5.9、5.10可以省略，发行版本中已经包含了相应的LIS 驱动程序 将下列行添加到 /etc/yum.conf http_caching=packages 通过编辑文件“/etc/yum/pluginconf.d/fastestmirror.conf”禁用 yum 模块“fastestmirror”，并在 [main] 下面键入以下内容 set enabled=0 运行以下命令以便清除当前 yum 本地库 # yum clean all 对于 CentOS  5.x，通过运行以下命令更新正在运行的虚拟机的内核 # yum --disableexcludes=all install kernel 在 grub 配置中修改内核引导行，以使其包含 Azure 的其他内核参数。若要执行此操作，请在文本编辑器中打开 /boot/grub/menu.lst，并确保默认内核包含以下参数： console=ttyS0 earlyprintk=ttyS0 rootdelay=300 numa=off   安装编译器环境 # yum install gcc zlib-devel python-setuptools readline-devel   下载，解压，编译，安装Python 2.6 以上版本。在本例中使用了2.7.8。 # cd / # mkdir /tmp # wget http://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz # tar -xzvf Python-2.7.8.tgz # cd Python-2.7.8 # ./configure # make altinstall 建立sbin 硬连接 # ln -s /usr/local/bin/python2.7 /usr/sbin/python 下载，解压，安装python-pyasn1 # cd /tmp # wget http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/python-pyasn1-0.0.12a-1.el5.rf.noarch.rpm # rpm -ivh python-pyasn1-0.0.12a-1.el5.rf.noarch.rpm # rpm -qa|grep "python" 复制python-pyasn1的安装包到2.7.8的site-package内 # cp -avr /usr/lib/python2.4/site-packages/pyasn1 /usr/local/lib/python2.7/site-packages/pyasn1   下载，安装Windows Azure Linux Agent # cd /tmp # wget https://raw.githubusercontent.com/Azure/WALinuxAgent/WALinuxAgent-2.0.11/waagent --no-check-certificate # chmod +x waagent # cp waagent /usr/sbin # cd /usr/sbin # waagent -install   清除/tmp下的文件 # cd / # rm -Rf /tmp # mkdir /tmp   不要在 OS 磁盘上创建交换空间。Azure Linux 代理可使用在 Azure 上设置后附加到虚拟机的本地资源磁盘自动配置交换空间。在安装 Azure Linux 代理（请参见步骤19）后，相应地在 /etc/waagent.conf 中修改以下参数： ResourceDisk.Format=y ResourceDisk.Filesystem=ext3 ResourceDisk.MountPoint=/mnt/resource ResourceDisk.EnableSwap=y ResourceDisk.SwapSizeMB=4096 ## NOTE: set this to whatever you need it to be.   重新启动Linux VM, 用root账号登录系统，执行deprovision # waagent -force -deprovision # export HISTSIZE=0 # logout 关闭虚拟机，上传VHD 到Windows Azure 块存储中， 可以使用Add-AzureVHD  PS C:\> Add-AzureVhd -Destination http://mytestaccount.blob.core.windows.net/vhdstore/centos53image.vhd -LocalFilePath C:\vhd\centos53image.vhd -NumberOfThreads 32 最后可以参考 Create and upload a Linux VHD in Azure 完成虚拟机的建立。  如果你有任何疑问 , 欢迎访问 MSDN 社区，由专家来为您解答 Windows Azure 各种技术问题，或者拨打世纪互联客户服务热线 400-089-0365/010-84563652 咨询各类服务信息 。 本文转载自： http://blogs.msdn.com/b/cciccat/archive/2015/03/10/centos-5-x-windows-azure-linux-agent-wala.aspx     上一篇 如何在Azure Websites中配置PHP从而改变系统默认时区 下一篇 如何将虚拟机迁移至新的存储账户 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840705次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 2
URL:: http://blog.csdn.net/azurechina/article/details/44941443

ParseText::
如何将虚拟机迁移至新的存储账户 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何将虚拟机迁移至新的存储账户 2015-04-08 15:44 937人阅读 评论 (0) 收藏 举报   Joy Qiao from MSFT    Thu, Mar 12 2015 10:56 AM  Contributors:  Blair Chen ,  Sun Wei ,  Liu Qing 我们在使用Azure的过程中，有时会需要把Azure虚拟机的相关VHD文件从现有的存储账户迁移到其它存储账户。比如说，当现有的存储账户下面已经存在超过了40个活跃使用的VHD文件，而由于每个VHD文件作为一个Azure Blob对象都可以产生上至每秒500个请求，导致单个存储账户的每秒20000个请求的上限可能会被超出，从而触发限制的机制。在这种情况下，建议需要将这个存储账户下的某些虚机尽快迁移至其它的存储账户，以免触发限制机制。 在讨论如何把虚拟机的VHD从一个存储账户迁移到另外一个存储账户之前，我们先来回顾一下Azure虚拟机的一些基本概念。首先，对于Azure IaaS的虚拟机在设计上是把计算和存储是分离开的。在创建虚拟机的时候，所有持久VHD（系统盘，数据盘VHD文件）都是创建在Azure存储里，而不是直接创建在虚机所处于的物理节点上。虚拟机启动的时候，会直接从存储账户里的VHD文件启动引导操作系统，存储账户中VHD文件本质上是一个blob文件。其次，创建VM的时候，Azure只允许把VHD创建在和虚拟机在同一个区域（比如北京或者上海的数据中心）的存储里，这主要是为了保证计算节点和存储之间的网络延迟尽可能小，从而保证虚拟机的IO性能。 迁移之前的准备计划 如果现有环境已经是生产环境，那么在迁移之前需要有周全的准备和计划，以确保最小化业务系统的中断时间。下面列出了在迁移之前需要检查以及准备的一些事项。 1. 梳理虚机迁移的源存储账户和目标存储账户的对应列表。 首先需要基于上述限制指标梳理一个详细的迁移列表，包括哪些虚机需要迁移，每台虚机迁移的源存储账户以及目标存储账户。如果目标存储账户还不存在，那么可以把目标存储账户先创建好备用。 2. 确认现有的部署架构是否需要虚机的内部IP地址需要保持不变。 由于在虚机的迁移过程中会删除现有的虚机，然后基于迁移至目标存储账户的VHD文件重新创建虚机，在这个过程中虚机的内部IP地址有可能会改变。所以需要确认现有的部署架构中是否对现有虚机的IP地址有任何依赖关系，比如是否使用了内部IP地址进行一些应用层的配置，IP地址的改变是否会影响应用的某些连接等等。 如果需要内部IP地址保持不变，可以在基于迁移后的VHD文件创建虚机时使用静态IP地址来确保虚机能够沿用之前的IP地址。 3. 确认现有的部署架构是否需要虚机的公有虚拟IP（VIP）地址保持不变。 如果需要迁移的虚机是其所属的云服务下面的唯一虚机，那么迁移的过程可能会导致这台虚机及其所属的云服务的公有虚拟IP地址变化。主要因为在这台虚机被删除掉后并且还未被重新创建之前这个时间段内，其所属云服务下面没有挂载任何虚机，这个状态下云服务的VIP资源将会被释放。而当新的虚机在这个云服务下重新被创建后，新的VIP则会分配给云服务。 如果确认需要保持现有的VIP不变，比如说某些客户端不是用DNS域名而是使用IP地址来指向Azure中的云服务，那么可以在迁移中增加一个步骤，比如在迁移这类虚机之前先在其所属的云服务下面创建一个A0型号的虚机。这样来确保在整个迁移过程中这个云服务下面始终至少有一台虚机，这样VIP资源就不会被释放，公有IP地址也就不会改变。在迁移完成后即可删除这个临时的A0虚机。 4. 检查并导出现有虚机的所有属性及配置信息。 通常虚机的所有属性及配置在迁移前后都是需要保持不变的，比如虚机名称、大小型号、开放的端口、所属的云服务、地缘组、虚拟网络等。所以建议导出虚机、虚拟网络的所有属性及配置信息至XML文件以保存记录。   5. 准备回滚计划及脚本。 建议要准备回滚计划，以备万一迁移失败或者时间过长无法在运维窗口时间内完成时，能够快速回滚至原有状态。迁移之前应该准备好回滚的脚本，确保虚机能够随时恢复至原有状态，避免出现预期外的系统中断。 6. 测试存储账户之间的VHD拷贝速度。 在存储账户之间拷贝文件是一个异步的操作，没有速度的SLA。但通常情况如果源和目标存储账户属于同一个物理集群的话，速度一般还是比较快的。根据经验，通常可以在10秒到3分钟之间完成一个100GB的VHD文件拷贝。 但是，如果源和目标存储账户不在同一个物理集群中，那个拷贝文件就可能会比较慢，这就需要运维窗口有足够的时间来完成迁移。同时，也可以用以下方法来控制迁移的时间长度。 a) 如果源存储账户属于一个地缘组，那么可以把目标存储账户也创建在同一个地缘组当中。这样可以确保源和目标存储账户属于同一个集群，从而避免跨集群拷贝文件可能会慢的问题。 b) 也可以进行应用层面的迁移，比如将应用以及相关的数据从现有的虚机中迁移出来，重新部署到新的虚机中。   7. 在生产环境执行迁移之前，先用一台测试虚机测试迁移脚本。 在迁移任何生产环境的虚机之前，建议使用测试虚机对测试脚本进行完整的测试。 8. 准备一台Azure虚机用来执行迁移脚本，避免执行脚本环境的网络问题。 有时用户自己的本地网络可能会有各种限制以及不稳定的问题，这可能会导致迁移脚本在执行过程中由于网络的临时不稳定或丢包造成迁移的中断，造成不必要的麻烦。所以，建议准备一台Azure虚机配置好相关的powershell环境，用来执行迁移脚本。 9. 检查确保所有虚机中的应用、数据库以及用户数据都已经做好备份。   虚机迁移步骤 如果需要迁移的虚机是生产环境，建议按照顺序逐一迁移虚机，确保一台虚机迁移成功没有问题后再迁移下一台。如果出现问题或失败，可以立即执行回滚脚本将虚机恢复至其原有状态，最小化系统中断时间。 下面是一个单台虚机的迁移步骤说明供参考。注意由于每个用户的环境和需求不同，建议可以根据具体情况参考下述步骤进行补充和调整。 1. 导出虚拟机机配置文件 迁移的第一个准备工作是把虚拟机的配置文件导出，这主要是为了后面能用同样的配置信息把虚拟机重新创建出来。下面是导出虚拟机配置文件的powershell代码： $sourceVM = Get-AzureVM –ServiceName $cloudServiceName –Name $vmName $sourceVM | Export-AzureVM -Path $vmConfigurationPath 2. 远程登陆进入虚机OS, 在OS中关闭虚机 3. 删除虚机并保留VHD文件 需要把所有的磁盘和vhd文件的映射关系通过Remove-AzureDisk来解除。 4. 复制VHD文件到目标存储账户 Azure存储提供了从一个存储账户复制文件到另外一个存储账户的API，这里有一些需要注意的地方：首先，跨存储账户的blob复制的PowerShell命令Start-AzureStorageBlobCopy是一个异步命令，也就是说会立刻返回，调用者需要通过Get-AzureStorageBlobCopyState轮询来获得复制的最新进度。其次，blob的复制是没有SLA的，所以在跨物理集群复制blob的时候，可能会遇到花费时间比较长的情况。下面便是把虚拟机所有的VHD文件从源存储账户复制到目标存储账户的代码示例。  foreach($disk in $allDisks) {     $elapsed = [System.Diagnostics.Stopwatch]::StartNew()     $blobName = $disk.MediaLink.Segments[2]     Write-Host "$blobName copy started at $(get-date)"     Write-Host "Source =" $sourceContext.BlobEndpoint     Write-Host "Dest =" $destContext.BlobEndpoint     $targetBlob = Start-AzureStorageBlobCopy -SrcContainer vhds -SrcBlob $blobName -DestContainer vhds -DestBlob $blobName -Context $sourceContext -DestContext $destContext -Force     do      {         if ($copyState.TotalBytes -gt 0 )         {             $percent = ($copyState.BytesCopied / $copyState.TotalBytes) * 100             Write-Host "$blobName copy completed $('{0:N2}' -f $percent)%"         }         Start-Sleep -Seconds 10         $copyState = $targetBlob | Get-AzureStorageBlobCopyState     } while ($copyState.Status -ne "Success")     Write-Host "$blobName copy ended at $(get-date)"     Write-Host "$blobName copy total elapsed time: $($elapsed.Elapsed.ToString())"     If ($disk -eq $sourceOSDisk)     {         $destOSDisk = $targetBlob     }     Else     {         $destDataDisks += $targetBlob     } } 5. 创建Azure磁盘 在完成把VHD复制到目标存储账户后，下一步便是把所有的磁盘通过Add-Disk创建出来，这里需要确保每个磁盘的名字和顺序和原来一样。 Add-AzureDisk -OS $sourceOSDisk.OS -DiskName $sourceOSDisk.DiskName -MediaLocation $destOSDisk.ICloudBlob.Uri foreach($currenDataDisk in $destDataDisks) {     $diskName = ($sourceDataDisks | ? {$_.MediaLink.Segments[2] -eq $currenDataDisk.Name}).DiskName     Add-AzureDisk -DiskName $diskName -MediaLocation $currenDataDisk.ICloudBlob.Uri } 6. 创建虚机 最后，用Import-AzureVM和New-AzureVM这2个powershell cmdlet就可以将虚拟机按原有的配置重新建出来。如果需要，可以设置静态IP以确保虚机沿用之前的IP地址不变，如下面样例脚本所示。 Import-AzureVM -Path $vmConfigurationPath | Set-AzureStaticVNetIP -IPAddress $sourceVM.IpAddress | New-AzureVM -ServiceName $cloudServiceName -VNetName $vnetName -WaitForBoot 7. 检查虚机是否开启以及运行正常 。 远程登陆进入虚机，检查确保其中的应用及数据库等均正常运行。 下面是一个完整的powershell迁移示例脚本，包含了上述步骤和逻辑供参考。 <# .EXAMPLE        .\Move-AzureVM.ps1 -cloudServiceName "vhdmove1" -vmName "vhdmove1" -destStorageAccountName "teststorage" -vnetName "RVNET-SH01"        .\Move-AzureVM.ps1 -cloudServiceName "vhdmove2" -vmName "vhdmove2" -destStorageAccountName "teststorage " -vnetName "RVNET-SH01"        .\Move-AzureVM.ps1 -cloudServiceName "vhdmove3" -vmName "vhdmove3" -destStorageAccountName "teststorage " -vnetName "RVNET-SH01" #>  param (     [string] $cloudServiceName,                   #Cloud service name of VM     [string] $vmName,                             # VM Name     [string] $destStorageAccountName,             #Target storage account name     [string] $vnetName                         # Virtual network name of VM )   $ErrorActionPreference = "Stop"   try{ stop-transcript|out-null } catch [System.InvalidOperationException] { } $workingDir = (Get-Location).Path $log = $workingDir + "\VM-" + $vmName + ".log" Start-Transcript -Path $log -Append -Force   Write-Host "==========Migration Setting ===========" Write-Host "Cloud Service = $cloudServiceName       " Write-Host "           VM = $vmName" Write-Host " Dest Storage = $destStorageAccountName " Write-Host "         VNET = $vnetName" Write-Host "========================================"   $currentSubscription = Get-AzureSubscription -Current $cloudEnv = $currentSubscription.Environment   $vmConfigurationPath = $workingDir + "\VM-" + $vmName + ".xml" $sourceVM = Get-AzureVM – ServiceName $cloudServiceName  –Name $vmName # 首先检查虚机的状态是否为stopped. 如果不是，那么提示用户先关掉虚机。 if ( $sourceVM.Status -ne "StoppedVM" ) {     Write-Error "ERROR: please make sure $vmName is shut down"     Exit } Write-Host "Exporting VM configuration to $vmConfigurationPath" $sourceVM | Export-AzureVM -Path $vmConfigurationPath $sourceOSDisk = $sourceVM.VM.OSVirtualHardDisk $sourceDataDisks = $sourceVM.VM.DataVirtualHardDisks   # Get source storage account information $sourceStorageAccountName = $sourceOSDisk.MediaLink.Host -split "\." | select -First 1 $sourceStorageAccount = Get-AzureStorageAccount –StorageAccountName $sourceStorageAccountName $sourceStorageKey = (Get-AzureStorageKey -StorageAccountName $sourceStorageAccountName).Primary $sourceContext = New-AzureStorageContext –StorageAccountName $sourceStorageAccountName -StorageAccountKey $sourceStorageKey -Environment $cloudEnv   # Get destination storage account information $destStorageAccount = Get-AzureStorageAccount | Where {$_.StorageAccountName -eq $destStorageAccountName } $destStorageAccountName = $destStorageAccount.StorageAccountName if ($destStorageAccount -eq $null) {     if ($sourceStorageAccount.Location -ne $null)     {         New-AzureStorageAccount -StorageAccountName $destStorageAccountName -Location $sourceStorageAccount.Location     }     else {         New-AzureStorageAccount -StorageAccountName $destStorageAccountName -AffinityGroup $sourceStorageAccount.AffinityGroup     }     $destStorageAccount = Get-AzureStorageAccount -StorageAccountName $destStorageAccountName } $destStorageKey = (Get-AzureStorageKey -StorageAccountName $destStorageAccountName).Primary $destContext = New-AzureStorageContext –StorageAccountName $destStorageAccountName -StorageAccountKey $destStorageKey -Environment $cloudEnv if ((Get-AzureStorageContainer -Context $destContext -Name vhds -ErrorAction SilentlyContinue) -eq $null) {     New-AzureStorageContainer -Context $destContext -Name vhds } Write-Host "Remove VM " $vmName Remove-AzureVM –§CServiceName $cloudServiceName –Name $vmName # Copy all vhd disk blobs, including both OS and data disks $allDisks = @($sourceOSDisk) +$sourceDataDisks $destDataDisks = @()   Write-Host "Waiting utill all vhd disk locks are released" do {        Start-Sleep -Seconds 10        $disksInUse = Get-AzureDisk | Where-Object { ($_.AttachedTo.RoleName -eq $vmName) -and ($_.AttachedTo.HostedServiceName -eq $cloudServiceName) }        Write-Host "Disk in use: " $disksInUse.Count } while (($disksInUse -ne $null) -or ($disksInUse.Count -gt 0)) foreach($disk in $allDisks) {     Write-Host "Remove VM Disk " $disk.DiskName      Remove-AzureDisk -DiskName $disk.DiskName }  foreach($disk in $allDisks) {     $elapsed = [System.Diagnostics.Stopwatch]::StartNew()     $blobName = $disk.MediaLink.Segments[2]     Write-Host "$blobName copy started at $(get-date)"     Write-Host "Source =" $sourceContext.BlobEndpoint     Write-Host "Dest =" $destContext.BlobEndpoint     $targetBlob = Start-AzureStorageBlobCopy -SrcContainer vhds -SrcBlob $blobName -DestContainer vhds -DestBlob $blobName -Context $sourceContext -DestContext $destContext -Force     do     {               if ($copyState.TotalBytes -gt 0 )               {                      $percent = ($copyState.BytesCopied / $copyState.TotalBytes) * 100                      Write-Host "$blobName copy completed $('{0:N2}' -f $percent)%"               }         Start-Sleep -Seconds 10         $copyState = $targetBlob | Get-AzureStorageBlobCopyState     } while ($copyState.Status -ne "Success")     Write-Host "$blobName copy ended at $(get-date)"     Write-Host "$blobName copy total elapsed time: $($elapsed.Elapsed.ToString())"     If ($disk -eq $sourceOSDisk)     {         $destOSDisk = $targetBlob     }     Else     {         $destDataDisks += $targetBlob     } }   # Create OS and data disks Write-Host "Add VM OS Disk " $destOSDisk.MediaLink Add-AzureDisk -OS $sourceOSDisk.OS -DiskName $sourceOSDisk.DiskName -MediaLocation $destOSDisk.ICloudBlob.Uri foreach($currenDataDisk in $destDataDisks) {        $diskName = ($sourceDataDisks | ? {$_.MediaLink.Segments[2] -eq $currenDataDisk.Name}).DiskName        Write-Host "Add VM Data Disk " $currenDataDisk.ICloudBlob.Uri        Add-AzureDisk -DiskName $diskName -MediaLocation $currenDataDisk.ICloudBlob.Uri }   Write-Host "Import VM from " $vmConfigurationPath Set-AzureSubscription -SubscriptionName $currentSubscription.SubscriptionName -CurrentStorageAccountName $destStorageAccountName do {        Write-Host $sourceVM.IpAddress " Waiting till ip becomes available"        Sleep -Seconds 10        $ip = Test-AzureStaticVNetIP –VNetName $vnetName –IPAddress $sourceVM.IpAddress } while ( $ip.IsAvailable -ne $true )   # Import VM with previous exported configuration plus vnet info Import-AzureVM -Path $vmConfigurationPath | Set-AzureStaticVNetIP -IPAddress $sourceVM.IpAddress | New-AzureVM -ServiceName $cloudServiceName -VNetName $vnetName -WaitForBoot Stop-Transcript -ErrorAction SilentlyContinue 如果你有任何疑问 , 欢迎访问 MSDN 社区，由专家来为您解答 Windows Azure 各种技术问题，或者拨打世纪互联客户服务热线 400-089-0365/010-84563652 咨询各类服务信息 。 本文转载自： http://blogs.msdn.com/b/cciccat/archive/2015/03/12/move-vm-into-new-storage-account.aspx 上一篇 如何在CentOS 5.x 中安装Windows Azure Linux Agent (WALA) 下一篇 关于Azure存储账户中存储虚拟机VHD文件的注意事项 顶 0 踩 0

Recno:: 3
URL:: http://blog.csdn.net/azurechina/article/details/44941931

ParseText::
关于Azure存储账户中存储虚拟机VHD文件的注意事项 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 关于Azure存储账户中存储虚拟机VHD文件的注意事项 2015-04-08 15:51 653人阅读 评论 (0) 收藏 举报   Joy Qiao from MSFT    Thu, Mar 12 2015 3:16 PM   我们在使用Azure时经常都会在Azure存储账户中放一些文件，包括Azure虚机的VHD文件也都是放在存储账户中的。建议用户要注意监控Azure存储账户的每秒请求数量等指标，以免超出上限而导致触发限制机制。 每个Azure存储账户可以提供最多500 TB的存储，以及上至每秒20000个请求 Azure存储账户中的每个blob对象，可以提供上至每秒500个请求或者是每秒60MB的数据传输，注意超过这两项其中任何一项即会触发限制机制。 对于标准级别的虚机，建议在一个存储账户下最多不要放置超过40个活跃使用的VHD文件(20,000/500)。注意，当使用一个自定义的镜像创建虚机时，新的虚机文件首先会被自动放置在与镜像所属的同一个存储账户中。这样有可能会导致同一个存储账户中积累过多的虚机及VHD文件。所以当需要基于同一个镜像来创建很多个虚机的时候，建议将虚机创建完毕后尽快迁移到其它的存储账户中。 以下链接的文档中包含有详细的关于Azure订阅以及各项服务的限制、额度和约束等，建议一定要仔细监控Azure账户的使用情况，确保不会超出这些限制。 http://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/?rnd=1#storagelimits 下面这个powershell示例脚本可以用来监控存储账户中的VHD文件个数。建议一定要定期检查监控所有存储账户中的VHD文件个数，以免超出上面链接文档中所列出的各项限制指标。 Get-AzureDisk|Group-Object { $_.MediaLink.Authority.Split('.')[0]}|select Name,Count  如果在现有的Azure部署环境中已经存在同一个存储账户中有过多VHD文件的情况，那么建议要尽快将这些VHD文件迁移至其它的存储账户，以免触发限制机制。建议可以参考 如何将虚拟机迁移至新的存储账户 这篇文章来迁移虚机。 如果你有任何疑问 , 欢迎访问 MSDN 社区，由专家来为您解答 Windows Azure 各种技术问题，或者拨打世纪互联客户服务热线 400-089-0365/010-84563652 咨询各类服务信息 。 本文转载自： http://blogs.msdn.com/b/cciccat/archive/2015/03/12/azure-storage-account-vhd.aspx 上一篇 如何将虚拟机迁移至新的存储账户 下一篇 体验Azure的 Automation “自动化” 服务预览版 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840708次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 4
URL:: http://blog.csdn.net/azurechina/article/details/45096715

ParseText::
体验Azure的 Automation “自动化” 服务预览版 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 体验Azure的 Automation “自动化” 服务预览版 2015-04-17 14:53 470人阅读 评论 (0) 收藏 举报 一直想要实现对Azure上跑的虚机进行定期的自动备份。在网上搜了一下有关的解决方案，发现一个不错的 帖子 ，是基于国外的Azure服务做的。基本原理就是利用Azure的Automation（自动化）服务来写PowerShell脚本完成关机、备份、开机。最近发现国内Azure也有了“自动化”服务，便决定把这个贴子里说到的方法搬到国内Azure上试一试。 首先，你会看到在左侧菜单里有“自动化”的服务。 选择“新建”>>“自动化”>>“运行手册”>>“快速创建”。这里有几项信息要填。 RUNBOOK名称：这里需要给你的脚本取个名字，比如“MyTestRunbook”，这里我用了“BackupMoodleVM”这个名字 说明：可以不填 自动管理账户：第一次用“自动化”服务必须要建一个管理账户，也需要取个名字，比如“MyAutomationAccount”，这里我用了“automation4mcai”这个名字 订阅：选择目标订阅 区域：选择中国北部或东部 建完服务后，需要上传几个额外的脚本。 首先，打开服务，点击上面菜单里的“资产”，这里已经有了不少缺省的模块，都是PowerShell和Azure基础功能有关的。 在屏幕下方点击“导入模块”，上传  AzureBackupFunction.zip   这个文件。这个文件是在  QNDAzureBackup.zip  的基础上略作修改的。打开这个zip文件里面有一个文件夹和两个PowerShell文件。我修改了.PSM1这个文件里两行命令，让它可以在国内Azure上工作。 $dstContext = new-azurestoragecontext -StorageAccountName $backupStorageAccountName -StorageAccountKey (Get-AzureStorageKey -StorageAccountName $backupStorageAccountName).Primary  -environment "AzureChinaCloud" $srcContext = new-azurestoragecontext -StorageAccountName $srcStgAccountName -StorageAccountKey (Get-AzureStorageKey -StorageAccountName $srcStgAccountName).Primary  -environment "AzureChinaCloud" 上传完成后，可以在“资产”列表里看到这个“AzureBackupFunction”模块。点击这个新的模块，确认下面的“活动”有“Backup-AzureVM”这个命令的名字。 然后，点击上面菜单里的“RUNBOOKS”，这里可以看到我新建的“BackupMoodleVM”这个名字。这里还有一个文件要上传，点击屏幕下面的“导入”，上传  Connect-AzureVM.ps1   这个文件。这个脚本内容是从这个博客 帖子 里得到的，但也略作修改，为了可以在国内Azure上工作。 Add-AzureAccount -Credential $AzureOrgIdCredential  -environment "AzureChinaCloud"  | Write-Verbose 上传完成后，可以开始写我们自己的脚本了。点击“BackupMoodleVM”，在上面的菜单选择“创作”，会进入“草稿”编辑器。粘贴一下脚本内容。 workflow BackupMoodleVM { param ( [Parameter(Mandatory=$true)] [String] $password ) # Set up variables $AzureSubscriptionName = "CaiLang Subscription" $AzureOrgId = "user@cailang.partner.onmschina.cn" $AzurePassword = $password | ConvertTo-SecureString -AsPlainText -Force $AzureOrgIdCredential = New-Object System.Management.Automation.PSCredential($AzureOrgId,$AzurePassword) $ServiceName = "moodle-cloudservice" $VMName = "moodlevm" $StorageAccountName = "cailangstorage" $backupContainerName = "vm-backup" # Set up Azure connection by calling the Connect-Azure runbook $Uri = Connect-AzureVM -AzureSubscriptionName $AzureSubscriptionName -AzureOrgIdCredential $AzureOrgIdCredential -serviceName $ServiceName -VMName $VMName # Stop Azure VM Stop-AzureVM -ServiceName $ServiceName -Name $VMName -StayProvisioned # Backup Azure VM Backup-AzureVM -serviceName $ServiceName -VMName $VMName -backupContainerName $backupContainerName -backupStorageAccountName $StorageAccountName –includeDataDisks # Start Azure VM Start-AzureVM -ServiceName $ServiceName -Name $VMName } 解释一下需要配置的对象。 AzureSubscriptionName：这个是虚机所在订阅的名字 AzureOrgId：这个是Azure的登陆用户名 ServiceName：这个是虚机挂靠的云服务名字 VMName：目标虚机的名字 StorageAccountName：用来备份虚机硬盘的存储账号 backupContainerName：用来备份虚机硬盘的容器名字 大家也可以根据自己的需求将这些对象都放到参数配置里，就像password那样，在运行时在输入。编辑完成后，点击屏幕下方的“测试”，确保脚本可以跑起来，最后点击“发布”。别忘了发布刚才导入的Connect-AzureVM脚本。 在运行时，我遇到以下的错误。这是来自于Connect-AzureVM脚本中尝试去那虚机的证书的操作，个人认为可以忽略这个错误，我备份的是Ubuntu系统。 Error: Get-AzureCertificate : Cannot validate argument on parameter 'Thumbprint'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again. At Connect-AzureVM:63 char:63 +  + CategoryInfo : InvalidData: (:) [Get-AzureCertificate], ParameterBindingValidationException + FullyQualifiedErrorId :  ParameterArgumentValidationError,Microsoft.WindowsAzure.Commands.ServiceManagement.Certificates.GetAzureCertificate 之后就可以配置“计划日程”来定期备份虚机了。 如果你有任何疑问 , 欢迎访问 MSDN 社区，由专家来为您解答 Windows Azure 各种技术问题，或者拨打世纪互联客户服务热线 400-089-0365/010-84563652 咨询各类服务信息 。 本文转载自：  http://blog.csdn.net/u014296016/article/details/44920687 上一篇 关于Azure存储账户中存储虚拟机VHD文件的注意事项 下一篇 禅道，然之和蝉知入驻VM Depot 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840693次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 5
URL:: http://blog.csdn.net/azurechina/article/details/45242385

ParseText::
禅道，然之和蝉知入驻VM Depot - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 禅道，然之和蝉知入驻VM Depot 2015-04-24 09:41 632人阅读 评论 (0) 收藏 举报 Posted on  四月 21, 2015  by  陈阳 近日, 易软天创与微软开放技术合作，在虚拟镜像中国站点vmdepot.msopentech.cn上成功部署易软天创的集成管理环境，为希望快速基于微软Azure云平台体验易软天创开源管理方案的朋友们提供了方便。该集成环境内置了 禅道 项目管理软件、 蝉知 企业门户系统和 然之 协同管理系统三个产品，可以作为一个集成环境来体验开源一体化管理解决方案。现在，让我们一道来看看这三个有中国风的开源项目吧： 禅道 是第一款国产的开源项目管理软件。它集产品管理、项目管理、质量管理、文档管理、 组织管理和事务管理于一体，是一款专业的研发项目管理软件，完整地覆盖了项目管理的核心流程。禅道管理思想注重实效，软件架构合理，操作简洁高效，代码实现合理，内置灵活的扩展机制和api调用机制，支持多语言。 蝉知 企业门户系统是一款专向企业营销使用的企业门户系统，企业使用蝉知系统可以非常方便地搭建一个专业的企业营销网站，进行宣传，开展业务，服务客户。蝉知系统内置了文章、产品、论坛、评论、会员、博客、帮助等功能，同时还可以和微信进行集成绑定。功能丰富实用，后台操作简洁方便。蝉知系统还内置了搜索引擎优化必备的功能，比如关键词，摘要，站点地图，友好路径等，使用蝉知系统可以非常方便的搭建对搜索引擎友好的网站。 然之 协同系统是一款面向中小企业的协同办公系统，旨在为中小团队提供最简洁高效的协同管理工具。它内置了客户管理、销售跟踪、日常办公、现金流管理、团队分享等必备功能模块，是中小团队协同的首选。 禅道之父 王春生 还分享了如何在Windows Azure上发布开源虚拟机镜像的经验分享。 http://blog.cnezsoft.com/blog/79926_azure.html 还等什么，现在就可以在VMDepot上部署禅道，然之，蝉之三合一开源集成管理环境了！ 我们欢迎社区成员到这里来发布您喜欢的应用程序、配置和设置。请别忘了通过评论、反馈或级别评定留下您的宝贵意见，以帮助我们增强社区体验。 陈阳 技术推广师 微软开放技术（中国） 如果你有任何疑问 , 欢迎访问 MSDN 社区，由专家来为您解答 Windows Azure 各种技术问题，或者拨打世纪互联客户服务热线 400-089-0365/010-84563652 咨询各类服务信息 。 本文转载自 ：   https://cn.msopentech.com/blog/2015/04/21/%E7%A6%85%E9%81%93%EF%BC%8C%E7%84%B6%E4%B9%8B%E5%92%8C%E8%9D%89%E7%9F%A5%E5%85%A5%E9%A9%BBvm-depot/     上一篇 体验Azure的 Automation “自动化” 服务预览版 下一篇 Azure SQL 数据库与新的数据库吞吐量单位 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840704次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 6
URL:: http://blog.csdn.net/azurechina/article/details/46366461

ParseText::
Azure SQL 数据库与新的数据库吞吐量单位 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Azure SQL 数据库与新的数据库吞吐量单位 2015-06-04 19:58 413人阅读 评论 (0) 收藏 举报 在这一期中，Scott 与 Azure SQL 数据库性能首席项目经理主管 Tobias Ternstrom 一起详细阐释了新的数据库吞吐量单位 (Database Throughput Unit, DTU) 是什么，以及用户如何通过它来了解新服务级别可以提供的服务内容。DTU 对于提供预测性更强的性能体验起着十分关键的作用；DTU 代表数据库引擎的性能，是一个合并了CPU、内存和读写速率的度量单位。此度量单位可以帮助用户评估 SQL 数据库七大性能级别（基本、S0、S1、S2、P1、P2 和 P3）的相对性能。 点击打开链接 本文翻译自： http://channel9.msdn.com/Series/Windows-Azure-Storage-SQL-Database-Tutorials/Scott-Klein-Video-02   上一篇 禅道，然之和蝉知入驻VM Depot 下一篇 Azure SQL 数据库：新服务级别问答 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840697次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 7
URL:: http://blog.csdn.net/azurechina/article/details/46366655

ParseText::
Azure SQL 数据库：新服务级别问答 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Azure SQL 数据库：新服务级别问答 2015-06-04 20:13 418人阅读 评论 (0) 收藏 举报 ShawnBice    2014 年 5 月 1 日上午 11:10    本月初，我们庆祝了SQL Server 2014 的推出，并宣布正式发布分析平台系统，同时分享了智能系统服务预览版。Quentin Clark 在一篇题为“ The data platform for a new era ”（新时代的数据平台）的博客文章中总结了他在 Accelerate Your Insights 活动中发表的主题演讲。如果您还没有读过这篇文章，我建议您花几分钟阅读一下。 在 之前一篇文章 中，我将现代数据平台描述为具有“功能连续性，这使开发人员能够持续使用内部部署 SQL Server 轻松地将数据库工作负荷虚拟化并迁移至 Azure，还可从一个数据平台连接 Azure 服务和构建新的云应用程序。”因此，除了上面提到的消息，我们仍在逐步发展Windows Azure SQL 数据库服务。就在几天前，Eron Kelly分享了我们将在 Azure SQL 数据库中 引入新服务等级 的消息。此外，在 近期的Channel 9视频 中，Scott Klein 与 SQL 数据库项目经理 Tony Petrossian 和 Tobias Ternstrom 一道讨论了新的服务级别。 当所有这一切进行的时候，我们创建了一份预料中的问题及解答的文档，帮助团队中的人员应对与 Azure SQL 数据库新的服务级别相关的常见问题。文档以内部简报的形式撰写，但坦率地说，我认为文中的所有内容对您同样有用。 祝您使用愉快！ Shawn Bice 数据平台团队项目主管 什么是新服务级别？ 在Windows Azure 业务中，我们将特定服务中的客户可选项称为“服务级别”。在内部部署软件业务中，我们通常称之为版本。在此基础上，Windows Azure SQL 数据库将提供 3 个服务级别：基本、标准和高级级别。新的服务级别分别为： 基本级别： 设计用于具有轻型事务工作负荷和连续性需求的应用程序。“基本”级别的性能目标提供可预测的每小时事务速率。基本级别的最大数据库大小是 2 GB。 标准级别： 标准级别是针对云设计的业务应用程序入门的造当选择。它提供了中级性能和内置业务连续性功能。标准级别的性能目标提供可预测的每分钟事务速率。标准级别的最大数据库大小是 250 GB。 高级级别： 高级级别专为任务关键型数据库设计，可提供最高的性能级别以及对高级业务连续性功能的访问。高级级别的性能目标提供可预测的每秒事务速率。高级级别的最大数据库大小是 500 GB。 客户预计可从每个服务级别获得哪些服务？   基本 标准 高级 运行时间服务级别协议 99.99% 数据库大小限制 2 GB 250 GB 500 GB 时点还原（自助还原） ７天内的任何还原点 14天内的任何还原点 35 天内的任何还原点 灾难恢复 地域还原，还原至任何 Azure 区域** 标准异地复制， 独立辅助数据库** 活动异地复制，最多有 4 个可读辅助数据库 效能目标 每小时事务率 每分钟事务率 每秒事务率 定价详细信息 ¥1.40/天 （~¥43/月） S0 : ¥4.20/天 （~¥130/月）   S1 : ¥8.40/天 （~¥260/月）   S2 : ¥21.00/天 （~¥651/月） P1 : ¥130.00/天 （~¥4,030/月）   P2 : ¥260.00/天 （~¥8,060/月）   P3 : ¥1040.00/天 （~¥32,240/月） 目前并非所有灾难恢复功能均有提供，详细信息请参见 灾难恢复文档页面 。 什么是性能级别？ 新的服务级别提出了性能级别的概念。基本、标准和高级级别共有七个性能级别。这些性能级别分别为基本级别、S0、S1、S2、P1、P2 和 P3。每个性能级别都可以为运行从轻型到重型的不同数据库工作负荷提供一组所需的资源。我们将在后续博客文章中提供有关性能级别的详细信息。 客户如何配置基本、标准和高级级别数据库？ 高级级别数据库可以在任何服务器上创建。Web版和企业版数据库还可在数据库”缩放”选项卡上升级到高级级别数据库。 最初，具有 Web版和企业版数据库的服务器不支持基本和标准级别数据库。要创建基本或标准级别数据库，首先应创建支持基本、标准和高级级别的新服务器，然后再创建带有所需服务级别和性能级别的数据库。一旦创建了基本或标准级别数据库后，您可以自由地在数据库”缩放”“缩放”选项卡上升级或降级。 最初，客户无法将 Web版或企业版数据库升级到基本或标准级别。但客户可以将 Web版或企业版数据库导出，然后使用数据库导入 Powershell cmdlet 将得到的 BACPAC 文件导入到新创建的基本或标准级别数据库。现已取消这一限制，客户可以自由地在同一服务器上混合使用 Web版、企业版、基本、标准和高级级别数据库，并在任何版本之间进行升级和降级。 客户如何更改标准或高级级别数据库的性能级别？ 您可以在 Azure 管理门户中使用数据库”缩放”选项卡设置性能级别，也可通过 API 设置。   更改数据库的服务级别或性能级别需要多长时间？ 更改数据库的性能级别可能需要进行数据移动以提供足够的资源。更改到标准或高级级别或从标准或高级级别进行更改，或者更改标准或高级级别数据库的性能级别时，可能出现这种情况。如果发生这种情况，可能需要几分钟到几个小时不等，具体取决于数据库的大小。在此期间，客户仍然可以使用数据库，并且数据移动操作对于客户来说是透明的。当然，在创建后立即更改数据库的服务级别或性能级别比填充数据后再升级数据库要更快。例如，在一些测试中，更改空数据库用时约 15 分钟，更改 1 GB 的数据库用时约 35 分钟，而更改 10 GB 的数据库则要花上 3 到 4 个小时。一般情况下，对标准或高级级别数据库中的服务级别或性能级别进行降级的速度非常快。有关更改性能级别时延迟的详细信息，请参见此 主题 。 客户使用哪一服务级别复制或还原数据库？ 复制和还原数据库在同一服务级别中创建一个新的数据库作为原始数据库。如果通过门户（新的）或使用 T-SQL CREATE DATABASE … AS A COPY OF 语句复制数据库，新的数据库将具有与原始数据库相同的性能级别。在还原数据库时，它将具有数据库被还原时应用的服务等级以及默认性能级别，即标准级别是 S1，高级级别是 P1。在复制或还原后，客户可在大小允许的情况下选择降级数据库，但要以初始费率收取至少一天的费用。请注意，这是对高级级别数据库行为的更改。此前，由于高级级别数据库配额是有限的，T-SQL 复制和还原可以创建一个没有预留资源的暂停的高级级别数据库，其收取的费率与企业版数据库相同。现在，不再支持暂停的高级级别数据库。作为 4 月 24 日发布事宜的部分内容，现有的暂停的高级级别数据库将转换为企业版。 客户多久可以更改一次数据库的版本或性能级别？ 更改数据库的版本或性能级别应慎重考虑。在 24 小时内，最多允许更改数据库的版本或性能级别 4 次。但这一限制不适用于 Web版和企业版之间的变更。 新服务等级的计费方法如何帮助客户节省费用？ 对于基本、标准和高级级别，将根据选定的、可预测的每日费率进行计费。此外，性能级别（如基础级别、S1 和 P2）在账单中进行了细分，很容易就可以看出每个性能级别在一个月中使用数据库的天数。 使用新服务级别可以获得哪些定价（或成本）优势？ 根据早前与客户的交流，我们发现，在以下常见场景中，新服务等级可以避免使用昂贵的解决方法并简化整体体验： 通过导入/导出备份解决办法 场景：客户使用数据库复制及导出创建数据库副本作为备份，这将产生额外的数据库成本。 解决方案：还原功能使客户不必再支付额外的数据库费用，这将其数据库数目减少高达 50%，为dial-up性能留出余地。 通过数据同步进行灾难恢复 场景：客户使用 Azure 数据同步 （预览版） 创建地域冗余数据库，这会产生额外的数据库成本，并且不能保证故障转移后的事务一致性。 解决方案：在标准级别中的内置异地复制，可使被动、辅助数据库的费用减少 25%，从而降低账单总金额并确保事务一致性。 以更少的成本获得更大的数据库 场景：目前，客户要为 10 GB 和 150 GB 的数据库分别支付308.20 元和1515.00元。 解决方案：使用标准级别 S1 每月花费260.00 元，使用标准级别 S2 每月花费651.00 元，客户以260.00 元和651.00 元的统一费率可以使用 250 GB 的数据库，而且性能保证和业务连续性都得到提高。 客户更改数据库的服务级别或性能级别后何时计费费率会发生相应变化？ “基本”、“标准”和“高级”级别数据库基于小时内采用的最高服务级别和性能级别按小时计费。更服务改级别或性能级别后，新费率在更改完成后立即生效。例如，如果你在晚上 10:00 将数据库从“基本”级别升级到“高级”级别，并且升级过程在第二天下午 1:00 完成，则将仅从升级完成的那一小时开始按“高级”级别费率向你收费。如果你在上午 11:00 将数据库从“高级”级别降级到“标准”或“基本”级别，并且降级在 14:00:00 完成，则在当天直到在 14:00:00 点降级完成时将按“高级”级别费率对数据库收费，然后将按“标准”或“基本”级别费率对数据库收费。 如果客户数据库的活跃时间不足一个小时如何计费？ 将针对数据库存在的每个小时向你收费，不考虑其使用量，也不考虑其活跃时间是否不到一小时，将使用该小时内应用的最高费率。例如，如果你创建了一个数据 库，5 分钟后删除了它，则将按该数据库存在 1 小时收费。如果你创建了一个基本数据库并立即将其升级为标准级别 S1，则第一小时将按标准级别 S1 费率收费。如果你删除了一个数据库，之后使用相同名称创建了另一数据库，在该小时内将对两个独立数据库分别收费。 如果新服务级别没有基于数据库大小定价，为什么仍支持将最大大小作为属性？ 虽然新服务级别基于其性能级别定价，但数据库的大小仍然十分重要。一些客户场景极为重视大小并要求设置大小限制。例如，一些 CSV 可能对其客户的数据库设置大小限制。 此外，虽然每个服务级别具有可能的最大大小（例如，标准级别最高支持 250 GB），客户仍应注意，对于某些工作负荷而言，数据库大小和给定性能级别实现的吞吐量之间是相关的。在进行影响整个数据库的操作（如导入、导出或复制）时，这种情况尤为突出。客户不应该假定认为，由于一个服务等级允许一个特定的最大大小，则他们的工作负荷在该大小的性能一定令人满意。客户应评估数据库大小对数据库性能的影响，并可能需要随着数据库的增长在达到一个级别的大小限制之前升级到更高的性能级别。 基本、标准和高级级别数据库的服务级别协议是什么？ 对于“基本”、“标准”和“高级”级别，在公开上市时，我们保证至少99.99％的时间内，客户将拥有自己的基本、标准或高级级别Windows Azure SQL数据库和我们的互联网网关之间的连接。 在哪里可以了解更多信息？ Azure 官方博客 SQL 数据库定价页面 选择 Azure SQL 数据库版本 管理 Azure SQL 数据库版本 本文翻译自： http://blogs.technet.com/ b/dataplatforminsider/archive/2014/05/01/ azure-sql-database-new-service-tiers-q-amp-a .aspx 上一篇 Azure SQL 数据库与新的数据库吞吐量单位 下一篇 Azure SQL 数据库：服务级别与性能问答 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840694次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 8
URL:: http://blog.csdn.net/azurechina/article/details/46366843

ParseText::
Azure SQL 数据库：服务级别与性能问答 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Azure SQL 数据库：服务级别与性能问答 2015-06-04 20:34 410人阅读 评论 (0) 收藏 举报 ShawnBice     2014 年 5 月 5 日上午 10:00 几天前，我发表了一篇文章，并就 4 月 24 日发布的 适用于 W indows Azure SQL  数据库的新服务级别 提供了一些预料中的问题和解答，在其中为读者介绍了一些详细信息。在这篇跟进文章中，我想提供一些关于这些服务级别如何影响 SQL 数据库性能的更多信息。 与上一篇文章一样，本文档的最初写作目的也是帮助微软团队人员解决有关新服务级别的常见问题，当然，这些信息也肯定与您密切相关。 Shawn Bice 数据平台团队项目主管 新服务级别如何提升 SQL 数据库性能？ 客户一直向我们反映，他们非常重视性能的可预测性。为了解决这一问题，我们起初推出了高级服务级别，以便为具有高吞吐量需求的数据库工作负荷提供支持。我们始终致力于提高性能的可预测性，为此，我们以更低的价格推出了新的服务级别（基本和标准级别），它们在性能上存在主要差别。随着性能水平的提升，可用吞吐量也会随之增加。此项服务设计可以使客户通过部署合理数量的资源来获得其数据库所需的吞吐量。 高级服务级别有何变化？ 自 4 月 24 日起，Azure SQL 数据库高级级别预览版推出了全新的 500 GB 最大容量、拥有另一性能级别 (P3)、新的业务连续性功能（活动异地复制和自助式还原）以及简化的配置和计费体验。 高级服务级别有哪些新功能？ 活动异地复制： 可以在任何 Azure 区域创建多达四个活动可读辅助数据库并选择何时进行故障转移，以此控制灾难恢复过程。有关使用活动异地复制的详细信息，请参见 灾难恢复文档 。 自助式还原： 有了 SQL 数据库高级服务级别，在数据被人为删除或被程序删除的情况下，您可以将数据库还原回过去 35 天内的任意时间点。对数据库还原进行自助式控制可以取代导入/导出的方法。有关使用自助式还原的更多信息，请参见 还原服务文档 。 更大的数据库容量： 维护高达 500 GB 数据库的费用会包括在日常成本中（不会单独针对数据库容量另行收费）。 新增高级性能级别： 增加了 P3 性能级别，可满足高吞吐量需求，可以最大程度地提升要求最苛刻的数据库工作负荷的性能。要了解有关 SQL 数据库高级服务级别和定价的详细信息，请访问 SQL 数据库定价页面 。 什么是性能级别？ Azure SQL 数据库服务级别提出了性能级别的概念。基本、标准和高级服务级别共有 7 个性能级别。这些性能级别分别为基本、S0、S1、S2、P1、P2 和 P3。每个性能级别都可以为运行从轻型到重型的不同数据库工作负荷提供一组所需的资源。 对于不同性能级别可实现的性能水平，客户有何见解？ 为了让客户获得可预测性更强的性能体验，SQL 数据库推出了数据库吞吐量单位 (DTU)。DTU 代表数据库引擎的性能，是一个合并了CPU、内存和读写速率的度量单位。此度量单位可以帮助用户评估 SQL 数据库七大性能级别（基本、S0、S1、S2、P1、P2 和 P3）的相对性能。 性能级别可提供以下 DTU： 基本 标准 高级 基本：5 DTU S0：10 DTU S1：20 DTU S2：50 DTU P1：100 DTU P2：200 DTU P3：800 DTU 客户如何才能不考虑硬件规格而选择性能级别？ 我们深知，无论是内部部署环境还是虚拟机环境，都会通过计算机规格来评估系统可以为数据库工作负荷提供的运行能力。然而，在平台即服务环境下，这一方法却起不到应有的作用，这种环境本身会对底层硬件和操作系统进行抽象化，并以此作为价值主张，为客户提供整体优势。 客户不断地向我们反馈说，他们会通过选择性能级别、构建应用程序并根据需要测试和优化这些应用程序来评估构建云设计应用程序的性能要求。在内部部署环境下，复杂的硬件规格评估要求比较重要，因为这种环境需要纵向扩展，因此就需要更为谨慎地进行考量和计算。而如果使用数据库即服务，则可以通过 API 或 Azure 门户轻松地调整性能水平。 有关详细信息，请参见 MSDN 上的 性能指南 。 客户如何才能查看某个性能级别的资源利用率？ 客户可以监视可用 CPU、内存和读写 IO 随时间变化的百分比。   每小时、每分钟和每秒事务率是指什么？ 每种性能级别的吞吐量都会不断提高。通过汇总每个服务级别的吞吐量，并用每小时、每分钟和每秒支持事务率来表示，客户就可以轻松地将服务级别的功能与应用程序的需求快速关联起来。例如，基本服务级别适用于按每小时事务数对活动进行衡量的应用程序。举例来说，一个面包店的某个销售点 (POS) 终端所需的吞吐量是，在一小时内卖出上百个面包。标准服务级别适用于按每分钟几十个或几百个事务衡量吞吐量的应用程序。高级服务级别适用于密度最高的任务关键型吞吐量，也就是说，每秒需要支持成百上千个并发事务。 如果客户想要用易懂的语言精确地了解 DTU 运行能力，应该如何做？ 为了让客户能够使用比较熟悉的参考点来选择合适的性能级别，微软为 7 个性能级别（基本、S0、S1、S2、P1、P2 和 P3）中的每一个性能级别发布了相应的 OLTP 基准数字。这些事务率数据来自内部的微软云基准环境，用于模拟典型 OLTP 云应用程序的数据库工作负荷。与所有其他基准一样，这些事务率数据仅供参考。真实的数据库具有不同的容量和复杂度，并会运行各种各样的工作负荷，其响应方式也各不相同。但是，微软发布的这些事务率数据有助于客户了解每种性能级别的相对吞吐量。微软发布的基准事务率如下所示，有关方法的文章，请参见 此处 。 基本 标准 高级 基本： 16,600/小时 S0：521/分钟 S1：934/分钟 S2：2,570/分钟 P1：105/秒 P2：228/秒 P3：735/秒 谈到 DTU，我们可以参考汽车行业的大量类似情形。使用马力衡量引擎动力时，赛车和卡车对马力的使用有很大不同，因此结果也会不同。同样，对于不同的工作负荷类型，数据库使用 DTU 运行能力也会获得不同的结果。微软基准数字是基于一个已定义的 OLTP 工作负荷（如赛车）的，而客户需要为其独特的工作负荷需求评估性能水平。 通过已发布的基准来定义数据库运行能力相当于在云环境下模拟 TPC-C 。TPC-C 是一种传统的行业标准方法，用来定义数据库工作负荷的最大潜在运行能力。熟悉传统数据库和数据库系统的客户会很清楚基准数字的价值以及不足之处。我们发现，初创公司以及新入行的开发人员不太了解标杆行业，然而，他们会更热情地投入到构建、测试和优化之中。 我们认为，为客户提供基准定义的事务率，并使其可以快速构建、试验和优化（纵向扩展），便可满足大多数客户的性能评估需求。 已发布的事务率可以保证吞吐量吗？ 微软发布的基准以及相关的事务率并不代表对客户做出事务保证。尽管客户的工作负荷各不相同，但客户不能将高峰期间的事务累积在一起，也不能将各个事务分摊到每秒、每分钟、每小时和每天。客户要想评估实际性能需求，最好的做法就是在 Azure 门户上查看实际资源使用率。详细视图会采用可用 CPU、内存和读写操作在已定义性能级别下的百分比来显示资源使用率随时间变化的情况。 为什么微软不直接为数据库标杆行业标准 TPC 发布基准呢？ 目前，TPC 不允许云提供商为数据库工作负荷发布 TPC 基准。当前还没有制定出其他云供应商行业标准。 微软是否会发布可在客户自有环境中运行的基准代码？ 目前尚无向客户发布基准的计划。但是，微软将公布一些方法细节（请参见 此处 ），帮助客户运行已定义的 OLTP 工作负荷来实现已公布的基准数字。 本文翻译自： http://blogs.technet.com/b/dataplatforminsider/archive/2014/05/05/azure-sql-database-service-tiers-amp-performance-q-amp-a.aspx 上一篇 Azure SQL 数据库：新服务级别问答 下一篇 聚焦 SQL 数据库活动异地复制 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840695次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 9
URL:: http://blog.csdn.net/azurechina/article/details/46367267

ParseText::
聚焦 SQL 数据库活动异地复制 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 聚焦 SQL 数据库活动异地复制 2015-06-04 21:05 458人阅读 评论 (0) 收藏 举报 Tobias Ternstrom   US-DS-PM 首席部门项目经理 本文作为一系列业务连续性和灾难恢复文章的开篇，概述了业务连续性的各种场景，然后重点介绍 SQL 数据库高级服务级别提供的活动异地复制的用法。有关活动异地复制的详细信息，请观看生动而详实的 Channel 9视频 。在该视频中，Sasha Nosov 和 Scott Klein 将探讨活动异地复制的工作原理，以及如何使用它来解决实际的业务问题。 什么是业务连续性？ 业务连续性是指可以帮助企业在发生系统中断（尤其是计算基础结构发生中断）时保持持续运营的机制、策略和过程。 从数据库角度来看，可能存在四种主要的中断场景： 影响数据库节点的 本地硬件或软件发生故障 ，例如，磁盘驱动器发生故障。 数据损坏或删除 – 通常是由于应用程序缺陷或人为错误造成的。这种故障本身与特定应用程序有关，一般无法由基础结构自动检测或解决。 数据中心中断 ，可能是由自然灾害造成的。这种场景要求具备一定程度的地域冗余，可以将应用程序故障转移到备用数据中心。 升级或维护错误 – 在按计划对应用程序或数据库进行升级或维护期间发生的意外问题，可能需要快速回滚到原先的数据库状态。 Azure SQL 数据库如何启用业务连续性？ Azure SQL 数据库会自上而下构建为一种稳定可靠的高可用性数据库服务，它采用这样一种机制，即始终为每个数据库保留三个或三个以上的副本，并会在响应前至少对两个副本进行更新。这种高可用性(HA)系统解决了第一种场景的问题，即本地硬件和软件故障。 当前的新服务级别（基本、标准和高级级别）提供了一些功能，以解决上述其余三种场景的问题，从而使业务连续性迈上了一个新台阶： 数据损坏或删除 。基本、标准和高级级别数据库支持自助式时间点还原功能，可以将数据库还原为早先的状态。这样，就可以防止因应用程序或用户错误而导致数据损坏或被删除。每周会进行一次完整备份，每天会进行一次差异备份，每 5 分钟会进行一次事务日志备份。对于基本级别数据库，备份会保留 7 天，对于标准级别数据库，备份会保留 14 天，对于高级级别数据库，备份会保留 35 天。您可以在保留期内将数据库（包括最近删除的数据库）还原到任意时间点。 数据中心中断 。此外，还会保护基本、标准和高级数据库服务级别不出现长时间数据中心中断，因为这可能需要将数据库恢复到其他区域的其他数据中心内。我们为此提供了三种地域冗余解决方案： 地域还原 （适用于基本，标准和高级级别），可用于恢复到上次每日备份的地域冗余副本。 标准 异地复制 （适用于标准和高级级别数据库），可用于扩展本地 HA 系统，以便在配对区域创建和维护另一个辅助数据库。这些辅助数据库处于脱机和不可访问状态，除非发生数据中心中断，此时，它们将被置于联机状态，以使应用程序可以故障转移到其中。 活动异地复制 （适用于高级级别数据库），可提供最丰富的解决方案，数据丢失风险最低，恢复时间最短。它可将标准 异地复制 扩展为多达 4 个 异地复制 的辅助数据库，这些数据库会始终保持联机和可读状态，同时，也可用于平衡负载，或者在从全球任何地点访问复制的数据时可以保证延迟较低。 升级或维护错误。 通过活动异地复制，您可以为数据库创建一份连续复制的副本，在对该数据库或应用程序进行更新或维护之前，可以立即冻结该数据库。如果在该过程期间或之后检测到任何错误，则可以轻松快捷地将该数据库回滚至该副本。 不同的服务级别可使用不同的解决方案，但是请记住，您可以轻松地在各个服务级别之间升级或降级数据库。例如，您可能选择在进行重要升级之前先将标准级数据库升级为高级，并使用活动异地复制。升级完成后，可以将该数据库重新降级，以降低成本。 活动异地复制详细信息 至此，我们已经了解了在业务连续性环境下，何时可以使用活动异地复制。现在，让我们深入探讨一下活动异地复制的工作原理以及使用方式。 图 1. 高级数据库在相同或不同区域中最多可以拥有 4 个可读辅助数据库。 活动异地复制关系可以通过 Azure 管理门户、PowerShell 或 REST API 来创建和管理。在该门户中，您可以从主数据库或辅助数据库管理复制关系。您可以从主数据库监视每个辅助数据库的复制状态。 图 2. 使用 Azure 管理门户创建和监视多达四个地域辅助数据库的状态。 可以创建多达四个可读辅助数据库，每个辅助数据库都与主数据库同名，但位于不同的服务器上。辅助数据库在首次创建后会使用主数据库的当前状态来初始化。每个辅助数据库在初始化完成后，即会成为主数据库的一个连续副本。与所有其他数据库一样，辅助数据库也会通过常规 HA 系统在本地进行保护。 与本地 HA 复制模式不同的是，从主数据库 异地复制 到辅助数据库是异步的。对主数据库应用的事务会复制并应用到辅助数据库，而在等待该操作期间，主数据库仍可继续处理事务。所做的更改会被缓存下来，确保复制系统在复制到远程位置期间发生临时连接问题或长时间延迟时能够恢复。 为了确保对辅助数据库应用的事务不会对主数据库构成瓶颈，辅助数据库必须具有与主数据库相同或更高的性能级别。 辅助数据库是可读的，因此，可以支持独立的只读工作负荷。可以通过该功能在多个数据库之间平衡复杂的查询工作负荷，或者在全球其他地点提供较短的应用程序数据访问延迟。 图 3.如果数据中心中断影响到主数据库，可以终止复制关系，并将应用程序故障转移到辅助数据库。 可以手动管理复制关系，以便可以随时终止该关系。如果从主数据库终止复制关系，您可以选择是立即终止并丢失任何待处理的事务还是在应用所有待处理的事务后再终止。 如果发生数据中心中断并影响到主数据库，仍然可以手动执行故障转移，这样，您就可以完全控制是否执行该操作以及何时执行。如果主数据库不可用，可以从辅助数据库终止该关系。从数据库始终会立即终止该关系，并丢失主数据库变为不可用时尚未复制的任何事务。可能丢失多少数据取决于主数据库发生故障时的活动状态，以及是否在连接期间缓存了事务。是否要决定终止复制关系，应综合考虑可能的数据丢失问题以及是否希望重新恢复应用程序。 一旦终止了与辅助数据库的关系，该数据库就会成为一个普通的读写数据库。此时，您可以将对该数据库具有完全访问权限的应用程序进行故障转移。由于每个辅助数据库都是一个独立的数据库，并与主数据库同名，但位于不同的服务器上，因此，您需要使用更新后的连接字符串重新配置应用程序。 在处理完故障转移过程后，您可能希望仅使用新的生产数据库作为主数据库来重新构建与以前使用的 异地复制 关系相同的 异地复制 关系模式。这样就可以确保您获得应用程序和业务连续性策略所需的地域冗余和负载平衡功能。 图 4. 终止最初与辅助数据库建立的关系后，应创建新的 异地复制 关系，以保护新的主数据库并满足任何负载平衡需求。 活动异地复制可以整合到各种应用程序体系结构模式中，这些模式会采用不同的假设，例如，哪些层和组件风险最高，以及哪些组件可能分布在不同的地理区域。有关该主题的详细信息，请参见此 文章 。 总结 活动异地复制不仅提供了强大的地域冗余功能以保护数据库不受数据中心中断的影响，而且还支持其他业务连续性场景。对于高级级别数据库，目前已提供了活动异地复制功能。 请阅读有关 SQL 数据库中 业务连续性 （包括 活动异地复制 ）的更多信息，或者花几分钟时间 观看 Sasha 和 Scott 在Channel 9 上针对活动异地复制如何为业务提供保护展开的讨论。 本文翻译自： http://azure.microsoft.com/blog/2014/07/12/spotlight-on-sql-database-active-geo-replication/ 上一篇 Azure SQL 数据库：服务级别与性能问答 下一篇 Azure SQL 数据库新服务级别现已正式发布 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840707次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 10
URL:: http://blog.csdn.net/azurechina/article/details/46368087

ParseText::
Azure SQL 数据库新服务级别现已正式发布 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Azure SQL 数据库新服务级别现已正式发布 2015-06-04 22:02 451人阅读 评论 (0) 收藏 举报 T.K.Ranga Rengarajan    2014 年 9 月 10 日上午 11:00 我们很高兴地宣布， 新的 SQL 数据库服务级被基本、标准和高级级别现已正式发布 。这些服务级别中含有内置且可无缝使用的企业级功能，提升了您对数据库即服务的期望值——让您可以大大增加一位数据库管理员可以管理的数据库数量。 今天对于 Azure SQL 数据库 社区而言是具有里程碑意义的一天。从 2009 年第一次向公众公布之后，我们这趟旅程就得到了我们客户及合作伙伴直接、深入的参与，我们从中受益良多。 在这一路上，我们扩大了该服务的全球规模和覆盖范围、增加了数据库大小并让数据库诊断更易于进行，等等。您推动我们将云可能带给我们的优势扩展到了数百万个数据库。您给我们反馈了对于关系数据库即服务的需求，帮助我们重新探索出了一种方式，使之与基于云的数据库工作负载的独特需求完美吻合。 在 4 月， 我们已发布 基本、标准和高级级别的预览版。这些级别为您的轻型和重型事务型应用程序提供了可预测的性能，同时还能确保应用程序的性能不再受其他客户工作负荷的影响，以此解决如今对于高要求云应用程序的需求。此外，这些新的级别还可以为您提供以下新功能： 更高的运行时间服务级别协议 ：正常运行时间以前为 99.9%，现在为 99.99%——这是数据库即服务行业的最高值之一 时间点恢复 ：具有内置备份功能，最长数据保留天数为 35 天 活动异地复制 和 标准异地复制 选项：可以不间断地将数据复制到地理上分散的辅助位置中 更大的数据库 ：数据库以前是 150 GB，现在数据库最大可以达到 500 GB 审 核 ：增加安全信心 自 4 月发布预览版以来，我们听取了有关新级别的重要反馈，并最终 预先宣布 了根据这种直接沟通对正式发布版本所做的更改。有关关键更改的内容，概述如下： 新的 S0 性能级别：   在标准级服务级别中，我们提供了新的 S0 性能级别，可以简化从基本级别到标准级别的过渡。 高级和标准级别降价：  最终价格将比以前公布的正式版定价最高节省 50%。 正式版定价 从 2014 年 11 月 1 日起生效。 按小时计费：   从今天起，Azure SQL 数据库的新服务级别将转为按小时计费。  我非常高兴，我们持续的投资将不断为您带来价值。我们的客户 Samsung 、 ESRI 、 Callaway Golf 、 Pottermore 等都已经将 Azure SQL 数据库用作关系数据库服务平台，帮助其基于云的业务增长。随着云服务组合的不断扩大，包括 DocumentDB 、 Azure 搜索 、 Azure 机器学习 和 Azure HDInsight ，加上 我们合作伙伴提供的优秀数据服务 ，我们将一直致力于提供一个完整的数据平台，让您可以更轻松地处理任意类型和大小的数据——通过在受信任的云环境中使用您想要的工具、语言和框架。  立即尝试 新的 SQL 数据库服务级别。 本文翻译自： http://blogs.technet.com/b/dataplatforminsider/archive/2014/09/10/azure-sql-database-new-service-tiers-now-generally-available.aspx 上一篇 聚焦 SQL 数据库活动异地复制 下一篇 Azure SQL 数据库最新版本现已提供预览版 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840703次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 11
URL:: http://blog.csdn.net/azurechina/article/details/46375613

ParseText::
Azure SQL 数据库最新版本现已提供预览版 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Azure SQL 数据库最新版本现已提供预览版 2015-06-05 13:17 447人阅读 评论 (0) 收藏 举报   Tiffany Wissner   数据平台营销高级总监 我们之前 在11月宣布 将提供新的预览版，在该预览版中我们引入了接近完整的 SQL Server 引擎兼容性和更为高级的性能，这些都代表了下一代的 SQL 数据库服务。对超过 6 亿行数据进行内部测试后表明，新预览版的高级查询性能比目前高级 SQL 数据库的高级查询性能提高了大约 5 倍，如果应用内存中列存储技术，高级查询性能最高能够提高 100 倍。今天预览版中的功能标志着，在通过这一新服务架构为客户提供激动人心的新功能的道路上，我们迈出了第一步。 该预览版依然保持了基本、标准和高级级别这些新服务级别正式版中的势头，提供了可伸缩的性能、内置的 异地复制 和恢复功能，并且还引入了首个云数据库运行时间长达 99.99% 的服务级别协议。从 9 月起，我们还 正式发布了审核功能 ，并引入了 弹性缩放 技术，可以显著简化高端横向扩展操作。如今，客户正在使用横向扩展方法，证明该服务可以运行任务关键应用程序的强大功能；其中一家客户有将近 90TB 的数据，分布在大约 2,000 个数据库中，每天需要处理大约 38 万次登录，而另一家客户正在运行一款多租户应用程序，有超过 20TB 的数据，分布在大约 225,000 个数据库中，每天需要处理超过 200 万次登录。 今天的预览版将继续我们的征程，为云带来行业领先的内存内置技术，开启新的功能，简化 SQL Server 数据库应用程序迁移到 Azure 的过程，同时大大提高客户处理更高数据库工作负荷的能力。Weichert 是美国一家提供全面服务的房地产提供商，这家公司正在积极使用新的预览版。 “我们是一家完全由 ROI 驱动的公司，我们致力于将任务关键应用程序迁移到 Azure 上——去年，我们将房地产搜索引擎 weichert.com 迁移到 Azure 上之后，成本节省了 60%。从战略角度来说，对于利用在线索引重建、分区等功能来迁移和处理大数据类型而言，这些 SQL 数据库服务更新就是我们的答案，”Weichert 系统开发副总裁 Joe Testa 说。“简单地说，截止到目前，结果一直都非常好——性能提升了超过 2 倍，在我们继续将任务关键应用程序迁移到 Azure 的过程中，以前只在 SQL Server 中提供的高级功能可以让我们更轻松地处理我们的应用程序。” 详细的预览版增强功能可在 预览版入门页面 中查看，但是主要内容如下： 大型数据库管理更轻松： 提供并行查询，支持较重的工作负荷（ 仅限高级）； 表格分区；在线建立索引，无忧大型索引重建，去除了 2GB 大小限制；并且提供变更数据库命令。 支持关键可编程功能： 提供CLR、T-SQL 窗口功能、XML 索引和更改跟踪，让应用程序设计更为稳健。 性能最高可提升100倍： 对于数据市场和较轻的分析工作负荷而言，支持内存中列存储查询 （仅限高级） 。 监控和故障排除水平提升： 通过扩大的数据库管理视图 (DMV) 集，可查看超过 100 个新表格视图并将扩展事件 (XEvents) 应用于这 100 多个新表格视图上。 要试用该预览版，请通过 Azure 预览版功能页面 或新的 Azure 门户进行注册。对于在该预览版中注册的数据库，定价将在基本、标准和高级级别正式版 定价 的基础上提供 50% 的折扣。只有混合了一个或多个基本、标准或高级级别数据库（非Web版或企业版）的 SQL 数据库服务器才有资格升级到这一新的预览版。 我非常高兴您能试用该预览版，该预览版将帮助您在 Azure 上更轻松地构建基于 SQL 的更稳健的应用程序，或者将这些应用程序迁移到 Azure 上，同时获得数据库即服务几乎零管理的优势。 本文翻译自： http://azure.microsoft.com/blog/2014/12/11/preview-available-for-next-generation-of-azure-sql-database/ 上一篇 Azure SQL 数据库新服务级别现已正式发布 下一篇 微软欢迎所有热爱开源软件的朋友们来投稿！[征稿开放时间：2015年8月17日] 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840698次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 12
URL:: http://blog.csdn.net/azurechina/article/details/47657345

ParseText::
微软欢迎所有热爱开源软件的朋友们来投稿！[征稿开放时间：2015年8月17日] - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 微软欢迎所有热爱开源软件的朋友们来投稿！[征稿开放时间：2015年8月17日] 2015-08-14 10:12 440人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 Azure是微软的云平台，不仅支持Windows服务器，也深爱着开源世界。通过与开源社区之间的合作， Azure支持了大量的开源软件和框架，涵盖了包括Linux 服务器，Docker, chef, MySQL, WordPress, redis等大部分主流互联网开源软件和应用框架， 并且其数量还在不断增加。 怎么在Azure平台上玩转开源软件呢？无论您是初入开源世界的小白，还是杀bug无数的技术“大牛”，都可以将您第一手的实战经验分享给社区。 如果您想先对Azure上的开源软件有所了解，可以登录 http://www.windowsazure.cn/solutions/OSS/ 。 【征稿目标】 分享在Azure China上使用或者搭建开源软件环境的实战经验。 主题可以是Azure China已经提供的开源软件，也可以是基于Azure China的Linux服务器自行开发或搭建的开源软件。 【活动简介】 1. 鼓励开源软件爱好者写下在Azure China上使用或者搭建开源软件环境的实战经验并投稿。 2. 微软云计算创新中心会对稿件进行第一轮内部评选。 3. 所有通过第一轮评选的稿件会被发布在 http://www.windowsazure.cn/blog/ 。 4. 邀请所有技术爱好者来进行第二轮评选投票。 5. 前十名的稿件将会被额外标注和宣传。同时作者将获得相应奖品。  【活动时间】 征稿开放时间：                          2015年8月17日 征稿截止时间：                          2015年10月17日 第一轮内部评选结果公布：        2015年10月26日 第二轮公开投票时间：               2015年10月27日 到2015年11月6日 前十名颁奖时间:                         2015年11月9日 【试用账号提交指南】 如果您想参加此征稿活动但是没有Azure China账号， 请按下面规定格式发送信息至 azurecc@microsoft.com 申请试用账号 。 账号有限，前 十五 名邮件发送者可获得试用账号。 姓名： 手机或微信： 个人博客：（如果有个人博客或者社区专栏或者文章） 邮箱： 个人简介：（200字左右） 大头照： 稿件主题：(如果已有主题) 是否愿意参加“在Azure上玩转开源”的征稿活动： 【稿件提交指南】 稿件长度没有限制，但是需基于Azure China平台，以开源软件为中心，包含您使用或搭建开源软件的场景和步骤。以下是大家可参照的来自社区开源爱好者的文章。 使用 Windows Azure 快速搭建 Redis 服务器 使用Windows Azure的VM安装和配置CDH搭建Hadoop集群 Windows Azure 搭建 Open VPN 请按下面规定格式发送申请信息至 azurecc@microsoft.com 。 姓名： 手机或微信： 个人博客：（如果有个人博客或者社区专栏或者文章） 邮箱： 个人简介：（200字左右） 大头照： 稿件主题： 稿件：附件 【奖品】 一等奖 5 名 一号店100元礼品卡 二等奖 5 名  "Microsoft Loves Linux" U盘一个 上一篇 Azure SQL 数据库最新版本现已提供预览版 下一篇 Windows Azure® 由世纪互联运营发布MySQL Database on Azure正式商用版 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840711次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 13
URL:: http://blog.csdn.net/azurechina/article/details/48769647

ParseText::
Windows Azure® 由世纪互联运营发布MySQL Database on Azure正式商用版 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Windows Azure® 由世纪互联运营发布MySQL Database on Azure正式商用版 标签： MySQL 数据库 windows azure 世纪互联 2015-09-27 21:32 229人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 我们很高兴宣布MySQL Database on Azure于2015年9月1日在中国地区正式商用。回望过去，从2014年12月对少量用户开放的预览试用，到2015年4月30日对中国用户全面开放的公共预览，再到9月1日在中国地区正式商用。在这9个月时间，MySQL Database on Azure团队花了很多时间在完善功能，在稳定性、性能上面都有很大的提升，获得了用户的一致认可。在接下去几个月，我们团队会陆续推出更多的功能，为用户带来更多增值功能和更高性能的体验。 MySQL Database on Azure 帮助您在云端快速部署MySQL数据库，提供高可用性和全托管的体验，无需人工维护基础架构，让您更专注于产品的创新开发。我们的正式商用版提供99.9%的运行时间服务级别协议，用户可以更放心地使用。目前，已经有超过二百个（含企业用户）正在使用MySQL Database on Azure服务。很开心，我们的产品能够被用户接受、信赖，真真切切的帮助用户创造商业价值。 特性优点： MySQL Database on Azure提供的产品特色有： 基于Azure存储提供数据本地异地多重备份，保障数据高度可靠，支持99.9%的运行时间服务级别协议，支持异地灾备恢复。 提供防火墙功能并支持SSL链接访问数据库，保证数据高度安全。 支持30天数据备份，帮助您轻松进行数据回溯。 提供多个不同性能层级的版本，支持弹性扩展与收缩，简化购买体验。 提供各项数据库性能指标的监控以及日志，让您轻松方便的了解数据库运行情况。 兼容MySQL 协议（目前支持MySQL 5.5和5.6），您可以用熟悉的MySQL平台与技术进行开发和集成。 支持数据从企业本地的MySQL数据库同步到 MySQL Database on Azure, 更好的满足企业构建混合云的需求。 有关MySQL Database on Azure服务的详细信息，请访问 MySQL Database on Azure 网页。  快速入门： 以下我们将介绍部署，配置，监控和异地数据库同步MySQL实例的实战经验。 快速部署 通过Windows Azure管理门户，用户可以快速创建MySQL服务器，部署时间仅需1-2分钟。我们的服务保证您的数据库服务器的高可用性，提供自动软件修补功能，让您无需对数据库服务进行任何基础架构的维护。 弹性伸缩 您也再无需反复计算数据库服务器端的配置需求，MySQL Database on Azure 服务提供了多个不同性能的版本，您可以根据当前的性能需求选择一个相匹配的版本，后续再根据应用的实际运行情况进行弹性扩展或收缩。我们的服务按小时计费，账单透明，帮助您更有效的利用资源。 灵活配置 MySQL Database on Azure支持您快速配置防火墙规则，备份时间设置，服务器日志设置，同时，还支持对于MySQL server部分参数进行自定义，便于您进行数据库性能优化。   完善的监控体验 MySQL Database on Azure支持用户对20余个性能指标 (如成功连接数，慢查询个数，每秒查询数，流量等) 进行监控，方便用户预测性能及时做出升/降级及性能优化的判断。   支持异地数据库同步，满足企业构建混合云的需求 MySQL Database on Azure 支持异地数据库同步的功能，用户可以将 Azure 以外的 MySQL 实例设为主库，把运行在 MySQL on Azure 上的实例设为从库，通过标准的 MySQL 主从数据同步的方式将数据同步到Azure上, 以更好地满足企业各种混合云场景的需求。同时数据库同步的功能也可以帮助您实现更完善灵活的云端迁移体验。   联系我们 MySQL Database on Azure研发团队非常期待您对产品的反馈，请在 Windows Azure官网产品反馈专区 填写您对产品的意见与建议。 上一篇 微软欢迎所有热爱开源软件的朋友们来投稿！[征稿开放时间：2015年8月17日] 下一篇 新版Windows Azure CDN管理门户正式上线 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840709次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 14
URL:: http://blog.csdn.net/azurechina/article/details/49634053

ParseText::
新版Windows Azure CDN管理门户正式上线 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 新版Windows Azure CDN管理门户正式上线 2015-11-04 13:00 214人阅读 评论 (1) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 经过产品团队的不懈努力，新版 Windows Azure CDN 管理门户在经过了有限开放预览之后，已经正式上线并开放给所有用户。 新版 Windows Azure CDN 管理门户经过全新的设计，除了在使用易用性、视觉展示效果等方面有所提升外，还增加了多个用户需求很高的功能模块。本文简要介绍了这些新增特性，更多详细内容请登入新版 Windows Azure CDN 管理门户体验。 概览 下面是新版 CDN 管理门户的首页：  目前新版 CDN 管理门户提供了如下功能： 域名管理 流量报表 带宽报表 缓存刷新 内容预取 下面就针对上述功能进行具体介绍。 功能模块 1. 域名管理 当您在左侧的导航窗格中单击 “ 域名管理 ” 时，将显示您目前已经创建的所有 CDN 加速域名的列表视图。 你可以通过 Azure 订阅下拉列表选择不同的订阅查看不同订阅下的 CDN 加速域名信息。同时可以对加速域名进行 “ 修改配置 ” ， “ 缓存规则配置 ” 和 “ 访问控制管理 ” 。   修改加速域名配置 您可以通过加速域名的 “ 修改配置 ” 功能，对 “ 源站地址 ” 和 “ 回源域名 ” 进行特殊配置。 首先解释一下 “ 源站地址（回源地址） ” 和 “ 回源域名（回源 host header ） ” 的区别。回源地址表示源站实际可以被访问到的地址，可以是 IP 也可以是域名。如果是域名， CDN 在回源是会对该域名进行地址解析，然后用解析出来的 IP 再进行访问。回源域名表示 CDN 回源时， HTTP 请求头（ request header ）中的 Host 字段值。这个字段值一般是域名形式的字符串，被源站用来识别是否与源站服务器上配置的域名相同。 修改缓存规则 系统已经针对不同的 CDN 加速类型提供了默认的缓存规则。您可以在这里进行定制化修改。 访问控制管理 您可以在这里进行防盗链等相关配置。 2. 流量报表 您可以在这个功能模块里查看同一个 Azure 订阅下的一个或多个加速域名的流量（包括回源）信息，可以按预设的或者自行指定的时间范围来查看。 3. 带宽报表 您可以在这个功能模块里查看同一个 Azure 订阅下的一个或多个加速域名的带宽（包括回源）信息，可以按预设的或者自行指定的时间范围来查看。   4. 缓存刷新 当您在左侧的导航窗格中单击 “ 缓存刷新 ” 时，可以对指定的文件或者目录进行手动刷新，以达到强制更新缓存内容的目的。 您可以选择要查询的订阅（单选）、状态、时间范围、加速域名（单选），单击查询刷新结果后界面将显示符合条件的缓存刷新记录，数据格式及含义请参见实际页面中的详细说明。 5. 内容预取 当您在左侧的导航窗格中单击 “ 内容预取 ” 时，可以对指定的文件进行内容预取和预取进度查询操作。 内容预取是指预先将指定 URL 的内容从源站缓存到 CDN 节点，这样可以消除用户第一次访问该资源时的等待时间。内容预取一般被用在进行大文件分发时的场景，可以有效的提升用户访问体验。 后续更新 本文对新版 Windows Azure CDN 管理门户的主要功能做了简单的介绍，请登录新版管理门户获得详细信息。接下来产品团队会进一步改进新版 Windows Azure CDN 管理门户，更加有针对性的提升用户体验，逐步增加用户需要的其他功能模块。敬请期待！ 更多 Windows Azure CDN 详情，请参阅 Windows Azure CDN 技术文档 。 如果您对我们的产品有任何意见或者建议，欢迎到我们的 产品反馈页面 进行反馈。我们的产品团队会针对您的反馈对产品做出改进。 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840693次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 15
URL:: http://blog.csdn.net/azurechina/article/details/49927507

ParseText::
MySQL Database on Azure - 利用PowerShell快速创建使用数据库服务 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 MySQL Database on Azure - 利用PowerShell快速创建使用数据库服务 2015-11-20 14:45 135人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 如果您的应用需要通过脚本快速创建一个或多个MySQL数据库，MySQL Database on Azure目前开放了对于PowerShell的支持，可以帮助您快速利用自动化脚本进行数据库服务的创建、管理等操作。您在Windows Azure管理门户上进行的操作，基本都可以通过PowerShell来执行。 只需以下九个简单步骤，您可以迅速通过脚本创建并使用MySQL。 步骤 1 ： 安装配置 Azure PowerShell 运行脚本前，您需要安装并运行Azure PowerShell。您可以通过 运行 Microsft Web平台安装程序下载并安装最新版本Azure PowerShell 。可参阅 如何安装和配置 Azure PowerShell来了解更多详细步骤。 用于创建和管理MySQL Database on Azure 数据库的cmdlet位于Azure资源管理器模块中。启动Azure PowerShell时，默认情况下将导入Azure模块中的cmdlet。若要切换到Azure资源管理器模块，请使用以下命令转换： Switch-AzureMode   -Name   AzureResourceManager 步骤 2 ： 配置账户信息 在针对Azure订阅运行PowerShell之前，必须先将Azure账户绑定。运行以下命令，在登陆页面输入与Azure管理门户相同的电子邮件和密码，进行身份验证。 Add-AzureAccount   -Environment   AzureChinaCloud 步骤 3 ： 订阅 MySQLDatabase on Azure 服务 运行以下命令订阅MySQL服务。 Register-AzureProvider   -ProviderNamespace   "Microsoft.MySql" 步骤 4 ： 创建资源组 如果您已有资源组，可以直接创建服务器，或者编辑运行以下命令，创建新的资源组, 用户可自定义资源组的名称，以”resourcegroupChinaEast”为例： New-AzureResourceGroup   -Name   "resourcegroupChinaEast"   -Location   "chinaeast" 步骤 5 ： 创建服务器 编辑运行以下命令，定义您的服务器名称、位置、版本等信息来完成服务器创建，以下命令以服务器名称”testPSH”为例: New-AzureResource   -ResourceType   "Microsoft.MySql/servers"   -ResourceName  testPSH  -ApiVersion   2015-09-01   -ResourceGroupName  resourcegroupChinaEast  -Location  chinaeast  -PropertyObject   @{ version  =   '5.5'} 注：目前暂不支持通过PowerShell更改SKU, 创建服务器缺省的SKU为”MS2”。如需调整SKU请在Azure管理门户上进行修改。 步骤 6 ： 创建服务器防火墙原则 编辑运行以下命令，定义您的防火墙原则名称、IP白名单范围（起始IP地址，终止IP地址）等信息来完成防火墙原则的创建。以防火墙原则名称”rule1”为例： New-AzureResource   -ResourceType   "Microsoft.MySql/servers/firewallRules"   -ResourceName  testPSH / rule1  -ApiVersion   2015-09-01   -PropertyObject   @{ startIpAddress ="0.0.0.0";  endIpAddress ="255.255.255.255"}   -ResourceGroupName  resourcegroupChinaEast 步骤 7 ： 创建数据库 编辑运行以下命令，定义您的数据库名称、字符集等信息完成数据库创建。以数据库名称”demodb”为例： New-AzureResource   -ResourceType   "Microsoft.MySql/servers/databases"   -ResourceName  testPSH / demodb  -ApiVersion   2015-09-01   -ResourceGroupName  resourcegroupChinaEast  -PropertyObject   @{ collation ='utf8_general_ci';  charset ='utf8'} 步骤 8 ： 创建用户 编辑运行以下命令，定义您的用户名、密码等信息完成数据库创建。以用户名”admin”为例： New-AzureResource   -ResourceType   "Microsoft.MySql/servers/users"   -ResourceName  testPSH / admin  -ApiVersion   2015-09-01   -ResourceGroupName  resourcegroupChinaEast  -PropertyObject   @{ password ='abc123'} 步骤 9 ： 添加用户权限 编辑运行以下命令，设置数据库读写权限给用户。权限分为"Read"以及"ReadWrite"。以用户名”admin”为例： New-AzureResource   -ResourceType   "Microsoft.MySql/servers/databases/privileges"   -ResourceName  testPSH / demodb / admin  -ApiVersion   2015-09-01   -ResourceGroupName  resourcegroupChinaEast  -PropertyObject   @{ level ='ReadWrite'} 通过上述操作，您已经完成了服务器、数据库、用户、防火墙原则等的创建工作，可以开始使用MySQL Database on Azure的数据库服务。详细的文档可以查看 利用Azure资源管理器与PowerShell来部署使用MySQL Database on Azure 。在使用过程中，如需更多创建、查看、删除、更改的操作，您可以查看 使用PowerShell管理MySQL Database on Azure 。最后，也希望您持续关注我们 MySQL Database on Azure在门户网站的相关信息 ，陆续我们会推出更多功能相关文档、常见问题解答等。 联系我们 MySQL Database on Azure研发团队非常期待您对产品的反馈，请在 Windows Azure官网产品反馈专区 填写您对产品的意见与建议。 也欢迎您扫描关注我们微信公众号”MySqlOnAzure”。我们会定期推送有关产品的最新讯息。 上一篇 新版Windows Azure CDN管理门户正式上线 下一篇 12月2日，上海Cloud Foundry Summit， Azure Cloud Foundry 团队期待和你见面！ 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840712次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 16
URL:: http://blog.csdn.net/azurechina/article/details/50067789

ParseText::
12月2日，上海Cloud Foundry Summit， Azure Cloud Foundry 团队期待和你见面！ - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 12月2日，上海Cloud Foundry Summit， Azure Cloud Foundry 团队期待和你见面！ 2015-11-27 11:13 177人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 12月2日，上海 Cloud Foundry Summit ， Azure Cloud Foundry 团队期待和你见面！ 12日2日对中国Cloud Foundry的用户和开源社区来说，是极有意义的一天。这是Cloud Foundry在上海，也是亚洲的 第一次峰会 ， 届时各国专家云集，而中国用户和社区也有机会参与演讲和讨论交流。 对微软云计算用户来说这更是一个好消息，微软已在11月2日宣布Cloud Foundry 在全球Azure平台上 正式发布General Availability （GA）版本， 并宣布和Pivotal合作发布了 Azure on Pivotal  的预览版 。 Cloud Foundry 是一个高效精简的云计算运用管理平台，支持Node.Js, JAVA，Python等多种开发语言，以及多种公有，私有云平台。微软对开源Cloud Foundry的支持是是微软开放云计算平台之路上的又一个里程碑。用户不仅可以在Azure平台上部署使用Cloud Foundry，使用和其他云平台一致的用户界面， 也可以使用Azure上最新的模块技术简化部署过程。 微软Azure Cloud Foundry的上海团队将会在峰会上介绍Cloud Foundry在Azure平台的部署，构建，应用的基本要点，以及前景展望。团队将会分享的话题为：  用ARM模板和Service Broker来部署你的第一个CF应用，演讲者：Ning Kuang，微软资深项目经理 在公有云上部署企业级Cloud Foundry应用，演讲者：Abel Hu， 微软软件工程师 在中国团队的努力下，Cloud Foundry在中国的支持也在积极进行中，很快就会有好消息宣布。我们期待在12月2号和3号在上海与中国用户和社区交流Cloud Foundry 的开发心得，并倾听你们的反馈！ 微软作为本次大会的赞助商之一，向您发出最诚挚的邀请：注册优惠只需$150，优惠码CFAS15MSFT30 上海 Cloud Foundry Summit   ， 12月2日中国上海市黄浦区西藏中路上海雅居乐万豪酒店 上一篇 MySQL Database on Azure - 利用PowerShell快速创建使用数据库服务 下一篇 Windows Azure移动终端云服务管理（公测版） 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840693次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 17
URL:: http://blog.csdn.net/azurechina/article/details/50350657

ParseText::
Windows Azure移动终端云服务管理（公测版） - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Windows Azure移动终端云服务管理（公测版） 2015-12-18 13:28 117人阅读 评论 (2) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 概览 云在远方，管理在您手中。在这个移动为先 云为先的世界，服务不再是基于请求才提供，而是主动来到身边方便您的模式了。 我们最近将会陆续推出几大移动端利器帮助您随时随地管理您的云服务 。 首批 利器之中排名第一当属 Azure云助手应用 , 它是免费手机App,有安卓和苹果两个版本，目前应用处于公测阶段。利器二是Microsoft云科技微信公众号里“我的云”，它藏身于微信公众号之中。他们两个都是是云服务监控和管理工具，面向的是世纪互联运营的 Windows Azure中国的云服务。 首期推出的 5大主要功能如下。 ·         使用 Azure Active Directory登陆 Azure，PIN码设置及解锁，高级别安全保障。 ·         查看 Azure上的服务状态，目前支持虚拟机，存储空间，云服务，以及 WEB应用，支持按订阅号过滤服务。 ·         获取服务状态异常通知，目前虚拟机的 CPU异常通知已上线。 ·         查看 Azure服务的基本信息，数据监控并执行一些管理操作（启动，停止，重启等， 目前仅 Azure云助手应用支持此类操作 ）。 ·         账单服务，目前支持企业客户管理员查询（ 目前仅 Azure云助手应用支持此操作 ）。 安装使用 Azure云助手应用 扫描二维码直接下载安装。 目前支持安卓版和 iOS版。 如果您使用安卓版， 遇到系统提示已禁止安装未知来源的应用，请选择解除禁止按钮，或者到设置页面暂时开启允许安装未知来源应用开关。 如果您使用iOS版，由于iOS内测流程限制，麻烦您提交您的苹果账户名（AppleID，一般为电子邮件地址，即您用来登录App Store和iCloud的帐户名）以便将您加入内测名单。请发送邮件到MCDIE@microsoft.com，我们会回复您详细的内测安装流程。 安装完成后打开应用， 接受测试条款 ，点击登录按钮即可开始使用。 以下是几个主要功能页面。 Microsoft云科技微信公众号 “我的云“ 扫描此二维码关注Microsoft云科技微信公众号。 公众号里您可以查看Azure云服务相关的技术文章和业界动态。选择绑定微信号和Azure云服务的账号，您就可以直接查看您的Azure服务状态，收到提醒消息。 以下是几个主要功能页面。 后续更新 本文仅是简介，更多详情请关注 Microsoft云科技公众号，绑定微软云服务，或下载使用 Azure云助手应用。我们会继续努力，更有针对性的提升用户体验，逐步增加功能模块。敬请期待！ 如果您对我们的产品有任何意见或者建议， 请发邮件到AZUREME@microsoft.com ,或扫码加入微信群，我们会提供详细的咨询。您的反馈是我们共赢的基石。如果您尚未注册成为Azure用户，请与我们联系，我们将为前30名联系人提供1元试用账户。 上一篇 12月2日，上海Cloud Foundry Summit， Azure Cloud Foundry 团队期待和你见面！ 下一篇 Azure PowerShell 1.0.0以上版本在中国Azure使用的注意事项 顶 5 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840702次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 18
URL:: http://blog.csdn.net/azurechina/article/details/50351421

ParseText::
Azure PowerShell 1.0.0以上版本在中国Azure使用的注意事项 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Azure PowerShell 1.0.0以上版本在中国Azure使用的注意事项 2015-12-18 14:38 84人阅读 评论 (0) 收藏 举报 随着Azure PowerShell 1.0.0+的推出，越来越多的客户开始使用新的版本的Azure PowerShell。此版本的PowerShell最大的改变在于将原先的 Switch-AzureMode 的指令移除，将原本在其下的指令改以加上Rm的方式存在，如 Get-AzureResource 改为 Get-AzureRmResource 。如此一来，在使用之前就不需要先做AzureMode的切换。因此，PowerShell1.0.0的改变主要影响的是使用Azure资源管理器(Azure Resource Manager，以下简称ARM)的用户，对于使用Azure服务管理器(Azure Service Manager，以下简称ASM)的用户影响并不大。(关于两者差异可参考下列常见问题) 然而，由于此次版本的改变，许多用户在验证身份时发生了问题： 1.    如同以前版本使用 Add-AzureAccount–Environment AzureChinaCloud 输入中国Azure的身份。却发现使用 AzureRm 相关指令时要求重新以 Login-AzureRmAccount 输入身份。 2. 当输入 Login-AzureRmAccount–Environment AzureChinaCloud 时，出现错误。 这是因为此次改版之后将ASR和ARM两者的身份信息及环境参数分开，因此需要分别输入并需要对环境参数进行额外操作。 在解决这个错误之前，需要先确认当前Azure PowerShell的版本。 可在控制台中查找相关信息或在PowerShell中执行 Get-Module -ListAvailable | Where-Object {$_.name -like "*Azure*" } 这边需要特别确认AzureRM.Profile的版本，我这边的版本是1.0.1。 首先，建议所有的用户升级到Azure PowerShell 1.0.2以上版本，主要是因为在此版本中提供了相关修正。使用0.9.x版本的用户，也建议进行升级，主要是因为有些新的服务在新的版本下才能使用。 (如RedisCache Premium) 最新的Azure PowerShell安装文件下载地址请到这里查找: https://github.com/Azure/azure-powershell/releases 在此，我假设Azure PowerShell都升级到1.0.2以上版本了。（无法升级的1.0.0及1.0.1用户作法可参考常见问题） 接着，在PowerShell中输入下列指令 Login-AzureRmAccount –EnvironmetName AzureChinaCloud 在Azure PowerShell 1.0.2之后，加入了-EnvironmentName参数，使用该参数就能成功验证中国Azure的账户信息。 接着，就能正常的操作AzureRm相关指令了 常见问题 1.  如果我现在使用的版本是AzurePowerShell 1.0.0 / 1.0.1，该如何进行ARM的身份验证？ 需要先定义在ARM下可用的环境变数 $ChinaRmEnv =Get-AzureRmEnvironment –Name AzureChinaCloud 接着将此变数应用在Login-AzureRmAccount上 Login-AzureRmAccount –Environment$ChinaRmEnv 2.  该如何回复到之前的版本？ 需要先移除目前安装的Azure PowerShell (控制台或是remove-module)，然后到 https://github.com/Azure/azure-powershell/releases 下载你需要的版本。但由于未来Azure PowerShell的服务与更新，可能会造成使用旧版本的功能限制，还是建议用户升级到最新版本。 3.  Azure资源管理器(Azure Resource Manager) 和Azure服务管理器(Azure Service Manager) 有何区别？ Azure服务管理器为Azure最开始的服务管理系统，让用户能对服务进行相关操作如创建，删除，修改等。Azure资源管理器则为新一代的Azure管理系统，强化了针对资源组的管理，授权及资源建立的范本。此外，有些服务只建立在Azure资源管理器上(如Azure Stream Analytics, Redis Cache)。 转载自： http://blogs.msdn.com/b/cciccat/archive/2015/12/09/azure-powershell-1-0-0-azure.aspx  上一篇 Windows Azure移动终端云服务管理（公测版） 下一篇 MySQL连接问题浅析 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840695次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 19
URL:: http://blog.csdn.net/azurechina/article/details/50392955

ParseText::
MySQL连接问题浅析 - 微软云计算：Windows Azure 中文博客（CSDN镜像博客） - 博客频道 - CSDN.NET 微软云计算：Windows Azure 中文博客（CSDN镜像博客） 本中文博客由微软云计算Azure论坛支持小组开办。内容以Windows Azure Platform为主。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 MySQL连接问题浅析 2015-12-24 10:48 75人阅读 评论 (0) 收藏 举报 版权声明：本文为博主原创文章，未经博主允许不得转载。 MySQL的客户端，无论是PHP或者Java，都会发起多个连接来提高系统的吞吐量。在云里面的服务器，因为一些设计和实现上的不同，有一些问题被放大了，同时也带了一些新的问题。 连接的超时时间 在Azure里面，所有的TCP连接都会通过Azure最外层的网络负载均衡器(SLB)，负载均衡器有一个很短的空闲超时，缺省在几分钟。当连接超时的时候，负载均衡器不会通知TCP连接的两端，服务器和客户端都不会得到连接断开的通知。这个行为对许多连接池的实现带来了困扰。所以，对于连接超时时间我们的服务缺省设置为120秒，这个时间确定比负载均衡器的空闲超时要短来避免这个问题。 这个时间同时是对一个查询最长的执行时间。因为在查询的时候是没有网络流量的，负载均衡器会认为这个链接是空闲的。 连接池的使用和大小 我们的服务对于链接的建立做了很多优化，基本上建立一个新连接的时间和在本地的MySQL性能接近，但是新建一个连接的代价仍然是不可忽视的，我们建议使用连接池(JAVA)或者长连接(PHP)。实际代码的例子可以参考 http://www.windowsazure.cn/documentation/articles/mysql-database-connection-pool 在使用连接池的时候，建议保持一个比较小的最小连接数，这个数字可以通过观察实际应用的平均压力来确定。 连接池最大的链接数是需要通过对应用程序进行性能压力测试以后决定的。在大多数的情况下，我们服务多个版本(MS1-4)的链接数限制并不是最佳性能的链接数，往往更少的链接数能达到更好的性能。比如MS4的链接数限制是750，但它的最佳的输出性能一般发生在链接数在150-200之间，当然这个值和实际的数据库以及查询有非常大的相关性。 上一篇 Azure PowerShell 1.0.0以上版本在中国Azure使用的注意事项 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 azurechina 访问： 840696次 积分： 14392 等级： 积分：14392 排名： 第391名 原创： 71篇 转载： 64篇 译文： 530篇 评论： 346条 文章搜索 博客专栏 CCIC CAT Azure Advice 文章：22篇 阅读：12530 Windows Azure 开源解决方案 文章：29篇 阅读：15702 Windows Azure入门教学系列 文章：12篇 阅读：31755 文章存档 2015年12月 (3) 2015年11月 (3) 2015年09月 (1) 2015年08月 (1) 2015年06月 (6) 2015年04月 (10) 2015年03月 (6) 2015年02月 (7) 2015年01月 (6) 2014年12月 (14) 2014年11月 (26) 2014年10月 (31) 2014年09月 (6) 2014年08月 (10) 2014年07月 (5) 2014年06月 (10) 2014年05月 (6) 2014年04月 (13) 2014年03月 (16) 2014年02月 (5) 2014年01月 (13) 2013年12月 (9) 2013年11月 (13) 2013年10月 (10) 2013年09月 (10) 2013年08月 (13) 2013年07月 (17) 2013年06月 (15) 2013年05月 (16) 2013年04月 (14) 2013年03月 (10) 2013年02月 (4) 2013年01月 (5) 2012年12月 (5) 2012年11月 (11) 2012年10月 (6) 2012年09月 (13) 2012年08月 (7) 2012年07月 (17) 2012年06月 (12) 2012年05月 (9) 2012年04月 (10) 2012年03月 (8) 2012年02月 (8) 2012年01月 (2) 2011年12月 (7) 2011年11月 (9) 2011年10月 (9) 2011年09月 (11) 2011年08月 (10) 2011年07月 (8) 2011年06月 (12) 2011年05月 (9) 2011年04月 (12) 2011年03月 (13) 2011年02月 (6) 2011年01月 (8) 2010年12月 (12) 2010年11月 (8) 2010年10月 (5) 2010年09月 (6) 2010年08月 (7) 2010年07月 (10) 2010年06月 (8) 2010年05月 (52) 2010年04月 (1) 阅读排行 Windows Azure 革新 – TFS集成（WAWS第2部分） (31201) 如何选择虚拟机规格 (13242) 在Windows Azure平台上部署服务 (12474) Table Storage对分页的支持 (8552) 现实世界的Windows Azure：与迈阿密市的信息科技助理署长，James Osteen 的访谈 (转) (7926) 日本富士通公司宣布支持Windows Azure的全新中间件产品全球可用 (7206) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7152) Windows Azure Marketplace入门教学-利用TabLeau Public构建可视化DataMarket应用 (7147) 云计算的思想领袖：与橡树岭国家实验室云计算研究员Rob Gillen的谈话 (6797) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (5936) 评论排行 Windows Azure入门教学系列 (四)：使用Blob Storage (37) 如何选择虚拟机规格 (27) Windows Azure入门教学系列 (八)：使用Windows Azure Drive (9) 通过Windows Azure Connect ，实现本地机器与Windows Azure 虚拟机的相互连接(转+译） (9) Table Storage对分页的支持 (9) 宣布降低Windows Azure Storage的定价 (8) 在Windows Azure平台上部署服务 (8) 通过构建Storage Explorer 应用学习Windows Azure Storage APIs (8) Windows Azure Marketplace DataMarket概述 (7) Windows Azure 解决方案系列: 开发拓展搜索-救援应用程序，拯救更多溺水者 (7) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Windows Azure移动终端云服务管理（公测版） ShinStone : 移动为先云为先 Windows Azure移动终端云服务管理（公测版） gandof : 终于出来了 新版Windows Azure CDN管理门户正式上线 u010924878 : 膜拜 我个人有关 Azure 网络 SLA、带宽、延迟、性能、SLB、DNS、DMZ、VNET、IPv6 等的 Azure 常见问题解答 WillShaoMSFT : Good Resources！ Windows Azure 存储的冗余存储选项和只读访问跨地域冗余存储 pzqxd : 说的是很好，不过各种坑一堆，试用的也不是很满意，收费很多分的很细，导致不明不白的 被停机了N次 Microsoft Azure File 服务简介 azurechina : @cx34211:感谢您的反馈，根据您提出的疑问，我们已经更新了此博客。如果以后您有类似的疑问，可以... Microsoft Azure File 服务简介 cx34211 : 此文章由英文版直接翻译为中文版，但是其中很多命令不适用于中国区的azure，必须做针对性的修改才可以... 新 Azure SQL 数据库服务等级的性能 u012250099 : @azurechina:非常感谢！ Windows Azure 和必应地图通过交互的网站将Speilberg的“War Horse”的历史带进生活 u010850027 : 谢谢分享 学习了`(*∩_∩*)′ 在 Windows Azure 上部署并定制化 FreeBSD 虚拟机镜像 u010850027 : 谢谢分享 学习了`(*∩_∩*)′

Recno:: 20
URL:: http://blog.csdn.net/baidu_30541191/article/details/50321807

ParseText::
DHT11数字温湿度传感器 - 问鼎63的博客 - 博客频道 - CSDN.NET 问鼎63的博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 DHT11数字温湿度传感器 2015-12-15 22:48 141人阅读 评论 (1) 收藏 举报 分类： 51单片机 （4） 作者同类文章 X 版权声明：本文为博主原创文章，转载须注明原文地址。 DHT11数字温湿度传感器 简单介绍： DHT11数字温湿度传感器是一款含有已校准数字信号输出的温湿度复合传感器。产品为 4 针单排引脚封装 接口说明： 建议连接线长度短于20米时用5K上拉电阻,大于20米时根据实际情况使用合适的上拉电阻。 电源引脚： DHT11的供电电压为 3－5.5V。传感器上电后，要等待1s 以越过不稳定状态在此期间无需发送任何指令。 电源引脚（VDD，GND）之间可增加一个100nF 的电容，用以去耦滤波。 串行接口  (单线双向)  DATA 用于单片机与 DHT11之间的通讯和同步 采用单总线数据格式 一次通讯时间4ms左右 数据分小数部分和整数部分，当前小数部分用于以后扩展,现读出为零。 数据传输格式： 一次完整的数据传输为40bit,高位先出。 数据格式: 8bit湿度整数数据 + 8bit湿度小数数据 + 8bit 温度整数数据 + 8bit温度小数数据 + 8bit校验和 数据传送正确时校验和数据等于“8bit湿度整数数据+8bit湿度小数数据+8bi温度整数数据+8bit温度小数数据”所得结果的末8位。 通讯过程： 通讯总过程： 通讯起始阶段： 总线空闲状态为高电平 需采集数据时，主机把总线拉低等待DHT11响应（须大于18毫秒,保证DHT11能检测到起始信号。） DHT11接收到主机的开始信号后,等待主机开始信号结束。 主机发送开始信号结束后,转为输入模式（即拉高电平）延时等待20-40us。 主机读取DHT11的响应信号，若总线处于低电平，表示DHT11开始响应。 DHT11开始响应80us后拉高总线80us 然后开始传输0_1信号。 0_1信号的表示 数据0的表示如下： 数据1表示如下： 显然0_1信号都是先由50us的低电平开始，再由高电平的时间长短表示0或1。 DHT11引脚说明： 代码： #include<reg52.h> sbit DHTIO=P1^1; //humidity 湿度 //temperature 温度 //integer 整数 //decimal 小数 unsigned char humidity_interger=0,humidity_decimal; unsigned char temperature_integer=0,temperature_decimal; unsigned char check; void delay20ms() { unsigned char a,b,c; for(c=1;c>0;c--) for(b=222;b>0;b--) for(a=40;a>0;a--); } void delay40us() { unsigned char a,b; for(b=3;b>0;b--) for(a=4;a>0;a--); } void dht_start() { DHTIO=1; //初始高电平 delay40us(); DHTIO=0; //主机拉低电平 delay20ms(); //保持电平时间大于18ms DHTIO=1; //主机拉高电平 delay40us(); //延迟等待20-40us等待从机响应 } unsigned char recieve_data() { unsigned char i,flag,data_byte; for(i=0;i<8;i++) { flag=2; while((!DHTIO)&&flag++);//等待从机发出50us低电平结束 delay40us(); //延时超过26us-28us不超过70us data_byte=data_byte<<1; if(DHTIO) //如果此时dhtio为1则表示此时从机输出数据为1否则说明此时从机输出数据为0 { data_byte|=0x01; flag=2; while((DHTIO)&&flag++);//等待剩下的高电平结束 } if(!flag) break; } return data_byte; } void dht_take_sample() { unsigned char flag; dht_start(); if(!DHTIO) //从机发出响应信号 { flag=2; while((!DHTIO)&&flag++);//检测从机发出80us低电平是否结束 flag=2; while((DHTIO)&&flag++); //检测从机发出80us高电平是否结束 //开始采集数据 humidity_interger=recieve_data(); //采集湿度整数部分 humidity_decimal=recieve_data(); //采集湿度小数部分 temperature_integer=recieve_data(); //采集温度整数部分 temperature_decimal=recieve_data(); //采集温度小数部分 check=recieve_data(); //采集校验位 DHTIO=1; //采集数据后主机拉高电平 } } unsigned char get_humidity() { return humidity_interger; } unsigned char get_temperature() { return temperature_integer; } 博乐点评 一共有 1位 博乐进行推荐 wangyaninglm    2015-12-23 19:24:17 作者的代码和实验都比较专业，外行人不好看懂，希望多贴点实验结果 上一篇 Servlet知识笔记 下一篇 I2C总线协议 顶 1 踩 0 我的同类文章 51单片机 （4） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 baidu_30541191 访问： 2800次 积分： 420 等级： 积分：420 排名： 千里之外 原创： 37篇 转载： 2篇 译文： 0篇 评论： 2条 文章搜索 文章分类 51单片机 (5) java development (4) 数据结构与算法 (11) html与css与js (6) hdu 题目 (11) 其他 (2) 阅读排行 扩展kmp算法 (199) 前端开发之CSS格式化排版 (183) KMP算法 (179) hdu oj 1285 确定比赛名次 (176) 前端开发之CSS布局模型 (158) 前端开发之css盒模型 (148) 归并排序 (143) DHT11数字温湿度传感器 (137) Dreamweaver cs6安装详细图文教程 (123) 01背包 (111) 评论排行 KMP算法 (1) DHT11数字温湿度传感器 (1) hdu oj 2177 取(2堆)石子游戏 (0) 我的邮箱 (0) 巴什博奕 (0) hdu oj 1527 取石子游戏 (0) 威佐夫博奕 (0) hdu 3293 sort (0) EEPROM实验（24C02） (0) AC自动机步骤详解 (0) 最新评论 KMP算法 baidu_30541191 : 123123 文章存档 2015年12月 (12) 2015年08月 (27)

Recno:: 21
URL:: http://blog.csdn.net/bisal/article/details/46529527

ParseText::
java.sql.SQLException: 索引中丢失 IN或OUT 参数::x - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 java.sql.SQLException: 索引中丢失 IN或OUT 参数::x 标签： JDBC Oracle PrepareStatement 2015-06-17 09:06 739人阅读 评论 (0) 收藏 举报 分类： 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 个人心得 （105） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 使用JDBC时，会有这么一个错误：java.sql.SQLException: 索引中丢失 IN或OUT 参数::x 如下示例中insertLog.execute();这行会抛出这个异常： String logSQL = "insert into tbl_obj(id, obj, type, cont, proposer, operator, date, remark) " + "values(seq_tot.nextval, ?, ?, ?, ?, ?, SYSDATE, ?)"; insertLog = conn.prepareStatement(logSQL); insertLog.setString(2, trace.getObj()); insertLog.setString(3, trace.getType()); insertLog.setString(4, trace.getCont()); insertLog.setString(5, trace.getProposer()); insertLog.setString(6, trace.getOperator()); insertLog.setString(8, trace.getRemark()); insertLog.execute(); 检索了一些帖子，对于这种问题，指出的原因很多，“ 全角半角引起；参数过多；配置文件和数据库字段类型不一致；或是数据库的索引问题等 ”。 根据错误提示，和前辈种种的碰壁，归结为两点： (1) 索引是否有问题？(“索引中丢失”) (2) 字段赋值是否与数据库字段类型匹配？ 对于(1)的论证，查看这张表的索引，这张表是以ID作为主键，没有其他索引，因此只有一个主键索引，查看状态也是VALID的，没有错误： SQL> select index_name, status from user_indexes where table_name='TBL_OBJ_TRACE'; INDEX_NAME STATUS ------------------------------ -------- SYS_C0031302 VALID 对于(2)的论证， 首先看了trace的set/get方法中对字段类型的定义，都是String，对应库中的字段类型都是VARCHAR2，没有差别。 其次再看setString，和VALUES中字段是对应的啊。其实问题就出在这了，看下setString方法的解释： void java.sql.PreparedStatement.setString(int parameterIndex, String x) throws SQLException Sets the designated parameter to the given Java String value. The driver converts this to an SQL VARCHAR or LONGVARCHAR value (depending on the argument's size relative to the driver's limits on VARCHAR values) when it sends it to the database. Parameters: parameterIndex the first parameter is 1, the second is 2 , ... x the parameter value Throws: SQLException - if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs or this method is called on a closed PreparedStatement 可以看到第一个参数parameterIndex，参数索引， parameterIndex does not correspond to a parameter marker in the SQL statement (如果没有对应到SQL语句中的参数标识符)，则会抛出SQLException异常。 SQL语句中values(seq_tot.nextval, ?, ?, ?, ?, ?, SYSDATE, ?)的参数标识符一共6个，setString同样是6个，但顺序不对，setString中第一个参数的索引序号是要和SQL语句中是一致的，并不是SQL语句中这里VALUES字段的位置，而应该是SQL语句VALUES中参数标识符的序号。 改为如下格式就对了： String logSQL = "insert into tbl_obj(id, obj, type, cont, proposer, operator, date, remark) " + "values(seq_tot.nextval, ?, ?, ?, ?, ?, SYSDATE, ?)"; insertLog = conn.prepareStatement(logSQL); insertLog.setString(1, trace.getObj()); insertLog.setString(2, trace.getType()); insertLog.setString(3, trace.getCont()); insertLog.setString(4, trace.getProposer()); insertLog.setString(5, trace.getOperator()); insertLog.setString(6, trace.getRemark()); insertLog.execute(); 总结： JDBC的这个报错，提示信息很晦涩，但这个错误感觉是属于那种碰过一次之后，基本下次就能知道错误的范围，排查起来应该也比较顺畅了，例如：索引是否有问题、代码中的字段类型和表中字段类型是否一致、代码中使用的参数索引和SQL语句中的参数标识符是否一致(个数、顺序等)。 EOF bisal @17JUN15 ﻿﻿ ﻿﻿ 上一篇 存在外键关联的主表truncate如何做 下一篇 normal数据库关闭hang的问题 顶 0 踩 0 我的同类文章 技术之我见 （161） Oracle （177） 个人心得 （105） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346540次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 22
URL:: http://blog.csdn.net/bisal/article/details/46594601

ParseText::
normal数据库关闭hang的问题 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 normal数据库关闭hang的问题 标签： Oracle shutdown 关闭的四种参数 2015-06-22 23:08 667人阅读 评论 (0) 收藏 举报 分类： Oracle （177） 作者同类文章 X 技术之我见 （161） 作者同类文章 X 个人心得 （105） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 今晚办公楼停电维护，需要提前关闭服务器，为防止异常关闭导致的各种问题， 有个测试库，使用shutdown normal停库，结果就是很常见的hang住了。 操作顺序： ​1. shutdown normal，然后关闭了当前sqlplus窗口。 ​从alert日志中看： ​ Mon Jun 22 16:50:22 2015 Shutting down instance (normal) Stopping background process SMCO Shutting down instance: further logons disabled 这里涉及到shutdown normal的原理，稍后引述。 ​ ​2. 此时重新登录，sqlplus / as sysdba ​，执行startup或shutdown immediate命令都提示失败， SQL*Plus: Release 11.2.0.1.0 Production on Mon Jun 22 17:03:06 2015 Copyright (c) 1982, 2009, Oracle. All rights reserved. Connected. SQL> startup ORA-01012: not logged on SQL> shutdown immediate ORA-24324: service handle not initialized ORA-24323: value not allowed ORA-01090: shutdown in progress - connection is not permitted Mon Jun 22 16:50:24 2015 Stopping background process CJQ0 Stopping background process QMNC Stopping background process MMNL Stopping background process MMON License high water mark = 125 ORA-01090提示说正在执行关闭操作，不允许其他连接的操作。 3. 其实这涉及到normal关闭的原理，他需要等待所有已连接用户中断连接，换句话说，如果仍有连接到库的用户，shutdown的操作就一直等待。这是最完全的关闭方式，但同时是变数最大的，因为可能你不知其他用户什么时候中断。 首先尝试查找出所有连接用户，用kill -9直接杀进程。 可以使用ps -ef查找所有(LOCAL=NO)的进程，LOCAL=NO表示连接不是本地，而是远程。 ps -ef|grep ora|grep -v grep|grep -v ora_|grep LOCAL=NO|awk '{print $2}'，然后kill -9 进程号 或者 ps -ef|grep ora|grep -v grep|grep -v ora_|grep LOCAL=NO|awk '{print $2}'|xargs kill 从alert日志看： Mon Jun 22 16:55:26 2015 Active process 27446 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 27402 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 27555 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 11697 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 14942 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 27559 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 27513 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 26911 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 31993 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 30810 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 27557 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 11684 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 11666 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 27510 user 'oracle11g' program 'oracle@dcsopenNode1' Active process 11688 user 'oracle11g' program 'oracle@dcsopenNode1' SHUTDOWN: waiting for logins to complete. Mon Jun 22 17:01:29 2015 All dispatchers and shared servers shutdown 是提示了所有dispatcher和共享服务关闭，但sqlplus登录后仍是上面的提示。 4. 尝试关闭监听服务，lsnrctl stop。 问题依旧。 5. 重登陆执行shutdown abort，强制关闭。 从alert日志看： USER (ospid: 28558): terminating the instance Instance terminated by USER, pid = 28558 看样子是关闭了实例。 重新执行sqlplus / as sysdba SQL*Plus: Release 11.2.0.1.0 Production on Mon Jun 22 17:43:25 2015 Copyright (c) 1982, 2009, Oracle. All rights reserved. Connected to an idle instance. 再次执行startup-shutdown normal， SQL> startup ORACLE instance started. Total System Global Area 3290345472 bytes Fixed Size 2217832 bytes Variable Size 2499807384 bytes Database Buffers 771751936 bytes Redo Buffers 16568320 bytes Database mounted. Database opened. SQL> shutdown normal Database closed. Database dismounted. ORACLE instance shut down. 由于现在已经没有连接的用户了，正常启动，正常关闭了。 从alert日志看， Mon Jun 22 17:46:01 2015 Starting ORACLE instance (normal) LICENSE_MAX_SESSION = 0 LICENSE_SESSIONS_WARNING = 0 Picked latch-free SCN scheme 3 Using LOG_ARCHIVE_DEST_1 parameter default value as /oracle/ora11gR2/product/11.2.0/dbhome_1/dbs/arch Autotune of undo retention is turned on. IMODE=BR ILAT =27 LICENSE_MAX_USERS = 0 SYS auditing is disabled Starting up: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production With the Partitioning, OLAP, Data Mining and Real Application Testing options. Using parameter settings in server-side spfile /oracle/ora11gR2/product/11.2.0/dbhome_1/dbs/spfiledcsopen.ora System parameters with non-default values: processes = 150 memory_target = 3152M control_files = "/oracle/ora11gR2/oradata/dcsopen/control01.ctl" control_files = "/oracle/ora11gR2/oradata/dcsopen/control02.ctl" db_block_size = 8192 compatible = "11.2.0.0.0" undo_tablespace = "UNDOTBS1" remote_login_passwordfile= "EXCLUSIVE" db_domain = "" dispatchers = "(PROTOCOL=TCP) (SERVICE=dcsopenXDB)" audit_file_dest = "/oracle/ora11gR2/admin/dcsopen/adump" audit_trail = "DB" db_name = "dcsopen" open_cursors = 300 diagnostic_dest = "/oracle/ora11gR2" Mon Jun 22 17:46:03 2015 PMON started with pid=2, OS id=30699 Mon Jun 22 17:46:03 2015 VKTM started with pid=3, OS id=30701 at elevated priority VKTM running at (10)millisec precision with DBRM quantum (100)ms Mon Jun 22 17:46:03 2015 GEN0 started with pid=4, OS id=30705 Mon Jun 22 17:46:03 2015 DIAG started with pid=5, OS id=30707 Mon Jun 22 17:46:03 2015 DBRM started with pid=6, OS id=30709 Mon Jun 22 17:46:03 2015 PSP0 started with pid=7, OS id=30711 Mon Jun 22 17:46:03 2015 DIA0 started with pid=8, OS id=30713 Mon Jun 22 17:46:03 2015 MMAN started with pid=9, OS id=30715 Mon Jun 22 17:46:03 2015 DBW0 started with pid=10, OS id=30717 Mon Jun 22 17:46:03 2015 LGWR started with pid=11, OS id=30721 Mon Jun 22 17:46:03 2015 CKPT started with pid=12, OS id=30723 Mon Jun 22 17:46:03 2015 SMON started with pid=13, OS id=30725 Mon Jun 22 17:46:03 2015 RECO started with pid=14, OS id=30727 Mon Jun 22 17:46:03 2015 MMON started with pid=15, OS id=30729 starting up 1 dispatcher(s) for network address '(ADDRESS=(PARTIAL=YES)(PROTOCOL=TCP))'... Mon Jun 22 17:46:03 2015 MMNL started with pid=16, OS id=30731 starting up 1 shared server(s) ... ORACLE_BASE from environment = /oracle/ora11gR2 Mon Jun 22 17:46:04 2015 ALTER DATABASE MOUNT Successful mount of redo thread 1, with mount id 2809595100 Database mounted in Exclusive Mode Lost write protection disabled Completed: ALTER DATABASE MOUNT Mon Jun 22 17:46:08 2015 ALTER DATABASE OPEN Thread 1 opened at log sequence 1279 Current log# 1 seq# 1279 mem# 0: /oracle/ora11gR2/oradata/dcsopen/redo01.log Successful open of redo thread 1 MTTR advisory is disabled because FAST_START_MTTR_TARGET is not set SMON: enabling cache recovery Successfully onlined Undo Tablespace 2. Verifying file header compatibility for 11g tablespace encryption.. Verifying 11g file header compatibility for tablespace encryption completed SMON: enabling tx recovery Database Characterset is ZHS16GBK No Resource Manager plan active replication_dependency_tracking turned off (no async multimaster replication found) Starting background process QMNC Mon Jun 22 17:46:09 2015 QMNC started with pid=20, OS id=30789 Completed: ALTER DATABASE OPEN Starting background process CJQ0 Mon Jun 22 17:46:11 2015 CJQ0 started with pid=22, OS id=30806 Mon Jun 22 17:46:18 2015 Shutting down instance (normal) Shutting down instance: further logons disabled Stopping background process QMNC Stopping background process CJQ0 Stopping background process MMNL Stopping background process MMON License high water mark = 5 All dispatchers and shared servers shutdown ALTER DATABASE CLOSE NORMAL Mon Jun 22 17:46:22 2015 SMON: disabling tx recovery SMON: disabling cache recovery Mon Jun 22 17:46:22 2015 Shutting down archive processes Archiving is disabled Archive process shutdown avoided: 0 active Thread 1 closed at log sequence 1279 Successful close of redo thread 1 Completed: ALTER DATABASE CLOSE NORMAL ALTER DATABASE DISMOUNT Completed: ALTER DATABASE DISMOUNT ARCH: Archival disabled due to shutdown: 1090 Shutting down archive processes Archiving is disabled Archive process shutdown avoided: 0 active Mon Jun 22 17:46:23 2015 Stopping background process VKTM: ARCH: Archival disabled due to shutdown: 1090 Shutting down archive processes Archiving is disabled Archive process shutdown avoided: 0 active Mon Jun 22 17:46:25 2015 Instance shutdown complete 借鉴《Concept》，一些知识点： 1. 如果用户试图访问一个正在关闭的数据库，会得到错误提示：ORA-01090: shutdown in progress - connection is not permitted. 2. 关闭数据库，必须用SYSOPER或SYSDBA的角色。 3. 关闭数据库，是有超时时间的，如果用户未中断连接，或者交易未完成，超过一小时，则shutdown命令会取消，提示错误：ORA-01013: user requested cancel of current operation. 4. 几种关闭库的参数， shutdown normal： 默认的关闭参数，需要两个条件： (1) 执行语句后，不允许新的连接。 (2) 数据库关闭之前，数据库会等待所有已连接用户中断连接。 下一次启动时不需要实例恢复。 shutdown immediate： 使用场景： (1) 初始化一个自动，无人值守的备份。 (2) 马上就要断电。 (3) 数据库或应用工作不正常，你不能马上联系到用户退出登录或他们无法退出登录。 条件： (1) 不允许新的连接，不允许新的交易。 (2) 任何未提交的事务会回滚(如果此时有个长交易，未提交，那么不会像这种关闭名称immediate那样迅速地关闭)。 (3) 不会等待已连接用户退出登录。数据库会隐式回滚活动事务，中断连接用户。 下一次启动时不需要实例恢复。 shutdown transactional： 适用于计划停机，允许活动交易处理完成后再停止实例的场景。 条件： (1) 不允许新的连接，不允许新的交易。 (2) 所有交易完成后，会中断所有和库的连接。 (3) 在这个时间点，关闭实例就像执行了shutdown immediate。 下一次启动时不需要实例恢复。 transactional参数主要会防止用户丢失交易，同时不需要所有用户退出登录。 shutdown abort： 适用场景： 数据库或应用不能正常工作，并且没有其它类型的关闭操作正在进行。 (1) 需要立即关闭数据库(例如，一分钟后电源会被关闭)。 (2) 启动实例时碰到了问题。 条件： (1) 不允许新的连接，不允许新的交易。 (2) 正在被Oracle处理的客户端SQL语句会被立即中断。 (3) 未提交事务不会回滚。 (4) Oracle不会等待正保持连接的客户端退出登录。数据库会隐式地中断所有连接。 下一次启动时需要进行实例恢复。 总结： 以上四种参数会适合于不同的场景，简单讲， shutdown normal是默认的关闭方式，最完整的关闭方式，缺点是需要被动等待所有交易完成，所有用户退出登录。 shutdown immediate只要不存在较长的需要回滚的事务，其关闭时间会快。 shutdown transactional会最大限度地保证交易的完成。前三种都不需要实例恢复。 shutdown abort则是最暴力的关闭，关闭时间最快，但代价是启动需要实例恢复，因为关闭时存在未回滚未提交的事务。 上一篇 java.sql.SQLException: 索引中丢失 IN或OUT 参数::x 下一篇 Tuxedo多人使用tmadmin命令时，如何强制停止服务 顶 0 踩 0 我的同类文章 Oracle （177） 技术之我见 （161） 个人心得 （105） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346533次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 23
URL:: http://blog.csdn.net/bisal/article/details/46760009

ParseText::
Tuxedo多人使用tmadmin命令时，如何强制停止服务 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Tuxedo多人使用tmadmin命令时，如何强制停止服务 标签： Tuxedo tmadmin tmshutdown 2015-07-05 00:39 954人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Tuxedo 版权声明：本文为博主原创文章，未经博主允许不得转载。 需要重启Tuxedo应用时，提示：LIBTUX_CAT:577: ERROR: Unable to register because the slot is already owned 此时执行tmadmin命令，有报错： $ tmadmin tmadmin - Copyright (c) 1996-1999 BEA Systems, Inc. Portions * Copyright 1986-1997 RSA Data Security, Inc. All Rights Reserved. Distributed under license by BEA Systems, Inc. Tuxedo is a registered trademark. TMADMIN_CAT:199: WARN: Cannot become administrator.Limited set of commands available. 从上面两个提示看，可能有其他用户正在使用tmadmin操作，导致此用户session登录后无法执行这些高级别命令。 进一步使用w命令，看是否有这样的用户操作： v490e5-tux:/opt/app/tuxapp/gateway/config$ w   1:29pm  up 354 day(s),  1:57,  3 users,  load average: 0.02, 0.03, 0.04 User       tty            login@  idle   JCPU   PCPU  what root       console     7Jul14354days                     -sh tuxapp   pts/2         1:14pm                                tmadmin tuxapp   pts/3         1:28pm                                 tmadmin 确实如此，有其他用户session正在做指令。 此时停止所有服务会报错： tmshutdown -y; Shutting down all admin and server processes in /app/app/etc/tuxconfig Shutting down server processes ... Shutting down admin processes ...       Server Id = 0 Group Id = SITE1 Machine = SITE1:  CMDTUX_CAT:1668: WARN: Cannot shutdown BBL on SITE1. Clients and/or servers may be running CMDTUX_CAT:949: WARN: Shutdown failed 0 processes stopped. 必须使用强制命令：tmshutdown -c -y 这样就可以停止所有Tuxedo服务，再做其他操作。 上一篇 normal数据库关闭hang的问题 下一篇 Windows 7平台安装Oracle Client 10g版本时需要做的一点变更 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346538次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 24
URL:: http://blog.csdn.net/bisal/article/details/46982461

ParseText::
Windows 7平台安装Oracle Client 10g版本时需要做的一点变更 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Windows 7平台安装Oracle Client 10g版本时需要做的一点变更 标签： Oracle windows 7 Client 10g 2015-07-21 11:00 671人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 新发的笔记本，Windows 7 Pro，需要安装Oracle Client，同事给了一个10g的版本。安装过程中提示： “正在检查操作系统要求… 要求的结果: 5.0,5.1,5.2,6.0 之一实际结果: 6.1 检查完成。 此次检查的总体结果为: 失败 <<<< 问题: Oracle Database 10g 未在当前操作系统中经过认证。   这个问题网上有很多帖子回复，其实很简单，Orace软件会依赖于refhost.xml这个文件中定义的操作系统类型来识别。10g版本该文件总共有两个，位置分别是：/stage/prereq/client和/stage/prereq/client_prereqs/client，可以看见里面定义了不同类型的操作系统，10g出现的时候还没有Windows 7，因此原始版本没有定义这个类型的操作系统配置，只需要手工加入Windows 7的配置，让Oracle安装时可以知晓这个操作系统类型即可。 添加内容： <!--Microsoft Windows 7--> <OPERATING_SYSTEM>     <VERSION VALUE="6.1"/> </OPERATING_SYSTEM>       上一篇 Tuxedo多人使用tmadmin命令时，如何强制停止服务 下一篇 Oracle RAC安装过程中碰到的“坑”和关键点(一) 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346545次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 25
URL:: http://blog.csdn.net/bisal/article/details/47072435

ParseText::
Oracle RAC安装过程中碰到的“坑”和关键点(一) - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Oracle RAC安装过程中碰到的“坑”和关键点(一) 标签： Oracle RAC 安装 2015-07-26 22:26 699人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在物理机上使用虚机搭建RAC环境时碰到了很多“坑”和关键点，这里慢慢一一回味总结下。   物理机：Intel(R) Core(TM) i7-5600U CPU @ 2.60GHz，8G内存 虚拟机软件：VMware ServerVersion 2.0.2 数据库软件：Oracle 11.2.0.1、Grid 虚机操作系统：Oracle Linux 6.2 虚机安装规划：本地硬盘20G，内存2G，共享磁盘共有4块：2块VOTE，各1.2G，2块数据盘，各5G   (1) 虚拟机本地磁盘和共享磁盘的存储 我创建两个RAC节点，分别存储于两个不同的文件夹，例如：D:/rac1和D:/rac2。 共享磁盘不能和虚机磁盘存储位置相同，因为他可以由两个节点共享访问，因此需要单独存储，例如D:/sharedisk。   (2) 主机名 虚机安装OREL中有一步是创建主机名，由于会有两个节点，因此命名规范上能有一定规律，例如rac1.bisal和rac2.bisal。   (3) 选择分区方案 有以下几种可选项： 1. Use All Space：使用所有空间。删除所有分区，并执行默认的安装策略。 2. Replace Existing Linux System(s)：替换现有 Linux 系统。只删除 Linux 文件系统的分区，并执行默认的安装策略。 3. Shrink Current System：缩小现有系统。缩小现有分区大小，并执行默认的安装策略。 4. Use Free Space：使用剩余空间。使用剩余的空间，执行默认的安装策略。 5. Create Custom Layout：创建自定义布局。 默认的安装策略是： 1. 分出一个单独的分区，挂载到 /boot 目录； 2. 创建 SWAP 分区，一般为内存的 1.5-2 倍； 3. 剩余空间全部分给 / 分区； 也可以选择5，自己来定义不同的分区策略。   (4) 选择软件组 如果想安装后可以直接进入图形界面，在这里需要选择Desktop。   (5) 配置网卡IP 节点1：设置两块网卡，             网卡1：IP是192.168.11.200，Gateway是192.168.11.1，DNS是192.168.11.200。             网卡2： IP是 10.0.0.200， Gateway是 10.0.0.1， DNS是 10.0.0.200 。 节点2：设置两块网卡，             网卡1：IP是192.168.11.210，Gateway是192.168.11.1，DNS是192.168.11.210。             网卡2：IP是10.0.0.210，Gateway是10.0.0.1，DNS是10.0.0.210。 配置后可以重启网络服务：service network restart，使其生效。   To Be Continued ... 上一篇 Windows 7平台安装Oracle Client 10g版本时需要做的一点变更 下一篇 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346550次 积分： 5877 等级： 积分：5877 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 26
URL:: http://blog.csdn.net/bisal/article/details/47137239

ParseText::
复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 标签： Oracle update with bug 2015-07-30 00:42 1812人阅读 评论 (1) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 盖总(eygle)在刚结束的甲骨文大会的演讲中，通过一个简单的UPDATE语句，为我们展示了什么叫由点及面的优化，什么叫由点及面的知识覆盖度，不在于这个案具体如何操作，更应关注或更值得我们借鉴的是这种学习态度和方法思路，大师是如何炼成的？我想这个案例可以带给我们一些启迪。   下面就复盘一下这个案例的整个过程，注：版权归盖总(eygle)所有~   问题描述： 问题的标题是：“并行更新成为系统瓶颈” SQL： UPDATE /*+ parallel(a, 8) */ tbl_a a SET name = (SELECT name FROM tbl_b WHERE id = a.id), class = (SELECT class FROM tbl_b WHERE id = a.id) WHERE a.id IN (SELECT /*+ parallel(b, 8) */ id FROM tbl_b b); 现象是这条SQL执行时间非常长，从介绍看是有2.5分钟。   优化过程： 1. 为了以下可以更清楚地说明问题，对这个SQL做了简化处理，我们需要优化的是这条SQL： UPDATE tbl_a a SET name = (SELECT name FROM tbl_b WHERE id = a.id), class = (SELECT class FROM tbl_b WHERE id = a.id) WHERE a.id IN (SELECT id FROM tbl_b b); 我们创建两张模拟表： SQL> create table tbl_a( id number, name varchar2(5), class varchar2(5)); Table created. SQL> create table tbl_b( id number, name varchar2(5), class varchar2(5)); Table created. SQL> create sequence seq_a cache 1000; Sequence created. SQL> create sequence seq_b cache 1000; Sequence created. 插入一些随机数据： begin for i in 1 .. 100000 loop insert into tbl_a values (seq_a.nextval, dbms_random.string('U', 5), dbms_random.string('U', 5)); end loop; commit; end; / PL/SQL procedure successfully completed. SQL> select count(*) from tbl_a; COUNT(*) ------------ 100000 begin for i in 1 .. 10000 loop insert into tbl_b values (seq_b.nextval, dbms_random.string('U', 5), dbms_random.string('U', 5)); end loop; commit; end; / PL/SQL procedure successfully completed. SQL> select count(*) from tbl_b; COUNT(*) ------------ 10000 2. 执行原SQL语句 SQL> set timing on SQL> UPDATE tbl_a a SET name = (SELECT name FROM tbl_b WHERE id = a.id), class = (SELECT class FROM tbl_b WHERE id = a.id) WHERE a.id IN (SELECT id FROM tbl_b b); 10000 rows updated. Elapsed: 00:00:07.42 需要7秒多的时间(虽然和示例中2.5分钟有差距，但仅为了说明优化的问题，时间上的差距可以忽略)。 3. 第一次优化 我们从这个SQL中可以看到，更新TBL_A表的ID列，但TBL_B表的SELECT有三次，即三次的全表扫描，那么要是能减少TBL_B表检索的次数，执行时间肯定可以减少。 SQL> UPDATE tbl_a a SET (name, class) = (SELECT name, class FROM tbl_b WHERE id = a.id) WHERE a.id IN (SELECT id FROM tbl_b b); 10000 rows updated. Elapsed: 00:00:04.04 这样的调整是符合SQL语法的，执行时间变为了4秒多，效果显著。   4. 第二次优化 虽然执行时间减少了接近一半，但SQL中还是对TBL_B执行了两次扫描，是否还可以减少一次？ SQL> UPDATE (SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) SET name = b_name, class = b_class; SET name = b_name, class = b_class * ERROR at line 4: ORA-01779: cannot modify a column which maps to a non key-preserved table Elapsed: 00:00:00.01 这样就做到了只扫描一次TBL_B表，直接对子查询更新，但此时报了一个错误，ORA-01779， 这就引出了non key-preserved table的概念。非键值保存表，杨长老的博客( http://blog.itpub.net/4227/viewspace-195889/ )中提到过这个错误： “造成这个错误的原因是更新的列不是事实表的列，而是维度表的列。换句话说，如果两张表关联，其中一张表的关联列是主键，那么另一张表就是事实表，也就是说另一张表中的列就是可更新的；除非另一张表的关联列也是主键，否则这张表就是不可更新的，如果更新语句涉及到了这张表，就会出现ORA-1799错误。如果是两张表主键关联，那么无论更新那个表的字段都可以。 其实这个限制的真正原因是 Oracle要确保连接后更新的内容可以写到一张表中，而这就要求连接方式必须是1对N或者1对1的连接 。这样才能确保连接后的结果集数量和事实表一致。从而使得Oracle对连接后子查询的更新可以顺利的更新到事实表中。” a.id=b.id，我们是用TBL_B的id列作为条件更新，需要确保这列只会对应到TBL_B表的一行记录，可以为表TBL_B的id列设置主键、唯一索引或唯一约束，三种操作，这里选择设置唯一约束： SQL> alter table tbl_b add constraint uq_b_id unique(id); Table altered. 再次执行： SQL> UPDATE (SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) SET name = b_name, class = b_class; 10000 rows updated. Elapsed: 00:00:00.12 执行时间一下仅为0.12秒。 上面如果TBL_A的ID列设置为主键，则为1对1的连接，如果仅是TBL_B的ID列为唯一约束，则为1对N的连接。   总结： 通过两次优化，执行时间从7秒降到了0.12秒，虽然这里的示例数据未必和实际情况一致，但成比例的缩放足以说明这个问题，从这个案例可以看出，优化的本质就是少做事，原始SQL执行三次全表扫描，那目标就是减少全表扫描的次数，第一次优化的操作可能相对容易想到，但第二次优化的操作，就需要知道可以有这种语法，而且出现了ORA-01799的错误，还需要知道这种错误的根本原因是什么，才能有可行的解决方法。   问题还没完，以上说明了SQL语句的优化，下面就是针对这条SQL展开的知识。 假设上面的TBL_A和TBL_B表是属于用户bisal的，此时新建一个用户phibisal，并授予最简单的权限： SQL> create user phibisal identified by phibisal; User created. SQL> grant create session to phibisal; Grant succeeded. bisal用户创建这两张表的public同义词： SQL> create public synonym tbl_a for bisal.tbl_a; Synonym created. SQL> create public synonym tbl_b for bisal.tbl_b; Synonym created. 然后授予phibisal用户对TBL_A表的读和更新权限： SQL> grant select, update on tbl_a to phibisal; Grant succeeded. 此时phibisal登录后执行： sqlplus phibisal/phibisal SQL> UPDATE (SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) SET name = b_name, class = b_class; FROM tbl_a a, tbl_b b * ERROR at line 2: ORA-00942: table or view does not exist 会提示TBL_B不存在，因为用户没有该表的任何权限，( 注：此处和eygle的示例中反馈不同，他提示的是 ORA-01031: insufficient privileges ) 如果授予phibisal对TBL_B表的读权限， SQL> grant select on tbl_b to phibisal; Grant succeeded. 此时可以完成更新： sqlplus phibisal/phibisal SQL> UPDATE tbl_a a SET (name, class) = (SELECT name, class FROM tbl_b WHERE id = a.id) WHERE a.id IN (SELECT id FROM tbl_b b); 10000 rows updated. 但用如下SQL会提示权限错误： UPDATE (SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) SET name = b_name, class = b_class; FROM tbl_a a, tbl_b b * ERROR at line 2: ORA-01031: insufficient privileges 即这种子查询更新会因没有TBL_B表的UPDATE权限报错。 但如果使用如下with语法，则可以正常执行： SQL> UPDATE (WITH tmp AS ( SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) ) SET name = b_name, class = b_class; 10000 rows updated. 做得更彻底一些： SQL> revoke update on tbl_a from phibisal; Revoke succeeded. 撤消了phibisal用户对TBL_A的更新权限，按理说，phibisal用户不应该能再更新TBL_A表了。 使用上面两个调整后的SQL，确实如此： sqlplus phibisal/phibisal SQL> UPDATE (SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) SET name = b_name, class = b_class; FROM tbl_a a, tbl_b b * ERROR at line 2: ORA-01031: insufficient privileges SQL> UPDATE tbl_a a SET (name, class) = (SELECT name, class FROM tbl_b WHERE id = a.id) WHERE a.id IN (SELECT id FROM tbl_b b); UPDATE tbl_a a * ERROR at line 1: ORA-01031: insufficient privileges 但是，奇怪的是如下SQL可以执行： SQL> UPDATE (WITH tmp AS ( SELECT b.name b_name, b.class b_class, a.name, a.class FROM tbl_a a, tbl_b b WHERE a.id = b.id) SELECT * FROM tmp ) SET name = b_name, class = b_class; 10000 rows updated. 这就从原理规则上，违背了权限控制，看下版本： SQL> select banner from v$version where rownum=1; BANNER -------------------------------------------------------------------------------- Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production 这就是2014年7月提出的一个bug，在11.2.0.3、11.2.0.4、12.1等版本中都存在的一个问题，需要修正这个bug，相当于使用with语法，可以绕过用户权限，对没有权限的表进行DML操作。   总结： 精髓不在于这个bug，而是在于从一条简单的UPDATE语句，可以派生出如此丰富的知识，可谓举一反三，受益匪浅。一方面需要我们能够从原理上理解每一个概念，另一方面也要培养自己举一反三，知识点由点及面的想法，做到真正的触类旁通，这样才能逐渐向大师靠拢，向大师学习。 上一篇 Oracle RAC安装过程中碰到的“坑”和关键点(一) 下一篇 Oracle RAC安装过程中碰到的“坑”和关键点(二) 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346536次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 27
URL:: http://blog.csdn.net/bisal/article/details/47212933

ParseText::
Oracle RAC安装过程中碰到的“坑”和关键点(二) - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Oracle RAC安装过程中碰到的“坑”和关键点(二) 标签： oracle rac 安装 包 2015-08-02 22:22 539人阅读 评论 (0) 收藏 举报 分类： 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 个人心得 （105） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 (1) 依赖包的安装 Linux下安装Oracle，除了系统配置参数，我觉得依赖包的安装是另一个比较琐碎的操作。 本次安装碰到了几个包的问题： (a) rpm -Uvh gcc-4*提示： 02. error: Failed dependencies:  03.    cloog-ppl >= 0.15 is needed by gcc-4.4.7-4.el6.x86_64 04.    cpp = 4.4.7-4.el6 is needed by gcc-4.4.7-4.el6.x86_64 不仅说明需要两个依赖包，还说明了需要有对应的版本， cloog-ppl需要大于等于0.15版本的 cpp需要4.4.7-4.el6版本的 之后按照他的版本要求安装即可： 01.rpm -ivh cloog-ppl-0.15.7-1.2.el6.x86_64.rpm 02.warning: cloog-ppl-0.15.7-1.2.el6.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID c105b9de: NOKEY 03.Preparing... ########################################### [100%] 04. 1:cloog-ppl ########################################### [100%] 05. 06.rpm -ivh cpp-4.4.7-4.el6.x86_64.rpm 07.warning: cpp-4.4.7-4.el6.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY 08.Preparing... ########################################### [100%] 09. 1:cpp ########################################### [100%] 01.rpm -ivh gcc-4.4.7-4.el6.x86_64.rpm 02.warning: gcc-4.4.7-4.el6.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY 03.Preparing... ########################################### [100%] 04. 1:gcc ########################################### [100%] (b) Oracleasm 由于安装的是RAC环境，grid需要asmlib。按照要求，应该安装： oracleasm-support oracleasm oracleasmlib 官网对asmlib的介绍： http://www.oracle.com/technetwork/server-storage/linux/driver-matrix-085611.html 对于oracleasm，Oracle Linux 6已经将其编译到内核中，不用安装了。因此仅需要安装oracleasm-support，官网说明如下： 在Oracle Linux 6的光盘中，有oracleasm-support的包，可以rpm安装，版本是oracleasm-support-2.1.5-1.el6.x86_64。 看样子，如果是使用的RedHat版本，可能这块还要花费一些波折。 (这篇博文，介绍了如何在RedHat中安装asmlib的过程： http://blog.itpub.net/23135684/viewspace-1129552/ )   (2) Linu搭建YUM的代理设置 如果本机需要代理才能访问外网，可以修改 /etc/yum.conf 配置文件来做： http代理加入下面这一行 proxy=http://IP地址:端口 ftp代理加入下面这一行//没有试过 proxy=ftp://IP地址:端口 保存退出即可（以上内容不能放在文件最开始的地方） 也可以在命令行里先执行这个，在运行 export http_proxy="IP地址:端口"   (3) Linux使用wget的代理设置 可以在用户本地home路径下创建.wgetrc文件，编辑内容为： http_proxy = IP:端口 ftp_proxy = IP:端口 use_proxy = on wait = 15 然后直接wget http://ip/filename 就ok了   (4) oracle-rdbms-server-11gR2-preinstall快速安装包 Oracle Linux 6为了简化Oracle 11gR2安装过程中的各种依赖包下载、安装、参数和环境变量的配置，提供了一个叫oracle-rdbms-server-11gR2-preinstall的包，他可以做以下几件事： 下载和安装各种依赖包 创建Oracle用户和group 修改/etc/sysctl.conf内核参数 设置/etc/security/limits.conf文件 在64位机里设置numa=off 安装路径： [root@rac1 ~]# cd /etc/yum.repos.d/ [root@rac1 yum.repos.d]#  wget http://public-yum.oracle.com/public-yum-ol6.repo 然后可以打开下载的配置文件： [root@rac1 yum.repos.d]#  cat public-yum-ol6.repo 其中需要修改的操作系统版本中 enabled值由0改为1，即可执行对应版本的下载： [ol6_u2_base] enabled=0 [root@rac1 ~]#  yum install oracle-rdbms-server-11gR2-preinstall 开始对应版本的依赖包下载、安装、参数以及环境变量的设置，可以验证/etc/sysctl.conf，/etc/security/limits.conf等文件。 其实从配置文件中可以看到，对应版本的依赖包下载URL： http://public-yum.oracle.com/repo/OracleLinux/OL6/ 如果不嫌麻烦，通过页面也可以找到对应版本的所有依赖包。从页面中发现U2以前的版本未出现 oracle-rdbms-server-11gR2-preinstall包。 U2版本执行结论如下： [root@bisal yum.repos.d]# yum install oracle-rdbms-server-11gR2-preinstall Loaded plugins: refresh-packagekit, security InstallMedia | 3.7 kB 00:00 ... InstallMedia/primary_db | 3.2 MB 00:00 ... http://public-yum.oracle.com/repo/OracleLinux/OL6/UEK/base/x86_64/repodata/repomd.xml: [Errno 12] Timeout on http://public-yum.oracle.com/repo/OracleLinux/OL6/UEK/base/x86_64/repodata/repomd.xml: (28, 'connect() timed out!') Trying other mirror. Error: Cannot retrieve repository metadata (repomd.xml) for repository: ol6_UEK_base. Please verify its path and try again (5) 配置本地YUM源 [root@rac02 ~]# mount /dev/cdrom  /mnt mount: block device /dev/sr0 is write-protected, mounting read-only 在/etc/yum.repos.d目录下编辑public-yum-ol6.repo or ULN-base.repo文件，修改所有enabled=0。创建后缀名为repo的文件 如:olinux6.repo： [OLINUX] name=Oracle Linux 6 x86_64 baseurl=file:///mnt/Server enabled=1 gpgcheck=0 清除原有的yum信息，yum clean all，安装依赖包： yum install elfutils-libelf-devel (6) 主机的/etc/hosts文件配置 我的配置文件如下： #public 192.168.11.200 rac1.bisal rac1 192.168.11.210 rac2.bisal rac2 #private 10.0.0.200 rac1-priv.bisal rac1-priv 10.0.0.210 rac2-priv.bisal rac2-priv #virtual 192.168.11.201 rac1-vip.bisal rac1-vip 192.168.11.211 rac2-vip.bisal rac2-vip #scan 192.168.11.199 rac-scan.bisal rac-scan hosts文件的全称是the static table lookup for host name(主机名查询静态表)。Linux中，如果没有域名解析服务器，则会使用这个文件来解析某个主机名对应的IP地址。格式是："IP"  "主机名/域名"  "主机别名"。主机名是通常在局域网内使用。 对于RAC环境，如上配置了四套IP，public IP，private IP，virtual IP和scan IP。 To Be Continued ... 上一篇 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 下一篇 tnsping是否可以证明Oracle数据库可用？ 顶 0 踩 0 我的同类文章 技术之我见 （161） Oracle （177） 个人心得 （105） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346548次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 28
URL:: http://blog.csdn.net/bisal/article/details/47335185

ParseText::
tnsping是否可以证明Oracle数据库可用？ - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 tnsping是否可以证明Oracle数据库可用？ 标签： Oracle 监听 tnsping 2015-08-07 10:29 494人阅读 评论 (0) 收藏 举报 分类： 技术之我见 （161） 作者同类文章 X 个人心得 （105） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 监听器是Oracle基于服务器端的一种网络服务，主要用于监听客户端向数据库服务器端提出的连接请求。Oracle官方对其的定义为： A process that listens for incoming client connection requests and manages network traffic to the database. ​ ​本地服务名是Oracle客户端网络配置的一种，另外还有Oracle名字服务器(Oracle Names Server)等。​​ ​​客户端可以通过监听来和数据库服务器进行交互，如果我们是用tnsping来测试，并且返回正常，是否意味着数据库可用？答案是否定的。 1. 如下监听是正常启动： ​ ​ 2. 此时关闭数据库： 3. 从客户端执行tnsping，显示是连接正常。 由此我们可以看到，tnsping只是验证了客户端和数据库服务器的监听端口之间的通路是好的，但并未意味着数据库服务是可用的，因为客户端和Oracle服务器交互是通过Oracle server服务器进程来进行的，私有内存空间即是PGA，所以有时候我们做运维检测，tnsping不能代表Oracle数据库可用，可以用sqlplus真正执行一条语句(select sysdate from dual)才行。 上一篇 Oracle RAC安装过程中碰到的“坑”和关键点(二) 下一篇 MOS文章实验：ORA-01722 from Queries with Dependent Predicates 顶 0 踩 0 我的同类文章 技术之我见 （161） 个人心得 （105） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346549次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 29
URL:: http://blog.csdn.net/bisal/article/details/47661241

ParseText::
MOS文章实验：ORA-01722 from Queries with Dependent Predicates - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 MOS文章实验：ORA-01722 from Queries with Dependent Predicates 标签： Oracle ORA-01722 子查询 2015-08-14 14:32 426人阅读 评论 (0) 收藏 举报 分类： 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 个人心得 （105） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 今天读了一篇MOS文章，《ORA-01722, ORA-01839, ORA-01841, ORA-01847 or ORA-01858 from Queries with Dependent Predicates (文档 ID 232243.1)》，整篇文章的目的就是为了阐述对于包含相互依赖关系谓词的SQL语句产生错误的可能原因(To explain the possible causes of these errors in SQL statements that include predicates that are dependent on each other)。 文章指出可能的错误类型包括以下几种：   ORA-01722 invalid number ORA-01790: expression must have same datatype as corresponding expression ORA-01847 day of month must be between 1 and last day of month ORA-01858 a non-numeric character was found where a numeric was expected ORA-01839 date not valid for month specified ORA-01841 (full) year must be between -4713 and +9999, and not be 0 ORA-01843 not a valid month 如果应用程序设计中需要对不同类型的数据做比较，但又没有显示转换，那么Oracle自己会根据一些规则做必要的类型转换。当使用松散类型('loose typing')字段，且包含可变谓词顺序的场景下，在类型转换发生之前如果不能删除会产生错误的列值，那么就有可能产生上述的一些类型转换错误。 除了修改应用程序，能否解决也取决于查询语句。Oracle提供了/*+ ordered_predicates */这个HINT可以作为workaround，但前提是需要以要求的解析顺序来改写查询语句。 还有一种更复杂的场景，就是使用视图。CBO可以创建满足查询条件的最优执行计划。这就意味着通常会将视图和主查询合并，我们也不能控制谓词的解析顺序。文章举了一个示例，如下SQL查询： select id from (select id, data from data_table where data_type='housenum' ) where to_number(data) = 22; 他会变成如下等价的形式： select id from data_table where data_type='housenum' and to_number(data) = 22; 如果视图或内联视图使用/*+ no_merge */这个HINT，那么就可以防止视图被重写(合并)。另一个可以阻止因视图合并导致错误的方法就是增加一个'不相关'的rownum谓词(例如rownum > 0)，也会防止视图合并。不能合并的视图就不会允许谓词和主查询的谓词合并使用，也就避免了错误的产生。当然，未来的版本可能会察觉到并删除这样'不相关'的谓词。 9.2.0.7.0 SQL> create table data_table (id number ,data_type varchar(12) ,data varchar(30) ); Table created. SQL> insert into data_table values (1234, 'company','Pet Foods Inc'); 1 row created. SQL> insert into data_table values (1234, 'contact','Jennifer'); 1 row created. SQL> insert into data_table values (1234, 'zip','22'); 1 row created. SQL> insert into data_table values (1234, 'shipdate','03-OCT-2003'); 1 row created. SQL> commit; Commit complete. SQL> select id from data_table where data_type='contact' and data='Jennifer'; ID ---------- 1234 正常。数据类型和数据列值都是VARCHAR字符串，不需要类型转换。 实验语句1： SQL> select id from data_table where data_type='zip' and to_number(data) = 22; and to_number(data) = 22 * ERROR at line 4: ORA-01722: invalid number 会提示to_number的处理存在无效数字。 对其执行explain plan for， PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter(TO_NUMBER("DATA_TABLE"."DATA")=22 AND "DATA_TABLE"."DATA_TYPE"='zip') 这里需要将VARCHAR类型的字段转换为NUMBER类型，然后和一个数字类型的值进行比较。对于data列中22这个记录，包含NUMBER数字类型，因此转换是有效的，但对于其他行，这种转换就是无效的，因为不包含等价的数值，例如'Pet Foods Inc'。如果谓词比较是对包含非数字类型的行，此时需要非数字类型值和数字类型值进行比较，在做类型转换的时候就会报错。如果谓词比较从'data_type'列开始，删除所有包含非数字类型的行，那么就不会产生错误。 实验语句2： 如下SQL，如果首先解析内联视图，所有data列包含非数字类型值的行都会被过滤。 SQL> select id from (select id, data from data_table where data_type='zip' ) where to_number(data) = 22; ID ---------- 1234 这里的子查询仅会选择出data_type是ZIP的行，对应的data列值不包含非数字，因此可以正常执行。 对其执行explain plan for， PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter("DATA_TABLE"."DATA_TYPE"='zip' AND TO_NUMBER("DATA_TABLE"."DATA")=22) 先解析子查询，用data_type='zip'过滤后，结果集的行data列都是数字型，因此to_number()可以正常执行。 9i下我们看看优化器的模式是RBO： SQL> show parameter optimizer NAME TYPE VALUE ------------------------------------ ---------------------- ------------------------------ optimizer_mode string CHOOSE 如果此时收集表的统计信息，那么会影响执行计划的选择。 SQL> analyze table data_table compute statistics; Table analyzed. 或者将session优化器模式改为CBO： SQL> alter session set optimizer_mode='ALL_ROWS'; Session altered. 得到以下相同的结论。(原因：因为RBO下如果表存在统计信息，则会采用CBO) 实验语句3： SQL> select id from data_table where data_type='zip' and to_number(data) = 22 ; ID ---------- 1234 这条语句执行explain plan for， PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter("DATA_TABLE"."DATA_TYPE"='zip' AND TO_NUMBER("DATA_TABLE"."DATA")=22) 会先使用data_type='zip'过滤，然后再执行to_number()。 实验语句4： SQL> select id from (select id, data from data_table where data_type='zip' ) where to_number(data) = 22; where to_number(data) = 22 * ERROR at line 6: ORA-01722: invalid number 但是现在第二条SQL执行报错。 这条语句执行explain plan for，发现谓词条件变为如下(顺序变了)： PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter(TO_NUMBER("DATA_TABLE"."DATA")=22 AND "DATA_TABLE"."DATA_TYPE"='zip') CBO下或者收集表的统计信息后，都会先执行to_number()，再使用data_type='zip'，因此报错。 11.2.0.1.0 SQL> create table data_table (id number ,data_type varchar(12) ,data varchar(30) ); Table created. SQL> insert into data_table values (1234, 'company','Pet Foods Inc'); 1 row created. SQL> insert into data_table values (1234, 'contact','Jennifer'); 1 row created. SQL> insert into data_table values (1234, 'zip','22'); 1 row created. SQL> insert into data_table values (1234, 'shipdate','03-OCT-2003'); 1 row created. SQL> commit; Commit complete. 优化器模式是CBO： SQL> show parameter optimizer NAME TYPE VALUE ------------------------------------ ----------- ------------------------------ optimizer_mode string ALL_ROWS 实验语句5： SQL> select id from data_table where data_type='zip' and to_number(data) = 22; ID ---------- 1234 执行explain plan for， PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter("DATA_TYPE"='zip' AND TO_NUMBER("DATA")=22) 实验语句6： SQL> select id from (select id, data from data_table where data_type='zip' ) where to_number(data) = 22; ID ---------- 1234 执行explain plan for， PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter("DATA_TYPE"='zip' AND TO_NUMBER("DATA")=22) 但当该表收集统计信息后，实验语句6就会报错： SQL> select id 2 from (select id, data 3 from data_table 4 where data_type='zip' 5 ) 6 where to_number(data) = 22; where to_number(data) = 22 * ERROR at line 6: ORA-01722: invalid number 使用explain plan for后， PLAN_TABLE_OUTPUT -------------------------------------------------------------------------------- 1 - filter(TO_NUMBER("DATA")=22 AND "DATA_TYPE"='zip') 即使使用/*+ no_merge */也如此。 总结： 1. 9i下，优化器默认模式是RBO，如果表没有统计信息，只会按照RBO方式，SQL查询语句按照谓词从右侧至左侧的顺序解析，如实验语句1。 2. @dbsnake的书中曾介绍过，Oracle会内置一些查询转换规则，只要目标SQL满足了这些规则的要求，Oracle就会对其执行查询转换。Oracle 9i中查询转换是独立于优化器的，和优化器类型无关，因为Oracle此时认为经过查询转换后的等价改写SQL的执行效率一定比原目标SQL的执行效率高。我猜9i内置的查询转换规则，会先对子查询内联视图做解析，或者子查询展开后条件为where to_number(data) = 22 and data_type='zip';，如实验语句2，但仅仅是猜测。 3. 9i下，如果表有统计信息，或者alter session设置session级优化器模式为CBO，如MOS中提到的“ The CBO's function is to generate execution plans that satisfy the query in the most optimal way it can. ”，实验语句3指出CBO下，对谓词顺序进行了调整，先使用data_type='zip'过滤，然后再执行to_number()。 4. 9i下的CBO，如实验语句4，MOS中提到“ That means views often get merged into the main query and so the order in which predicates are evaluated is not under your control ”，从现象看先解析to_number()，导致报错。猜测做了子查询展开，谓词条件是where data_type='zip' and to_number(data) = 22，但从10053中，没有看到原因。 5. 11g，优化器默认模式是CBO，会对谓词顺序进行调整，和9i下CBO的效果相同，如实验语句5。 6. 同样，没有收集表统计信息的前提下，实验语句6可正常执行。 7. @dbsnake提过Oracle 10g及其以后的版本中，Oracle会对某些类型的查询转换计算成本，只有当等价改写SQL的成本值小于未经过查询转换的原始SQL的成本值时，Oracle才会对目标SQL执行这些查询转换。收集表统计信息后，实验语句5依旧可以正常执行，会按照先解析data_type='zip'，后解析to_number()的方式进行，不会报错。但实验语句6再次执行后出现错误，发现谓词条件变为先解析to_number()，所以报错，猜测收集统计信息后，实验语句6的执行成本发生了变化，导致前后使用了不同的执行路径，收集统计信息后，实验语句6成本值低的执行路径，因为谓词先解析了to_number()，导致报错。但从10053上未看出端倪。 虽然上述还有一些猜疑，暂时无从考证，但至少从这篇文章中学习了以下内容： 1. 不同版本RBO和CBO的使用，以及对执行SQL的影响。 2. explain plan for观察查询语句谓词顺序的变化。 3. 10053查看执行计划的成本选择。 上一篇 tnsping是否可以证明Oracle数据库可用？ 下一篇 序列作为主键使用的原理、优缺点讨论 顶 0 踩 0 我的同类文章 技术之我见 （161） Oracle （177） 个人心得 （105） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346532次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 30
URL:: http://blog.csdn.net/bisal/article/details/47760947

ParseText::
序列作为主键使用的原理、优缺点讨论 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 序列作为主键使用的原理、优缺点讨论 标签： Oracle RAC sequence 2015-08-18 22:31 570人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 这几天和同事一直在讨论关于表设计中主键选择的问题，用sequence作为主键究竟有什么好处，又有什么缺点，尤其是有些事务场景上下文需要用到创建的序列值，如何用？其实我想说的是，可能只是一个很简单的概念，可能深入理解，还是有很多未知的知识，当然也就可能会有一些容易忽略但又可能很关键的坑，只有碰了才知道。。。 以下是总结摘要，如有疏漏，还请过路的各位大侠赐教。   1、首先说下seq.nextval主要有以下两种使用场景： (1). 如果一个事务中只是INSERT时需要序列，其他地方不会需要这个序列，那么只需要在INSERT ... VALUES (seq.nextval ...)语句中使用即可。 (2). 如果一个事务中INSERT一张表后，还需要插入时的主键ID值，作为外键插入其他表，那么就需要在INSERT第一张表前使用select seq.nextval from dual提前获取可用的ID保存到一个变量中，为后面使用。 2、其次可以简单说下调用序列的原理，只有理解了序列的原理，才能有助于我们知道如何正确使用序列。 使用序列时Oracle内部大体是按照如下步骤进行： (1). 一个序列会被定义到Oracle内部的一张数据字典表(seq$)的一行。 (2). 第一次使用序列，序列的起始值会加上缓存大小，然后更新回行。 (3). Oracle内部会自动跟踪内存中的两个值，当前值和目标值。 (4). 每次有回话调用seq.nextval，Oracle会递增当前值，然后检查是否超过了目标值，再返回结果。 (5). 如果当前值和目标值相同，Oracle会更新数据字典表中的行，为目标值加上缓存大小，同时内存中产生了一个新的目标值。 例如create sequence seq cache 20;这样一序列。名称为seq的序列，缓存大小是20，默认初始值是1，步长默认是1。 当使用了一次seq.nextval后，可以看HIGHWATER字段值为21，即目标值1+缓存大小20=21。 当执行20次后，seq.nextval值变为21，此时HIGHWATER字段值是41，即目标值21+缓存大小20=41。 也就是每调用seq.nextval值20次，会更新一次seq$表，那么问题来了，如果cache值较小，且序列使用的频率较高，那么会对seq$表有频繁的更新操作，日志量会增加，尤其在RAC下，更新该行的时候，该数据块会在节点间不停的传送，就会产生可能的争用，这种问题会被放大。因此为了减少这种情况，我们可以将cache缓存值设置大一些，例如1000，减少对字典表的更新。 序列还有一个问题，就是cache缓存是实例级的，对于RAC，比如第一个节点使用序列时会分配1-20，第二个节点会被分配21-40，Oracle保证不会重复，但若节点crash了，比如节点1坏了，那么序列就会出现断号，节点1再次使用时，只会从41-60，由于我们用主键只为了标示唯一，不关心段号，也不关心产生的顺序，所以这些可以忽略。   注 ：最近在讨论某系统和一个外系统做全局事务的事情，本想用这个主键作为两系统传输的一部分，用于控制全局事务，且用其作为判断交易先后顺序的依据，这是不太符合要求的，因为是RAC，序列是基于实例级cache，那么如果不能保证某一类型的交易总在一个节点上执行，那么不同次交易产生的主键序列值可能不是递增的，例如节点1处理一次交易，产生序列是1，节点2处理一次交易，产生序列是21，此时节点1再处理一次交易，产生序列是2；除非设置序列为order，但这样在RAC就有可能产生资源争用的问题，因为为了保证多节点间每次产生的序列值是递增的，每次产生就需要多节点间判断当前值后，才能知道下一个值是多少，而且会有额外的锁，保证同一时间只有一个节点在做这个操作，当然究竟是否会产生资源争用，还是要依据实际的业务并发量，或者压力测试才能证明，这里只是说可能会这样的问题，不是一定会，否则Oracle就不会有提供这种order的创建属性，凡事不绝对。 3、结合(1)的场景， (1). 如果一个事务中只是INSERT时需要序列，其他地方不会需要这个序列，那么只需要在INSERT ... VALUES (seq.nextval ...)语句中使用即可。 > 这个场景下，如果序列cache设置为1000，调用100次nextval几乎没有影响。 (2). 如果一个事务中INSERT一张表后，还需要插入时的主键ID值，作为外键插入其他表，那么就需要在INSERT第一张表前使用select seq.nextval from dual提前获取可用的ID保存到一个变量中，为后面使用。 > 这个场景，就有些说的了。如果是同一事务中需要用到之前的序列值，那么就需要提前用select seq.nextval from dual保存到变量中，(当然，如果是用PLSQL语句，则可以不用提前保存变量这步，但咱们的应用中不适用，就不多说了)。 上一篇 MOS文章实验：ORA-01722 from Queries with Dependent Predicates 下一篇 itext生成PDF文件报错“Font 'STSong-Light' with 'UniGB-UCS2-H' is not recognized.” 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346535次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 31
URL:: http://blog.csdn.net/bisal/article/details/48021867

ParseText::
itext生成PDF文件报错“Font 'STSong-Light' with 'UniGB-UCS2-H' is not recognized.” - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 itext生成PDF文件报错“Font 'STSong-Light' with 'UniGB-UCS2-H' is not recognized.” 标签： itext pdf Oracle 2015-08-27 08:34 787人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X Java （1） 作者同类文章 X 技术之我见 （161） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近需要写一个抽取表结构的工具，类似于powerdesigner中的表图，其中有一步用到了itext这个第三方jar包来生成pdf文件，碰到了一个问题，记录于此。   问题描述： 工程使用maven构建，pom.xml中对于jar包的定义如下： <dependency> <groupId>com.lowagie</groupId> <artifactId>itext</artifactId> <version>2.1.7</version> </dependency> <dependency> <groupId>com.itextpdf</groupId> <artifactId>itext-asian</artifactId> <version>5.2.0</version> </dependency> 执行BaseFont bfChinesebfChinese = BaseFont.createFont("STSong-Light", "UniGB-UCS2-H", BaseFont.NOT_EMBEDDED);时报错： "Font 'STSong-Light' with 'UniGB-UCS2-H' is not recognized."   解决 1. 首先尝试替换itext的包版本，他在maven中央库的位置是/maven2/com/lowagie/itext/，最高版本是4.2.2，但尝试后发现问题依旧。 2. 注意到itext-asian的包路径是com.itextpdf，于是继续找，发现/maven2/com/itextpdf/itextpdf中有itextpdf的各个版本，从5.0.6到5.5.6。 3. 搜索一些帖子，发现itext从5.x版本开始，改名为itextpdf，符合上面(1)和(2)对应的版本号。 4. 问题可以确定了，就是上面itext-asian和itext的版本不对应，改为： <dependency> <groupId>com.itextpdf</groupId> <artifactId>itextpdf</artifactId> <version>5.4.3</version> </dependency> 再次运行，ok了。 有些文章提到了itextasian包名未更新也会导致这个问题，但我用的5.2.0这个包，解压后看到包名是正确的，也许新版本已经改了，这点不深究了。 摘要： 找到CJKFont类, 从中看到 InputStream is = getResourceStream(RESOURCE_PATH + "cjkfonts.properties"); cjkFonts.load(is); is.close(); is = getResourceStream(RESOURCE_PATH + "cjkencodings.properties"); cjkEncodings.load(is); is.close(); 他的font和encoding文件都是从String RESOURCE_PATH = "com/itextpdf/text/pdf/fonts/"; 这里加载的,而老itextasian.jar的包名是com.lowagie.text.pdf.fonts, 应该是包名重新命名了, 而没有及时更新itextasian.jar, 改了一下itextasian.jar包路径, 重新运行程序, OK,搞定. ××××××××××××××××××××××××××××××××××××××××××× 更改iTextAsian.jar包名的方法如下 1)使用winrar解压缩程序将原来的iTextAsian.jar解压，目录结构如下 iTextAsian --com --lowagie --text --pdf --fonts --...(字体属性文件) 2)将加压后com目录下的包名lowagie更改为itextpdf 3)在命令行转至iTextAsian目录，重新打包为iTextAsian.jar文件 命令如下： jar cvf iTextAsian.jar com/itextpdf/text/pdf/fonts/* 执行后，将新的iTextAsian.jar加入到classpath路径   参考： http://endual.iteye.com/blog/1623327 http://blog.csdn.net/wang12/article/details/5661106 http://bbs.csdn.net/topics/390283201 上一篇 序列作为主键使用的原理、优缺点讨论 下一篇 NLS_LENGTH_SEMANTICS参数引申的问题 顶 0 踩 1 我的同类文章 个人心得 （105） Java （1） 技术之我见 （161） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346541次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 32
URL:: http://blog.csdn.net/bisal/article/details/48395945

ParseText::
NLS_LENGTH_SEMANTICS参数引申的问题 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 NLS_LENGTH_SEMANTICS参数引申的问题 标签： NLS_LENGTH_SEMANTICS Oracle VARCHAR2 2015-09-13 21:59 682人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 由于某项目的特殊性，开发数据库环境有两套，两边都可能对表结构进行一些修改，因此写了一个工具，比对两边的结构元数据，其中碰到一个问题，很细微，但确实值得注意，在此记录下。 问题： 比对两个环境中同一张表的同一个VARCHAR2类型的字段长度时，发现一个环境中其长度是30，一个环境中其长度是120，两个环境中建表语句该字段定义都是VARCHAR2(30)。 比较字段长度使用的是user_tab_cols视图中DATA_LENGTH这个字段。 分析过程： 1. 查看文档中对DATA_LENGTH的定义，该值是NUMBER类型的，描述是“列的长度( 以字节 )”

Recno:: 33
URL:: http://blog.csdn.net/bisal/article/details/48912441

ParseText::
使用JBoss Tool反向创建PO类 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 使用JBoss Tool反向创建PO类 标签： eclipse jdk hibernate 2015-10-05 10:01 453人阅读 评论 (0) 收藏 举报 分类： Java （1） 作者同类文章 X 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 使用Hibernate Tool可以根据已有的数据库结构，反向创建PO、DAO等类，方便于开发，最近正好有个工作内容，需要用这个，所以重新捡起来学习下。 现在Hibernate Tool已经被JBoss收购，起了个新名字，叫做JBoss Tool，高大上的名字。 要求jdk6或7的版本，并且要求Eclipse Luna 4.4.2版本。 在Edit Configuration中选择已有的一个工程(可以是普通的java工程，也可以是maven工程)，然后可以选择Database connection创建数据源，也可以暂时不选，另外Configurataion file中选择Setup。 然后NEW一个新的配置文件。 选择路径存储创建的配置文件。 下一步，输入对应的数据库配置信息，这里最关键的一步就是 “Default Schema”一项需要填写默认访问的SCHEMA名称，且需要大写 。若不大写，或不填写，后面就会有可能一直处于Pending等待打开数据库SCHEMA的状态，最后超时。 配置完成后，就可以在界面中打开Database，看到默认的SCHEMA了。 如果上面没有选择默认的SCHEMA，这里很可能出现的情况就是如下图，一直处于Pending状态，最后超时，出现的错误是：“reading schema error: zip file closed” 如果第一步操作中在Database connection中创建了数据源，那么需要在“Default Schema Filter”中缩小默认SCHEMA的范围。 接下来就可以开始反向创建PO对象类了，选择图标中的“Hibernate Code Generation Configuration”。 首先选择输出到的工程路径(\dep\src)，然后 选中“Reverse engineer from JDBC Connection”，并创建反向配置文件“reveng.xml”。 第一步还是选择配置文件存储的路径。 接下来选择“Refresh”，将需要创建PO类的表“Include”到窗口右侧。 回到主界面，这里还可以选择创建的不同文件，例如Domain code、DAO code等。 点击开始之后，后台就会根据配置进行相应的转换创建了。 总结起来，使用JBoss Tool反向创建PO类，最需要注意的就是Default Schema的选择，一定要将其范围缩小，这样后面才可能打开数据库资源，否则很可能因为超时导致无法打得开数据库连接的操作。 上一篇 NLS_LENGTH_SEMANTICS参数引申的问题 下一篇 一个有意思的递归定义 顶 0 踩 0 我的同类文章 Java （1） 个人心得 （105） 技术之我见 （161） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346552次 积分： 5877 等级： 积分：5877 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 34
URL:: http://blog.csdn.net/bisal/article/details/48912601

ParseText::
一个有意思的递归定义 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 一个有意思的递归定义 标签： 递归 2015-10-05 10:20 461人阅读 评论 (2) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术引述 （17） 作者同类文章 X 文档 （19） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近在看一本《WEB全栈工程师的自我修养》一书，其中涉及到了npm这个词的意义，非常有意思。 一般人可能以为npm是Node Package Manager的缩写，但实际上不是这样的，npm不是Node Package Manager的首字母缩写，所以不能全大写。npm是“npm is not an acronym”(npm不是一个缩写)这个递归定义的简写。 是不是很绕？呵呵。 递归定义是指一种在定义中引用他自身的定义方法，在程序中引用自己称为递归，因为自身是递归的，所以无法精确地解释出他的真正全称。我们熟知的VISA其实就是一种递归定义，VISA的意义是VISA Internation Service Association，还有PNG，PNG is Not Gif。 再读一遍npm的递归定义“npm is not an acronym”，按理他的缩写应该是ninaa，但是这样就成了acronym(缩写)了，就是错误的，所以只能简称他为npm，我们不知道他是什么，但可以肯定的是，他不是一个缩写。 是不是有点崩溃？这还有一段： npm可以大写么？ 不可以，因为npm不是一个缩写 那npm是什么单词的缩写么？ 是“npm不是一个缩写”的简写。 上一篇 使用JBoss Tool反向创建PO类 下一篇 alter table新增字段操作究竟有何影响？(下篇) 顶 1 踩 0 我的同类文章 个人心得 （105） 技术引述 （17） 文档 （19） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346546次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 35
URL:: http://blog.csdn.net/bisal/article/details/49182025

ParseText::
alter table新增字段操作究竟有何影响？(下篇) - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 alter table新增字段操作究竟有何影响？(下篇) 2015-10-19 01:05 628人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 没想到距此篇博文的上半部分发表( http://blog.csdn.net/bisal/article/details/45418303 )已经有半年的时间，上篇博文是5月小长假的时候，在开往杭州的高铁上完成的，话说第二天就有了我的小baby:)，难道写博客还有助孕的效果？需要的朋友不妨一试，哈哈，归根结底，还是需要作为IT从业者的我们，紧张工作之余，要有放松的安排，不仅是身体上的放松，还要有精神、心灵上的放松，俗话说得好“天空飘来五个字，那都不是事，是事也就烦一会，一会就没事”。 有点扯远了，说正事儿，作为本篇博文的内容，主要包含两个方面： 1. 话题1：不同锁模式的实验 接着上篇博文的话题，针对几种常见的锁模式通过实验感受下之间的不同。 2. 话题2：不同方式新增字段的效率 最近有个系统执行新增字段的操作出现了hang，借此使用实验说明下不同新增字段的方式对效率的影响和原理。 话题1：不同锁模式的实验 上篇博文查看了执行如下新增字段的trace文件： alter table t add (sex varchar2(1)); 发现执行该语句时是以NOWAIT方式对表添加了一个ROW EXCLUSIVE模式锁： LOCK TABLE "T" IN ROW EXCLUSIVE MODE NOWAIT 我们看下Oracle的官方解释： ROW SHARE ROW SHARE permits concurrent access to the locked table but prohibits users from locking the entire table for exclusive access. ROW SHARE允许并发访问被锁定的表，但是禁止用户以排他访问的方式锁定整张表 。 ROW EXCLUSIVE ROW EXCLUSIVE is the same as ROW SHARE, but it also prohibits locking in SHARE mode. ROW EXCLUSIVE locks are automatically obtained when updating, inserting, or deleting. ROW EXCLUSIVE和ROW SHARE相同，但禁止以SHARE模式锁定。当执行update、insert或delete语句时会自动获得ROW EXCLUSIVE锁 。 我是初学者，反正我是没太明白两者的区别，晦涩。只有通过实验，才是最有助于理解其含义的方法。 实验版本： SQL> select * from v$version where rownum = 1 ; Oracle Database 11 g Enterprise Edition Release 11.2 .0 .1 .0 - 64 bit Production ----------------------- 实验 1 ： session 1 执行： SQL> lock table t in row share mode; Table(s) Locked. session 2 此时可以执行以下语句： SQL> update t set a = 1 where id = 1 ; 1 row updated. SQL> select count(*) from t; 1000000 ----------------------- 实验 2 ： session 1 和session 2 都可以执行： SQL> lock table t in row share mode; Table(s) Locked. 此时session 1 可以执行： update t set a = 1 where id = 1 ; 1 row updated. 此时session 2 执行以下语句会hang： update t set a = 1 where id = 1 ; 但可以对其他行记录操作： SQL> update t set b = 'B' where id = 2 ; 1 row updated. ----------------------- 实验 3 ： session 1 执行： SQL> lock table t in row share mode; Table(s) Locked. 此时session 2 可以执行以下两条语句： SQL> lock table t in share mode; SQL> lock table t in row exclusive mode; 但session 2 执行以下语句hang： SQL> lock table t in exclusive mode; 从ROW SHARE的效果来看，这种行级锁，允许不同session同时持有ROW SHARE或SHARE或ROW EXCLUSIVE锁，但某一session执行DML语句后，其他session就无法针对相同的数据行做DML操作，处于hang，除非上一session的DML操作commit或rollback，但此时还是可以允许并发的只读访问。但不允许其他session获得EXCLUSIVE锁。证明了Oracle官方所说的“禁止用户以排他访问的方式锁定整张表”。 接下来看看ROW EXCLUSIVE模式锁的实验。 实验 1 ： session 1 执行： SQL> lock table t in row exclusive mode; Table(s) Locked. session 2 以下语句均可执行： SQL> select count(*) from t; 1000000 SQL> update t set a = 1 where id = 1 ; 1 row updated. 但此时session 1 再执行同行的操作则会hang： SQL> update t set a = 1 where id = 1 ; ----------------------- 实验 2 ： session 1 和session 2 均可执行： SQL> lock table t in row exclusive mode; Table(s) Locked. 如果session 1 执行： SQL> update t set a = 1 where id = 1 ; 1 row updated. 此时session 2 执行以下语句就会hang： SQL> update t set a = 1 where id = 1 ; session 1 和session 2 均可执行： SQL> select count(*) from t; 1000000 ----------------------- 实验 3 ： session 1 执行： SQL> lock table t in row exclusive mode; Table(s) Locked. 此时session 2 可以执行以下两条语句： SQL> lock table t in row share mode; SQL> lock table t in row exclusive mode; 但执行以下两条语句会hang： SQL> lock table t in share mode; SQL> lock table t in exclusive mode; 从ROW EXCLUSIVE的效果来看，这种行级锁，允许不同session同时持有ROW EXCLUSIVE或ROW SHARE锁，但某一session执行DML语句后，其他session就无法针对相同的数据行做DML操作，处于hang，除非上一session的DML操作commit或rollback，但此时还是可以允许并发的只读访问。即他允许多个会话拥有ROW行级EXCLUSIVE或SHARE锁，但无法同时获得EXCLUSIVE或SHARE锁，从限制上要比ROW SHARE更严格。证明了Oracle官方所说的“禁止以SHARE模式锁定”，EXCLUSIVE比SHARE更严格，自然也不能获得EXCLUSIVE锁。 以上是对两种ROW行级锁的实验，结论就是ROW EXCLUSIVE和ROW SHARE均可以允许并发只读操作，从锁的强弱看，ROW EXCLUSIVE > ROW SHARE，但其实这种行级锁可能更多地还是通过DML语句自动获得，而不是用实验中的LOCK语句。以上只是为了更好地说明两者区别。 说完了行级锁，接下来看下表级锁： SHARE SHARE permits concurrent queries but prohibits updates to the locked table. SHARE锁允许并发查询，但是禁止其他session对锁定的表更新。 EXCLUSIVE EXCLUSIVE permits queries on the locked table but prohibits any other activity on it. EXCLUSIVE允许锁定表的查询操作，但禁止其他session对该表的任何操作 我觉得这里Oracle的介绍是有些问题的，不够严谨，至少没有说清楚到底限制有何不同，接下来，我们还是通过实验的方式进行说明。 首先来看SHARE模式锁： 实验 1 ： session 1 执行： SQL> lock table t in share mode; Table(s) Locked. 此时session 2 可以执行： SQL> select count(*) from t; 1000000 但执行以下语句会hang： SQL> update t set b = 'a' where a = 1 ; ----------------------- 实验 2 ： session 1 和session 2 均可执行： SQL> lock table t in share mode; Table(s) Locked. session 1 和session 2 均可执行： SQL> select count(*) from t; 1000000 但此时无论是session 1 还是session 2 先执行以下语句都会hang(比如此处是session 1 先执行)： SQL> update t set b = 'a' where a = 1 ; 此时session 2 执行以下语句也会hang： SQL> update t set b = 'a' where a = 1 ; 但同时session 1 处于hang的语句会报错： SQL> update t set b = 'a' where a = 1 ; update t set b = 'a' where a = 1 * ERROR at line 1 : ORA- 00060 : deadlock detected while waiting for resource 此时session2还处于hang的状态。 ----------------------- 实验 3 ： session 1 执行： SQL> lock table t in share mode; Table(s) Locked. 此时session 2 可以执行： SQL> lock table t in row share mode; SQL> lock table t in share mode; 但以下两条语句均会hang： SQL> lock table t in row exclusive mode; SQL> lock table t in exclusive mode; 从SHARE模式锁的效果来看， (1) 如果某一session获得SHARE模式锁后，其他session还可以执行DML操作。 (2) 如果多个session同时获得SHARE模式锁，则这些session只能执行读操作，做DML操作会hang。 (3) 如果两个session同时对一行记录做DML操作，则第一个session会报ORA-60死锁错误，直接被Oracle检测退出，第二个session继续处于hang。 (4) 如果一个session获得了SHARE模式锁，则其他session不能再获得ROW EXCLUSIVE或EXCLUSIVE模式锁，但可以获得ROW SHARE或SHARE模式锁。 因此对开始的介绍： SHARE锁允许并发查询，但是禁止其他session对锁定的表更新。 更严谨的是说对多个获得SHARE锁的session来说，允许并发读，但禁止做DML操作，即只需看，不许改，这也是SHARE的含义。 接下来看看EXCLUSIVE模式锁的实验。 实验 1 ： session 1 执行： SQL> lock table t in exclusive mode; Table(s) Locked. 此时session 2 可以执行： SQL> select count(*) from t; 1000000 但执行以下语句会hang： SQL> update t set b = 'a' where a = 1 ; ----------------------- 实验 2 ： session 1 执行： SQL> lock table t in exclusive mode; Table(s) Locked. session 2 执行以下语句会hang： SQL> lock table t in exclusive mode; ----------------------- 实验 3 ： session 1 执行： SQL> lock table t in exclusive mode; Table(s) Locked. 此时session 2 执行以下语句均会hang： SQL> lock table t in row share mode; SQL> lock table t in share mode; SQL> lock table t in row exclusive mode; SQL> lock table t in exclusive mode; 从EXCLUSIVE模式锁的效果来看， (1) 如果某一session获得EXCLUSIVE模式锁，则其他session只能允许读操作，禁止DML操作。 (2) 如果某一session获得EXCLUSIVE模式锁，则禁止其他session再获得ROW SHARE、SHARE、ROW EXCLUSIVE或EXCLUSIVE各种模式锁。 因此对开始的介绍： EXCLUSIVE允许锁定表的查询操作，但禁止其他session对该表的任何操作。 更严谨的是说对多个蝴蝶EXCLUSIVE模式锁的session来说，除了读操作外，禁止其他任何操作。 显然，从锁的强弱看，EXCLUSIVE>SHARE>ROW EXCLUSIVE>ROW SHARE。 另外，还有一种锁 SHARE ROW EXCLUSIVE SHARE ROW EXCLUSIVE is used to look at a whole table and to allow others to look at rows in the table but to prohibit others from locking the table in SHARE mode or from updating rows. SHARE ROW EXCLUSIVE模式锁用来查看整张表，允许其他session检索表中的行，但禁止其他session以SHARE模式锁定表或者更新行。 实验 1 ： session 1 执行： SQL> lock table t in share row exclusive mode; Table(s) Locked. 此时session 2 可以执行： SQL> select count(*) from t; 1000000 但执行以下语句会hang： SQL> update t set b = 'a' where a = 1 ; ----------------------- 实验 2 ： session 1 执行： SQL> lock table t in share row exclusive mode; Table(s) Locked. session 2 执行以下语句会hang： SQL> lock table t in share row exclusive mode; ----------------------- 实验 3 ： session 1 执行： SQL> lock table t in share row exclusive mode; Table(s) Locked. 此时session 2 可以执行： SQL> lock table t in row share mode; 但session 2 执行以下语句均会hang： SQL> lock table t in share mode; SQL> lock table t in row exclusive mode; SQL> lock table t in exclusive mode; 从SHARE ROW EXCLUSIVE的效果来看，相比SHARE允许其他session同时获得SHARE模式锁，其禁止其他session获得SHARE模式锁。 从锁的强弱看，EXCLUSIVE(exclusive，X)>SHARE ROW EXCLUSIVE(S/Row-X，SRX)>SHARE(Share，S)>ROW EXCLUSIVE(Row-X，RX)>ROW SHARE(Row-S，RS)。 最后，引述一篇博客的总结( http://blog.itpub.net/9252210/viewspace-626388/ ) 2级锁Row-S 行共享(RS)：共享表锁，sub share，锁有：Select for update,Lock For Update,Lock Row Share。 3级锁Row-X 行独占(RX)：用于行的修改，sub exclusive，锁有：Insert, Update, Delete, Lock Row Exclusive。 4级锁Share 共享锁(S)：阻止其他DML操作，share，锁有：Create Index, Lock Share，locked_mode为2，3，4不影响DML(insert,delete,update,select)操作, 但DDL(alter,drop等)操作会hang。 5级锁S/Row-X 共享行独占(SRX)：阻止其他事务操作，share/sub exclusive，锁有：Lock Share Row Exclusive，具体来讲有主外键约束时update / delete … ; 可能会产生4，5的锁。 6级锁exclusive 独占(X)：独立访问使用，exclusive，锁有：Alter table, Drop table, Drop Index, Truncate table, Lock Exclusive。 数字越大锁级别越高, 影响的操作越多。 话题2：不同方式新增字段的效率 实验 1 ： SQL> set timing on SQL> alter table t add add_a number ; Table altered. Elapsed: 00 : 00 : 00.29 新增一个允许NULL，且无默认值的字段，用时0.29秒。 前文介绍了，获得的是一个ROW EXCLUSIVE模式锁。 LOCK TABLE "T" IN ROW EXCLUSIVE MODE NOWAIT 实验2： SQL > alter table t add add_b number default 0; Table altered . Elapsed : 00 :00 :59 .34 新增一个允许NULL，但有默认值的字段，用时59秒。 从10046的trace文件看，他会首先用EXCLUSIVE模式锁来锁定表。 LOCK TABLE "T" IN EXCLUSIVE MODE NOWAIT 同时，在最后执行了更新字段ADD_B为默认值的操作： update "T" set "ADD_B"=0; 因此不难想为什么耗时这样久，就是还需要更新所有字段为默认值，另外，还会因为数据量的增加，可能需要更多的UNDO空间，进而可能因为一条新增字段的操作，导致整个库的UNDO表空间不够用，不仅影响对这张表的正常增删改操作(因为获取了最高级别EXCLUSIVE锁)，还有可能影响其他业务功能(因为UNDO表空间不够用)。 实验 3 ： SQL> alter table t add add_c number default 0 not null ; Table altered. Elapsed: 00 : 00 : 00.16 新增一个包含NOT NULL约束，有默认值的字段，用时0.16秒。 从10046的trace文件看，会获得一个ROW EXCLUSIVE模式锁来锁定表。 “LOCK TABLE “T” IN ROW EXCLUSIVE MODE NOWAIT“` 锁的级别比实验2要低，而且该默认值是存储于col$数据字典表中的，并不是保存在原表记录上，这点的原因可以参见David的博文( http://blog.csdn.net/tianlesoftware/article/details/7226893 )。即新增一个NOT NULL和默认值的字段，以后每次需要使用该字段时，默认值都是从数据字典中查询到的，这样就减少了新增字段时的DDL语句时间，也减少了存储空间(不用每条需要使用默认值的记录都存储默认值)。 实验 4 ： SQL> select count(*) from t; 1000000 SQL> alter table t add add_h number not null ; alter table t add add_h number not null * ERROR at line 1 : ORA- 01758 : table must be empty to add mandatory ( NOT NULL ) column 新增一个仅有NOT NULL约束，没有默认值的字段，则需要表为空。 从官方文档的介绍看，其实从11g之后，对于新增字段，Oracle进行了优化， Adding Table Columns If a new column is added to a table, the column is initially NULL unless you specify the DEFAULT clause. When you specify a default value, the database immediately updates each row with the default value. Note that this can take some time, and that during the update, there is an exclusive DML lock on the table. For some types of tables (for example, tables without LOB columns), if you specify both a NOT NULL constraint and a default value, the database can optimize the column add operation and greatly reduce the amount of time that the table is locked for DML. You can add a column with a NOT NULL constraint only if the table does not contain any rows, or you specify a default value. 说的很明白了，如果新增一个含有默认值的字段，那么会立即更新每一行，在更新过程中，会有一个EXCLUSIVE级别的锁在该表上。如果指定NOT NULL和默认值，则会进行优化，降低阻止DML操作的时间。如果增加一个仅有NOT NULL的约束字段，那么需要表不能包含任何记录，否则就需要必须指定一个默认值，这也好理解，如果执行之前有记录，又要求NOT NULL，那么之前的记录字段默认值是什么就需要指定才行。 顺带提一句，删除表字段的操作： SQL > alter table t drop column add_b ; Table altered . Elapsed : 00 :00 :43 .44 从10046的trace文件看，也是获得了一个EXCLUSIVE锁，进而更新的过程中是对整张表的DML操作有影响的。 LOCK TABLE "T" IN EXCLUSIVE MODE NOWAIT 总结起来： 1. 11g以上的版本，如果使用NOT NULL和默认值的方式新增字段，那么执行时间会大大降低。且只会有一个ROW EXCLUSIVE级别锁。 2. 11g以上的版本，如果使用默认值，没有NOT NULL约束的方式新增字段，那么执行时间会很久，取决于表中数据量的大小，获得的是EXCLUSIVE级别锁，期间会影响所有记录的DML操作，可能会因UNDO不足对其他操作有影响。 3. 11g以上的版本，如果新增字段没有默认值，也没有NOT NULL约束，则还是会使用ROW EXCLUSIVE模式锁，但由于不需要更新字段值，执行时间也是比较短。 如何选择11g上新增字段的方式，看来是有一个比较清晰的方向了。 上一篇 一个有意思的递归定义 下一篇 日期格式符RR和YY的区别 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346546次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194)

Recno:: 36
URL:: http://blog.csdn.net/bisal/article/details/49388099

ParseText::
日期格式符RR和YY的区别 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 日期格式符RR和YY的区别 2015-10-24 20:49 925人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 近来有一个应用，连接11g的库，自身逻辑大致是根据日期和其他条件删除表中对应的历史记录，此处日期条件判断未使用to_date()，其中日期和另外一些条件是个复合主键，然后再插入一条新记录(此处日期字段使用to_date(XX, ‘DDMONYY’))。在测试的时候，测试人员发现一个问题，先手工插入了一条2050年的记录，然后执行应用，发现报主键冲突，再追查是因为原先的记录并未删除，导致新插入的记录主键冲突，看起来很诡异的问题，为何没有删除旧的记录？ 原因就在于删除的检索条件中日期使用的是DDMONYY日期格式符，但插入的时候没有用任何日期格式符，此时就会使用数据库的默认日期格式符，即： SELECT * FROM nls_database_parameters WHERE parameter='NLS_DATE_FORMAT'; 9i之后NLS_DATE_FORMAT的默认值就是DD-MON-RR。DDMON月和天的格式化字符都是相同的，对年的格式化字符都是使用的两位，RR和YY，那么现在的问题就是DDMONYY和DDMONRR中对年的判断有何区别？ 首先，看DD-MON-RR，以下是官方文档的描述： The RR Datetime Format Element The RR datetime format element is similar to the YY datetime format element, but it provides additional flexibility for storing date values in other centuries. The RR datetime format element lets you store 20th century dates in the 21st century by specifying only the last two digits of the year. RR日期格式符和YY日期格式符很相似，但是对于不同世纪，他提供了存储日期值额外的扩展性。RR日期格式符可以让你在21世纪通过仅仅指定年份的后两位来存储20世纪的日期。 If you use the TO_DATE function with the YY datetime format element, then the year returned always has the same first 2 digits as the current year. If you use the RR datetime format element instead, then the century of the return value varies according to the specified two-digit year and the last two digits of the current year. 如果在TO_DATE函数中使用YY格式符，那么只会返回和当前年相同的前两位年费数字。如果使用RR格式符，那就可以根据指定的两位年份数字，还有当前年的后两位数字，返回不同的值。 That is: If the specified two-digit year is 00 to 49, then If the last two digits of the current year are 00 to 49, then the returned year has the same first two digits as the current year. If the last two digits of the current year are 50 to 99, then the first 2 digits of the returned year are 1 greater than the first 2 digits of the current year. If the specified two-digit year is 50 to 99, then If the last two digits of the current year are 00 to 49, then the first 2 digits of the returned year are 1 less than the first 2 digits of the current year. If the last two digits of the current year are 50 to 99, then the returned year has the same first two digits as the current year. 如果指定的两位年份数字是00-49，那么 如果当前年的后两位数字是00-49，则返回的年份和当前年的前两位数字相同。 如果当前年的后两位数字是50-99，则返回的年份前两位数字会比当前年的前两位数字大1。 如果指定的两位年份数字是50-99，那么 如果当前年份的后两位数字是00-49，则返回的年份前两位数字会比当前年的前两位数字小1。 如果当前年的后两位数字是50-99，则返回的年份和当前年的前两位数字相同。 如下示例： 假设以下查询发生在1950-1999之间： SELECT TO_CHAR(TO_DATE(‘27-OCT-98’, ‘DD-MON-RR’), ‘YYYY’) “Year” FROM DUAL; 1998 SELECT TO_CHAR(TO_DATE(‘27-OCT-17’, ‘DD-MON-RR’), ‘YYYY’) “Year” FROM DUAL; 2017 假设以下查询发生在2000-2049之间： SELECT TO_CHAR(TO_DATE(‘27-OCT-98’, ‘DD-MON-RR’), ‘YYYY’) “Year” FROM DUAL; 1998 SELECT TO_CHAR(TO_DATE(‘27-OCT-17’, ‘DD-MON-RR’), ‘YYYY’) “Year” FROM DUAL; 2017 不管是2000年之前还是之后执行SQL，查询都会返回相同的值。使用RR日期格式符写的SQL，可以根据不同的年份前两位来返回相同的值。 接下来看看DDMONYY，提供的两位年份数字，此时对于世纪的判断就会和当前数据库服务器设置的世纪相同，例如现在是2015年，使用to_date(‘01JAN50’,’DDMONYY’)，那么存入的就是2050-01-01。 再回顾下开始提到的问题， 1. 测试人员手工插入一条2050年的记录。 2. 应用首先执行删除操作，此时日期条件没用to_date()，直接用了’01JAN50’，默认使用的则是DDMONRR格式符，当前是2015年，因此实际删除的条件是1950年的记录。当前表中没有1950年的记录，因此删除记录条数是0。 3. 应用执行插入操作，此时使用的日期查询条件是’01JAN50’，当前是2015年，因此实际要插入的是2015年的记录。但由于表中已经存在一条2050年的记录，因此会报主键冲突的错误。 总结起来，最直接的方式就是使用YYYY或RRRR全年份的表示方式，这样不会有误会，如果使用YY或RR两位表示年份，那就要清楚这两者的区别，以及自己的需求，毕竟Oracle也要根据规则来判断两位年份是哪个世纪的，因此需要选择适合的方式，而且当一次交易中有多次增删改日期条件的逻辑，那么前后使用YY或RR要一致，否则就会因前后条件不一致，导致不同的结果，一个小小的日期格式，包含了不同的理解，显现出了Oracle系统设计的精妙，也对使用者提出来一定的要求，原理比用法更重要。 上一篇 alter table新增字段操作究竟有何影响？(下篇) 下一篇 使用exp导出报错EXP-00091 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346538次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 37
URL:: http://blog.csdn.net/bisal/article/details/49592973

ParseText::
使用exp导出报错EXP-00091 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 使用exp导出报错EXP-00091 2015-11-02 22:13 795人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 使用如下命令执行导出操作： exp user/pwd@db file =/home/ a .dmp log =/home/ a . log 输出如下信息，其中包含一些EXP-00091的错误提示： . . exporting table T 0 rows exported EXP - 00091 : Exporting questionable statistics. EXP - 00091 : Exporting questionable statistics. EXP - 00091 : Exporting questionable statistics. 但导出来的dump文件可用于导入。 看下官方对EXP-00091的介绍： EXP-00091: Exporting questionable statistics. Cause: Export was able export statistics, but the statistics may not be usuable. The statistics are questionable because one or more of the following happened during export: a row error occurred, client character set or NCHARSET does not match with the server, a query clause was specified on export, only certain partitions or subpartitions were exported, or a fatal error occurred while processing a table. Action: To export non-questionable statistics, change the client character set or NCHARSET to match the server, export with no query clause, export complete tables. If desired, import parameters can be supplied so that only non-questionable statistics will be imported, and all questionable statistics will be recalculated. 大致意思是导出过程中，由于客户端字符集或NCHARSET参数和服务器端不一致，导致一些统计信息不可用。解决方案是可以导出不存在问题的统计信息，或者改变客户端字符集或NCHARSET参数。 实验： 方案1： 查询服务器端字符集： SQL> select userenv( 'language' ) from dual; USERENV('LANGUAGE') ------------------------------------------------------- AMERICAN _AMERICA.AL32UTF8 设置客户端字符集： [oracle @Node ]~> export NLS_LANG=AMERICAN_AMERICA.AL32UTF8 执行导出命令： [oracle @Node ]~> exp user/ pwd @db file =/home/a.dmp log =/home/a. log . . exporting table T 0 rows exported 不再报错。 方案2： exp user/pwd@db file =/home/ a .dmp log =/home/ a . log statistics= none 统计信息字段statistics设置为none。 执行导出命令： [oracle @Node ]~> exp user/ pwd @db file =/home/a.dmp log =/home/a. log . . exporting table T 0 rows exported 不再报错。但这种方式相当于未导出那些因字符集不一致错误的统计信息，导入自然也不会有这部分统计信息，如果需要，那么只能再重新收集统计信息。 因此针对这种exp报EXP-00091的错误，可以有上述两种方式workaround，但推荐的肯定还是方案1，导出的信息最全面。 上一篇 日期格式符RR和YY的区别 下一篇 外键值可为空 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346544次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 38
URL:: http://blog.csdn.net/bisal/article/details/49706273

ParseText::
外键值可为空 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 外键值可为空 2015-11-07 22:32 860人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 从感官上，外键用于限制主子表的关联关系，是一种强关联关系，那么子表的外键值不应该为空，而是都会关联到主表对应的记录上，但实际上，至少在Oracle中，外键是可以为空的，打个比方，班级是主表，学生是子表，一个班级有多名学生，一名学生肯定会关联到一个存在的班级，但来了一个转校生，还没有分班，他现在属于学生子表，但还没有关联到班级主表中的任何一条记录。 实验： 1.创建主表T_A，子表T_B，子表A_ID列作为外键关联到主表T_A的主键ID字段。 SQL> create table t_a( id number , name varchar2( 1 )); Table created. SQL> alter table t_a add constraint pk_t_a primary key( id ); Table altered. SQL> create table t_b( id number , a_id number , name varchar2( 1 )); Table created. SQL> alter table t_b add constraint pk_t_b primary key( id ); Table altered. SQL> alter table t_b add constraint fk_b_a foreign key(a_id) references t_a( id ); Table altered. 2.插入记录，其中T_B表的一条记录标明A_ID字段值为空。 SQL> insert into t_a values( 1 , 'a' ); 1 row created. SQL> insert into t_b values( 1 , 1 , 'b' ); 1 row created. SQL> insert into t_b values( 2 , '' , 'c' ); 1 row created. SQL> select * from t_a; ID N ---------- - 1 a SQL> select * from t_b; ID A_ID N ---------- ---------- - 1 1 b 2 c 可以插入，说明外键字段是可以为空。 3.直接删除有关联子表记录的主表记录时，会报错： SQL> delete from t_a where id=1; delete from t_a where id=1 * ERROR at line 1: ORA-02292: integrity constraint (BISAL.FK_B_A) violated - child record found 4.先删除子表记录，再删除主表对应的记录，则可以执行。 SQL> delete from t_b where id = 1 ; 1 row deleted. SQL> delete from t_a where id = 1 ; 1 row deleted. 上一篇 使用exp导出报错EXP-00091 下一篇 EDB和Oracle在分区剪裁实践上的一点差别 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346547次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 39
URL:: http://blog.csdn.net/bisal/article/details/50089359

ParseText::
EDB和Oracle在分区剪裁实践上的一点差别 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 EDB和Oracle在分区剪裁实践上的一点差别 2015-11-28 23:33 597人阅读 评论 (1) 收藏 举报 分类： Oracle （177） 作者同类文章 X 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 前两天碰到一个问题，在EDB数据库中创建的一张分区表，需要使用分区本地索引和分区剪裁，但查看执行计划发现没能用到分区剪裁的功能。 创建分区表： CREATE TABLE test ( id bigint NOT NULL , bag_id bigint, bp_airline_code character varying ( 3 ), bp_flight character varying ( 5 ), bp_flight_suffix character varying ( 2 ), bp_flight_date timestamp with time zone , CONSTRAINT pk_test PRIMARY KEY (id) ) partition by range(bp_flight_date) ( partition part_20151101 VALUES LESS THAN( '2015-NOV-02' ), partition part_20151102 VALUES LESS THAN( '2015-NOV-03' ), partition part_20151103 VALUES LESS THAN( '2015-NOV-04' ) ); 创建主表和三个分区的本地索引： CREATE INDEX test_idx_01 ON test (bag_id, bp_airline_code, bp_flight, bp_flight_suffix); CREATE INDEX test_part_20151101_idx ON test_part_20151101 (bag_id, bp_airline_code, bp_flight, bp_flight_suffix); CREATE INDEX test_part_20151102_idx ON test_part_20151102 (bag_id, bp_airline_code, bp_flight, bp_flight_suffix); CREATE INDEX test_part_20151103_idx ON test_part_20151103 (bag_id, bp_airline_code, bp_flight, bp_flight_suffix); 执行以下带有分区键的查询语句，： explain select * from test where bp_flight_date=to_date( '2015-11-01' , 'yyyy-mm-dd' ) and bag_id = 1 发现并没有使用到分区剪裁： 有点疑惑，明明用了分区键作为查询条件，为什么此处是扫描了所有分区？ 分析 ： 其实这个问题说简单也简单，说麻烦也麻烦，主要还是细节和原理的理解。 上例中使用的分区规则是： partition by range(bp_flight_date) ( partition part_20151101 VALUES LESS THAN( '2015-NOV-02' ) ... 以bp_flight_date日期字段作为分区键，条件是LESS THAN(‘2015-NOV-02’)。但执行的查询语句条件是： where bp_flight_date=to_date( '2015-11-01' , 'yyyy-mm-dd' ) and bag_id = 1 对日期值是使用了to_date函数，并不是像分区规则中的“字符串”格式，有理由怀疑是因为两者不统一，由于某些RULE导致未能用到分区剪裁的功能。 接下来按照猜想改下查询条件： explain select * from test where bp_flight_date= '2015-11-01' , 'yyyy-mm-dd' and bag_id = 1 查看执行计划： 现在已经只扫描test_part_20151101这个分区，达到了分区剪裁的目的。 之所以有上面这些问题，可能还是源于Oracle的一些思维，在Oracle，意识当中将日期字段作为查询条件就应该使用to_date()这类的函数 和上面相同的表结构在Oracle中的实现： 这里看到执行计划显示还是用到了分区特性，并没有执行全表扫描，其中Pstart和Pstop显示的是KEY，表示是基于函数值的分区键。 那么像EDB这样创建一个不用to_date函数的分区表： 直接报错了，提示字段类型不匹配，无法创建表。这也说明了在日期字段类型上，EDB和Oracle的一点不同。 总结 ： 1. EDB中分区键是日期字段，VALUES LESS THAN(‘2015-11-01’)可以使用字符串格式，但Oracle则会报ORA-01861的错误，不支持这种创建方式。 2. EDB对使用分区键的查询语句，如果日期条件的格式和分区规则中不同，例如分区规则是’2015-NOV-01’或’2015-11-01’，但查询条件使用to_date(‘2015-11-01’,’yyyy-mm-dd’)，则不会用到分区剪裁的特性，而是扫描所有分区。对于Oracle，在创建分区规则时就已经做了严格限制，因此不存在日期条件的格式和分区规则中不一致的情况。这两种方式说不上孰好孰坏，EDB是更自由，但需要人为注意书写的正确，Oracle则是严谨，好处是避免了人为使用出错的可能，间接上可能也反映出了“社区 VS 商业”、“开源 VS 闭源”对待某个问题的一种态度。 上一篇 外键值可为空 下一篇 11g中ADR管理下的监听trace文件路径问题 顶 0 踩 0 我的同类文章 Oracle （177） 个人心得 （105） 技术之我见 （161） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346539次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 文章存档 2015年12月 (1) 2015年11月 (3) 2015年10月 (4) 2015年09月 (1) 2015年08月 (5) 2015年07月 (4) 2015年06月 (4) 2015年05月 (4) 2015年04月 (4) 2015年03月 (4) 2015年02月 (1) 2015年01月 (6) 2014年12月 (3) 2014年11月 (3) 2014年10月 (6) 2014年09月 (5) 2014年08月 (7) 2014年07月 (5) 2014年06月 (4) 2014年05月 (5) 2014年04月 (10) 2014年03月 (5) 2014年02月 (5) 2014年01月 (3) 2013年12月 (7) 2013年11月 (7) 2013年10月 (25) 2013年09月 (32) 2013年08月 (13) 2013年07月 (9) 2013年06月 (10) 2013年05月 (2) 2013年04月 (2) 2011年09月 (2) 2011年08月 (1) 2009年11月 (1) 2008年12月 (1) 2008年07月 (3) 2008年02月 (2) 2008年01月 (1) 2007年08月 (2) 2007年07月 (1) 2007年06月 (3) 2007年04月 (5) 2007年02月 (2) 2007年01月 (1) 2006年12月 (2) 2006年11月 (1) 2006年10月 (6) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 40
URL:: http://blog.csdn.net/bisal/article/details/50284991

ParseText::
11g中ADR管理下的监听trace文件路径问题 - bisal的专栏 - 博客频道 - CSDN.NET bisal的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 11g中ADR管理下的监听trace文件路径问题 2015-12-13 17:56 649人阅读 评论 (0) 收藏 举报 分类： 个人心得 （105） 作者同类文章 X 技术之我见 （161） 作者同类文章 X Oracle （177） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一个11g的开发库，打算打开sqlplus的trace，看下sqlplus登录的连接信息，但配置sqlnet.ora后没有找到trace文件，后来有一天发现磁盘空间不足，经过查询后发现如下路径下有几千个文件，占用了上G的空间： /u01/app/oracle/ 11.2 .0 .4 /diag/clients/user_oracle/host_1347578259_80/ trace 这些文件是什么？打开一个，发现都是监听sqlpuls登录的信息，即trace文件： 那么为什么这个trace文件在这个路径中？ 经@Yong Huang提醒，原来这个问题和11g的ADR设置有关，下面是ADR的官方介绍： The Automatic Diagnostic Repository (ADR) is a file-based repository for database diagnostic data such as traces, dumps, the alert log, health monitor reports, and more. It has a unified directory structure across multiple instances and multiple products. Beginning with release 11g, the database, Oracle Automatic Storage Management (Oracle ASM), and other Oracle products or components store all diagnostic data in the ADR. Each instance of each product stores diagnostic data underneath its own ADR home directory (see “ADR Home”). For example, in an Oracle Real Application Clusters (Oracle RAC) environment with shared storage and Oracle ASM, each database instance and each Oracle ASM instance has a home directory within the ADR. The ADR’s unified directory structure enables customers and Oracle Support to correlate and analyze diagnostic data across multiple instances and multiple products. 自动诊断库(ADR)是一个基于文件的数据库诊断数据存储库，保存了trace、dump、alert log、health监控报告等等。对于多个实例和多个产品，都有一个统一的目录结构。11g开始，像Oracle ASM还有其他的Oracle产品或组件的诊断数据都会存储在ADR中。每个产品实例都在他自己的ADR根目录下存储诊断数据。ADR统一目录结构能让客户和Oracle支持将不同实例和不同产品的诊断数据关联起来进行分析。 MOS上的这篇文章说明了sqlnet.ora配置后，trace文件如何存放的问题： NET Client Traces Generated In $ADR_BASE/oradiag_/diag/clients/ Directory (文档 ID 1545533.1) 大义就是如果配置了 ADR_BASE=ADR base location 则trace文件会自动存储在如下路径中： $ADR_BASE/oradiag_OS user/diag/clients/.. 否则就会存储在： $ADR_BASE/diag/clients/ ... 实验： 1. 数据库版本 2.配置sqlnet.ora打开客户端trace 3.这里我没有配置ADR_BASE，只是在listener.ora中配置了ADR_BASE_LISTENER 4.执行一个错误的连接，以让其产生trace文件 5.由于没有设置ADR_BASE，应该不会有oradiag_OSuser路径，但会有diag路径，此时查看 确实在这个路径下生成了trace文件。 注意： 如果开启了sqlplus客户端trace，那么需要关注trace文件所占用空间的使用情况，避免撑爆文件系统，建议使用时开启，用完后需要立即关闭。 顶 0 踩 0 我的同类文章 个人心得 （105） 技术之我见 （161） Oracle （177） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 bisal 访问： 346533次 积分： 5876 等级： 积分：5876 排名： 第2265名 原创： 214篇 转载： 7篇 译文： 22篇 评论： 40条 文章搜索 文章分类 个人心得 (106) 技术之我见 (162) 技术引述 (18) SQL (6) svn eclipse myeclipse su (0) svn eclipse myeclipse subversion (1) SQL Oracle (1) Oracle (178) 文档 (20) 技术转载 (8) MOS (16) Proc (1) 游记 (1) 读书笔记 (5) JDBC (1) exp/imp (1) Linux (2) Tuxedo (1) Java (2) 阅读排行 Oracle Directory目录的知识 (12281) win7运行sqlplus报错“SP2-1503: 无法初始化 Oracle 调用界面” (7716) ORA-28000账户被锁和解锁 (6573) 解析grant connect, resource to user语句 (6256) 【Oracle】-【sqlplus / as sysdba登录报错问题】-新用户使用sqlplus / as sysdba登录报错 (5968) 关于如何判断与解决deadlock的问题 (5720) SYS.AUD$无法扩容导致无法登录的问题 (5474) 如何彻底删除Oracle数据库，以创建相同实例名称的库 (5194) 查看Oracle执行计划的几种常用方法-系列1 (4243) ORA-01455报错的问题探究 (3673) 评论排行 ORA-00911错误 (4) 【每日一摩斯】-Shared Pool优化和Library Cache Latch冲突优化 (1523934.1)-系列2 (4) [Oracle]-[OCP]-“滚烫”的OCP经历 (3) 【每日一摩斯】-Troubleshooting: High CPU Utilization (164768.1) - 系列3 (3) Oracle方向 (2) 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 (2) 2013总结 (2) 【Oracle】-【插入读取顺序】-插入读取之间的顺序关系 (2) exp/imp导入导出版本问题和ORA-6550报错 (2) 关于如何判断与解决deadlock的问题 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 EDB和Oracle在分区剪裁实践上的一点差别 u010786678 : 感谢楼主的分享，学习了！！ 一个有意思的递归定义 bisal : @nwenji:是有点绕，多读几遍... 一个有意思的递归定义 nwenji : 还是看不懂 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 bisal : 谢谢。这里为了隐私，替换了部分名称，产生了歧义，TEST和TESTTKT可以理解为相同，但globa... 【Oracle】-【TWO_TASK】-TWO_TASK环境变量的作用 sunprise : 总结很好，受教了。但是有个问题希望解惑一下：tnsnames.ora第二个服务名是TEST，而在设置... 复盘eygle在甲骨文大会上演讲中的示例，看看什么是大师的由点及面 ZHOUCHAOQIANG : 学习了，总结的很仔细。 一次有意思的错选执行计划问题定位(涉及SYS_OP_C2) u010176014 : 好用心的样子~学习啦 alter table新增字段操作究竟有何影响？(上篇) syx1995525 : 有趣:) ORA-00911错误 strongmad : 12312 ORA-00911错误 strongmad : 12312

Recno:: 41
URL:: http://blog.csdn.net/blog_index/article/details/14449993

ParseText::
程序员遇到Bug的30种反应 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 程序员遇到Bug的30种反应 标签： bug 2013-11-07 13:44 1466人阅读 评论 (0) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 英文原文： HONGKIAT   中文翻译： CSDN 开发应用程序是件压力很大的事情，尤其是当编写完代码后，突然冒出个Bug，这真是让人百感交集、痛不欲生。那么，如何平心静气地解决每一个Bug，是每个程序员都要修炼的地方。 下面本文将分享程序员遇到Bug时，最常说的30句话，不知道你中枪了没？ 1.我不知道该删掉还是重写。 2.在开始项目之前，我应该先在Github上找找有没有合适的框架 3.为什么这个脚本会需要这么多库？ 4.在网上肯定能找到解决方案。 5.是否有此功能插件。 6.Web项目，不知道IE支不支持。 7.从逻辑上，这本身就不合乎逻辑。 8.我花了30分钟写一个函数，2个小时让它工作。 9.在读完几篇博客后，我意识到所做的是完全错误的。 10.在Stack Overflow上会有人帮助我。 11.竟然是缺少右括号。 12.先来杯Coffee，离开显示器，打破常规。 13.先放放再来处理。 14.古典音乐是否会激发我的编程能力呢。 15.现在是测试Ballmer峰值理论的最佳时候。 16.难道有人摆弄我的源码？ 17.我不知道什么意思？ 18.直接把错误信息Google一下。 19.今天该收工了，但我真的想弄清楚。 20.哦，天啊！为啥我没有添加任何注释。 21.20分钟前还工作的。 22.都是一个分号惹的祸。 23.如果找人来修复，不知道要花费多少？ 24.快速浏览Hack News来提高我的生产力。 25.这个API竟然没有文档。 26.我真希望在数据库里对该数据进行备份了。 27.让这个功能工作的最快解决方案是什么？ 28.我敢打赌，更新一下就可以解决这个问题。 29.我将重新学习Git组织代码，但要等到下个星期。 30.算了，重新开始吧。 上一篇 虫趣：抓一个Intel显卡驱动的臭虫 下一篇 Large Pool 错误 顶 0 踩 0 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309565次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 42
URL:: http://blog.csdn.net/blog_index/article/details/17613101

ParseText::
Large Pool 错误 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Large Pool 错误 标签： large pool 0x4E BSOD windbg 2013-12-27 15:41 1669人阅读 评论 (0) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者 ：张佩】【 原文 ： www.yiiyee.cn/blog 】 我前几个月曾经分析了一个BAD_POOL_CALLER的问题（ 链接 ），今天收到的这个dump文件，系统是Win7 X64，最后发现问题和前者非常相似，但二者的分析过程却截然不同。 引子 打开dump文件后，首先进行自动分析。蓝屏号是0x4E。 ************************************************************ * * * Bugcheck Analysis * * * ************************************************************ PFN_LIST_CORRUPT (4e) Typically caused by drivers passing bad memory descriptor lists (ie: calling MmUnlockPages twice with the same list, etc). If a kernel debugger is available get the stack trace. Arguments: Arg1: 000000000000009a, Arg2: 0000000000 14e26c Arg3: 0000000000000006 Arg4: 000000000000000 2 Debugging Details: ------------------ BUGCHECK_STR: 0x4E_9a DEFAULT_BUCKET_ID: WIN7_DRIVER_FAULT PROCESS_NAME: System CURRENT_IRQL: 0 LAST_CONTROL_TRANSFER: from fffff8000495b9ef to fffff800048ccbc0 STACK_TEXT: ... nt!KeBugCheckEx ... nt!MiBadRefCount+0x4f ... nt!MiFreePoolPages+0xa8b ... nt! ExFreePoolWithTag +0x7c7 ... TestModule ! MemMgr::Free+0x77 //省略若干TestModule的调用帧 ... nt!PopIrpWorker+0x3c5 ... nt!PspSystemThreadStartup+0x5a ... nt!KxStartSystemThread+0x16 从Windbg的帮助文档中，找到0x4E相关的内容，根据第一个参数值0x9A，拿到下面的一些信息。 Parameter 1 Parameter 2 Parameter 3 Parameter 4 Cause of Error 0x9A Page frame number Current page state The reference count of the entry that is being removed A driver attempted to free a page that is still locked for IO. 驱动试图释放一个仍然被锁定的页。到目前为止，我对这个描述还是不太清楚。 内存分析 从调用栈看，出问题的时候，驱动程序正在调用ExFreePoolWithTag来释放一个内存块。加载符号文件，通过进一步分析，我发现正在释放的是一个维度为4的指针数组里面的第三个成员指针所指向的内存。前面两个指针所指向的内存已经释放成功，并且指针已经清零。剩下的两个指针值如下： Pointer 2 = 0xfffffa80`04c6c000 pointer 3 = 0xfffffa80`04c8d000 分别对这两个指针使用!pool命令进行分析。如果!pool命令还能够认识它们，说明内存块相关的结构体没有被破坏。否则就是内存块被破坏了。 0: kd> !pool 0xfffffa80`04c6c000 Pool page fffffa8004c6c000 region is Nonpaged pool fffffa8004c6c000 is not a valid large pool allocation, checking large session pool... fffffa8004c6c000 is not a valid small pool allocation, checking large pool... unable to get pool big page table - either wrong symbols or pool tagging is disabled fffffa8004c6c000 is freed (or corrupt) pool Bad allocation size @fffffa8004c6c000, zero is invalid *** *** An error (or corruption) in the pool was detected; *** Attempting to diagnose the problem. *** *** Use !poolval fffffa8004c6c000 for more details. Pool page [ fffffa8004c6c000 ] is __inVALID. Analyzing linked list... [ fffffa8004c6c000 --> fffffa8004c6c010 (size = 0x10 bytes)]: Corrupt region Scanning for single bit errors... None found 0: kd> !pool 0xfffffa80`04c8d000 Pool page fffffa8004c8d000 region is Nonpaged pool *fffffa8004c8d000 : large page allocation, Tag is TAG6, size is 0x4020 bytes 两个指针的分析结果，第一个分析不出任何结果，第二个则看上去是正确的。为了确定第二个不是“碰巧”正确的，可确认一下 TAG6 这个内存分配时指定的tag，如果确实有的话，就基本可认为不是“碰巧”的了。 第一个内存块已经被破坏了，并且这时候，我已经确认，指针列表中的4个内存缓冲区的size都是一样的。所以知道第一个pool块的size也是0x4020字节。 我此时首先想到的是，为什么4个pool memory，看上去只有第三个被破坏了。因为前面两个已经被成功释放掉了，第四个也是好的。这有点奇怪。在没有进一步的资料前，我只能认为这4个pool memory是用在不同的地方，而第三个是碰巧被破坏了。后来的事实也证明，通过这个途径我不可能找到任何突破口。好在很快也就放弃了。 Large Pool 上一次我通过使用POOL_HEADER结构体来查看被破坏的pool块。但这一次，这个办法不能用。原因是这次内存块的大小超过了一个页面长度(定义为PAGE_SIZE，即4K字节)。 根据系统的定义（见 MSDN ），如果申请的内存块size < PAGE_SIZE,系统会在一个内存页中分配，不会跨越页边界。举例说，如果有一个0x20字节的内存申请请求，系统不会把page1尾巴上的0x10字节和page2前面的0x10字节拼在一起返回给申请者；只会把page2前面的0x20字节返回给调用者。 如果申请的size > PAGE_SIZE，系统怎么做的呢？假设现在用户准备申请5000字节（4K+4）的内存块，它恰好比一个page多4个字节。系统会以4K为边界，找到相邻的两个空闲页，将起始地址返回给申请者。PAGE1的全部和PAGE2的前面部分，由申请者使用；PAGE2尾部的部分，系统另做他用。在这里，我们把这种大内存块称为： Large Pool 。 和普通pool块不同，large pool块不使用POOL_HEADER结构体来维护内存块的大小。所以这次我不能从POOL_HEADER入手，这正是困难所在。通过网上搜索，我发现了MSDN BLOG上的 这篇文章 。它介绍了一种查看large pool块完整性的方法。 在large pool块的尾部，系统会保留两个小pool块，并把它们的tag分别设置为Frag和Free。我估计frag是指Fragment（碎片），而Free指空闲的意思。 通过这篇文章介绍的方法，我先对正确的那个large pool块进行了测试： 0: kd> dc fffffa80`04c8d000+0x4020 L40 fffffa80`04c91020  02010000 67617246 00000000 00000000  ....Frag........ fffffa80`04c91030  00020001 65657246 00000000 00000000  ....Free........ fffffa80`04c91040  04c94040 fffffa80 04bf6040 fffffa80  @@......@`...... fffffa80`04c91050  020c0002 6c734d46 00000000 00000000  ....FMsl........ 果然看到了Frag和Free这两个tag。能正确看到这两个tag，至少说明这个pool块在使用时没有发生越界的情况，否则应该会覆盖tag值（但如果只越界4个字节，也有可能，此处不考虑此种情况）。还可以对这个页使用!pool命令： 0: kd> !pool fffffa80`04c8d000+0x4020 Pool page fffffa8004c91020 region is Nonpaged pool *fffffa8004c91020 size:   10 previous size:    0  (Allocated) *Frag fffffa8004c91030 size:   20 previous size:   10  (Free)       Free fffffa8004c91050 size:   c0 previous size:   20  (Allocated)  FMsl fffffa8004c91110 size:  160 previous size:   c0  (Allocated)  Ntfx 后省略 说明这一页的前0x20个字节是large pool块的一部分。剩下的部分则可以看到开头tag为Frag和Free的特殊pool块。后面的页内存被其它模块申请。 再来看看发生错误的那个large pool块: 0: kd> dc fffffa8004c6c000+0x4020 fffffa80`04c70020  02010000 67617246 b660fdb5 4fabc845  ....Frag..`.E..O fffffa80`04c70030  0c050003 6873534b 0538ab30 fffffa80  ....KSsh0.8..... fffffa80`04c70040  053f6170 fffffa80 00000000 00000000  pa?............. fffffa80`04c70050  00000001 00000001 00000000 00000000  ................ fffffa80`04c70060  000006e4 00000000 001ea6c8 00000000  ................ fffffa80`04c70070  00000000 00000000 00000032 00000001  ........2....... 0: kd> !pool fffffa8004c6c000+0x4000 Pool page fffffa8004c70000 region is Nonpaged pool *fffffa8004c70000 size:   30 previous size:    0  (Free)      *Free fffffa8004c70030 size:   50 previous size:   30  (Free )  KSsh Process: fffffa800538ab30 fffffa8004c70080 size:   80 previous size:   50  (Free )  Even (Protected) fffffa8004c70100 size:  1a0 previous size:   80  (Free)       None fffffa8004c702a0 size:   50 previous size:  1a0  (Free )  VadS fffffa8004c702f0 size:   c0 previous size:   50  (Allocated)  FMsl fffffa8004c703b0 size:   c0 previous size:   c0  (Free)       CcPL 可以看到被破坏的痕迹：Frag后面没有Free这个tag，而是tag为KSsh的pool块。这说明large pool 块被破坏了。而最可能的破坏原由就是缓冲区溢出。 后记 这时候，还有一个较好的办法可证实是不是缓冲区溢出：把指定pool块的长度增大后，再测试。我建议把申请的size增加到0x5000字节，其它地方不动。代码逻辑仍然把它当做只有0x4020字节来用。这个问题原本比较容易做出来，但做了这样的改动后，经过两天的测试，再也没有蓝屏。从侧面证实了缓冲区溢出的可能。对我而言，问题至此就算解决了。 另外还有两个悬疑。第一是为什么这个问题被报成0xCE错误，即试图释放被锁定的内存。我个人的理解是，系统在释放pool块时，最后一个page已经被别的模块锁定或挪作他用，系统坚持释放而导致错误。 第二个问题是，系统既然不使用POOL_HEADER结构体，到底是如何维护large pool块的？我在网上查找large page/large pool关键字，暂时还没有得到满意的结果。 参考： Stop 0x19 in a Large Pool Allocation MSDN: ExAllocatePoolWithTag 上一篇 程序员遇到Bug的30种反应 下一篇 Win8驱动的兼容性问题 顶 0 踩 0 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309576次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 43
URL:: http://blog.csdn.net/blog_index/article/details/17929701

ParseText::
Win8驱动的兼容性问题 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Win8驱动的兼容性问题 标签： win8 visual studio 2012 msbuild BSOD 2014-01-06 21:40 2110人阅读 评论 (0) 收藏 举报 分类： 内核驱动 （10） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.yiiyee.cn/blog 】 最近我发现为Win8开发的驱动程序，有些能安装在Win7上（包括更早系统），有些则不能。那些不能安装的情况很可怕：一旦安装并加载驱动，系统就会立刻蓝屏。针对这个问题，做了一番调查研究。发现了一个简单的规律： 如果开发时使用的是WDM驱动框架，则存在此问题；如果使用KMDF驱动框架，则正常。 这是为什么呢？一起来看看吧。 VS2012集成开发环境 Visual Studio 2012（简称VS2012）中包含了Windows驱动程序编译器，使得Windows驱动也可以在Visual Studio的集成开发环境中进行开发了。安装VS2012后，再安装Win8 WDK，打开VS2012会发现多了两种新的“平台工具集”，支持Windows内核和用户驱动程序的编译。如下图所示： 新建的内核驱动项目，会自动选择合适的工具集： WindowsKernelModeDriver8.0 。更改工作集，会影响相关的工程项目设置，比如包含目录的查找路径等。所以，如果把驱动项目的工作集改成用户程序相关的话，编译器会报很多找不到头文件的错误，比如找不到<ntddk.h>。 和以前的控制台编译环境类似，在IDE环境中，我们也可以选择不同的目标系统：操作系统，硬件平台。通过工具栏上的列表框进行选择。如下图所示： 我们可以通过工程向导来产生一个WDM内核驱动项目，这里将项目名称设为Test。 Security Cookie导致的不兼容 编译器默认开启/GS编译选项，用来保护内核栈的完整性。编译器会在程序开始的地方，保存一个cookie值到栈上；在程序退出时再检查这个cookie值是否被破坏，如果被破坏，说明栈溢出，表明系统遭到了破坏从而需要蓝屏保护。 GS是一种被普遍运用的保护机制。开启了GS选项后，编译器会链接一个GS相关的库文件来实现GS功能，当目标系统为Win7时库文件是 BufferOverflowK.lib ，当目标系统为Win8+时库文件是 BufferOverflowFastFailK.lib 。链接器是如何实现栈保护的呢？它先在驱动加载的时候，也就是GsDriverEntry函数内初始化cookie。然后在每个驱动函数的开始和结束的地方，添加cookie检查的代码。 链接器为了对cookie进行初始化，会为驱动程序重新生成一个名为 GsDriverEntry 的入口函数，初始化Cookie后再调用驱动程序自己的DriverEntry入口函数。下面是一个典型的GsDriverEntry的实现： Test!GsDriverEntry: 82ea403e 8bff            mov     edi,edi 82ea4040 55              push    ebp 82ea4041 8bec            mov     ebp,esp 82ea4043 e8bdffffff      call    Test!__security_init_cookie// 初始化cookie 82ea4048 5d              pop     ebp 82ea4049 e9b8fff7ff      jmp     Test!DriverEntry (82e24006)//调用DriverEntry 82ea404e cc              int     3 下面是Win7版本security_init_cookie函数的逻辑： test!__security_init_cookie: 82eb3005 a10050e382 mov eax,dword ptr [test!__security_cookie (82e35000)] ds:0023:82e35000=00300083 82eb300a b94ee640bb mov ecx,0BB40E64Eh 82eb300f 85c0 test eax,eax 82eb3011 7404 je test!__security_init_cookie+0x12 (82eb3017) // 判断是否等于0 82eb3013 3bc1 cmp eax,ecx // 判断是否等于0BB40E64Eh 82eb3015 751a jne test!__security_init_cookie+0x2c (82eb3031) 82eb3017 a13040e382 mov eax,dword ptr [test!KeTickCount (82e34030)] // 获取当前系统时间 82eb301c 8b00 mov eax,dword ptr [eax] 82eb301e 350050e382 xor eax,offset test!__security_cookie (82e35000) 82eb3023 a30050e382 mov dword ptr [test!__security_cookie (82e35000)],eax 82eb3028 7507 jne test!__security_init_cookie+0x2c (82eb3031) 82eb302a 8bc1 mov eax,ecx 82eb302c a30050e382 mov dword ptr [test!__security_cookie (82e35000)],eax // 生成新cookie值 // 返回 82eb3031 f7d0 not eax 82eb3033 a30450e382 mov dword ptr [test!__security_cookie_complement (82e35004)],eax 82eb3038 c3 ret 这段逻辑先检查security_cookie的当前值，如果不等于0且不等于 0xBB40E64E ，就立即退出；否则根据当前的系统时间，产生一个随机的cookie值。这里的值 0xBB40E64E 是个特征值，可能是系统默认生成的。大部分的镜像在加载的时候，其cookie都会被初始化成这个特征值。 当目标OS为Win8时，编译器默认链接BufferOverflowFastFailK.lib文件，它使用新的Cookie算法。正是这个新算法导致了不兼容性。看看Win8中security_init_cookie函数的逻辑，它硬是和0xBB40E64E较上了劲： mov eax, __security_cookie test eax, eax jz short loc_404029 cmp eax, 0BB40E64Eh // 如果等于0BB40E64Eh，跳到下面产生0x29中断，产生蓝屏 jz short loc_404029 not eax mov __security_cookie_complement, eax retn loc_404029: ; CODE XREF: push 6 pop ecx int 29h // 蓝屏 它判断当前的cookie值是否等于特征值0xBB40E64E，如果相等，立刻蓝屏。神奇的是，在 Win7及以前的OS上，大部分的驱动程序的cookie值都会被加载器初始化为0xBB40E64E。而在Win8+系统上则永远不会这样。这就是为什么能在Win8+正常运行的驱动，一放到Win7上就蓝屏的原因。 WDM和KMDF的区别 那为什么使用KMDF编译的驱动，又没有问题呢？原因很简单，KMDF框架链接的静态库文件还是BufferOverflowK.lib。不保证KMDF以后的版本不会链接新库文件的可能。 如何避免 虽然KMDF兼容性良好，但很多情况下，还是会用WDM框架编写驱动，而且还有很多小端口驱动也可能存在类似问题。如何避免呢。有三种简单的方法： 其一是为Win7及以前系统和Win8+系统产生不同的镜像文件。这也是比较推荐的方法。 其二是在Win8+系统上安装为Win7系统编译的驱动程序。经过测试，大多数为Win7编译的驱动程序，都能正常运行在Win8和Win blue系统上。但不保证更新的Windows系统出来后，这种向前兼容性仍然有效。 其三是干脆关闭GS编译选项。但这样就缺少了栈保护，不推荐。 最后介绍一种 MSDN 中介绍的比较高级的修改编译选项的办法，可以让编译器在为Win8+目标系统编译驱动程序时，仍选择旧版本的栈保护库文件BufferOverflowK.lib： 手动编译，手动设定KernelBufferOverflowLib的路径： msbuild /p:KernelBufferOverflowLib="C:\Program Files (x86)\Windows Kits\8.1\Lib\win8\km\x64\BufferOverflowK.lib" /p:platform=x64 /p:Configuration="Win8 Release" myDriver.sln 用记事本软件打开驱动项目的工程文件，并在合适的地方添加下面的属性： <KernelBufferOverflowLib>$(DDK_LIB_PATH)\BufferOverflowK.lib<KernelBufferOverflowLib>   上一篇 Large Pool 错误 下一篇 VS2012驱动项目时间戳验证失败 顶 0 踩 0 我的同类文章 内核驱动 （10） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309570次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 44
URL:: http://blog.csdn.net/blog_index/article/details/18084463

ParseText::
VS2012驱动项目时间戳验证失败 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 VS2012驱动项目时间戳验证失败 标签： vs2012 timestamp stampinf inf2cat 2014-01-10 15:15 3984人阅读 评论 (0) 收藏 举报 分类： 内核驱动 （10） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.yiiyee.cn/blog 】 前几天的一个早晨，大概5点钟就醒了，再也睡不着。想到有一个驱动程序还需要debug，就爬起来继续coding。起来打开电脑，运行VS2012并打开项目。把代码逻辑仔细的看过一遍，想了想，有了一点小发现，改了几行代码。按下F7开始编译。 很惊讶，发现了一个错误。通过VS2012 IDE环境创建的驱动项目（solution）中总是包含两个工程：一个是驱动工程，用来编译并生成驱动文件（一般是.sys文件）；一个是package工程，用来把编程成功的驱动文件整合到一个可安装驱动包中。我看了一下错误，第一个工程已编译成功，是package工程失败了。这种情况还是第一次遇到，什么原因呢？ 1>------ 已启动生成: 项目: Test Package, 配置: Win7 Debug x64 ------ 1> ....................... 1> Signability test failed. 1> 1> Errors: 1> 22.9.7: DriverVer set to incorrect date (postdated DriverVer not allowed) in \Test.inf. The current date (UTC) is 1/7/2014. 1> 1> Warnings: 1> None 1>x64\Win7Debug\inf2catOutput.log : Inf2Cat error -2: "Inf2Cat, signability test failed." Double click to see the tool output. ========== 生成: 成功 0 个，失败 1 个，最新 1 个，跳过 0 个 ========== Package工程 Package工程在生成驱动安装包（Driver Package）的时候，会调用三个工具为驱动包数字签名：Stampinf.exe/ testsign.exe /inf2cat.exe。下面一一介绍。 时间戳工具 Stampinf.exe用来为inf文件生成时间戳。这个时间戳对应于inf文件中的[DriverVer]值。下面是一个典型的inf文件示例： [version] DriverVer=01/10/2014,1.0.0.0 ; time stamp（时间戳），版本号 StampInf的主要工作就是更新[DriverVer]的值：时间戳、版本号。StampInf.exe工具可以在WDK安装包中找到，一般路径是：C:\Program Files (x86)\Windows Kits\8.0\bin\x86\staminf.exe。我们可以在控制台环境中运行此工具，以观察它的使用方法。下面的内容有所删减和整理： C:\Users\mozhang>stampinf.exe USAGE: stampinf -f filename [-s section] [-d <xx/yy/zzzz> | *] -a architecture -n [-c catalogfile] [-v | *] [-k nnnnn] [-u nnnnn] [-i path] -f： 指定inf文件的路径 -a： 指定硬件平台，可使用x86和AMD64这两个值。如果你指定的inf文件中含有关键字 $ARCH$ ，stampinf会在处理过程中，把这些宏都替换成指定的值，最终的硬件平台会变成：NTx86或NTAMD64。如果inf文件中包含了关键字$ARCH$，但没有指定-a参数，stampinf会去掉这个关键字，最终的硬件平台变成：NT。 -d： 指定以什么时间设置时间戳，可以指定一个时间，如果指定的值为”*”，Stampinf就以当前时间来设置它。这个选项可选，默认使用当前时间。 -v： 指定以什么方式设置版本信息。可以指定一个版本号，如：1.0.0.0。也可以根据当前的时.分.秒.毫秒来设置。如果指定的值为”*”，表示使用后者来设置版本号。这个选项可选，默认使用第二种方式。 -k/-u： 这两个值用来指定KMDF和UMDF的版本，可用指定的值替换inf文件中KMDF的关键字 $KMDFVERSION$ 和 $KMDFCOINSTALLERVERSION$ ，以及UMDF的关键字 $UMDFVERSION$ 和 $UMDFCOINSTALLERVERSION$ 。 下面是一个例子，我在控制台中执行命令为cy001.inf文件打时间戳： C:\Users\mozhang>"stampinf.exe" -f "c:\cy001.inf" -d "*" -v "1.0.0.0" Stamping c:\cy001.inf [Version] section with DriverVer=01/10/2014, 1.0.0.0 打开cy001.inf文件查看： DriverVer=01/10/2014, 1.0.0.0 如果把-v的参数换成”*”： C:\Users\mozhang>"stampinf.exe" -f "c:\cy001.inf" -d "*" -v "*" Stamping c:\cy001.inf [Version] section with DriverVer=01/10/2014, 11.24.18.11 打开cy001.inf文件查看： DriverVer=01/10/2014, 11.24.18.11 打开Package的属性页，查看stampinf相关的属性，可以看到它使用的默认参数是： -k “1.11” -d ”*” –a “amd64” –u “1.11.0” –v “*” 它使用当前时间，并用时.分.秒.毫秒的格式设置版本号。这些设置是可以修改的。 TestSign 我曾经在介绍64位驱动签名工具64Signer的时候介绍过TestSign的工作原理，它使用指定的数字证书，给指定的镜像文件进行数字签名。请参考64Signer 说明文档 。 Inf2Cat 此工具用来生成cat文件。VS2012先把驱动安装有关的所以文件都拷贝到一个目录中，然后调用inf2cat.exe来生成cat文件。这些必须被拷贝的文件包括：.inf文件，.sys文件，其它文件包括WDF框架的co-installer文件等。Inf文件所在的位置代表了driver package的位置。 为了试验，我把test.inf、test.sys、WdfCoInstaller01011.dll这三个文件手动拷贝到E:\Test目录下面，然后调用inf2cat命令： C:\Users\mozhang>Inf2Cat.exe driver:"E:\test" /os:"7_x86" ....................... Signability test complete. Errors: None Warnings: None Catalog generation complete. E:\test\test.cat 参数中，/Driver:path指定了driver package的目录，也就是保存inf文件的目录；/OS:指定了目标系统。最后生成了 test.cat 文件。 可以把Inf2Cat的工作分成三个部分： 分析inf文件，收集信息；验证驱动包，包括验证时间戳，和验证文件完整；生成cat文件 。 验证时间戳就是把inf文件的DriverVer值和当前的时间进行比较，看是否匹配。我在文章开始遇到的错误，正是时间戳验证失败导致的，后面再讲。验证文件完整就是确保inf文件所有涉及到的文件都能在Driver Package目录中找到。比如用WDF框架编写的驱动，应在inf文件中指定co-installer文件。我的Test驱动使用KMDF 1.11，所以要用到对应的co-installer文件WdfCoInstaller01011.dll。 时间戳验证 回到开头的错误，再把重要的错误信息列举如下： DriverVer set to incorrect date (postdated DriverVer not allowed) in \test.inf. The current date ( UTC ) is 1/7/2014. Inf2Cat error -2: "Inf2Cat, signability test failed." 是inf2cat工具在执行的时候发生了错误，错误原因看上去是时间戳验证失败了。第一行告诉我， 从DriverVer中拿到的时间不对 ，当前的UTC时间是 1/7/2014 。我特地看了一下电脑的当前时间并截了一幅图。我的当前时间是北京时间 1月8号 上午7点，和inf文件中DriverVer的值相同： 北京时间要比UTC标准时间早8个小时，所以北京时间的8号凌晨7点钟，是UTC时间的7号晚上11点。Inf2Cat如果使用UTC时间的话，就正好和Inf文件中的Local时间差一天。这正是导致时间戳验证失败的原因。 另外，inf2cat只验证日期，而不验证时分秒，这使得只有在凌晨1-8点编译驱动时，我才有机会“碰巧”遇到这个错误。 解决问题 解决问题的方法非常简单，只要让Inf2Cat工具进行时间戳验证的时候，使用local时间而不是UTC时间就可以了。打开package工程的属性，在inf2cat工具的属性中进行设置。 上一篇 Win8驱动的兼容性问题 下一篇 IOCTL助手 V1.1 顶 0 踩 0 我的同类文章 内核驱动 （10） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309574次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 45
URL:: http://blog.csdn.net/blog_index/article/details/18770079

ParseText::
IOCTL助手 V1.1 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 IOCTL助手 V1.1 标签： IOCTL CTL_CODE 2014-01-25 16:43 1462人阅读 评论 (0) 收藏 举报 分类： 应用开发 （5） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 我在2010年写《竹林》这本书时，写了一个分析IOCTL值的工具，一直想着可以把界面再改善一下，功能更完善一点。今天正好有一点时间，就做了这件事情。用户可以使用这个工具查看、定义IOCTL值。 下载工具： yiiyee.cn 查看 如果你有一个IOCTL值，想查看它的具体定义。只要把它的16进制值输入到 IOCTL值(Hex) 编辑框中，再点击 分析 按钮。分析出的值以三种形式呈现出来： 一种是数值形式，分别由设备、缓冲、权限、功能这四个编辑框（组合框）显示。 一种是图片形式，图片将IOCTL的32 Bits进行了组成划分，并显示各部分的值。 最后一种是CTL_CODE定义形式，用户可以直接拷贝CTL_CODE定义并粘贴到代码中使用。 定义 用户可以通过软件定义新的IOCTL值。IOCTL是一个DWORD类型的值，由设备类型、访问权限、功能代码、缓冲类型四个部分组成。DWORD类型是4字节32Bits，四个组成部分占据了32 Bits的不同部分。用户设置好四个值后，点击 更新 按钮，即能产生一个新定义的32Bits IOCTL值。 上一篇 VS2012驱动项目时间戳验证失败 下一篇 马年快乐 顶 0 踩 0 我的同类文章 应用开发 （5） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309566次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 46
URL:: http://blog.csdn.net/blog_index/article/details/18887425

ParseText::
马年快乐 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 马年快乐 2014-01-31 10:01 1573人阅读 评论 (6) 收藏 举报 分类： 散文随笔 （6） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 马年到了，祝大家新年快乐，马上有福！ 新的一年里，编程和技术都不重要，博客不重要，文章不重要。什么重要呢？ 希望自然环境越来越好， 空气越来越清新； 人民越来越文明， 社会暴戾越来越少； 政治越来越清明， 祖国早日统一！！ 最好全都 马上 实现！ 顶 0 踩 0 我的同类文章 散文随笔 （6） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309575次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 47
URL:: http://blog.csdn.net/blog_index/article/details/23207747

ParseText::
虫趣：当NV显卡驱动碰上Verifier - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 虫趣：当NV显卡驱动碰上Verifier 标签： 0xc4 BSOD DRIVER_VERIFIER_DETE 2014-04-08 21:13 2431人阅读 评论 (3) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 今天开电脑的时候，刚完成用户登陆，就遇到一个蓝屏。桌面还没有进去呢。趁着系统正处于抓取dump文件的过程中，赶紧拍了一张照，留作纪念。造成蓝屏的不是别人，乃是负责图形渲染和显示的显卡驱动：Nvidia显卡驱动。 我使用的系统：Win Blue x64。 事出有因 显卡驱动负责桌面系统的渲染和显示，其重要性不是一点点。所以轻易是不可能蓝屏的。我刚开始也有点纳闷，想自己昨天究竟做了什么，使得自己一大早的就遇到个天雷滚滚从天降——开机蓝屏。后来看了系统显示的错误原因，才明白过来。从上图中看到，这是在Verifier开启的前提下，诱发出来的NV显卡驱动的癫痫病。 Verifier为啥会开启呢？我想起来了，这确实事出有因。可追溯到我昨天看的一篇介绍数字签名的文章，它介绍了 sigverif.exe 这个工具，可以检测系统中已安装而未被数字签名的驱动程序。在运行了这个工具后，我很欣喜地发现系统中所有驱动程序都是签过名的。 其实这个结果解释了我的一个疑惑。因为我记得自己前段时间在运行Verifier的时候，它总是能找到两个未签名的驱动程序。其中一个是我安装的VClone虚拟光驱软件附带的内核驱动程序。从VClone的官方文档来看，它是有数字签名的，设备管理器中也有正确的显示。为什么Verifier把它列为嫌犯，我对此一直都很疑惑。 现在有了sigverif作为对照，我又再次运行了Verifier。选择验证未签名的驱动程序，果然还是有两个被列了出来。如下图所示。 就这个情况，我研究了半天，没有一个结论。但过程中，我出现了一个小小的操作失误。在选择驱动程序进行验证的时候，我选择了一个不可逆的验证：自动选择这台计算机上安装的所有驱动程序。 我选择这一项的初衷，是要看看verifier检索到的驱动列表，和Sigverif检索的驱动列表的区别。不料这个过程竟然是不可逆的，即使我退出后，再次选择“删除现有设置”，也已经没有用。 但当时，我却没这么觉得。我以为通过一些动作，已经把Verifier设置都清空了。其实却不然呢。这正是发生今天这个问题的初始缘由了。 自我救赎 重启后，我又试了两次，希冀可以登录到桌面后快速地关掉Verifier。但事实却很无情，我又多遇到了两次迅捷无比的蓝屏。所以我就进入到安全模式。Windows在安全模式下不使用IHV的显示驱动，而是加载微软自己的 display only显示驱动 。 这一次我是安全的。安全模式救了我。我运行verifier，并在此选择“删除现有设置”项。在提示重启出现的时候，我服从并重启。重启到正常的系统，这次已无问题了。 调试分析 活过来后，我第一个启动的是Windbg，并加载dump文件。错误类型DRIVER_VERIFIER_DETECTED_VIOLATION对应的BSOD号是0xC4，自动分析结果如下： 2: kd> !analyze -v ******************************************************************** * * Bugcheck Analysis * * * ******************************************************************* DRIVER_VERIFIER_DETECTED_VIOLATION (c4) A device driver attempting to corrupt the system has been caught. This is because the driver was specified in the registry as being suspect (by the administrator) and the kernel has enabled substantial checking of this driver. If the driver attempts to corrupt the system, bugchecks 0xC4, 0xC1 and 0xA will be among the most commonly seen crashes. Arguments: Arg1: 00000000000000f6, Referencing user handle as KernelMode. Arg2: 0000000000000100, Handle value being referenced. Arg3: ffffe00008f53900, Address of the current process. Arg4: fffff800028fc879, Address inside the driver that is performing the incorrect reference. Debugging Details: ------------------ 自动分析的结果非常重要。它的第一个参数指明了Verifier错误类型，0xf6表示驱动程序在引用一个用户句柄的时候，把它的类型错误地指示为KernelMode。打开Windbg的帮助文档，看到更详细的参数解释： Parameter 1 Parameter 2 Parameter 3 Parameter 4 Cause of Error 0xF6 (Windows 7 operating systems and later) Handle value being referenced Address of the current process Address inside the driver that performs the incorrect reference A driver references a user-mode handle as kernel mode. 从上面得到另一个很重要的信息： 这个错误类型，只在Win7以后的系统上才存在。 它的第三个参数是被应用的句柄，值为0x100。它很明显是一个用户层句柄，因为Winidows系统上的内核句柄，其高位是被置1的。比如32位系统上，内核句柄应该是0x80xxxxxx，64位系统上是0xffffffff’80xxxxxx。虽然没有明确的文档说明这一点，但仅仅根据我们的观察，可以从经验上证明之。 所以自动分析是言之有物的，它是在说：在一个地址为 ffffe00008f53900 （参数3）的用户进程环境中， NV显卡驱动在代码执行到地址 fffff800028fc879 （参数4）附近时，以 kernelMode 的方式使用了一个用户句柄 0x100 。 2: kd> !handle 0x100 PROCESS ffffe00008f53900 SessionId: 1 Cid: 1538 Peb: 7ff725f06000 ParentCid: 0c20 DirBase: 17bda2000 ObjectTable: ffffc00003321400 HandleCount: Image: rundll32.exe Handle Error reading handle count. 0100: Object: ffffc000056b72a0 GrantedAccess: 00020019 (Protected) (Inherit) (Audit) Entry: ffffc000033b0400 Object: ffffc000056b72a0 Type: (ffffe00000119730) Key ObjectHeader: ffffc000056b7270 (new version) HandleCount: 1 PointerCount: 32768 Directory Object: 00000000 Name: \REGISTRY\MACHINE\SYSTEM\CONTROLSET001\CONTROL\CLASS\{4D36E968-E325-11CE-BFC1-08002BE10318}\0000\NVSPCAPS 2: kd> !process ffffe00008f53900 PROCESS ffffe00008f53900 SessionId: 1 Cid: 1538 Peb: 7ff725f06000 ParentCid: 0c20 DirBase: 17bda2000 ObjectTable: ffffc00003321400 HandleCount: Image: rundll32.exe VadRoot ffffe00008d27330 Vads 61 Clone 0 Private 515. Modified 15118. Locked 0. DeviceMap ffffc000039412a0 Token ffffc00003359060 ElapsedTime 00:00:01.055 UserTime 00:00:00.000 KernelTime 00:00:00.000 QuotaPoolUsage[PagedPool] 150496 QuotaPoolUsage[NonPagedPool] 7792 Working Set Sizes (now,min,max) (1608, 50, 345) (6432KB, 200KB, 1380KB) PeakWorkingSetSize 1608 VirtualSize 74 Mb PeakVirtualSize 74 Mb PageFaultCount 1630 MemoryPriority BACKGROUND BasePriority 8 CommitCharge 620 THREAD ffffe00008ec8080 Cid 1538.153c Teb: 00007ff725f0e000 Win32Thread: fffff901469e8b70 RUNNING on processor 2 Not impersonating DeviceMap ffffc000039412a0 Owning Process ffffe00008f53900 Image: rundll32.exe Attached Process N/A Image: N/A Wait Start TickCount 8751 Ticks: 50 (0:00:00:00.781) Context Switch Count 593 IdealProcessor: 2 UserTime 00:00:00.000 KernelTime 00:00:00.140 Win32 Start Address 0x00007ff725f33f0c Stack Init ffffd000235d7c90 Current ffffd000235d6f90 Base ffffd000235d8000 Limit ffffd000235d2000 Call 0 Priority 8 BasePriority 8 UnusualBoost 0 ForegroundBoost 0 IoPriority 2 PagePriority 5 Child-SP RetAddr Call Site ffffd000`235d6658 fffff800`d7eea6a8 nt!KeBugCheckEx ffffd000`235d6660 fffff800`d7eeff98 nt!VerifierBugCheckIfAppropriate+0x3c ffffd000`235d66a0 fffff800`d7db7e73 nt!VfCheckUserHandle+0x1b8 ffffd000`235d6780 fffff800`d7c285d5 nt! ?? ::NNGAKEGL::`string'+0x10503 ffffd000`235d6820 fffff800`d7c402d6 nt!ObReferenceObjectByHandle+0x25 ffffd000`235d6870 fffff800`d79d74b3 nt!NtQueryValueKey+0x136 ffffd000`235d6b20 fffff800`d79cf900 nt!KiSystemServiceCopyEnd+0x13 (TrapFrame @ ffffd000`235d6b90) ffffd000`235d6d28 fffff800`028fc879 nt!KiServiceLinkage ffffd000`235d6d30 fffff800`028fc0c2 nvlddmkm+0x9a879 ffffd000`235d6de0 fffff800`02946cbe nvlddmkm+0x9a0c2 ffffd000`235d6e80 fffff800`029151d4 nvlddmkm+0xe4cbe ffffd000`235d6f00 fffff800`02907e5c nvlddmkm+0xb31d4 ffffd000`235d6f50 fffff800`0317c1c3 nvlddmkm+0xa5e5c ffffd000`235d7360 fffff800`0290730b nvlddmkm!nvDumpConfig+0x29fdeb ffffd000`235d73a0 fffff800`0315e9b9 nvlddmkm+0xa530b ffffd000`235d74c0 fffff800`031fcc05 nvlddmkm!nvDumpConfig+0x2825e1 ffffd000`235d7590 fffff800`02301e5c nvlddmkm!nvDumpConfig+0x32082d ffffd000`235d75c0 fffff800`022c8e03 dxgkrnl!DXGADAPTER::DdiEscape+0x48 ffffd000`235d75f0 fffff960`001813a3 dxgkrnl!DxgkEscape+0x573 ffffd000`235d7ab0 fffff800`d79d74b3 win32k!NtGdiDdDDIEscape+0x53 ffffd000`235d7b00 00007ff8`349d14aa nt!KiSystemServiceCopyEnd+0x13 (TrapFrame @ ffffd000`235d7b00) 0000006b`439bf068 00000000`00000000 0x00007ff8`349d14aa 这个进程rundll32是一个执行dll调用的通用的宿主进程，所以它的父进程比较能说明问题。我期望它的父进程是NV相关的进程，但最后发现CID为0xc20的进程为 桌面进程 。可能的情况是桌面进程调用了D3D的相关功能，进入NV显卡驱动并爆发了问题。在进入内核驱动时，用户程序传入了一个句柄参数，这个句柄指向一个和NV显卡相关的注册表键而，内核不正确地使用了这个句柄并导致问题。这个相关的注册表键值的路径为： \REGISTRY\MACHINE\SYSTEM\CONTROLSET001\CONTROL\CLASS\{4D36E968-E325-11CE-BFC1-08002BE10318}\0000\NVSPCAPS 2: kd> !process 0 0 *省略其它进程信息* PROCESS ffffe00008810900 SessionId: 1 Cid: 0c20 Peb: 7ff7be8a6000 ParentCid: 0c10 DirBase: 15a40e000 ObjectTable: ffffc000041a5440 HandleCount: Image: explorer.exe 逆推代码错误 根据上面的分析内容，已能很轻松地指症了。从它的调用栈上可以看出来，在进入Verifier检测函数前，系统调用的函数是ObReferenceObjectByHandle。我们看这个函数的声明： NTSTATUS ObReferenceObjectByHandle( _In_ HANDLE Handle , _In_ ACCESS_MASK DesiredAccess, _In_opt_ POBJECT_TYPE ObjectType, _In_ KPROCESSOR_MODE AccessMode , _Out_ PVOID *Object, _Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation ); 关于AccessMode，MSDN上的解释是： AccessMode  [in] Specifies the access mode to use for the access check. It must be either  UserMode  or  KernelMode . Drivers should always specify  UserMode  for handles they receive from user address space. 所以，对于0x100的用户句柄，如果在调用ObReferenceObjectByHandle的时候，指示的 Accessmode 为 KernelMode ，就会在Verifier检验函数中产生一个类型为0xC4/0xF6的BSOD。这也是一个比较合乎情理的错误原因。 到这里问题到还没有结束，因为ObReferenceObjectByHandle是被间接调用的，NV驱动直接调用的函数是ZwQueryValueKey（它没有AccessMode这个参数）。为什么是ZwQueryValueKey呢？这涉及到Zwxxx和Ntxxx两组系统API的区别。见下面这一段stack。 ffffd000`235d6870 fffff800`d79d74b3 nt!NtQueryValueKey+0x136 ffffd000`235d6b20 fffff800`d79cf900 nt!KiSystemServiceCopyEnd+0x13 ffffd000`235d6d28 fffff800`028fc879 nt!KiServiceLinkage ffffd000`235d6d30 fffff800`028fc0c2 nvlddmkm+0x9a879 在内核中调用Zwxxx函数，它会经过一系列复杂过程，最终调用到对应的Ntxxx函数。重要的一点是，调用Zwxxx函数会 把当前线程的Previous Mode设置成Kernel Mode （参考文章： OSR ）。 一个在内核中执行的线程，它既可能是从用户程序下来的，也可能是一个一直在内核中运行的系统线程。为了区分这种情况，线程结构体中保存了一个变量，保存线程此前的Mode（Previous Mode）。对于一个从用户层调下来的线程，它的Previous Mode是User Mode。但如果它调用了哪怕一次Zwxxx函数，其Previous Mode将被改成Kernel Mode，好像它再一次陷入了内核（从内核陷入内核）。 在这个例子中，对ZwQueryValueKey的调用，很可能影响到接下来NtQueryValueKey中调用 ObReferenceObjectByHandle时的输入参数。所以，在驱动程序中调用Native API，使用Ntxxx函数比Zwxxx函数更稳妥。 这些内容比较隐晦，涉及很多未文档内容。我不确定。但我怀疑：如果NV驱动把调用ZwQueryValueKey的代码改成直接调用NTQueryValueKey，可能就会解决问题。 其它 在Windbg分析完之后，我看了一下我当前使用的NV驱动版本是331.82，日期为2013年11月，大约两个月前更新的，也算是比较新。我立刻到NV的官方网站上查看和我显卡匹配的最新驱动（ GTX 670M ），有2014年1月份的最新WHQL版本：332.21。我见此便立刻下载了。我还是有点小胆怯的，所以没再去帮助NV验证最新的驱动是否已经解决了这个问题。如果有NV的Driver工程师看到我这篇文章，可以试一试。我保留了dump文件，需要时也可以向我索取。 上一篇 马年快乐 下一篇 奇妙的系统性能问题 顶 2 踩 0 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309573次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发...

Recno:: 48
URL:: http://blog.csdn.net/blog_index/article/details/23208145

ParseText::
奇妙的系统性能问题 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 奇妙的系统性能问题 标签： 磁盘 2014-04-08 21:18 1382人阅读 评论 (1) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 在前一家公司时，我借了一台测试板用于开发和测试。这块板子在正常运行了一段时间后，忽然遇到持续性的系统性能问题。问题来得非常突然，是某一天早晨上班的时候突然发生的。像电影里面马师爷抱怨的那样，吃着火锅还唱着歌，就突然遇到劫道的了。都太突然了。 问题的特征非常明显，就是系统性能无限下降。登录到系统登录界面，往往要十几分钟。Win 8.1的Metro UI出来，又要若干分钟时间。所以常态下看到的界面，就是Metro UI上面一个个磁贴只有边框，图标内容则完全没画出来。 各种尝试 我和同事尝试了各种办法。比如把相关的驱动全部卸载掉；不连接Windbg调试器；系统重新格掉，拷贝全新Image镜像；甚至尝试用U盘重新安装一个新系统。但都不能解决。 便怀疑是硬盘的问题。怀疑甚至得到了证实，因为把我的磁盘拿到同事的测试板上，性能也不是很好。几乎准备把这块硬盘扔掉了。但奇怪的是，把同事用得好好的硬盘换到我的测试板上，竟然也还是问题依旧。 接下来就怀疑是测试板的问题。但库里面的板子已经杰光了，我也没法再换新的。当时有一个问题急等着我去debug。当时那种着急，真像一个被吹得大大的气球，狠狠地摔在地上想解气，可压根不着力，又给你弹回来了。 原来如此 百无聊赖中，问题却出现了转机。当时，我正无能为力地盯着慢吞吞的系统，巨大的风扇“呼呼”地转着，3.5英寸的硬盘放在硬盘托架上。我突然灵机一动：系统板在风扇的作用下震动得十分厉害，硬盘托架放在主板上，连同硬盘，也被带动着颤动不止；硬盘的磁头在如此震动的情况下，一定会运作得很不稳定，会不会…… 想到这里，我就把硬盘小心地从托架上取下来，放到一个比较稳定的位置。奇迹出现了，系统刷刷刷地活了过来。 此后，一切都恢复了正常。这可能是我从业以来，调试过的最有趣的系统故障。来得快，去得也快，中间过程却最漫长。 有了这个发现，我再看同事的板子。原来他板子下面垫了一块泡沫塑料。而我原本也有一块泡沫塑料，后来却不知道去了哪里。那块泡沫塑料的丢失，应该就是那个早晨突然发生性能问题的原因了。 上一篇 虫趣：当NV显卡驱动碰上Verifier 下一篇 奇妙的系统性能问题(2) 顶 0 踩 0 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309571次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 49
URL:: http://blog.csdn.net/blog_index/article/details/23607965

ParseText::
奇妙的系统性能问题(2) - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 奇妙的系统性能问题(2) 标签： 0x7a KERNEL_DATA_INPAGE_E 磁盘 chkimg 2014-04-13 16:48 1461人阅读 评论 (1) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 这篇文件是对上一篇《 奇妙的系统性能问题 》的补充。我在经历那次性能陡降问题困扰的过程中，还碰到了一次BSOD。当蓝屏发生的时候，我甚至是兴奋的。因为在此之前，我一直都认为问题是系统或软件模块导致的。而蓝屏正好是分析的切入点。所以当分析了这个dump后，我立刻扭转了方向，判断认为：确实是磁盘坏了。 这个结论是正确的，但却不完备的。因为最后的结果是磁盘并没有坏，而是受到了外部环境的干扰。 这个dump文件弥足珍贵，因为正常情况下，这种伤硬盘的实验我们是不会主动去做的。所以这个dump文件完全得于碰巧，在此进行分析。 1: kd> !analyze -v ******************************************************************************* * * * Bugcheck Analysis * * * ******************************************************************************* KERNEL_DATA_INPAGE_ERROR (7a) The requested page of kernel data could not be read in. Typically caused by a bad block in the paging file or disk controller error. Also see KERNEL_STACK_INPAGE_ERROR. If the error status is 0xC000000E, 0xC000009C, 0xC000009D or 0xC0000185, it means the disk subsystem has experienced a failure. If the error status is 0xC000009A, then it means the request failed because a filesystem failed to make forward progress. Arguments: Arg1: ffffc00006694e90, lock type that was held (value 1,2,3, or PTE address) Arg2: ffffffffc0000185, error status (normally i/o status code) Arg3: 0000000042bde860, current process (virtual address for lock type 3, or PTE) Arg4: fffff960002fdcc0, virtual address that could not be in-paged (or PTE contents if arg1 is a PTE address) Debugging Details: ------------------ ERROR_CODE: (NTSTATUS) 0xc0000185 - The I/O device reported an I/O error. DISK_HARDWARE_ERROR: There was error with disk hardware BUGCHECK_STR: 0x7a_c0000185 DEFAULT_BUCKET_ID: CODE_CORRUPTION PROCESS_NAME: explorer.exe CURRENT_IRQL: 0 根据Windbg的Help文档，bug check的4个参数分析如下： Parameter Description 1 The address of the page table entry (PTE) 2 The error status (usually an I/O status code) 3 The PTE contents 4 The faulting address Arg1: ffffc00006694e90, PTE地址 Arg2: ffffffffc0000185, 错误码 Arg3: 0000000042bde860, PTE，即参数1所在地址的值 Arg4: fffff960002fdcc0, 需要被page in但发生错误的地址 下面是一些详细信息： 1: kd> dd ffffc00006694e90 L1 ffffc000`06694e90 42bde860 1: kd> !error 0xc0000185 Error code: (NTSTATUS) 0xc0000185 (3221225861) - The I/O device reported an I/O error. 当前的调用栈如下： 1: kd> kn # Child-SP RetAddr Call Site 00 ffffd000`26675b78 fffff802`bf64d0ea nt!DbgBreakPointWithStatus 01 ffffd000`26675b80 fffff802`bf64c9fb nt!KiBugCheckDebugBreak+0x12 02 ffffd000`26675be0 fffff802`bf5c4da4 nt!KeBugCheck2+0x8ab 03 ffffd000`266762f0 fffff802`bf5ed973 nt!KeBugCheckEx+0x104 04 ffffd000`26676330 fffff802`bf4da190 nt!MiWaitForInPageComplete+0x11065f 05 ffffd000`26676420 fffff802`bf4b318f nt!MiIssueHardFault+0x184 06 ffffd000`266764e0 fffff802`bf5cef2f nt!MmAccessFault+0x3cf 07 ffffd000`26676620 fffff960`002fdcc0 nt!KiPageFault+0x12f 08 ffffd000`266767b8 fffff960`00199320 win32k!CleanupShadow 09 ffffd000`266767c0 fffff960`001833db win32k!xxxFreeWindow+0x9ec 0a ffffd000`26676850 fffff960`0019ab61 win32k!xxxDestroyWindow+0x30f 0b ffffd000`26676910 fffff960`00174968 win32k!xxxRemoveShadow+0x7d 0c ffffd000`26676940 fffff960`00174b90 win32k!xxxSendChangedMsgs+0x230 0d ffffd000`266769c0 fffff960`001611ac win32k!xxxEndDeferWindowPosEx+0x204 0e ffffd000`26676a80 fffff960`0014c675 win32k!xxxSetWindowPosAndBand+0xc0 0f ffffd000`26676b10 fffff960`0014c26a win32k!xxxSetWindowPos+0x29 10 ffffd000`26676b60 fffff960`0014b86f win32k!xxxShowWindow+0x1a6 11 ffffd000`26676bf0 fffff802`bf5d04b3 win32k!NtUserShowWindow+0xab 12 ffffd000`26676c40 00007ffa`2e44119a nt!KiSystemServiceCopyEnd+0x13 13 00000000`0335f448 00007ffa`2a4554cc USER32!ZwUserShowWindow+0xa 14 00000000`0335f450 00000000`01139c00 Comctl32!InitCommonControls+0x18cc 15 00000000`0335f458 00000000`0001009a 0x1139c00 16 00000000`0335f460 00000000`00000001 0x1009a 17 00000000`0335f468 00000000`00000001 0x1 18 00000000`0335f470 00000000`00000001 0x1 19 00000000`0335f478 00007ffa`2a48252f 0x1 1a 00000000`0335f480 00000000`000100be Comctl32!CCEnableScrollBar+0x4f83 1b 00000000`0335f488 00000000`0001009a 0x100be 1c 00000000`0335f490 00000000`fffffdf6 0x1009a 1d 00000000`0335f498 000024ed`e852e2d2 0xfffffdf6 1e 00000000`0335f4a0 00000000`00000006 0x000024ed`e852e2d2 1f 00000000`0335f4a8 00007ffa`2a4824e1 0x6 20 00000000`0335f4b0 00000000`00000000 Comctl32!CCEnableScrollBar+0x4f35 这个调用栈可以被简单地分成三个部分： Frame 0-7：这是处理页错误的部分，处理过程中发生了硬件错误（Hardware Fault），最后调用KeBugCheckEx产生蓝屏。 Frame 8-12：这是在内核的Win32k模块中进行绘图操作的部分。 Frame 13-20：这是Explorer进程的用户模块部分。 重要的是第一和第二部分。为什么会从Win32k执行，转入页错误处理呢？如果没有页错误处理，蓝屏是不会立刻发生的。看一下第二部分最上面那个函数的地址： 1: kd> x win32k!CleanupShadow fffff960`002fdcc0 win32k!CleanupShadow (void) 这个值正是bug check的第三个参数。这样问题就清晰了起来了：函数win32k!CleanupShadow所在的代码页已经被换出到页文件中，当调用到它的时候，系统必须把它所在的页文件换入系统内存中；在做换入操作的时候，可能是长时间震动而导致了物理磁片损坏，磁盘驱动无法从磁盘中读取相关页的内容，导致了蓝屏。 从系统的角度来讲，它可以认为Win32k的镜像文件已经被破损了。这时候如果检查一下win32k模块的镜像文件完整性，错误就多得吓人了。 1: kd> !chkimg win32k -d fffff960001906ff-fffff9600019070e 16 bytes - win32k!W32pServiceTable+fff [ ff a0 83 40 00 60 f9 ff:02 86 4f 75 01 40 fa 95 ] fffff96000190710-fffff9600019071a 11 bytes - win32k!W32pServiceTable+1010 (+0x11) [ a0 83 40 00 60 f9 ff ff:00 b5 0f 02 00 47 62 00 ] fffff9600019071c-fffff9600019072a 15 bytes - win32k!W32pServiceTable+101c (+0x0c) [ 60 f9 ff ff a0 83 40 00:00 43 27 01 c0 dd 0f 02 ] fffff9600019072c-fffff96000190736 11 bytes - win32k!W32pServiceTable+102c (+0x10) [ 60 f9 ff ff a0 83 40 00:00 a2 0e 01 00 c5 75 01 ] fffff96000190738-fffff9600019073a 3 bytes - win32k!W32pServiceTable+1038 (+0x0c) [ a0 83 40:00 00 00 ] // …省略 4756 errors : !win32k (fffff960001906ff-fffff960002fdfff) 这表明磁盘的质量很重要，要是在使用过程中磁盘出了问题，如果运气不差的话，发生在普通文件区域，最多是文件破损导致无法读写；但如果碰巧是页文件所在磁盘区出了问题，那么系统会很快死翘翘的。 上一篇 奇妙的系统性能问题 下一篇 Win8开始菜单方案第N+1种 顶 1 踩 0 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309568次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 50
URL:: http://blog.csdn.net/blog_index/article/details/23782549

ParseText::
Win8开始菜单方案第N+1种 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Win8开始菜单方案第N+1种 标签： 开始菜单 2014-04-15 20:02 1438人阅读 评论 (0) 收藏 举报 分类： 应用开发 （5） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.csdn.net/Blog_index 】 软件市场上已经有很多种Win8开始菜单的解决方案了，要么是以替换原生桌面Shell的方法，从全局解决，要么是以一个软件的形式Pin在任务栏上，点击之后显示类似开始菜单的界面。种种软件、小工具，不一而足，不知多少，统称N种之多！ 今天我要介绍的这个方案，是第N+1种。 简单而不简陋XD 。Vista以后的系统，开始菜单所显示的内容其实位于一个固定的位置： C:\programdata\Microsoft\Windows\StartMenu\Programs ProgramData是系统盘下面的一个隐藏目录。Progams目录下面保存的就是被开始菜单显示的内容：一些目录和快捷方式。大家之所以怀念开始菜单，主要是怀念它的快捷方式。开始菜单让用户可以在一个统一的地方，通过快捷方式快速地查找和启动应用程序。大家如果在Win7系统上仔细比较一下，会发现Programs目录除了在界面的呈现和开始菜单不同外，二者的内容却几乎是一样的。所以，打开这个目录就约等于打开了开始菜单。Win8上的开始菜单没有了，但这个目录却仍旧存在。 因此，可以通过Programs目录来建立我的第N+1种开始菜单方案。下面是设置的步骤： 右键任务栏->工具栏（toolbars）->点击“新建工具栏（New Toolbar…）” 在弹出的路径选择对话框中，选择上面的Programs目录，并点击“选择文件夹”按钮退出。大家看到的情形如下所示，在任务栏上会多出一个带下拉箭头、名为Programs的快捷按钮。点击之后，出来菜单项，和开始菜单很相像。 上一篇 奇妙的系统性能问题(2) 下一篇 Win32K里的死循环 顶 1 踩 0 我的同类文章 应用开发 （5） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309569次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 51
URL:: http://blog.csdn.net/blog_index/article/details/26361989

ParseText::
Win32K里的死循环 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Win32K里的死循环 2014-05-20 13:50 1670人阅读 评论 (2) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 这是我到新公司后上手的第一个issue。一线工程师找到我，说有一个urgent issue有没有兴趣看一看。当时他已经组织了一个team的人帮助他，我便成了其中一员。 问题确实很紧急，已经影响了产线的生产。当时正临清明假期，导致很多人都岌岌可危地面临清明加班的可能。其实这个问题已经报出来好几个月，但一线工程师一直以绥靖政策对待，以各种方式把问题发生率降低到客户接受的水平。绥靖政策长时间以来是有效的，但最近却突然失效，发生率飙升到了20%。一线工程师才真的着急了。 问题定性 组一个team的人debug同一个问题，在我以前是未曾经历过的。初始的想法当然是认为人多力量大。但真正实施的时候，也可能遭遇人多嘴杂的窘况。 在如何定性issue的问题上大家意见不一致。从一线工程师描述的情况看，问题发生时没有蓝屏。先前曾debug过此问题的同事说，问题发生时只有一个进程和线程活着，其它的所有进程都处于block状态（除了ideal进程）；最关键的是，他仍然可以通过Windbg单步。 有人把issue定性为系统崩溃、BSOD或系统异常，这是完全不正确的。如果被这样定性，CPU必须是hang住的。但现在CPU却是活的，还可以单步。况且并没有蓝屏发生，定性为BSOD就更不对了。 应该属于什么类型的问题呢？从描述上来看，系统是活的，只是失去了响应而已。所以我把issue定性为系统的Software Hang。可能的情况很多，比如一个系统进程突然跑偏了，导致系统界面失去响应。或者像本例中的情况：系统内核自己陷在一个死循环里面，无暇处理其它任务。 分析问题 我第一天只拿到了dump文件。因为只有一台能live debug的系统，使用上很难统筹。我拿到dump文件后，第一动作是赶紧看那个唯一live的线程。这类issue的问题点非常集中，所以我很有把握可以很快找到一些有用线索。 ChildEBP RetAddr Args to Child 85846dd0 8fd95b75 ffffffff 85846ef0 nt!KeClockInterruptNotify+0x28a (Inline) -------- -------- -------- -------- hal!HalpTimerClockInterruptEpilogCommon+0xa 85846de0 00000000 000000d1 00000000 hal!HalpTimerClockInterruptCommon+0x3e 85846de0 00000000 000000d1 00000000 hal!HalpTimerClockInterrupt+0x1cb 85846ef0 80c66050 8584762c 00000002 win32k!ENUMAREAS::ENUMAREAS+0xb9 8584711c 80da5d98 80da5d98 00000000 win32k!bSpBltScreenToScreen+0x2f8 858474dc 80da5d98 80da5d98 00000000 win32k!SpBitBlt+0x2bc 85847510 80da5d98 80da5d98 00000000 win32k!SpCopyBits+0x27 85847654 000006ce 000000a0 00000027 win32k!NtGdiBitBltInternal+0xa39 85847700 80d440a8 80c7d5e0 80c7d598 win32k!zzzBltValidBits+0xc6557 85847768 85847b18 85847ad0 80dac008 win32k!xxxEndDeferWindowPosEx+0x20b 858477a8 00000000 8312c5a0 80dac008 win32k!xxxProcessDesktopRecalc+0x10b 858477e0 d4b8b27d 85847d00 80dac008 win32k!xxxProcessEventMessage+0x7a …… 85847d3c 0118fb90 00000000 00000000 nt!KiSystemServicePostCall 调用栈上面有时钟中断的处理函数。当硬件中断发生的时候，CPU会亲自把当前活动线程的执行权抢占下来给ISR用。所以这是很正常的事情。并不是发生了所谓的“系统异常”。去掉中断相关处理函数后，调用栈的最后一个函数就是 win32k!ENUMAREAS::ENUMAREAS 。 我把这个函数的汇编代码略微研究了一下，发现这里面竟然存在一个死循环！当然，不是所有的循环都天生会成为“死循环”。死循环只可能发生在特殊的状态下。从汇编代码看，Win32k正执行在一个循环中。这个循环只会进入一次。同事给我提供了一个有用信息：每次问题发生的时候，看到的都是在执行同一个函数。结合这些信息，当然就可以断定这个循环是“死循环”了。 但当我把这个发现提出来准备team内讨论时，却受到了冷遇。没有人相信或愿意和我讨论这个死循环。debug team的一位同事没看分析过程，但把同一个问题问了我两遍：你真有把握这是死循环吗？令我非常郁闷。 第二天当Live Debug环境再次被建立起来，我能亲自上手的时候，我就首先在这个函数里面单步了好一会儿，确定它确实是在我发现的那4行汇编代码里面循环不止的。事实证明，不管我按多少次F10，指令寄存器都再没有离开过那4行汇编代码（除了发生时钟中断抢占的情况）。我当时心里立刻舒缓了很多，因为我还是很害怕的，万一不是死循环，就颜面扫地了。 死循环的逻辑很简单，只有4行汇编。两个跳转（jump）语句在互相跳来跳去，是一个典型的while循环。 901b7b0f 394104 cmp dword ptr [ecx+4],eax 901b7b12 7e5e jle win32k!ENUMAREAS::ENUMAREAS+0xb6 (901b7b72) 901b7b72 034908 add ecx,dword ptr [ecx+8] 901b7b75 eb98 jmp win32k!ENUMAREAS::ENUMAREAS+0x53 (901b7b0f) 花几分钟时间把这4行代码反汇编成C语言，因为这时候我们已经有了win32k的private symbol，所以反出来的内容可读性很强。 while (p->yBottom <= this->yBoundsTop) { (char*)P += p->sizeScan; } 这是一个普通的循环。但如果循环体里面的p->sizeScan值为0，就能导致死循环。这正是原因所在。 猜猜猜 每个资深Debug工程师都有一样本领，那就是“猜”。闭源调试的时候，“猜”是不二利器。当然了不能乱猜，否则会导致怨狱的——不能变成猜疑。 我发现当死循环发生时，yBottom的值是1200，yBoundsTop的值是1780。我对1200非常敏感，因为目标平台的分辨率是1800×1200。再加上通过private symbol展现出来的变量名称，更增加了猜的底气。所以就先猜1200是屏幕的高。 1780是什么呢？结合Win32k类的名称ENUMAREAS以及变量名称yBoundsTop，猜它是某个窗口的左顶点y轴位置。 继续猜。再仔细看调用栈中各个函数的名称，可以大致知道它在干什么：通过GDI接口实现BitBlt亦即画图操作。 现在基本给出一个合理猜想： 问题发生的时候，有一个窗口被移出了屏幕以外区域，当这个窗口试图刷新UI界面时，有概率会导致Win32K的死循环。 下一步是根据上述合理猜想，给出一个解决方案： 测试过程中，避免一切移动窗口位置到屏幕外的动作。 一线工程师在了解了这个情况后还不放心，在解决方案中又加了一条：避免一切窗口最小化动作。 当这个方案报告给客户后，客户立刻进行了测试，在上千次测试过程中，问题再也没有发生。并且，到现在为止的一个多月时间里，issue再也没有发生。 技术细节 当事实确定下来后，大家都非常惊讶。因为win32k是一个非常稳定的OS模块，如果真是win32k的bug，其影响一定非常地深远。这个问题现在已经报告给微软，微软工程师还在分析，并已承认是系统Bug的事实。但微软工程师更倾向于认为这不是Win32k的bug，而是传给Win32K的参数被破坏了。最后的结果如何，还需等待。 如果我是这位微软工程师，我就会把这个调用栈上相关函数的实现逻辑，先好好地分析一遍。对照出问题和正常情况下的参数差别，区别出此issue是由代码逻辑导致的，还是异常参数导致的。如果是异常参数导致的，需确定是参数传入时就有问题，还是后面出的问题。以此逐步厘清。 while (p->yBottom <= this->yBoundsTop) { (char*)P += p->sizeScan; } 其中this的类型为ENUMAREAS，其部分定义如下： win32k!ENUMAREAS +0x000 iDir +0x004 xBoundsLeft +0x008 yBoundsTop +0x00c xBoundsRight +0x010 yBoundsBottom p指向的结构体为SPRITESTATE，其前面部分定义如下： _SPRITESTATE +0x000 yTop +0x004 yBottom              +0x008 sizeScan 我分析认为：p指向一个类型为SPRITESTATE的变长结构体数组，其中变量sizeScan表示到达下一个结构体的长度。当问题发生时，p已经枚举到了数组中的最后一个结构体，其成员变量sizeScan等于0。因为这个循环缺少了异常处理，从而使得p一直在处理最后一个结构体，在它身上做死循环，并奇怪地把整个系统都hang住了。 当我通过Windbg强制跳出这个死循环后，系统奇迹般地活了过来。 上一篇 Win8开始菜单方案第N+1种 下一篇 假货泛滥是淘宝的毒瘤 顶 1 踩 0 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309577次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 52
URL:: http://blog.csdn.net/blog_index/article/details/39315133

ParseText::
假货泛滥是淘宝的毒瘤 - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 假货泛滥是淘宝的毒瘤 标签： 淘宝 打假 2014-09-16 11:47 6364人阅读 评论 (62) 收藏 举报 分类： 散文随笔 （6） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者： 张佩】【 原文： www.YiiYee.cn/blog 】 我前段时间装修房子，好几个月都没有更新博客。但手里却已经积攒了十多个可供写作的dump文件。现在终于用空了，再次面对word文档敲击键盘时，我却并不急于去分析任何一个dump文件，而要来谈谈淘宝网。有一件发生在眼前的事情，勾起我的一些思考，使我要发挥一番。 买到假货 我前天在天猫上买了一根USB转串口线（商品 link ）。这是一种很简单的线材，把电脑上的USB口转成串口输出，或把外部串口转成USB输入。串口这种古老的接口，在上世纪曾广泛使用，但进入新世纪后就逐渐被USB接口代替而几乎销声匿迹。如果不是因为一些很传统的需求，现在已很少有它的用武之地。仅在一些特殊的应用领域，串口仍被某些设备所使用，比如老式的打印机、Modem以及串口调试等。现在的常用方式是把USB口转成串口并连接串口外设，这需要通过一根内含转换器的线缆来实现，也就是我买的这根线。 我在购买时特地只选了天猫店铺。这种线缆实现很容易，所以价格不贵，30元以内。我选择了一家地址显示为苏州的店铺，希望早点寄到。快递隔天即送到了，我对此很满意。包装不是密封的，我取出线缆，把USB口连接到电脑上并安装驱动，进行测试。我本以为这么一根简单而廉价的线缆，奸商们必不太愿意对它大费周章吧。但我却想错了。我晦气临头，发现自己买到了假货。 在我安装驱动后，设备总是启动失败（停止码10）。换了一台电脑尝试，也遇到同样的问题。我没办法，到芯片厂商（ Prolific ）的官网上下载最新版本驱动并安装（ zip ），但问题依旧，得不到解决。这时候我看到Prolific的驱动包中有一份说明文档，打开来阅读，发现文档的开头部分就列出了这个问题，文档警告用户： 假冒PL-2303HA芯片冒用Prolific商标和logo在大陆市场销售，假冒芯片有完全一样的外观，但质量低劣，将导致驱动安装失败（停止码10）的情况 。 文档描述的问题和我所遇到的情况如出一辙。看下面的两张截图，第一张是Prolific官方文档的申明，第二张是我电脑中设备状态的截图。 图1. Prolific声明截图 图2. 我电脑上的情况 我像被一盆狗血当头淋湿了。这已不是我第一次在淘宝买到电子类假货了。几个月前我在一个地址显示为上海宝山区的淘宝商户那里买了22个金士顿U盘（商品 link ），收到后用HD Tune软件测读写速度，平均读写速度只有1.1MBps。我就把全部22个U盘都测了一遍，全都一样。我哭笑不得，就质问卖家为什么把这么多假货一股脑地发给我，至少也应该掺杂个把好的来迷惑我一下。他却不正面回答我，而是反问道：你让我去哪里找这么多USB 1.1的芯片？ 因为这个读写速度只符合USB 1.1的标准。现在市面上的USB芯片主要都是2.0/3.0规范的，2.0的读写速度是1.1的8倍，3.0是2.0的10倍。卖家这样反问我，好像我在违背常识一样，因为市场上已经没有USB 1.1的芯片了。可凭什么我应该回答他的问题呢？他自己当然知道答案，但他如此反问，让自己显得振振有词，立于假想中的不败之地，显然是习惯成自然了。做着坏事，并振振有词，自信满满；如果大家都如此作为，世界该多么可怕。 我因为从事IT这个职业，对硬件也懂得一二，所以能很容易发现电子产品中的假货。我所购买过的其它品类的商品，假货的发现率是很低的，但是不是仅只是尚未被我发现而已呢？对于电子产品而言，如我之外的极多并不很熟悉硬件的买家们，他们能不能甄别假货呢？看看这两个已被我证实过的假货的好评如潮，已可想见其结果了。 假货是淘宝毒瘤 我看过网上文章，马云说过类似“打败淘宝的一定是淘宝自己”这样的话。马云善于讲故事，并乐于用语言构造情境。但对于这句话，我认为他并不很明白其含义，虽然自他口中说出。他最多只是做出了一种可能的预判而已，但对事实本身却尚不清楚，因为我没有看到他的行动。 淘宝&天猫是一个很伟大的平台，但如果它一任假货横行而不加以管理，那么它就是在纵容一颗毒瘤的同时生长，最后让这个毒瘤害死自己。作为一个服务于买卖双方的平台，他只需要做到下面三点并予悉心呵护，就淘宝&天猫的现有体量而言，是不容易被任何东西打败的，包括他自己： 一．提供货品展示平台。这包括卖家充分地展示其货品的各种好的属性，也包括提供渠道，让买家或平台本身可以展示卖家本不愿展示出来的商品不太好的属性。 二．为买卖双方提供交易的便利，即钱货交换的便利，以及因交易异常而产生的退钱、货的便利。 三．让信用和口碑发挥作用。很多人忽略了购物这项活动，除了花费金钱外还有另一个很大的成本，就是时间成本。挑选是很麻烦的事情，我妻子经常为了买到一双合适的小孩的鞋，废寝忘食地泡在淘宝上四五个小时。这个时间成本是非常巨大的，而时间成本是很多其它成本的根源。所以一定要让信用和口碑发挥正常的作用，来部分地抵消购买者可能花费的时间成本，是非常重要的。 淘宝已经把前面两点做得非常好，这也正是它能够取得今日这般成功的原因。但在第三点上，它则是半个盲人，它仅能看到今日的自己，看不到明天应该成为的自己。 现在全中国有几十万淘宝店主，多是年轻人。如果有人去做一个第三方统计，问问这些淘宝店主在开店之初得到过哪些宝贵的忠告，以及在实施过程中做了哪些。我相信“刷信誉”一定会名列其中。什么是刷信誉呢？就是无视商业信誉，就是作假帐，就是以无充有，以虚充实。既然能够以无充有，则今后以次充好、以假充真也就不足为怪了。如果一个人迈出的第一步就已踏向错误的方向，接下来在错误的方向上做一些错误的事情，就不足为怪了。 这些淘宝店主，很多是刚刚步出校门或尚在学校的学生，很多都是第一次创业。就在这样的年龄和这样的阶段，他们受到了一项极负面的商业启蒙。这个坏影响，可能需要很多年才能纠正过来，甚至有些人一生都会在这个错误观念中扑腾不休，最后一败涂地。从这一点上来说，淘宝对整个时代的商业环境，正发挥着很坏的影响力。 各位仅去看看淘宝的评价，几乎没有不好的。好评大多接近100%。这些好评有人工痕迹，并非出于天然。朋友曾和我讨论过，在淘宝上买东西不敢给差评，怕被报复。几年前，我在淘宝买过一个kindle，收到kindle时发现其包装半新不旧，非常疑惑。最后我给了卖家一个中评。此后的若干天里，我不断接到卖家的骚扰电话，希望、要求我修改评价。我就去联系淘宝客服，他们说这是买卖双方间的合理沟通，即使有什么问题，也只能尽量调解。我最后为了息事宁人，只好把评价修改为好评。 这样的经历恐怕不只发生在我一个人的身上，而是普遍存在。我把它看成一次网购恶性事件，并记忆深刻，数次和朋友交流过。我想问的是，淘宝对此类事件就果真毫无责任而可以置身事外吗？ 如何反假 其实每一个顾客都是反假生力军。哪怕那些卖假货的卖家，当他们成为买家时，也一样对假货深恶痛绝。所以通过买家的举报、取证来打假，是直接而有效的。并且，和主动打假相比，成本也一定更经济。 打假覆盖面不用达到100%，甚至不用50%。假如一家店铺卖10样假货，而被打了两次假，那这家店铺必不敢继续销售剩下的全部8件假货了，而可能会主动撤下其中风险较大的几项。所以打假的效率是很大的，打其一而灭其二三，是可能的。 但淘宝并没有利用买家的打假能力。一方面，他担心恶性打假，对卖家生意产生消极影响；另一方面，中国是一个巨大的山寨和假货市场，淘宝不希望放弃这个市场。 对于第一点，淘宝应该谋求好的技术解决手段，而不应该是现在的不作为或少作为。借助大数据的分析判断能力，和云服务器的存储能力，一定可以找到好的技术解决途径。阿里巴巴人才济济，应该不是难事。 对于第二点，我对淘宝的建议是使用两分法：一方面应包容有自主品牌的山寨产品，另一方面坚决打击商标侵权的假货。比如我上次遇到的假金士顿牌子的U盘，需坚决打击；但如果它换了一个不侵犯任何商品的自主品牌，比如" 假士顿" ，就应该包容他。 愿景 好多年前，我看过一部不太有名但拍得很不错的中国电影，着重表现了清末民初的两位末世商人的一生。影片借用第三者对这两个商人进行了让我至今记忆深刻的评价，他是这样说的：x爷，好买卖人，有德行；x爷，好买卖人，没德行。 一个大型商业平台在发展到一定程度后，也会具有类似人一样的性格。希望有一天人们在谈到淘宝网时，也会这样去评价它：淘宝网，好买卖地，有德行。 初稿：2014/9/16 上一篇 Win32K里的死循环 下一篇 多了一个“星号” 顶 28 踩 3 我的同类文章 散文随笔 （6） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309565次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 文章存档 2015年02月 (1) 2014年12月 (1) 2014年10月 (1) 2014年09月 (1) 2014年05月 (1) 2014年04月 (4) 2014年01月 (4) 2013年12月 (1) 2013年11月 (2) 2013年10月 (4) 2013年09月 (4) 2013年08月 (7) 2013年07月 (5) 2013年05月 (3) 2012年04月 (1) 2012年02月 (1) 2012年01月 (1) 2011年12月 (5) 2011年11月 (2) 2011年10月 (1) 2011年08月 (1) 2011年04月 (1) 2011年03月 (1) 2011年02月 (1) 2010年11月 (2) 2010年09月 (1) 2010年08月 (1) 2010年07月 (1) 2010年05月 (2) 2010年04月 (1) 2010年03月 (1) 2010年02月 (5) 2010年01月 (1) 2009年11月 (1) 2008年06月 (1) 2008年03月 (2) 2007年08月 (1) 2007年06月 (1) 2007年05月 (3) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 53
URL:: http://blog.csdn.net/blog_index/article/details/40340651

ParseText::
多了一个“星号” - 张佩的技术库 - 博客频道 - CSDN.NET 张佩的技术库 关心Windows内核与调试 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 多了一个“星号” 标签： msplot 指针 2014-10-21 10:20 3123人阅读 评论 (10) 收藏 举报 分类： 软件调试 （23） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 引用注明>>  【 作者 ： 张佩】【 原文 ： http://blog.csdn.net/blog_index 】 国庆假期我看WDK 8.1中的sample项目，遇一极有趣问题，和基本的指针使用有关，特缀文于此。请看下面是WDK8.1 msplot项目中的一段代码（经我简化过），三行而已，作一个减法运算。注释中的例值，其期望结果应是0x10，但意外得到一个溢出后的大值： /* struct _PLOTGPC */ /* { */ /* //... */ /* LPVOID pData; //偏移为0x10 */ /* }; */ LPBYTE *pByte = pPlotGPC->pData; // pPlotGPC->pData ：0x0040fa30 pByte -= (ULONG_PTR)pPlotGPC; // pPlotGPC：0x0040fa20 pPlotGPC->pData = pByte; // 结果：0xff3d11b0。期望的结果应该是0x10。 pData原来指向位于紧跟在结构体后面的一块内存，是一绝对地址；现在要把pData改成相对地址，即相对于结构体头的偏移。只要把当前值减去结构体起始地址即可。但结果很令人诧异，总是得到一个溢出数。下面是一个例子： pPlotGPC : 0x0040fa20 pPlotGPC->pData: 0x0040fa30 结果：0x0040fa30 - 0x0040fa20 = 0xff3d11b0 //不应该是0x10吗？ 这个结果让我诧异是不是CPU坏了。但看过汇编后，知道了原因。 00FF107D mov ecx,dword ptr [pPlotGPC] 00FF1080 shl ecx,2 // 乘以4，以左移2实现 00FF1083 mov edx,dword ptr [ebp-0Ch] 00FF1086 sub edx,ecx 00FF1088 mov dword ptr [ebp-0Ch],edx 原来在此减法运算中，减数乃先乘以4然后再相减的： 0x0040fa30 - （0x0040fa20 ×4 ）= 0xff3d11b0 // 被减数借位相减，得到一个溢出的大值。 到底咋回事呢？从哪多出来的×4？经过分析后发现和指针的加减法息息相关。且看pByte的定义： LPBYTE *pByte; 其类型为（LPBYTE*），LPBYTE是(BYTE*)的宏定义，故可转换成： BYTE** pByte; 所以pByte指针所指向数据的类型为（BYTE*），乃是一个指针类型。学过C语言的都明白， 指针的加减运算，乃加减其类型size的倍数 。因其类型仍为一个指针（**的缘故），类型长度根据硬件平台要么4，要么8。我编译出的目标对象乃Win32，指针长度为4。这是汇编代码乘以4的原因了。 细想起来，这很像是一个笔误，解决的办法近乎玩笑，只要去掉一个“*”即可： LPBYTE * pByte; ==> LPBYTE pByte; // 指针类型由 BYTE* 变为 BYTE 。 一旦去掉一个*号，指针所指向的数据类型变成了BYTE，而BYTE类型长度为1，就无虞了。WDK是微软的驱动开发包，里面的示例项目对驱动开发人员有根本性的指导意义。msplot项目是WDK中唯一的完整的打印机驱动（printer driver）示例。这个bug之所以能够长期存在，我想是因为有机会进行打印机驱动开发的程序员太少的缘故，没有能够 及时地 把这个bug公布出来。 上一篇 假货泛滥是淘宝的毒瘤 下一篇 对Windows安全软件的思考 顶 7 踩 1 我的同类文章 软件调试 （23） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 博主简介 资深Windows内核程序员，喜欢各种技术；著有 《竹林蹊径-深入浅出Windows内核开发》 。 我的主站： 易也网 我的简历： LinkedIn 个人资料 changpei 访问： 309567次 积分： 3694 等级： 积分：3694 排名： 第4783名 原创： 72篇 转载： 2篇 译文： 0篇 评论： 305条 文章搜索 文章分类 内核驱动 (11) 软件调试 (24) 音频驱动 (2) 教程培训 (9) 系统杂谈 (4) 应用开发 (6) 散文随笔 (7) 阅读排行 Windbg中查看计算机名 (36846) WDF开发USB设备驱动教程(1) (12952) ASIO音频驱动开发指南 (12305) VirtualKD + VMWare实现单机内核调试 (9463) 设备驱动安装程序设计（一） (9107) WDF开发USB设备驱动教程(2) (8237) WDF开发USB设备驱动教程(5) (6548) 《WDF USB驱动开发指南》-- USB软件结构 (6414) 假货泛滥是淘宝的毒瘤 (6358) 如何在Visual Studio项目中正确添加汇编代码 (5789) 评论排行 假货泛滥是淘宝的毒瘤 (62) ASIO音频驱动开发指南 2.0 (35) 设备驱动安装程序设计（一） (21) 我的驱动教学视频 (20) 设备驱动安装程序设计（二） (20) WDF开发USB设备驱动教程(1) (15) 怎么用Visual Studio编译内核驱动 (15) VirtualKD + VMWare实现单机内核调试 (12) 新工具介绍：AdPlus UI (11) 多了一个“星号” (10) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 内核字符串处理函数和IRQL michialowen : 你好 我想写一个记录日志的功能，自定义了一个WriteLog函数。我在其他函数中调用，结果运行后，发... 多了一个“星号” sinat_32464967 : ……奇怪的错误 Windows显示驱动（WDDM）编程初步(1) u012920520 : 请问大神,KMDOD项目 这个msdn的地址我下载不到demo了,请问能不能发给我一份? 709... 新工具介绍：AdPlus UI shanmu123 : 随便一用，好几个地方有问题。这么点简单功能，还发布到网上用，至少写好点嘛。 新工具介绍：AdPlus UI shanmu123 : 用处到是没啥用处，一条命令解决的事情，反而搞复杂了。只是辛苦做了界面，估计是正好有个界面模版练手吧。 ASIO音频驱动开发指南 2.0 lionweekey : 正在学习中，能否发份代码，谢谢。。。邮箱：honghui_huang@126.com WDF开发USB设备驱动教程(1) groundhappy : 请问一个USB有多个配置文件USB_DEVICE_DESCRIPTOR_TYPE 该怎么查询呢如果只... 假货泛滥是淘宝的毒瘤 qwdx1k2 : @kang77649119:神预测，工商J已经跟阿里杠上了

Recno:: 54
URL:: http://blog.csdn.net/chaoyu168/article/details/50394137

ParseText::
Android中ContentProvider组件详解 - 超宇的博客 - 博客频道 - CSDN.NET 超宇的博客 生命不需证明，生命无需证明，天生伟大，只待惊醒！ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android中ContentProvider组件详解 标签： android contentProvider 2015-12-24 14:15 1111人阅读 评论 (0) 收藏 举报 分类： Android （43） 作者同类文章 X 版权声明：本文为博主原创文章，转载请标明出处。 一．Android 四大组件 Android 四大组件是 Activity, Service, Content Provider,Broadcast Receiver 。 Activity 作为程序界面，直接与用户交互 Service 运行在后台，没有界面，完成特定的功能 ContentProvider 维护应用数据，方便应用本身或其它应用访问 Broadcast Receiver 提供异步广播消息接收机制，便于各应用 / 组件进行交互 二． 什么是 ContentProvider         ContentProvider（内容提供者）是Android中的四大组件之一。主要用于对外共享数据，也就是通过ContentProvider把应用中的数据共享给其他应用访问，其他应用可以通过ContentProvider对指定应用中的数据进行操作。 ContentProvider分为系统的和自定义的，系统的也就是例如联系人，图片等数据。 1.ContentProvider         Android提供了一些主要数据类型的ContentProvider，比如音频、视频、图片和私人通讯录等。可在android.provider包下面找到一些Android提供的ContentProvider。通过获得这些ContentProvider可以查询它们包含的数据，当然前提是已获得适当的读取权限。 主要方法： <span style="font-size:12px;">public boolean onCreate() 在创建ContentProvider时调用 public Cursor query(Uri, String[], String, String[], String) 用于查询指定Uri的ContentProvider，返回一个Cursor public Uri insert(Uri, ContentValues) 用于添加数据到指定Uri的ContentProvider中 public int update(Uri, ContentValues, String, String[]) 用于更新指定Uri的ContentProvider中的数据 public int delete(Uri, String, String[]) 用于从指定Uri的ContentProvider中删除数据 public String getType(Uri) 用于返回指定的Uri中的数据的MIME类型 *如果操作的数据属于集合类型，那么MIME类型字符串应该以vnd.android.cursor.dir/开头。 例如：要得到所有person记录的Uri为content://contacts/person，那么返回的MIME类型字符串为"vnd.android.cursor.dir/person"。 *如果要操作的数据属于非集合类型数据，那么MIME类型字符串应该以vnd.android.cursor.item/开头。 例如：要得到id为10的person记录的Uri为content://contacts/person/10，那么返回的MIME类型字符串应为"vnd.android.cursor.item/person"。</span> 2.ContentResolver         当外部应用需要对ContentProvider中的数据进行添加、删除、修改和查询操作时，可以使用ContentResolver类来完成， 要获取ContentResolver对象，可以使用Context提供的getContentResolver()方法。 <span style="font-size:12px;">ContentResolver cr = getContentResolver();</span> ContentResolver提供的方法和ContentProvider提供的方法对应的有以下几个方法。 <span style="font-size:12px;">public Uri insert(Uri uri, ContentValues values) 用于添加数据到指定Uri的ContentProvider中。 public int delete(Uri uri, String selection, String[] selectionArgs) 用于从指定Uri的ContentProvider中删除数据。 public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) 用于更新指定Uri的ContentProvider中的数据。 public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) 用于查</span>询指定Uri的ContentProvider。 3.Uri         Uri 代表了要操作的数据，Uri 主要包含了两部分信息：1、需要操作的 ContentProvider；2、对ContentProvider中的什么数据进行操作。一个Uri由以 下几部分组成：        ContentProvider的scheme已经由Android所规定，scheme为content://。 主机名（authorities）用于唯一标识这个ContentProvider，外部调用者可以根据 它找到对应的内容提供者（ContentProvider）。 路径（Path）可以用来表示我们要操作的数据，路径的构建应该根据业务而定， 如下： 要操作Person表中ID 为10的记录，可以构建这样的路径：/person/id/10，也 可以为/prson/10，构建什么样的路径需要与UriMatcher中注册的匹配Uri相一 致。例如：/person/id/10，那么匹配Uri需要也需要带id 为/preson/id/#，否则 可以写成/person/10. 要操作person表中的所有记录，可以这样构建路径：/person 如果要把一个字符串转换成Uri，可以使用Uri类中的parse()方法。如下： Uri uri = Uri.parse("content://com.ljq.provider.personprovider/person") 三、UriMatcher类使用介绍         因为Uri代表了要操作的数据，所以我们经常需要解析Uri，并从Uri中获取数据。Android系统提供了两个用于操作Uri的工具类，分别为UriMatcher和ContentUris 。掌握它们的使用，会便于我们的开发工作。 UriMatcher类用于匹配Uri，它的用法如下： 首先第一步把你需要匹配Uri路径全部给注册上，如下： <span style="font-size:12px;color:#000000;">//常量UriMatcher.NO_MATCH表示不匹配任何路径的返回码 UriMatcher sMatcher = new UriMatcher(UriMatcher.NO_MATCH); //如果match()方法匹配content: //com.ljq.provider.personprovider/person路径，返回匹配码为1，匹配Uri注册如下： sMatcher.addURI("com.ljq.provider.personprovider", person", 1); //添加需要匹配uri，如果匹配就会返回匹配码 //如果match()方法匹配content://com.ljq.provider.personprovider/person/230路径，返回匹配码为2，配Uri注册如下： sMatcher.addURI("com.ljq.provider.personprovider", "person/#", 2); //#号为通配符 //传入Uri，进行匹配 switch (sMatcher.match(Uri.parse("content://com.ljq.provider.personprovider/person/10"))) { case 1 break; case 2 break; default://不匹配 break; } </span> 注册完需要匹配的Uri后，就可以使用sMatcher.match(uri)对输入的uri进 匹配，如果匹配正确就返回匹配码，匹配码是addUri()方法传入的第三个 数，假设匹配content://com.ljq.provider.personprovider/person 路径，返回 匹配码为1。 四、ContentUris介绍 ContentUris用于操作Uri后面的ID 部分，它有两个实用的方法： WithAppendedId(uri, id)用于为uri路径加上id 部分，如下： <span style="font-size:12px;color:#000000;">Uri uri = Uri.parse("content://com.ljq.provider.personprovider/person") Uri resultUri = ContentUris.withAppendedId(uri, 10); //生成后的Uri为：content://com.ljq.provider.personprovider/person/10 parseId(uri)用于从路径中获取Id，如下： Uri uri = Uri.parse("content://com.ljq.provider.personprovider/person/10") long personid = ContentUris.parseId(uri); //获取的结果为:10</span> 五、监听ContentProvider中数据的变化         如果ContentProvider的访问者需要知道ContentProvider中数据发生变化，可以在ContentProvider中数据发生变化时调用getContentResovler().notifyChange(uri, null)来通知注册在此uri上的访问者，如下： <span style="font-size:12px;color:#000000;">public class PersonContentProvider extends ContentProvider { public Uri insert(Uri uri, ContentValues values) { db.insert("person", "personid", values); getContext().getContentResolver().notifyChange(uri, null); } } </span>         如果ContentProvider 的访问者需要得到数据变化通知，必须使用ContentObserver对数据（数据采用Uri描述）进行监听，当监听到数据变化通知时，系统就会调用ContentObserver的onChange()方法，如下： <span style="font-size:12px;color:#000000;">getContentResolver().registerContentObserver(Uri.parse("content://com.ljq.providers.personprovider/person"), true, new PersonObserver(new Handler())); public class PersonObserver extends ContentObserver{ public PersonObserver(Handler handler) { super(handler); } public void onChange(boolean selfChange) { //此处可以进行相应的业务处理 } } </span> 六、具体实例 <span style="font-size:12px;color:#000000;">public class FirstContentProvider extends ContentProvider { // UriMatcher类主要用来匹配Uri private static final UriMatcher uriMatcher = new UriMatcher( UriMatcher.NO_MATCH); private MySqlite mysqlite; static { // 注册向外部程序提供的Uri uriMatcher.addURI(UserInfo.AUTOR, "userinfo", 1); uriMatcher.addURI(UserInfo.AUTOR, "userinfoall", 2); } //删除数据 @Override public int delete(Uri uri, String selection, String[] selectionArgs) { int number = 0; if (uriMatcher.match(uri) == 1) { // 根据条件删除数据,并获取删除的行数 number = mysqlite.getReadableDatabase().delete("user_info", selection, selectionArgs); } // 通知数据已经改变 getContext().getContentResolver().notifyChange(uri, null); return number; } @Override public String getType(Uri uri) { return null; } //插入数据 @Override public Uri insert(Uri uri, ContentValues values) { String name = values.getAsString(UserInfo.User.NAME).toString(); String age = values.getAsInteger(UserInfo.User.AGE).toString(); String maxId = "select max(id) id from user_info"; Cursor cursor = mysqlite.getReadableDatabase().rawQuery(maxId, null); cursor.moveToFirst(); int userid = cursor.getInt(0) + 1; if (uriMatcher.match(uri) == 1) { mysqlite.getWritableDatabase().execSQL( "insert into user_info values(?,?,?)", new String[] { String.valueOf(userid), name, age }); } return uri; } // 连接数据库 @Override public boolean onCreate() { mysqlite = new MySqlite(getContext(), "userinfo.db", null, 1); return true; } //查询数据 @Override public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { SQLiteDatabase sqlite = mysqlite.getReadableDatabase(); String str = "select name,age from user_info"; if (uriMatcher.match(uri) == 1) { str += " where " + selection; } Cursor cursor = sqlite.rawQuery(str, selectionArgs); return cursor; } //修改数据 @Override public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) { SQLiteDatabase sqlite = mysqlite.getReadableDatabase(); int number = 0; if (uriMatcher.match(uri) == 1) { number = sqlite.update("user_info", values, selection, selectionArgs); } return number; } } </span> 上一篇 Android中SQLite应用详解 顶 1 踩 0 我的同类文章 Android （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 chaoyu168 访问： 66021次 积分： 1825 等级： 积分：1825 排名： 第13236名 原创： 97篇 转载： 16篇 译文： 2篇 评论： 11条 文章搜索 博客专栏 Java开发 文章：7篇 阅读：37804 Android开发 文章：9篇 阅读：15013 文章分类 Android (42) Java (47) XML (1) HTML (7) MySQL (8) 软件 (8) Android开发实例 (1) Android studio (4) 常见问题 (2) 文章存档 2015年12月 (17) 2015年11月 (41) 2015年10月 (53) 2015年09月 (4) 阅读排行 Set,List,Map的关系 (9637) Java正则表达式 (9326) IO流的操作规律 (8850) 客户端登陆服务器用户名验证 (5880) getContext() , getApplicationContext() , getBaseContext() and “this”的区别 (3788) Httppost上传 (3672) 点击事件监听器的五种写法 (3665) MySQL应用 (2975) MySQL入门 (2739) Android创建和使用数据库 (2541) 评论排行 Set,List,Map的关系 (6) Java正则表达式 (4) 客户端登陆服务器用户名验证 (1) Eclipse启动时DDMS files not found: D:\Eclipse\adt-bundle-windows-x86_64-20131030\sdk\tool (0) 按键精灵---- 手机按键利用插件读取文本 (0) Android中ContentProvider组件详解 (0) Android APK文件解析 (0) Android系统的常用权限 (0) Android读取、加入联系人 (0) Android读取SD卡.TXT文本内容 (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Java正则表达式 chaoyu168 : @qing_gee:三克油~ Java正则表达式 qing_gee : 还是不错的 Set,List,Map的关系 Dimikart : 很适合写成交互的课程，要不要来试试？http://www.dwz.cn/1JawB6 Set,List,Map的关系 chaoyu168 : @xzf523107430:http://blog.csdn.net/clam_clam/artic... Set,List,Map的关系 chaoyu168 : @xzf523107430:谢谢 Set,List,Map的关系 xzf523107430 : 容器类仅能持有对象引用（指向对象的指针），而不是将对象信息copy一份至数列某位置。一旦将对象置入容... Set,List,Map的关系 xzf523107430 : 讲的很详细，赞一个

Recno:: 55
URL:: http://blog.csdn.net/column/details/itmyhome-git.html

ParseText::
专栏：Git教程 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 综合专栏 > Git教程 分享到： 新浪微博 腾讯微博 Git教程 本教程适合初接触Git的同学。从入门到简单的基本命令操作，然后就可以轻松的在Github上搭建自己的个人网站。最后与Myeclipse进行集成，实现分布式版本控制。 订阅 最新更新文章 [综合] Eclipse上GIT插件EGIT使用 一、安装EGit插件 参考：MyEclipse8.5整合Git 二、EGit配置 配置个人信息 Window > Preferences > Team > Git > Configuration... Eclipse GIT插件 EGIT itmyhome 2014-10-14 22:07 阅读(1431) 评论(8) [综合] MyEclipse8.5整合Git 安装插件,以下两种方法任选其一 一、把下载的插件解压出来,在MyEclipse的dropins目录下新建一个egit文件夹,然后把刚才解压的features、plugins和另外两个jar包 全放进去。重启MyEclipse后,进入Window-Preferences-Team,看到Git选项,就说明安装成功了。 二、把下载的插件解压出来,只保留features和plugins两个文件夹即可。在MyEclipse下新建myPlugin(随意名字)文件夹,进去在此目录 下新建egit文件夹,把刚才解压的fe... MyEclipse8.5 Git EGit itmyhome 2014-10-13 21:33 阅读(1736) 评论(4) [综合] Git分支管理 查看分支：git branch 创建分支：git branch name 切换分支：git checkout name 创建+切换分支：git checkout -b name 合并指定分支到当前分支：git merge name 删除分支：git branch -d name... Git branch 分支管理 itmyhome 2014-10-11 21:42 阅读(1338) 评论(0) [综合] GitHub上搭建个人网站 大致如下步骤： 1、注册Git账号 2、创建SSH keys 3、新建repository 4、设置网站 5、clone库到本地 6、提交、上传 7、预览... itmyhome 2014-10-03 21:40 阅读(3584) 评论(13) [综合] GitHub删除文件 删除单个文件一般情况下，通常可直接在文件管理器中直接把文件删了，或者用rm命令删了$ rm README.txt... GitHub 删除文件 rm itmyhome 2014-10-02 22:03 阅读(1402) 评论(1) [综合] GitHub创建SSH Keys 第一步：在用户主目录下,看有没有.ssh目录,如果有,再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件,如果已经有了,可直接跳到下一步,如果没有打开Git Bash,创建SSH Key$ ssh-keygen -t rsa -C "youremail@xxx.com"你需要把邮件地址换成你自己的邮件地址,然后一路回车,默认即可。如果一切顺利,可以在用户目录里找到.ssh目录 里面... GitHub SSH Keys itmyhome 2014-10-01 21:09 阅读(1816) 评论(1) [综合] GitHub入门教程 总结： 一、注册github账号 二、新建repository仓库 三、安装msysgit客户端 四、创建版本库 1)创建目录 2)使用命令git init 把该目录变成git可管理的仓库 五、把文件添加到版本库 1)使用命令git add 注意,可反复多次使用,添加多个文件 2)使用命令git commit 提交到仓库 3)使用命令git remote 输入远程地址 4)使用命令git push 上传到github... GitHub msysgit itmyhome 2014-09-27 22:51 阅读(3889) 评论(35) 申请专栏 我的专栏 专栏创建者： itmyhome 创建时间：2014-10-10 文章数：7篇 浏览量： 15196 次 热门文章 最新评论

Recno:: 56
URL:: http://blog.csdn.net/column/details/itmyhome-ibatis.html

ParseText::
专栏：ibatis实战 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > ibatis实战 分享到： 新浪微博 腾讯微博 ibatis实战 重拾ibatis 点滴记录。 订阅 最新更新文章 [编程语言] ibatis实战之一对多关联 ibatis一对多关联查询 在实际开发中,我们常常遇到关联数据的情况,如User对象拥有若干Book对象 每个Book对象描述了归属于一个User信息 如下步骤演示一对多关联 1、创建user(id,name,age)表和book(id,name,uid)表 2、POJO类... ibatis 一对多 itmyhome 2014-06-13 21:13 阅读(1379) 评论(2) [编程语言] ibatis实战之OR映射 映射文件主要分为两个部分:模块配置和Statement配置 模块配置包括： typeAlias节点： 定义了本映射文件中的别名,以避免过长变量值的反复书写,此例中通过 typeAlias节点为类"com.itmyhome.User"定义了一个别名"user"， 这样在本配置文件的其他部分,需要引用"com.itmyhome.User"类时， 只需以其别名替代即可。 cacheModel节点 定义了本映射文件中使用的Cache机制 ... ibatis OR映射 itmyhome 2014-06-12 21:42 阅读(2345) 评论(0) [编程语言] ibatis配置log4j输出sql日志信息 为了在开发过程更加直观,我们需要将ibatis日志打开以便观察ibatis运作的细节。ibatis采用Apache common_logging,并结合Apache log4j作为日志输出组件。在CLASSPATH中新建log4j.properties配置文件,内容如下：... ibatis log4j 日志 itmyhome 2014-06-11 21:58 阅读(1148) 评论(0) [编程语言] MyEclipse添加ibatis DTD文件实现xml的自动提示功能 当我们写ibatis配置文件的时候，希望有xml自动提示功能。这就需要我们添加DTD文件SqlMapConfig.xml中开头部分有这么一句话... MyEclipse ibatis DTD xml 自动提示 itmyhome 2014-06-10 22:46 阅读(1770) 评论(0) [编程语言] ibatis实战之基础环境搭建 关于ibatis的介绍、优缺点，以及ibatis和hibernate的比较再此不在赘述，可参阅其他资料。一、准备工作1、下载ibatis软件包 xxx   所需jar包为：ibatis-xxx.jar,mysql-connector-java-xxx-bin.jar2、创建测试数据库，并新建user表，其中包含三个字段：   id(int)   name(varchar)   age(int)... ibatis SqlMapClientBuilder SqlMapClient Resources itmyhome 2014-06-09 22:49 阅读(2262) 评论(3) 申请专栏 我的专栏 专栏创建者： itmyhome 创建时间：2014-06-04 文章数：5篇 浏览量： 8904 次 热门文章 最新评论

Recno:: 57
URL:: http://blog.csdn.net/column/details/itmyhome-interview.html

ParseText::
专栏：面试那些事儿 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 综合专栏 > 面试那些事儿 分享到： 新浪微博 腾讯微博 面试那些事儿 关于面试的那些事儿，以及可能遇到的笔试、面试题。 订阅 最新更新文章 [编程语言] 北京易贸创想软件面试题 1．下列哪一种叙述是正确的（D） 　　A． abstract修饰符可修饰字段、方法和类 　　B．抽象方法的body部分必须用一对大括号{ }包住 　　C．声明抽象方法，大括号可有可无 　　D．声明抽象方法不可写出大括号 2、如下代码 public class T { public int aMethod(){ static int i = 0; i++; re... itmyhome 2013-06-28 22:04 阅读(1930) 评论(0) [编程语言] 北京南天软件java工程师面试题 此试题为北京南天软件java工程师面试题（部分） 一、单项选择 （1）下列关于构造方法的叙述中，错误的是（C） A、java语言规定构造方法名与类名必须相同 B、java语言规定构造方法没有返回值，但不用void声明 C、java语言规定构造方法不可以重载 D、java语言规定构造方法只能通过new自动调用 （2）下列哪个类的声明是正确的（D） A、abstract  final... itmyhome 2013-06-19 23:50 阅读(3289) 评论(11) [编程语言] java笔试01 一、面向对象的特征都有哪些？他们在使用过程中的优势是什么？ （1）对象唯一性 （2）抽象性 （3）继承性 （4）多态性         1、易维护          采用面向对象思想设计的结构，可读性高，由于继承的存在，即使改变需求，那么维护也只是在局部模块，所以维护起来是非常方便和较低成本的。          2、质量高          在设计时，可重用现有的，在以前的项目... itmyhome 2013-05-31 19:58 阅读(1268) 评论(3) [编程语言] Java程序员面试中的多线程问题 很多核心Java面试题来源于多线程(Multi-Threading)和集合框架(Collections Framework)，理解核心线程概念时，娴熟的实际经验是必需的。这篇文章收集了 Java 线程方面一些典型的问题，这些问题经常被高级工程师所问到。 0.Java 中多线程同步是什么？ 在多线程程序下，同步能控制对共享资源的访问。如果没有同步，当一个 Java 线程在修改一个共享变量时，另外... itmyhome 2013-05-09 10:40 阅读(1239) 评论(2) [编程语言] Java笔试题：Java基础概念 1．下列语句哪一个正确（） A． Java程序经编译后会产生machine code B． Java程序经编译后会产生byte code C． Java程序经编译后会产生DLL D．以上都不正确 答案：B   2．下列说法正确的有（） A． class中的constructor不可省略 B． constructor必须与class同名，但方法不能与class同名 C． cons... itmyhome 2012-03-05 22:02 阅读(1500) 评论(0) [综合] 面试总结(7) 上午得到个好消息,昨天面试那家公司通过了，下周一可以入职了。 可已经约好了 下午还有家面试，本来是不想再去了，可想想，也就当 是再练练手吧。 说说今天的面试题 try{}里面有一个return语句 finllay{}里的code会不会被执行，在return前还是后 error和exception有什么区别，列举常见的runtimeException abstract class和int... 面试 exception interface json 聊天 class itmyhome 2012-02-10 19:14 阅读(2187) 评论(2) [综合] 面试总结(6) 不知道如何写，等结果，希望是好的！ 下面的文字是2月10号的，我可以去写了... 九号早上到公司参加面试，面试的人很多，依然是老套的流程 笔试--面试--机试  最后通过... 我不再去想那些面试题，说实话，我够了，面试就像高考一样， 考前背功课，然后答题，我知道这是没办法的办法，可为了工作 也只能忍受了，一周五天，每天都在跑，甚至一天两场。 背面试题，查地图，做地铁，乘公交，大街小... 面试 工作 生活 电话 itmyhome 2012-02-09 17:44 阅读(1525) 评论(3) [综合] 面试总结(5) 今天没有太多的故事，只有太多的遗憾。 本来是两家公司的面试(上午和下午)，由于上午那家公司有点远，本来想去的，实在是太累了， 就又躺下了，睡到十一点才起床，更不幸的是，脖子落枕了，现在扭动一下还疼呢。 起床准备下午两点半的面试，到了公司先笔试... 如何把List集合 中数据转换成Map然后循环出来 我不知道这道题是什么意思，网上也没找到合适的，不知道是不是下面的答案 package... 面试 string hashmap iterator date list itmyhome 2012-02-08 18:55 阅读(1440) 评论(1) [综合] 面试总结(4) 今天面试了两家公司，速度都挺快的，凳子都还没做热呢，就结束了，连一杯茶都不给上 上午那家公司是八点半上班，我九点就到了，如果是九点上班的话，这未免去的有些太早了。 先做笔试题... 判断题：java接口方法必须声明成public(我认为是对的，当时拿不准，回来一查，是正确的)。 简答题：window.onload=function(){};什么含义？是否可以存在多个？ 等页面加载完后执行... 面试 session 数据结构 firefox hibernate 多线程 itmyhome 2012-02-07 17:50 阅读(1567) 评论(6) [综合] 面试总结(3) 今天的面试真的是够受罪的，公司离我住的地方非常非常遥远不说，今天的天气还给我作对了， 风呜呜叫的刮啊，叫我给冻得.... 刮风就刮风呗，还时不时的卷起一阵黄沙来，发型无比的酷， 公司那地方那叫一个偏僻啊(其实也不是了，只是我没去过而已)，十点面试，我七点半就出发了 结果到公司已经十点半了，整整三个小时啊，这把我给折腾的...。好了，迟到就迟到吧，开始做题... 题量不大，第一题是写出pub... 面试 uml mvc sql 数据库 itmyhome 2012-02-06 19:42 阅读(1989) 评论(6) [综合] 面试总结(2) 昨天在一个qq群里发出求职通知，问有没有公司招人的，然后一位叫"牛哥"的说他们公司招人， 聊了一会然后说让我过去面试，第二天我就去面试了。 吸取昨天迟到的教训，这次我早早的就到了公司，说是十点开始，我九点二十就到了。 7点半起床，洗漱好出门，走到了地铁生命科学园站，我滴个神啊，人真多，我排在了 队伍后面，一会来了一趟车，没挤上去，剩下四个(包括我),继续等下班车，地铁昌平线那是 叫一个少... 面试 多线程 exception oracle mvc itmyhome 2012-02-03 14:02 阅读(2214) 评论(19) [综合] 面试总结(1) 今天上午面试的公司不是我投的简历，而是在一个QQ群里公司的HR发消息，然后我就试着去面试了一下。 马上快到周末了，也准备从下周才开始的，可既然有了，那就试试吧(毕竟投了几十封简历也未必有一家能有邀约)。 那位HR姐姐通知的是10点半，地点在工人体育场那边，我住在史各庄，向比较还是有点远的，当时 也没怎么注意时间，出发的有点晚了，对那地方又不熟，找了半天，结果可想而知，迟到了。 更不可原谅的... 面试 前端开发 体育 java qq itmyhome 2012-02-02 16:58 阅读(1996) 评论(10) 申请专栏 我的专栏 专栏创建者： itmyhome 创建时间：2013-11-30 文章数：12篇 浏览量： 22144 次 热门文章 最新评论 面试总结(2) u012466304 ： 每一次面试都让自己成长一次 面试总结(1) u012466304 ： 第一次面试这样很有意思呢

Recno:: 58
URL:: http://blog.csdn.net/column/details/itmyhome-jquery.html

ParseText::
专栏：锋利的jQuery - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > Web前端专栏 > 锋利的jQuery 分享到： 新浪微博 腾讯微博 锋利的jQuery 每多学一点知识，就少写一行代码。 订阅 最新更新文章 [Web前端] jquery选择器之基本过滤选择器 /*高亮显示*/ .highlight{ background-color: gray } 各省市行政区划 北京 上海 商丘 海淀 徐汇 睢阳 朝阳 闸北 梁园... jquery 选择器 itmyhome 2013-11-02 10:41 阅读(1331) 评论(5) [Web前端] jquery选择器之内容过滤选择器 先写出DOM元素的HTML结构： /*高亮显示*/ .highlight{ background-color: gray } John Resign George Martin Malcom John Sinclair J.Ohn Has p 一、:contains(text) 选取含有文本内容为“text”的元素 $("... itmyhome 2013-11-02 20:22 阅读(1192) 评论(0) [Web前端] jquery选择器之属性过滤选择器 /*高亮显示*/ .highlight{ background-color: gray } Hello ID为test的DIV 足球 排球 篮球 其他 1. [attribute]用法 定义：匹配包含给定属性的元素 $("div[id]").addClass("highlight"); //查找所有含... jquery 属性 选择器 itmyhome 2013-11-04 21:15 阅读(3706) 评论(0) [Web前端] jquery选择器之层级过滤选择器 $("ancestor descendant")：选取parent元素后所有的child元素 $("parent > child")：选取parent元素后所有的直属child元素，何谓“直属”，也就是第一级的意思了 $("prev + next")：prev和next是两个同级别的元素. 选中在prev元素后面的next元素 $("prev ~ siblings"):选择prev后面的根据sib... jquery 选择器 层级 itmyhome 2013-11-02 10:43 阅读(2313) 评论(1) [Web前端] jquery扩展方法 jquery插件的开发包括两种：一种是类级别的插件开发，即给jquery添加新的全局函数，相当于给jquery类本身添加方法。 jquery的全局函数就是属于jquery命名空间的函数，另一种是对象级别的插件开发，即给jQuery对象添加方法。 也可以理解为另外两种方式，一种是jQuery本身的扩展方法，另一种是jQuery所选对象的扩展方法。 1.jQuery.extend(Object);　　　// jQuery 本身的扩展方法 2.jQuery.fn.extent(Object);　 // jQu... jquery 插件 扩展 itmyhome 2013-10-26 10:31 阅读(4316) 评论(2) [Web前端] jquery.post用法 使用ajax在前端验证是否执行某个操作 jquery.post参数为 url,[data],[callback],[type] url:发送请求地址。 data:待发送 Key/value 参数。 callback:发送成功时回调函数。 type:返回内容格式，xml, html, script, json, text, _default。... itmyhome 2013-10-10 17:55 阅读(1164) 评论(0) 申请专栏 我的专栏 专栏创建者： itmyhome 创建时间：2013-12-28 文章数：6篇 浏览量： 14022 次 热门文章 最新评论

Recno:: 59
URL:: http://blog.csdn.net/column/details/itmyhome-springmvc.html

ParseText::
专栏：springMVC3学习 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > springMVC3学习 分享到： 新浪微博 腾讯微博 springMVC3学习 博主不才，如果疏忽，还请指正。 订阅 最新更新文章 [编程语言] springMVC3学习(十二)--文件上传优化CommonsMultipartResolver 基于上一篇文件上传发现效率很慢，我们应该对它进行优化  使用springMVC对文件上传的解析器来处理文件上传的时候需要在spring的applicationContext里面加上springMVC提供的MultipartResolver的申明这样客户端请求的时候 springMVC会检查request里面是否包含多媒体信息如果包含了就会使用MultipartResolver进行解析，spring... springMVC3 CommonsMultipartReso 文件上传 itmyhome 2014-06-05 22:08 阅读(3057) 评论(3) [编程语言] springMVC3学习(十一)--文件上传CommonsMultipartFile 使用springMVC提供的CommonsMultipartFile类进行读取文件需要用到上传文件的两个jar包 commons-logging.jar、commons-io-xxx.jar1、在spring配置文件中配置文件上传解析器... springMVC3 CommonsMultipartFile 文件上传 itmyhome 2014-06-04 21:00 阅读(3144) 评论(0) [编程语言] springMVC3学习(十)--注解式控制器 Spring2.5引入注解式处理器支持,通过@Controller和@RequestMapping注解定义我们的处理器类。并且提供了一组强大的注解需要通过处理器映射DefaultAnnotationHandlerMapping和处理器适配器AnnotationMethodHandlerAdapter来开启支持@Controller和@RequestMapping注解的处理器。@Controller... springMVC3 注解式控制器 Controller RequestMapping itmyhome 2014-06-02 22:10 阅读(2561) 评论(9) [编程语言] springMVC3学习(九)--redirect和forward跳转 import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMap... springMVC3 redirect forward itmyhome 2014-05-22 23:21 阅读(1447) 评论(0) [编程语言] springMVC3学习(八)--全局的异常处理 这里主要的类是SimpleMappingExceptionResolver类，和他的父类AbstractHandlerExceptionResolver类。 你也可以实现HandlerExceptionResolver接口，写一个自己的异常处理程序. 通过SimpleMappingExceptionResolver我们可以将不同的异常映射到不同的jsp页面（通过exceptionMappings属性的配置）。 同时我们也可以为所有的异常指定一个默认的异常提示页面（通过defaultErrorView属性的配... springMVC3 异常处理 Exception itmyhome 2014-05-21 23:00 阅读(1636) 评论(2) [编程语言] springMVC3学习(七)--Interceptor拦截器 Spring为我们提供了：org.springframework.web.servlet.HandlerInterceptor接口，org.springframework.web.servlet.handler.HandlerInterceptorAdapter适配器，实现这个接口或继承此类，可以非常方便的实现自己的拦截器。有以下三个方法：Action之前执行public boolean preH... springMVC3 Interceptor itmyhome 2014-05-19 22:38 阅读(1840) 评论(1) [编程语言] springMVC3学习(六)--SimpleFormController SimpleFormController提交表单流程如下：login.jsp 用户名： 密码： springMVC.xml UserModel.java... springMVC SimpleFormController itmyhome 2014-05-18 22:46 阅读(1472) 评论(0) [编程语言] springMVC3学习(五)--MultiActionController Spring提供一个多动作控制器，使用它你可以将几个动作合并在一个控制器里，这样可以把功能组合在一起。多动作控制器存在在一个单独的包中——org.springframework.web.mvc.multiaction——它能够将请求映射到方法名，然后调用正确的方法。比如当你在一个控制器中有很多公共的功能，但是想多个入口到控制器使用不同的行为，使用多动作控制器就特别方便。MultiActionCon... springMVC MultiActionControlle ParameterMethodNameR methodNameResolver itmyhome 2014-05-18 08:49 阅读(1638) 评论(4) [编程语言] springMVC3学习(四)--访问静态文件如js,jpg,css 如果你的DispatcherServlet拦截的是*.do这样的URL，就不存在访问不到静态资源的问题如果你的DispatcherServlet拦截了"/"所有的请求，那同时对*.js,*.jpg的访问也就被拦截了。我们在进行springMVC开发时，必定会在jsp页面引入js、img和css等文件。大多数人会将这些分类存放在WebRoot文件下新建的文件夹下面。同时，会在web.xml文件中配置... springMVC 访问静态文件 mvcresources mvcdefault-servlet-h itmyhome 2014-05-17 10:20 阅读(1825) 评论(4) [编程语言] springMVC3学习(三)--handlerMapping和handlerAdapter 基本结构和 springMVC3学习(一)--框架搭建 差不多,这里不再用Annotation注解的方式 以下只说明需要修改的部分： 1、在Spring配置文件中配置HandlerMapping、HandlerAdapter BeanNameUrlHandlerMapping：表示将请求的 URL和Bean名字映射如URL为“上下文/hello” ，则Spring配置文件 必... springMVC itmyhome 2014-01-21 19:30 阅读(2980) 评论(0) [编程语言] springMVC3学习(二)--ModelAndView对象 当控制器处理完请求时，通常会将包含视图名称或视图对象以及一些模型属性的ModelAndView对象返回到DispatcherServlet。 因此，经常需要在控制器中构造ModelAndView对象。ModelAndView类提供了几个重载的构造器和一些方便的方法， 让你可以根据自己的喜好来构造ModelAndView对象。这些构造器和方法以类似的方式支持视图名称和视图对象。 当你只有一个模... springMVC itmyhome 2014-01-19 09:38 阅读(13993) 评论(1) [编程语言] springMVC3学习(一)--框架搭建 由于时代需要，学习下springMVC，在此简单记录一下。 看好，是简单记录，至于十万个为什么，暂且忽略，待以后研究。 本人是基于3.1.1版本开发，如遇jar包版本冲突等其他问题，本人概不负责。 下载地址：xxx 一：新建web工程，spring001 忽略 二：添加springframework依赖jar包 将dist下的jar全部加进去  然后另加一个commons-l... springMVC itmyhome 2014-01-18 11:01 阅读(3511) 评论(5) 申请专栏 我的专栏 专栏创建者： itmyhome 创建时间：2014-05-26 文章数：12篇 浏览量： 39104 次 热门文章 最新评论

Recno:: 60
URL:: http://blog.csdn.net/column/details/itmyhome.html

ParseText::
专栏：java学习笔记 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > java学习笔记 分享到： 新浪微博 腾讯微博 java学习笔记 码字的痛苦，夜夜袭来，想让它成为经典，成为别人道路上的一盏明灯，可回回读来，却不堪难言。我把它当做一场云烟，任人唾骂。无论它是什么，至少我曾努力过...... 订阅 最新更新文章 [编程语言] java学习笔记16--异常 异常 异常时导致程序中断运行的一种指令流，如果不对异常进行正确的处理，则可能导致程序的中断执行，造成不必要的损失， 所以在程序的设计中必须要考虑各种异常的发生，并正确的做好相应的处理，这样才能保证程序正常的执行。   异常类的继承结构 在整个java的异常结构中，实际上有以下两个最常用的类：Exception、Error，这两个类全都是Throwable的子类 Exception：一般... itmyhome 2013-06-09 23:51 阅读(1958) 评论(0) [编程语言] java学习笔记15--引用传递 范例一 class Demo{ public int temp = 30; } public class T { public static void main(String[] args) { // TODO Auto-generated method stub Demo d1 = new Demo(); d1.temp = 50; System.out... itmyhome 2013-06-07 00:05 阅读(1639) 评论(2) [编程语言] java学习笔记14--动态代理 InvocationHandler接口 public interface InvocationHandler{ public Object invoke(Object proxy,Method method,Object[] args)throws Throwable } 参数说明： Object  proxy：被代理的对象 Method  method：要调用的方法 Obje... itmyhome 2013-05-21 00:29 阅读(1768) 评论(1) [编程语言] java学习笔记13--比较器(Comparable、Comparator) Comparable接口的作用 之前Arrays类中存在sort()方法，此方法可以直接对对象数组进行排序。   Comparable接口 可以直接使用java.util.Arrays类进行数组的排序操作，但对象所在的类必须实现Comparable接口，用于指定排序接口。 Comparable接口的定义如下： public  interface  Comparable{... itmyhome 2013-05-20 23:20 阅读(3886) 评论(0) [编程语言] java学习笔记12--国际化 国际化的操作就是指一个程序可以同时适应多门语言，即：如果现在程序者是中国人，则会以中文为显示文字，如果现在程序的使用者是英国人，则会以英语为显示的文字，也就是说可以通过国际化操作，让一个程序适应各个国家的语言要求。 程序根据不同的语言环境找到不同的资源文件，之后从资源文件中取出内容，资源文件中的内容都是以key->value的形式保存的，所以在读取的时候通过其key找到对应的value... itmyhome 2013-05-20 12:39 阅读(1928) 评论(1) [编程语言] java学习笔记11--Annotation Annotation：在JDK1.5之后增加的一个新特性，这种特性被称为元数据特性，在JDK1.5之后称为注释，即：使用注释的方式加入一些程序的信息。 java.lang.annotation Annotation接口是所有的Annotation都必须实现的接口。   系统内建的Annotation 在JDK1.5之后，系统中已经建立了如下的三个内建的Annotation类型，用户直接使用... itmyhome 2013-05-19 22:36 阅读(1463) 评论(0) [编程语言] java学习笔记10--枚举 在JDK1.5之前，java可以有两种方式定义新类型：类和接口。对于大部分面向对象编程来说，这两种方法看起来似乎足够了，但是在一些特殊情况下，这些方法就不适合。例如，想定义一个Color类，它只能有Red 、Green、Blue三种值，其他的任何值都是非法的，那么JDK1.5之前虽然可以构造这样的代码，但是要做很多的工作，也有可能带来各种不安全的问题。而JDK1.5之后引入的枚举类型（Enum）就... itmyhome 2013-05-19 21:06 阅读(1512) 评论(1) [编程语言] java学习笔记09--反射机制 什么是反射： 反射是java语言的一个特性，它允许程序在运行时来进行自我检查并且对内部的成员进行操作。例如它允许一个java的类获取他所有的成员变量和方法并且显示出来。 java的反射机制的实现要借助4个类：Class,Constructor,Field,Method 其中Class代表的是类对象，Constructor  类的构造器对象，Field  类的属性对象，Method  类的... itmyhome 2013-05-19 12:22 阅读(1457) 评论(1) [编程语言] java学习笔记08--泛型 泛型可以解决数据类型的安全性问题，它主要的原理，是在类声明的时候通过一个标识标识类中某个属性的类型或者是某个方法的返回值及参数类型。这样在类声明或实例化的时候只要指定好需要的类型即可。 class Point{ private T var; //var的类型由T决定 即由外包决定 public T getVar() { return var; } public vo... itmyhome 2013-05-18 12:32 阅读(1413) 评论(0) [编程语言] java学习笔记07--日期操作类 一、Date类 在java.util包中定义了Date类，Date类本身使用非常简单，直接输出其实例化对象即可。 public class T { public static void main(String[] args) { Date date = new Date(); System.out.println("当前日期："+date); //当前日期：Thu May 1... itmyhome 2013-05-16 23:46 阅读(1381) 评论(0) [编程语言] java学习笔记06--正则表达式 正则表达式可以方便的对数据进行匹配，可以执行更加复杂的字符串验证、拆分、替换等操作。 例如：现在要去判断一个字符串是否由数字组成，则可以有以下的两种做法 不使用正则表达式 public class T { public static void main(String[] args) { String str = "0123456789"; boolean flag = tru... itmyhome 2013-05-16 18:44 阅读(1665) 评论(0) [编程语言] java学习笔记05--字符串 . 一、String类 由字符所组成的一串文字符号被称之为字符串。在java中字符串不仅仅是字符数组，而且是String类的一个实例，可以使用String类来构建。 字符串的每个字符是使用Unicode字符来构建。 Sring对象上的几个方法： length()       取得字符串的长度 equals()      判断源字符串中的字符是否等于指定字符串中的字符  toLowerCas... itmyhome 2013-05-15 23:58 阅读(1689) 评论(0) [编程语言] java学习笔记04--数组 数组复制的方法是使用System类提供的arraycopy()方法，其语法如下： System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length); System.arraycopy(源数组，源数组中的起始位置，目标数组，目标数据中的起始位置，要复制的数组元素的数量); public class T... Java itmyhome 2013-05-15 00:04 阅读(1704) 评论(0) [编程语言] java学习笔记03--判断与循环语句 程序的结构         一般来说程序的结构包含有下面三种：         1）顺序结构         2）选择结构         3）循环结构     在使用switch进行表达式判断的时候，在表达式中只能使用数字或字符。 public class T { // 完成一个四则运算的功能 public static void main(String... itmyhome 2013-05-12 23:40 阅读(1411) 评论(0) [编程语言] java学习笔记02--运算符、表达式 . 赋值运算符号 一元运算符 算术运算符 关系运算符 递增与递减运算符 public class T { public static void main(String[] args) { int a = 3 , b = 3 ; // 定义两个变量a和b int x = 6, y = 6 ; // 定义两个变量x和y System.out.printl... itmyhome 2013-05-12 23:05 阅读(1404) 评论(1) [编程语言] java学习笔记01--数据类型 java数据类型划分 分为两大类型：                1）基本数据类型：类似于普通的值。                2）引用数据类型：传递的是内存的地址。 浮点类型实际上就是表示小数。   java基本数据类型   数据的溢出 当整数的数据大小超出了可以表示的范围，而程序中又没有做数值范围的检查时，这个整型变量所输出的值将发生絮乱，且不是预期的运行结果。... itmyhome 2013-05-12 22:44 阅读(2010) 评论(6) 申请专栏 我的专栏 专栏创建者： itmyhome 创建时间：2013-05-18 文章数：16篇 浏览量： 28288 次 热门文章 最新评论

Recno:: 61
URL:: http://blog.csdn.net/foruok/article/details/50230821

ParseText::
35岁程序员的独家面试经历 - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 35岁程序员的独家面试经历 标签： 程序员 面试 2015-12-10 06:08 8784人阅读 评论 (46) 收藏 举报 分类： 随笔 （68） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 创业失败后，在找工作。选择了三家（两家上市公司，一家将上市），都走到了关键的节点。我记录了面试过程中被问到的一些问题，希望对自己将来的面试有帮助，也希望对别人有所启发。 我的经历和现状与被问到的问题息息相关，如下： 2002年毕业。 2002~2005做售后技术支持，2005离职转做软件开发。 2009开始做项目经理，后来做部门经理，期间还有50%左右精力在技术上。 2014.10~2014.11，项目总监，偏重管理，脱离技术细节。 2014.11~2014.12，主动回归开发岗位，进入C3公司。 2014.12~2015.11，离开C3，以技术合伙人身份与朋友创业，技术总监。 2015年11月25号解散团队，重新开始找工作。 下面把我面试三个公司的关键节点和问题列出来回顾一下，也许对大家也有帮助。我最终入职的单位将从这三家中产生。如果你不耐烦看面试问题，也可以跳到最后看我总结的 如何准备面试 。 第一家，和研发总监面谈 我考虑的第一家公司是安防行业的一家上市公司，叫它C1吧，西安有分公司。北京的HR直接邀请我考虑的，我了解到岗位是研发总监。 HR和人力资源总监的两轮面试通过后，和西安这边的研发总监面谈，聊到了下列问题。大体的顺序是我列的这个样子，有一些可能会有偏差。 1. 自我介绍 这个问题一般都会遇到，技术会问，人力资源也会问，一家公司的面试流程走下来，可能会自我介绍2次或更多。 我基本是从大学毕业开始，介绍到现在。介绍时会涉及工作经历和关键的项目、产品经历，如果有与目标岗位或公司产品相关的经历，就重点提到。 2. 了解我们公司吗？了解哪些产品？ C1的公司官网我浏览过几天，研究了产品，还了解了另外两家安防类上市公司。 年龄大了记性差，被问到这个问题时，把看过的产品线的信息居然给忘了…… 3. 了解我们这个岗位吗？ HR告诉我是研发总监，后来研发总监告诉我是产品线负责人，对应研发副总监，有一些偏差。 我表示不太了解。面试官介绍了一下这个岗位的情况，包括负责的产品、职能、基本工作情况等。 4. 为什么来应聘这个岗位？ 我说是HR主动找我，没怎么展开。 现在看来我当时的回答很糟糕。以后碰见这类问题，应该结合自己的经历、商业价值和将来定位，再加上对岗位职能的了解，将回答聚焦在个人与公司的匹配性上。 5. 谈谈你对这个岗位工作的理解 产品线负责人，会负责研发、测试、UI/UE这部分技术团队的管理、产品的研发，这是产品线负责人直接管理的团队。 C1是矩阵式管理，销售平台可以有选择的销售产品，市场和销售应当被看作是产品研发部门的客户，产品线负责人需要和市场、营销、销售等部分保持密切合作，共同促进产品销售。研发部门和市场、销售部门会共同对年度业绩指标负责。 售后、售前和技术支持团队也是必须协同工作的。 我原来做产品开发时干过类似的事情，这块的理解应该偏差不大。 6. 你找工作时考虑哪些行业？为什么？ 我说了三个，安防、企业应用、互联网。简单从行业发展周期方面谈了理解，还谈了行业与企业的关系，企业与个人的关系。 在处于上升期的行业里，处于上升期的平台上，个人才有比较大的可能有大的发展。 这样的理解应该没错。 7. 你的技术积累在C++方面，我们团队偏重Java，有没有障碍？ 我从技术积累到一定程度是相通的这个角度回答，我自己也用过Java。另外从团队管理角度也做了解释，我把控的是与产品相关的技术方向和方案，特别细的技术细节不需要了解。 8. 怎样管理你的团队？ 我谈了两点，一是授权，二是参与感。 9. 这个岗位需要出差，可以接受吗？ 我明确表示如果经常出差就不用往下谈了。 然后我们讨论了什么算是经常出差，比如“一年两三次，一次一两个月”，“一月两三次，一次两三天”等。 C1在全国各地将近20个办事处，负责销售和技术支撑工作，产品线负责人每年都要拜访所有办事处，维护好各种渠道和关系。频繁出差是不可避免的。 这个问题从对方看来，我的态度显然是不大乐意接受的。 10. 如何向上管理？ 我只是听说过“向上管理”，具体不了解，只从目标管理这一点上谈了谈。 较差。 11. 如何避免项目延期 这个问题是上个问题带出来的。 我从目标及交付期设定是否合理、交付期本身是动态变化的需要以迭代观点理解这两方面谈了不少。 复盘时发现，我这种理解从客观的角度看，没差，但明显不是对方想要的答案。 12. 入职后第一个月你准备怎么开展工作？ 这可能是经常被问到的问题。我从了解目标、了解团队以及周边团队三方面谈了一下。 13. 你最擅长的是什么？ 我工作十几年，各种技术搞过，各种管理工作做过，面对这种问题，有点儿不好回答。 一般一个人必须对自己有清晰的认知，然后对目标公司和岗位有足够的了解，选择自己擅长的点来展开，这样能提高人职匹配度，加大通过面试的几率。 我选择了技术方面的一个点来说。 不好。 14.你想做客户端开发还是App？ 这个问题应该是上个问题带出来的。我从移动互联网的趋势着眼，谈了几句，告诉对方我偏向App。 后来面试我的研发总监补充解释说，问这个问题没别的意思，过一阵子公司可能有这方面岗位放出。 告别C1之后，我心里已然清楚了，不会有下文了。并且我也明白研发总监的意思——我更适合做开发工作。没错，我对自己分析的结果也是如此。 这是我在C1的一次关键面试，历时90分钟。面试官是研发总监，西安分公司老大，两个产品线负责人。我在“是否了解公司产品”、“能否接受出差”、“向上管理”、“如何避免项目延期”这个几个问题上表现不好。后来我主动和HR说目标岗位要经常出差不适合我，如果有开发岗位可以再谈。 第二家，与技术负责人视频连线面试 第二家简称C2吧，是建筑软件方面的上市公司，西安有分公司。我应聘的是高级软件开发工程师，通过猎头接洽的。 就我的经历来讲，这里面有个非常重要的问题： 从管理岗位回到软件开发岗位 。面试中一定会被问到。 一面是西安这边目标部门的技术负责人，人挺nice的，聊得也比较顺畅。 二面的面试官在北京，是更高级别的技术负责人吧。我们通过QQ视频连线进行。他可以看见我，我看不见他。 谈到的问题，我努力按顺序列在下面。 1. 自我介绍 为什么简历上都有，大家还是会让你做自我介绍？假如你反问“简历上都写清楚了，没必要吧”，那你被PASS掉的概率是90%以上。 通过自我介绍，可以看出很多东西，比如你的逻辑思维、表达能力、概括能力、现场把握能力、价值观、你对自己的认知以及适应性。当然也有的面试官没来得及看你的简历，会在你自我介绍时快速翻简历。 我这次介绍时提到了为什么去创业，为后面做了铺垫。我有预期，我从管理回来做开发，有几个问题一定会被问到。 2. 将来的定位？ 这是我预期到的问题，别人看到我的工作经历也必然会问，因为我应聘软件开发岗位，从常规角度看，不利于职业发展。 我通过一些经历和感受谈到自己的职业定位，把定位放在“专业技术者”这一点上，走技术路线将是我未来的方向，我会放弃做管理。 3. 成就感事件 我谈了几个，比如写作《 Qt on Android核心编程 》和《 Qt Quick核心编程 》，比如成功研发机顶盒产品。 4. 在开发多媒体产品时，遇到过什么样的技术难题？ 我描述了遇到过的三个问题，没详细讲怎么解决的，这点不太好。 5. 在上一家公司时的薪酬 我参与创业，薪酬不必说了，我把之前在C3的薪酬如实说了。 6. 你有没有什么问题？ 这是经常会被问到的问题，也是发挥自己的机会。 我问了三个问题： 房地产行业下滑对公司的影响 分公司搬到高新区的计划（我在高新区，公司不在，路上时间很长） 公司内部技术人员的上升通道 对方都一一作了回答。对方对第一个问题的回答很赞，说了三点： 国际化，房地产在全球来讲具有区域相关性。我应聘的也正是国际化部门 从卖软件（Licence）转向服务租用，门槛变低，客户会变多 基于房地产客户的特点，开发金融相关的服务 面试结束后我被告知5个工作日内HR会给我反馈，我觉得应该是能通过的。当然，我的感觉有时准有时不准……对方怎么想，其实我们不太能了解到，只能分析面试过程中双方的表现来定。不过，如果自己表现糟糕的话，相信一定可以感觉到结果。 重回C3时的面试经历 我做了一个决定，试试看能不能重回离职创业前的那家公司C3。于是我联系之前的同事，于是就有了一次机会，也有了下面要谈的这些面试问题。 来自VP的面试问题 我和VP用C3的云会议系统远程面谈，他可以看见我，我看不见他。VP人很nice，整个面试过程像聊天。 1. 你未来5到8年的规划？ 这个问题其实和前面讲过的另外一个问题——将来的定位——类似。我谈到了职业定位，还聊到了技术人员的年龄以及未来。 2. 你最擅长的技术方向？ C++和Qt，必须的。 3. 你给自己的定位？ 我对将来的定位是应用技术专家。高深的算法什么的，干不来。 4. 你创业时做产品（App）用的是Qt还是Native？ 安卓和iOS都采用Native方式开发。 5. 为什么没有选择Qt？ 我们的创业产品没有采用Qt，有两个原因：一是我组建团队时已有一部分开发工作在进行，直接用的Java开发Android App；二是因为Qt的体积大，会提高我们产品抵达用户的门槛。 6. 在技术上的积累有哪些？ 这种开放性问题，每个人都有自己的说法。我围绕具体的技术、技术阅历和经验等方面做了一些介绍。 7. 介绍他管理的四个团队，问我愿意到哪个团队 这说明VP已接受我。因为之前了解到C3并无招人计划，我表达了我的看法：如果真的没有招募开发人员的计划，不必特意因我为难。我不知道这样做是好是坏，很自然地这么做了，这跟我个人的性格有关。 来自人力资源总监的面试问题 技术VP之后过了一天，C3的HR告诉我人力资源总监要和我聊聊，还是远程视频的方式。还是对方看得见我，我看不见对方。 我回顾了当时被问到的问题，比技术VP的问题略显尖锐一些，不过从企业角度来讲，面对我这样的二次回归者，有这些问题非常正常。换个位置的话，我也会问出类似的问题。所以，我丝毫也没有因为这些问题而不爽。 1. 自我介绍。 这个好像技术VP也问过。 我简要介绍了个人经历，有两个地方做了较多一点的描述。一个是我从技术支持转做软件开发时的情形，谈到了当时接受我的企业和上司对我的影响。另一个是之前从C3离职创业时，拉我合伙创业的人与我的关系，就是当时转行做软件开发时引我入门的那个人。 我要再回C3，这些问题不可避免会被问到，我先自己解释一下澄清一下应该比较好。 2. 之前为什么选择C3？ 嗯，下个问题一起讲。 3. 为什么离开？ 好，这个问题和上个问题其实是相互呼应的。我当时选择C3是因为看好C3的产品，同时我的技术又能在这里发挥出来。 那离开呢，其实自我介绍那里已经提过。这里很自然地展开来讲了一下。 4. 还会因为朋友拉去创业而离开吗？ 回答了“为什么离开”，那这个问题可以说是自然而然会被问到。我谈到自己适合做什么，明确了自己的想法，也给出了回答。 5. 之前待过的时间里，觉得C3存在什么样的问题？ 我提了一个开发团队异地协同工作、效率较低的问题。 6. 为什么回来，看中了什么？ 虽然之前在C3只工作了一个月，但在技术、产品、人际等方面感觉挺好。这是我想再次回到C3的原因。 我看中的主要是企业的发展和产品的定位。谈了我对行业、企业的看法，仔细聊了对C3目前三个主要产品的看法。 7. 创业这一年，有哪些收获？ 收获主要是个人的阅历、成长，以及对自我职业定位的澄清。 8. 你这么多年的积累在哪里？ 说实话这个问题怎么回答的我已经忘了……应该是围绕技术、经验两点来谈的。 9. 你对自己的定位是什么？C3可以满足你吗？ 我从第一次进入C3之前的管理感受讲起，讲到创业时的感受，导出了自己的职能定位——专业技术人员，将来往技术专家方向发展。 经历了C1的面试之后，我更确定了这一点，没有丝毫犹疑了。 我从对C3这个公司和产品的理解谈了我和C3的匹配问题。 10. 你觉得自己适合做哪个岗位，或者你的优势？ 因为我对具体的岗位职责不了解，所以从技术和产品意识两个方面谈了我自己的优势。 11. 你有没有什么问题？ 因为是再次回归，其实我没什么特别的问题了。但对后面的面试流程不太清楚，所以就提了一下流程的问题。 12. 你对薪水的期望？ 聊上个问题带出了这个问题，我的回答是：和以前差不多就行。 如何准备面试 虽然我面试过很多人，也被很多人面试过，但我个人不是特别擅长面试。这次求职，因为年龄大了相对慎重，想得稍微多了一些。我留意了面试过程，也做了一些反省，收获了一些个人经验，和大家分享一下。 下面几点对面试很重要： 个人的职业定位 看我的经历，每家都逃不掉这方面的问题，如果自我定位不清楚，面试时肯定出问题。 个人与企业的匹配度 这方面的准备是必须的，你应聘一个职位，要了解企业对这个职位的要求，要看自己的知识、技能、经历与企业的要求契合的点在哪里。 多数企业招人时首先考虑的是人职匹配。假如你挖掘不出来匹配的点，可能简历关都过不了。 了解企业 要尽可能多了解目标企业，比如它所处行业的状况，它的产品，它的文化，它的竞争对手……越多越好，别怕花功夫。我面试C1时就忘掉了一些产品信息…… 面试官会更倾向于接受对自己公司有了解的求职者，这说明你的意愿强，而你愿意了解，了解了之后还来，还说明你和公司的匹配度相对较高。 个人形象 颜值不可更改，衣料好坏也不重要，整体上做到干净、整洁即可。记住，没有人有义务透过你凌乱邋遢的外表去发现你的内在，也没人有你爸妈那份耐心。 心态调试 心态调试有两个方面。 一方面是对多久找到工作的预期。因为经济或他人的期望带来的压力，求职者容易焦急，失去平常心态，产生胡乱先找一家干着的想法，此时面前有根稻草都可能被当做橄榄枝，很容易导致选择不慎，害人害己。露水夫妻很容易分开，代价是非常高的。我的想法是要沉下心来，慢慢来，坚信一切都来得及，美好的相遇一定在等着自己。 另一方面是关于企业和求职者关系的。这里没有谁强势谁弱势，企业和求职者是双向选择，不必紧张也不必焦虑，保持从容淡定的心态才能更好的展现自己。 而对于像我这种过了35岁的程序员，还有年龄带来的问题需要调试。我是相信，经验和阅历同样产生价值，技术专家也可以像老中医那样越老越吃香。 更多精彩文章，参看“ 漫谈程序员 ”专栏。 困惑、成长、发展、增值、新知，尽在微信订阅号“程序视界”： 上一篇 假如你想成为全栈工程师… 下一篇 加班到底有什么用 顶 21 踩 3 我的同类文章 随笔 （68） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1819973次 积分： 20930 等级： 积分：20930 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3193条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911300 Qt Quick简明教程 文章：30篇 阅读：192477 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35167 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022) 漫谈程序员系列：看看你离优秀有多远 (25604) 月薪3万的程序员都避开了哪些坑 (23708) 评论排行 漫谈程序员系列：一个老程序员的2014年终总结 (137) 漫谈程序员系列：一张图道尽程序员的出路 (84) 月薪3万的程序员都避开了哪些坑 (83) 程序员保值的4个秘密 (79) 漫谈程序员系列：咦，你也在混日子啊 (75) 漫谈程序员系列：看看你离优秀有多远 (74) 漫谈程序员系列：怎样成为技术达人 (74) 程序员跳槽神级攻略 (64) 大龄程序员的未来在何方 (60) 漫谈程序员系列：请区别对待女程序员 (59)

Recno:: 62
URL:: http://blog.csdn.net/haomengzhu/article/details/26687579

ParseText::
郝萌主的微信公众号上线了 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 郝萌主的微信公众号上线了 标签： cocos2d-x 手机网游 游戏开发 手机支付 微信 2014-05-23 11:45 1198人阅读 评论 (0) 收藏 举报 分类： 萌主的”人生“ （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 更多游戏源码，请点击我 如果文章对您有所帮助，欢迎关注郝萌主的微信公众号，支持郝萌主的独立游戏工作，更多信息就扫扫我吧^_^ + -------------------------------------------------------- End -------------------------------------------------------- 如果文章对您有所帮助，欢迎关注郝萌主的微信公众号，支持郝萌主的独立游戏工作，更多信息就扫扫我吧^_^ + --------------------------------------------------------------------------------------------------------------------- 更多游戏源码，请点击我 上一篇 手机支付宝扫一扫 给郝萌主捐赠 下一篇 刘强东：因为害怕找不着女朋友所以奋而创业 顶 0 踩 0 我的同类文章 萌主的”人生“ （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 262003次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 63
URL:: http://blog.csdn.net/kkdelta/article/details/42705285

ParseText::
如何打造成功的数据归档策略 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何打造成功的数据归档策略 标签： 数据归档 2015-01-14 09:22 567人阅读 评论 (0) 收藏 举报 分类： 系统运维 （14） 作者同类文章 X http://www.vsharing.com/k/storage/2014-2/695281.html 您将了解到：一个企业所需要的有效数据归档策略规划工具及流程，是根据公司法规、数据管理以及存储管理需求共同决定的。 下面是一则有关人们询问美国首任总统林肯究竟男人的腿该有多长的故事。在回忆录里我们看到：“只要能够着地面就好。”同样的道理，当我们面临归档数据需要存放多久这个问题的时候，相信答案也是类似的，“在需要的时候能取回来就好。”这段话的意思包含了有关数据归档程式的两个最核心的变量因素：时间以及可访问性。 时间，或者更为准确的说法应该叫保留期限，是决定是否可以满足企业潜在归档需求的核心。数据保留时间的要求可以说是多种多样，通常取决于不同的应用。比如说，所有的企业都需要管理财经数据，通常会被要求保留七年或以上。人力资源相关数据需要被保留三年，但不同企业也会有不同的要求。医疗数据通常需要在患者的一生均要保留再加上七年，与核动力相关的数据则需要保留七十年甚至更久。 有关究竟数据应该存放多久，有一个通用的答案：法规遵从。在大多数情况下，数据保留期限要求需要满足国家或者企业对数据保存时间的要求。一旦未满足这些要求将被法庭责罚。另外一个层面，超过了保留时间也会导致企业的法律声誉受到损害。 幸运或者不幸的是，大多数IT人员都没有学习法律的背景。因此，设立数据归档策略就是将这些数据归类然后设定一个保留周期。企业的法律顾问可以以此提供相关的参数作为参考。如果法律顾问无法就此作答，那么相应的数据负责人就需要提供相应建议，因为他们是最熟悉这些数据的人。有些时候，法律顾问和部门负责人不希望拍脑袋做决定。这种情况下，IT部门就不能猜。如果没有明确知道保留时间段，那么默认的就是永远。这对IT经理来说也是唯一的选择。 归档在过去七年时间里都是以一种随意的方式被广泛使用。归档可以代指将不常被访问的数据迁移到高容量低成本或者分层存储上，也可代指备份到磁带后再导出到其它地方。企业不仅有数据保护策略，例如快照、复制以及备份，此外企业还有数据归档策略。不仅需要满足如上提到的保留周期要求还需要满足良好的性价比要求。满足这些不同的需求难免会带来复杂性，因此一个好的归档解决方案需要能提供必要应用颗粒度下的自动化的操作，同时确保对IT运营的影响最小。 数据归档的好处 IT部门通常愿意将归档作为应用相关加强的理由。具体说来，其带来的好处包含如下的几个方面： · 节约成本。数据归档很大程度上都与降低成本的话题密不可分。并且作为每GB存储所耗费的成本相关。许多厂商会提供整体拥有成本这样的分析。所有的诸如此类的分析都将产生一个正面的结果，其前提是同意有关数据输入及对该模型的假设。 · 缩短备份窗口。即便是备份到磁盘上使用了数据压缩和重复数据删除技术，备份管理员往往会遇到备份窗口相关的压力，原因是数据增长实在是太快了，年增长率通常达到约50%甚至更多。因此备份完全没有改动的数据是没有必要的。归档可以从备份任务中剥离数十TB的数据甚至更多。 · 法规遵从。正如前文提到的那样，政府要求以及法律规定是履行数据归档策略的重要因素之一。即要满足这样的要求，同时又要降低成本并不是一件容易的事情。 · 知识保留。在当今大数据时代，企业越来越意识到海量数据分析的价值。意识到这点并非难事，但在如今的市场保持有竞争力的地位并非易事。 · 提升的性能。通过减少需要管理的数据量，或者将非活跃数据从活跃数据中剥离出来，企业可能会看到系统性能的微弱提升。 基于应用的归档产品则是为特定环境定制的产品，并且集如上优势于一身。SAP、email、Oracle应用都是很好的例子。基于应用的产品设计旨在以不损伤数据完整性的前提下了解应用本身的输入输出，这样可以实现数据的剥离。通用的归档设备通常无法胜任此任务。当应对整个系统的实施时也许会需要一系列基于特定应用的归档工具，仅靠单一的某个应用归档工具或者通用系统工具都无法全面的解决问题。 上一篇 onload事件和js的defer设置 下一篇 Windows共享文件夹的权限设定 顶 0 踩 0 我的同类文章 系统运维 （14） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180827次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 64
URL:: http://blog.csdn.net/kkdelta/rss/list

ParseText::


Recno:: 65
URL:: http://blog.csdn.net/leftfist/article/details/50167147

ParseText::
操作系统学习笔记：I/O输入系统 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 操作系统学习笔记：I/O输入系统 标签： 操作系统 io 2015-12-16 22:45 534人阅读 评论 (0) 收藏 举报 分类： 计算机基础 （30） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 计算机两大主要任务：IO操作和计算处理。许多情况下，主要是IO操作，计算处理只是附带的（而操作系统的两大任务是管理物理设备和为应用程序提供一个虚拟机器的抽象）。操作系统在IO方面的作用是管理IO操作和IO设备。 一、概述 I/O设备在功能与速度方面存在很大差异，所以需要采用多种方法来控制设备。这些方法形成IO子系统的核心，使得操作系统内核其他部分不必涉及复杂的IO设备管理。 IO设备技术呈现两个相矛盾的趋势：一方面，硬件与软件接口日益标准化，有助将设备集成到现有计算机和操作系统，另一方面，IO设备的多样性却又日益增长，甚至有的新旧版本区别很大，以至于很难集成。这种困难需要硬件和软件一起配合解决。操作系统内核设计成使用设备驱动程序模块的结构，而驱程为IO子系统提供了统一设备访问接口。 二、IO硬件 硬件自带有所谓控制器。处理器通过控制器来控制硬件。那么处理器如何向控制器发送命令和数据？简单而言，控制器有一些寄存器，处理器就是通过读写这些寄存器来与控制器通信，这又有2种方式，一是通过IO指令；二是通过内存映射：设备控制寄存器被映射到处理器的地址空间，处理器通过标准数据传输指令来执行IO请求。 具体来说是酱紫的： 1、轮询 主机不断读取寄存器的状态，以决定下一步动作。效率较差。 2、中断 控制器主动发出中断请求信号通知CPU。中断分优先级，多级中断。效率高。 3、直接内存访问 对于需要做大量传输的设备，例如磁盘，耗费CPU来观察寄存器太浪费，通常将任务下方给专用处理器，称之为直接内存访问(DMA)控制器。CPU向内存写入数据，然后就继续忙别的，DMA控制器接手进行数据传输，完了以后中断通知CPU。 三、IO应用接口 IO应用接口使得IO设备可以按统一的标准方式来对待。 具体来说，从不同的IO设备中抽象出通用类型，每个通用类型都可以通过一组标准函数（即接口）来访问。具体的差别被内核模块（设备驱动程序）所封装。设备驱动程序层的作用就是为内核IO子系统隐藏设备控制器之间的差异。 不利的因素是每种操作系统都有自己的接口标准，一个设备可能有多种驱动程序。 对应用程序而言，设备的许多差别都被操作系统所隐藏，设备可以分为几种类型：块与字符设备，网络设备，时钟与定时器等。 1、块与字符设备 比如磁盘，键盘，鼠标、打印机、声卡等。 2、网络设备 Socket接口 3、时钟与定时器 调度程序使用定时器（硬件）产生中断；操作系统也为用户进程提供了使用定时器的接口。 4、阻塞与非阻塞I/O “当应用程序发出一个阻塞系统调用时，应用程序的执行被挂起，从操作系统的运行队列移到等待队列。在系统调用完成后，应用程序就移回运行队列，并在某个时刻继续执行并收到系统调用返回的值”。IO设备的执行时间不可预计，但操作系统为应用程序接口使用阻塞调用。 就是说，应用程序访问IO设备时，操作系统会让应用程序等待，直至IO设备返回结果。当然，操作系统不可能也陪着干等，它是让应用程序在一旁等候，然后自己继续为另一些程序服务。就好比到麦当劳点餐，收银员（操作系统调度程序）在你（应用程序）点完餐后，吩咐后台（IO设备）准备食物，然后让你移到一旁等候（挂起），接着她说：下一位点餐。 有关 同步异步、阻塞非阻塞，现在我也还不是十分清楚，可参考拙作： http://blog.csdn.net/leftfist/article/details/41800463 四、IO内核子系统 内核提供了许多与IO有关的服务，如调度、缓冲、高速缓存、假脱机、设备预留及错误处理等。这些服务建立在硬件和设备驱动程序之上。IO子系统还负责保护自己免受错误进程和恶意用户的危害。 1、IO调度 就是确定一个合适的顺序来执行IO请求。调度能改善性能。 调度可由开发人员实现，也可以由操作系统分配。 IO子系统改善计算机效率的方法之一就是IO调度，另外一种方法是使用内存或磁盘上的存储空间技术，如缓冲、高速缓存、假脱机等。 2、缓冲 缓冲区是用来保存两个设备之间或设备和应用程序之间所传输数据的内存区域。 这样做有三个理由： 1）数据流生产者与消费者之间的速度存在差异 2）协调传输数据大小不一致的设备 3）支持应用程序IO的复制语义。所谓复制语义，就是处理前先对数据进行复制，保证处理过程中不受数据源发生变化所影响。 3、高速缓存 高速缓存是可以保留数据副本的高速存储器。高速缓存副本的访问要比原始数据访问更高效。高速缓存与缓冲是两个不同的功能。 4、假脱机与设备预留 假脱机就是一种排队机制。 5、错误处理 操作系统可以预防许多硬件和应用程序的错误，这样就不会因为小的机械失灵导致系统崩溃。 6、IO保护 为了防止用户执行非法IO，定义所有IO指令为特权指令。用户不能直接发出IO指令，只能通过操作系统来进行。 另外，所有内存映射和IO端口内存位置都受到内存保护系统的保护，以阻止用户访问。但内核不能简单地拒绝所有用户访问， 因为有些软件需要直接访问内存映射来提高性能，内核采取锁机制来应对。 7、内核数据结构 内核需要保存IO组件使用的状态信息，可以通过若干内核数据结构如文件打开表等来完成。事实上，内核使用许多类似的结构来跟踪网络连接，字符设备通信和其他IO活动等。 操作系统采用面向对象的技术，采用统一结构来封装不同设备之间的差异。 五、把IO操作转换成硬件操作 现代操作系统通过对请求与物理设备控制器之间的多级表查找，可以获得巨大的灵活性。应用程序与驱动程序之间的请求传递机制是通用的。因此，不必重新编译内核也能为计算机引入新设备和新驱动程序。事实上，有的操作系统能够按需加载设备驱动程序，系统启动之时，系统先检测硬件总线以确定有哪些设备，接着操作系统就马上或等首次IO请求时装入所需的驱程。 以下是一个典型的文件读请求周期： 1）一个进程对已打开文件的文件描述符调用阻塞read()系统调用 2）内核系统调用代码检查参数是否正确。对于输入，如果数据已在高速缓存中，那么将数据返回进程并完成IO请求 3）否则执行物理 IO请求。此时进程从运行队列移到设备的等待队列，并调度IO请求。最后IO子系统对设备驱动程序发出请求。根据操作系统的不同，该请求可能通过子程序调用或内核消息传递 4）设备驱动程序分配内核缓冲区空间以接收数据，并调度IO。最后设备驱动程序通过写入设备控制器寄存器来对设备控制器发送命令。 5）设备控制器控制设备硬件以执行数据传输 6）驱动程序可以轮询检测状态和数据，或动过DMA将数据传入到内核内存。假设为DMA，当传输完成后产生中断 7）中断处理程序通过中断向量表收到中断，保存必要的数据，并向内核设备驱动程序发送信号通知，然后从中断返回。 8）设备驱动程序接收到信号，确定IO请求是否完成，确定请求状态，并向内核IO子系统发送信号，通知请求已完成 9）内核将数据返回代码传递诶请求进程的地址空间，将进程从等待队列移到就绪队列，阻塞解除，进程继续执行 总结：进程请求 -》内核检查，返回或物理IO请求 - 向设备驱动请求 - 设备驱动程序调度IO - 设备控制器数据传输 - 通知设备驱动 - 内核 - 进程 六、流 流是设备驱动程序和用户级进程之间的全双工连接。 流由流开始 + 若干流模块 + 控制设备驱动程序结尾 组成。它们都有一对队列：读队列和写队列。队列之间使用消息传递进行数据传输。队列会缓冲消息，而且没有足够缓冲空间就不会接收消息，是为流控制。 如图。从流开始，消息不断复制一直到驱动程序结尾和设备。 使用流的好处是流可以提供一个框架，以便以模块化以及递增的方式编写设备驱动程序和网络协议。模块可以为不同的流以及不同的设备所使用。 七、性能 IO是影响系统性能的重要因素之一。 执行设备驱动程序代码，以及随之出现的进程阻塞和调度，上下文切换，这些都增加了CPU或者高速缓存的负担。虽然现代计算机每秒能处理数千个中断，但是中断处理仍然是相对费时的任务，IO暴露出内核中断机制的任何效率缺陷。 为了改善IO效率，可以采用一些原则： 1）减少上下文切换 2）减少设备和应用程序之间传递数据时在内存之间的数据复制次数 3）通过使用大传输，智能控制器，轮询，以减少中断频率 4）通过采用DMA智能控制器和通道来为主CPU承担简单数据复制，以增加并发 5）将处理原语移入硬件，允许控制器内的操作与CPU和总线内的操作并发 6）平衡CPU，内存子系统，总线和IO的性能 上一篇 如何清空文件上传控件里的选定文件（路径） 下一篇 条件编译符号与发布 顶 0 踩 0 我的同类文章 计算机基础 （30） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042246次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 66
URL:: http://blog.csdn.net/leftfist/rss/list

ParseText::


Recno:: 67
URL:: http://blog.csdn.net/microrain/rss/list

ParseText::


Recno:: 68
URL:: http://blog.csdn.net/nsrainbow/rss/list

ParseText::


Recno:: 69
URL:: http://blog.csdn.net/opengl_es/article/details/50390941

ParseText::
[ISUX译]iOS 9人机界面指南(一)：UI设计基础 - 太阳火神的美丽人生 - 师夷长技以制夷 - 博客频道 - CSDN.NET 太阳火神的美丽人生 - 师夷长技以制夷 敏捷开发及移动和物联设备、绿色教育的研究：iOS、Android、Html5、Arduino、pcDuino 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [ISUX译]iOS 9人机界面指南(一)：UI设计基础 2015-12-24 01:06 54人阅读 评论 (0) 收藏 举报 分类： <=即时总结=> （710） 作者同类文章 X [ISUX译]iOS 9人机界面指南(一)：UI设计基础 raina 2015.10.29 文章索引 1.1 为iOS而设计(Designing for iOS) 1.1.1 设计跟随内容 (Defer to Content) 1.1.2 保证清晰(Provide Clarity) 1.1.3 用深度层次来进行交流(Use Depth to Communicate) 1.2 iOS应用解析(iOS App Anatomy) 1.3 适应性和布局(Adaptivity and Layout) 1.3.1 为自适应而开发(Build In Adaptivity) 1.3.2 在不同环境提供良好体验(Provide a Great Experience in Each Environment) 1.3.3 使用布局来沟通(Use Layout to Communicate) 1.4 启动与停止(Starting and Stopping) 1.4.1 即时启动(Start Instantly) 1.4.2 时刻准备好停止(Always Be Prepared to Stop) 1.5 导航(Navigation) 1.6 模态情境(Modal Contexts) 1.7 交互性与反馈(Interactivity and Feedback) 1.7.1 可交互元素吸引用户点击(Interactive Elements Invite Touch) 1.7.2 用户所知道的标准手势(Users Know the Standard Gestures) 1.7.3 反馈有助于理解(Feedback Aids Understanding) 1.7.4 输入信息的方式要简单(Inputting Information Should Be Easy) 1.8 动画(Animation) 1.9 品牌推广(Branding) 1.10 颜色与字体(Color and Typography) 1.10.1 色彩有助于增进沟通(Color Enhances Communication) 1.10.2 优秀的排版提供清晰的传达(Great Typography Enables Clear Communication) 1.11 图标和图形(Icons and Graphics) 1.11.1 应用图标(The App Icon) 1.11.2 小图标(Small Icons) 1.11.3 图形(Graphics) 1.12 术语和措辞(Terminology and Wording) 1.13 与iOS的整合(Integrating with iOS) 1.13.1 正确使用标准UI元素(Use Standard UI Elements Correctly) 1.13.2 弱化文件和文档处理(Downplay File and Document Handing) 1.13.3 必要时提供可配置选项(Be Configurable If Necessary) 1.13.4 充分利用iOS技术(Take Advantage of iOS Technologies) 译者注： 本文译自苹果官方人机界面指南 iOS Human Interface Guidelines(2015年10 月21日)，由腾讯ISUX设计师翻译整理，非发文者一人之作。译文首发于ISUX博客，如在阅读过程中发现错误与疏漏之处，欢迎不吝指出。后续章节会陆续更新，敬请期待。 1.1 为iOS而设计(Designing for iOS) iOS 表现了以下三大设计原则： 遵从(Deference) ：UI应该有助于用户更好地理解内容并与之交互，并且不会分散用户对内容本身的注意力。 清晰(Clarity) ：各种尺寸的文字清晰易读；图标应该精确醒目，去除多余的修饰，突出重点，以功能驱动设计。 深度(Depth) ：视觉的层次感和生动的交互动画会赋予UI新的活力，有助于用户更好地理解并让用户在使用过程中感到愉悦。 无论你是重新设计现有的应用，还是重新开发一个新应用，请基于下列方法进行设计考虑： 首先，去除掉UI元素让应用的核心功能突显出来，并明确之间的相关性。 然后，使用iOS的主题来定义UI并进行用户体验设计。完善细节设计，以及适当合理的修饰。 最后，保证你设计的UI可以适配各种设备和各种操作模式，使得用户在不同场景下都可以享受你的应用。 在整个设计过程中，时刻准备着推翻先例，质疑各种假设，并以内容和功能视为重点来驱动每个细节的设计。 1.1.1 设计跟随内容 (Defer to Content) 尽管清新美观的UI和流畅的动态效果都是iOS体验的亮点，但内容始终是iOS的核心。 这里有一些方法可以确保你的设计既可以提升功能体验，又可以关注内容本身。 充分利用整个屏幕。 系统天气应用是这个方法的绝佳范例：用漂亮的全屏天气图片呈现现在的天气，直观地向用户传递了最重要的信息，同时也留出空间呈现了每个时段的天气数据。 重新考虑(尽量减少)拟物化设计的使用。 遮罩、渐变和阴影有时会让UI元素显得很厚重，导致影响到了对内容的关注。相反，应该以内容为核心，让用户界面成为内容的支撑。 用半透明UI元素样式来暗示背后的内容。 半透明的控件元素(比如控制中心)可以提供了上下文的使用场景，帮助用户看到更多可用的内容，并可以起到短暂的提示作用。在iOS中，半透明的控件元素只让它遮挡住的地方变得模糊——看上去像蒙着一层米纸——它并没有遮挡屏幕剩余的部分。 1.1.2 保证清晰(Provide Clarity) 确保你的应用始终是以内容为核心的另一个方法是保证清晰度。这里有几种方法可以让最重要的内容和功能清晰可见，且易于交互。 使用大量留白。 留白可以使重要的内容和功能更加醒目、更易理解。留白还可以传达一种平静和安宁的心理感受，它可以使一个应用看起来更加聚焦和高效。   让颜色简化UI。 使用一个主题色——比如Notes中用了黄色——高亮了重要区块的信息并巧妙地用样式暗示可交互性。同时，也让应用有了一致的视觉主题。内置的应用使用了同系列的系统颜色，这样一来，无论在深色或浅色背景上看起来都很干净，纯粹。   通过使用系统字体确保易读性。 iOS的系统字体(San Francisco)使用动态类型(Dynamic Type)来自动调整字间距和行间距，使文本在任何尺寸大小下都清晰易读。无论你是使用系统字体还是自定义字体，一定要采用动态类型，这样一来当用户选择不同字体尺寸时，你的应用才可以及时做出响应。 使用无边框的按钮。 默认情况下，所有的栏(bar)上的按钮都是无边框的。在内容区域，通过文案、颜色以及操作指引标题来表明该无边框按钮的可交互性。当它被激活时，按钮可以显示较窄的边框或浅色背景作为操作响应。 1.1.3 用深度层次来进行交流(Use Depth to Communicate) iOS经常在不同的视图层级上展现内容，用以表达层次结构和位置，这样可以帮助用户了解屏幕上对象之间的关系。 对于支持3D触控的设备，轻压(Peek)、重压(Pop)，以及快捷操作(Quick Actions)能让用户在不离开当前界面的情景下预览其他重要内容。 通过使用一个在主屏幕上方的半透明背景浮层，这样文件夹就能清楚地把内容和屏幕上其他内容区分开来。 如图所示，备忘录(Reminders)以不同的层级展示内容条目。用户在使用备忘录里的某个条目时，其他条目会被集中收起在屏幕下方。 日历具有较深的层级，当用户在翻阅年、月、日时，增强的转场动画效果给用户一种层级纵深感。在滚动年份视图时，用户可以即时看到今天的日期以及其他日历任务。 当用户选择了某个月份，年份视图会局部放大该月份，过渡到月份视图。今天的日期依然处于高亮状态，年份会显示在返回按钮处，这样用户可以清楚地知道他们在哪儿，他们从哪里进来以及如何返回。 类似的过渡动画也出现在用户选择某个日期时：月份视图从所选位置分开，将所在的周日期推向内容区顶端并显示以小时为单位的当天时间轴视图。这些交互动画增强了年、月、日之间的层级关系以及用户的感知。   1.2 iOS应用解析(iOS App Anatomy) 几乎所有的iOS应用都应用了UIKit framework中定义的组件。了解这些基本组件的名称、作用和功能可以帮助你在应用的界面设计过程中做出更好的决策。 UIKit提供的UI组件可以大致分为以下4种类型： 栏(Bars) ：包含了上下文信息来指引用户他们所在的位置，以及控件来帮助用户导航或执行操作。 内容视图(Content Views) ：包含了应用的具体内容以及某些操作行为，比如滚动、插入、删除、排序等等。 控件(Controls) ：用于执行操作或展示信息。 临时视图(Temporary Views) ：短暂出现给予用户重要信息或提供更多的选择和功能。 UIKit除了定义UI组件元素，还定义对象如何实现功能，例如手势识别、绘图、辅助功能和打印支持。 从编程的角度来看，UI组件元素其实是视图的子类，因为它们继承了UIView。视图能绘制屏幕内容并知道用户何时在其范围内触屏。视图的所有类型有：控件(比如按钮和滑块)、内容视图(比如集合视图和表格视图)，以及临时视图(如警告提示和动作菜单)。 要在应用中管理一组或者一系列的视图，通常需要使用视图控制器。它能协调视图的内容显示，实现与用户交互的功能并能在不同屏幕内容之间切换。比如，“设置”使用了一个导航控制器来展示其视图层级。 这里有一个关于视图与视图控制器如何结合并呈现iOS应用的UI的例子，如图。 尽管开发者认为真正起到作用的是视图和视图控制器，但一般用户感知到的iOS应用是不同屏幕内容的集合。从这个角度来看，在应用里，屏幕内容一般对应于一个独特的视觉状态或者模式。 注： 一个iOS应用程序包含一个窗口。但是，不同于计算机程序中的窗口，iOS窗口没有可见的部分并且不能在屏幕上被移动到另一个位置。很多iOS应用程序只有一个窗口；可以支持外部显示设备器的应用程序可以有不止一个窗口。 在 iOS Human Interface Guidelines 中，屏幕( screen) 这个词和大部分用户理解的一样。作为一个开发者，你也许需要阅读一下其他与 UIscreen 相关的章节，这样你可以更好的了解如何关联外部屏幕。   1.3 适应性和布局(Adaptivity and Layout) 1.3.1 为自适应而开发(Build In Adaptivity) 人们通常希望在他们所有的设备和多种情境中使用自己喜欢的应用程序，比如在不同的设备方向上和iPad的分屏情况下。尺寸类别( Size classes)和自动布局(Auto Layout)可以通过定义屏幕的布局、视图控制器和视图在环境变化时候应该怎么适应来帮助你实现这个愿望。(显示环境[display environment]的概念指的是设备的整个屏幕或者其中一部分，比如弹出框的区域或者iPad分屏视图中其中一侧的区域。) iOS在特征集合( trait collection) 的定义中包含了显示环境的概念，特征集合囊括了尺寸类别(size class)，显示比例(display scale)和用户界面语言(user interface idiom)。你可以使用一个特征集合让你的视图和视图控制器响应显示环境的变化。 iOS定义了两个尺寸类别(size class)，常规的(regular)和压缩的(compact)。常规尺寸与拓展的空间紧密相关，压缩尺寸与约束的空间相关。想要定义一种显示环境，你需要定义一种横屏尺寸类别，与一种竖屏尺寸类别。如你所想，一个iOS设备在竖屏模式可以使用一套类别，而横屏模式下可以使用另一套类别。 iOS能随着尺寸类别和显示环境变化而自动生成不同布局。举个例子，当垂直尺寸从压缩变为常规时，导航栏和工具栏会自动变高。 当你靠尺寸类别来驱动布局变化时，你的应用在任何显示环境时都能显示得很好。关于如何在Interface Builder中更好的使用尺寸类别，你可以查阅 Size Classes Design Help . 注： 在一种尺寸类别中，持续使用Auto Layout进行小的布局调整，比如拉伸或压缩内容。更多Auto Layout，参看  Auto Layout Guide . 下面的实例可以帮助你形象展现尺寸类型如何适配不同设备的显示环境。例如：iPad(包括iPad Pro)在长宽和横屏竖屏时都使用常规尺寸类型。换句话说，iPad显示环境一直处于垂直和水平的常规状态。 注：合格的iPad型号支持多任务，你的应用可能需要与其他应用共享同一个屏幕。确保使用Auto Layout，这样你可以在用户使用多任务功能时响应他，比如 分屏模式(Split View)和多任务分屏模式(Slide Over)。 除了使用Auto Layout，当你在iPad Pro上展示可读性的内容时，依靠UIView的  readableContentGuide 属性是非常重要的，这样可以拥有让读者舒服的边距。 iPhone的显示环境可根据不同的设备和不同的握持方向而改变。 竖屏时，iPhone6 Plus使用的是压缩宽度和常规高度类型。 横屏时，iPhone6 Plus使用的是常规宽度和压缩高度类型。 其他iPhone型号，包括iPhone6使用相同的尺寸类型设置。 竖屏时，iPhone 6，iPhone 5 和iPhone 4S使用的是压缩宽度和常规高度。 横屏时，这些设备在宽高上使用的都是压缩类。 1.3.2 在不同环境提供良好体验(Provide a Great Experience in Each Environment) 当你使用自适应来开发UI时，你可以保证UI跟随显示环境变化而适当地响应。遵照这些指南，你可以给用户良好的设备响应体验。 在所有环境下都保持对主体内容的专注。 这是最高优先级。人们使用应用时，浏览感兴趣的内容并与之发生互动。随着环境变化改变专注点会让用户感觉到迷失方向，让他们感觉对应用失去控制。 避免布局上不必要的变化。 在所有环境中保持一致的使用体验，能让人们在旋转设备或在不同设备上运行你的应用时维持稳定的使用模式。例如，如果你在水平的常规模式下使用了网格来显示图像，那么无需在压缩模式下使用列表来展示同样的内容，虽然你可能调整了网格的尺寸。 如果你的应用只在一个方向上运行，那么请直接一点。 人们希望在各种握持方式下都可以使用你的应用，能满足这个期待是最好的。但是，如果你的应用只在一个方向下运行，那么你应当注意： 避免出现提示人们旋转设备的相关UI元素。 让应用在支持的方向下清晰地运行，如果需要用户旋转设备，不要给UI添加不必要的混乱。 支持同一个方向上的变化。 例如，如果一个应用只能横屏运行，用户无论用左手或是右手握持时都能触及到home键。如果用户在使用应用时180度旋转设备，那最好应用内容也能及时响应并旋转180度。 如果你的应用将设备方向翻转视为用户输入(的一种指令)，那么就按照程序设定的方式来响应设备翻转。 举个例子，一个游戏让用户利用设备翻转来移动游戏中的部件，那么这个游戏应用本身(的UI)不能对翻转屏幕产生响应。在这种情况下，你必须关联两个需要变化的方向，并且允许人们在这两个方向切换直到他们开始(了解并执行)应用的主体任务。一旦人们开始执行主要任务，那就开始按程序设定的那样来响应设备的动作。 1.3.3 使用布局来沟通(Use Layout to Communicate) 布局包含的不仅仅是一个应用屏幕上的UI元素外观。你的布局，应该告诉用户什么是最重要的，他们的选择是什么，以及事物是如何关联起来的。 强调重要内容或功能，让用户容易集中注意在主要任务上。 有几个比较好的办法是在屏幕上半部分放置主要内容——遵循从左到右的习惯——从靠近左侧的屏幕开始： 使用不同的视觉化重量和平衡来告诉用户当前屏显元素的主次关系。 大型控件吸引眼球，比小的控件更容易在出现时被注意到。而且大型控件也更容易被用户点击，这让它们在应用中尤其有用——就像电话和时钟(上面的按钮)那样——能让用户经常在容易分心的环境下仍然保持正常使用。 使用对齐来让阅读更舒缓，让分组和层次之间更有秩序。 对齐让应用看起来整洁而有序，也让用户在滑动整屏内容时更容易定位和专注于重要信息。不同信息组的缩进与对齐让它们之间的关联更清晰，也让用户更容易找到某个控件。 确保用户在内容处于默认尺寸时便可清楚明白它的主要内容与含义。 例如，用户应当无需水平滚动就能看到重要的文本，或不用放大就可以看到主体图像。 准备好改变字体大小。 用户期望大多数应用都可以响应他们在iOS的设置中设定的字体大小。为了适应一些文本大小的变化，你也许需要调整布局；想要得到更多文本显示相关的信息，请查阅下文“颜色与字体”中相关的内容。 尽量避免UI上不一致的表现。 在一般情况下，有着相似功能的控件看起来也应该类似。用户常常认为他们看到的不同总有原因，而且他们倾向于花时间去尝试( 译者按：因此为了避免用户做无用的尝试，建议类似的功能外观都保持一样。) 给每个互动的元素充足的空间，从而让用户容易操作这些内容和控件。 常用的点按类控件的大小是44 x 44点(points)。   1.4 启动与停止(Starting and Stopping) 1.4.1 即时启动(Start Instantly) 我们通常认为用户不会花超过一两分钟去评价一款新应用。当你可以最大程度地利用这段极短的时间，即时呈现对用户有帮助的内容时，你就能够激发新用户的兴趣并给所有用户一种极棒的体验。 重要： 不要在安装过程结束后告诉用户需要重启设备。重启需要花费时间，同时也会让人觉得你的应用不可靠且很难使用。 如果你的应用有内存使用或其它问题，导致不重启就无法流畅运行，你必须声明这些问题。想要了解如何开发一款性能良好的应用，请参阅 Use Memory Efficiently . 尽可能避免使用闪屏或者其他启动体验方式。用户能够在启动应用后立即开始使用是最好不过的。 尽可能地，避免让用户做过多设置。 而应该如此： 聚焦在80%目标用户的需求上。 这样绝大部分用户就无需设置各种选项，因为你的应用已经默认处于他们想要的状态。如果有些功能仅有少部分用户想要，或者是大部分用户只需要使用一次，那就别管它了。 尽可能用其他方式获取更多的用户信息。 如果你能得到用户在内置应用或硬件设置中提供的信息，直接从系统中获取，不要让用户再次输入。 如果你必须要求用户设置用户信息，在你的应用中直接提示用户输入。 然后尽快保存这些设定(一般来说，保存到你的应用的设置模块中)。这样用户就无需强制跳出应用进入系统设置页面了。如果用户需要更改设置，他们可以在任何时候进入应用的设置模块进行修改。 尽可能让用户晚一点再登录。 最理想的状态是，用户在无需登录的情况下就能尽量多地浏览内容并使用部分功能。例如，App Store会在用户确定进行购买商品时，才要求用户进行登录。对于那些强制用户登录后才能进行一切有用操作的应用，用户往往会直接放弃。 如果你的应用必须先登录后使用，那么你应该在登录页面有一些简短的文字，来描述为什么必须先登录，以及这样做会给用户带来什么好处。 谨慎使用新手引导 (介绍应用的功能和如何进行操作) 。 在考虑新手引导之前，你应该努力地完善你的应用，尽可能使应用的功能直观和易于寻找。 其实，好的应用不需要新手引导 。如果你确实觉得需要新手引导，那么请参考如下的建议，设计一个简洁、有针对性并且不妨碍用户的新手引导。 只提供开始使用应用所必需的信息。 好的新手引导应该告诉用户第一步应该做什么，或者简短地演示大部分用户感兴趣的一些功能。如果在能够探索你的应用之前，给用户展示太多信息，让用户记住这些不是当前所必须的内容，会让用户觉得你的应用很难用。如果在某些特定场景下确实需要额外帮助，那么也应该只在用户处于这个场景之后再提供。 使用动画和可交互的方式来吸引用户，并让用户通过实际操作来学习如何使用。 对于文字内容的增加应该谨慎，且仅当增加文字对于提升体验有益时才这么做。不要指望用户会阅读大段的文字。例如，可以使用动画而不是文字来描述如何执行一个简单的任务。在引导用户了解较为复杂的任务时，可以通过一些引导浮层来简要说明每一个步骤用户需要做什么。尽可能避免展示应用截图，因为截图不可交互的，用户可能会混淆截图和应用的实际界面。 能够让用户很容易地取消或者跳过新手引导。 有些用户看完新手引导之后就不想再看，有些甚至根本就不想看新手引导。请记住用户的选择，不要强迫用户每次打开你的应用都要再选择一次。 不要太早要求用户去给你的应用评分。 过早要求用户进行评分可能会适得其反。如果你想获得有价值的反馈和评论，在邀请用户评论之前，请给他们一点时间来使用你的应用，并对你的应用形成印象。例如，你可以等用户访问了一定数量的页面或完成了一定数量的任务之后，再邀请他们进行评价。 一般建议按照屏幕默认的定向方式启动你的应用。 尽管如此，如果你的应用只有一种屏幕方向，那么就始终以这个方向启动，让用户在他们自己需要时再改变设备方向。例如，一个游戏或者媒体观看应用只在横屏模式下运行，那么就应该以横屏模式启动，即使设备当前处于竖屏模式。这样的话，如果用户在竖屏模式下打开应用，他们也知道应该把设备转成横屏来进行使用。 注：最好让横屏应用支持两种方向的横屏，即home键在左或在右方都支持。如果设备当前已经处于横向状态，那么就按照当前状态启动应用，除非你有充分的理由不这么做。其他情况时，可以考虑按home键处于右侧的方式启动应用。(想要了解更多关于支持不同设备方向的内容，请参阅前文中Adaptivity and Layout相关章节。) 提供一张与应用首页看上去一样的闪屏。 iOS会在启动应用时调用这张图，这样可以让用户觉得启动速度很快，同时，也可以让你的应用有足够的时间去加载内容。具体如何制作闪屏，请查阅Launch Files。 如果可能，不要让用户在初次启动应用时阅读免责声明或者确认用户协议。 你可以直接在App Store展示这些内容，使用户在下载前就有所了解。如果在某些情况下你必须展示这些内容，要确保它们与界面保持统一并在产品功能与用户体验之间达成平衡。 在应用重启后，需要恢复到用户退出使用时的状态，让他们可以从中断之处继续使用。 无需让用户记住是如何回到此状态的。了解更多关于保持和恢复应用状态的有效方式，请查阅Preserving Your App’s Visual Appearance Across Launches。 1.4.2 时刻准备好停止(Always Be Prepared to Stop) iOS 应用不存在关闭或退出选项。 当用户切换到另一个应用，回到主屏幕或者将设备调至睡眠模式的时候，其实就是停止了当前应用的使用。 当用户切换应用时，iOS的多任务系统会将其放置到后台并将新应用的UI替换上来。在这种情况下，你必须做到以下几点： 随时并尽快保存用户信息。 因为在后台的应用随时有可能被终止或退出。 当应用停止的时候保存尽可能多的当前状态的详细信息。 这样使用户可以在回到应用时能从中断之处继续使用。例如，在使用可滚动的数据列表时，退出后保存列表所在的位置。了解更多关于保持和恢复应用状态的有效方式，请查阅 Preserving Your App’s Visual Appearance Across Launches . 有些应用可能需要一直在后台运行。例如，用户可能希望能在使用一个应用的同时还能一直听歌，接着又想用另外一个应用来检查代办项或者玩游戏。关于如何正确处理多任务，请查阅 Multitasking . 不要强制让应用退出。 因为这样会让用户误以为是系统崩溃。如果有问题产生，需要告诉用户具体状况以及如何解决。以下有两个建议，取决于出现的问题有多严重，可以酌情使用： 如果应用中所有的功能当前都不可用，那么应该显示一些内容来解释当前的情形，并建议用户如何进行后续操作。 这部分内容给予了用户以反馈，使用户相信你的应用现在没问题。同时这也可以稳定用户情绪，让他们决定是否要采取纠正措施，继续使用应用，还是切换到另一个应用。 如果只有部分功能不可用，那么只要当用户使用这些功能时显示提示即可。 其他情况下，用户就应该能正常使用应用的其他功能。如果你决定使用警告框来进行提示，请确保只在用户尝试使用不可用的功能时再显示。   1.5 导航(Navigation) 除非导航设计不合理，不然用户应该明显察觉不到应用中的导航体验。导航设计应该能够支撑你应用结构和目的却又不分散用户注意力。 广义来说，导航主要有以下几种类型，每个导航都有其适应的应用结构： 分层 扁平 内容或体验驱动 在有层级结构的应用中，用户在每个层级中都要选择一项，直到到达目的层级。如果要切换到另一个目的层级，用户必须回退一些层级，或者直接回到初始层级再次选择。系统设置和邮箱应用在这方面是很好示范，可以参考他们。 译者注： 以上为视频截图，完整视频可 点击观看 。 在扁平信息架构的应用中，用户可以从首页目录直接切换到另一个，因为所有的分类都可以从主屏直接访问。音乐和App Store是两个使用扁平结构的好例子。 译者注： 以上为视频截图，完整视频可 点击观看 。 在内容或体验驱动的信息架构应用中，导航也会根据内容或体验来设计。例如，在阅读一本电子书时，用户会一页接一页的进行阅读，或者直接从目录中选中某一个指定的页码；同样，在游戏中导航也是体验的重要组成部分。 译者注： 以上为视频截图，完整视频可 点击观看 。 在某些情况下，在一个应用中结合多种导航类型会有很好的效果。例如，对于扁平信息结构中某一分类下的内容，用分层导航的方式来显示可能会更好。 应该让用户时刻清楚自己当前在应用中所处的位置，及如何前往目的页面。 无论使用哪种适合你的应用结构的导航，最重要的是用户访问内容的路径要有逻辑、可预期和易于追溯。 UIKit定义了一些标准的UI元素，以方便地构建分层或扁平导航，还有一些元素可以构建以内容为中心的导航，例如电子书或者媒体观看类应用。游戏或者其他体验驱动的应用通常需要一些自定义的元素和行为。 使用导航栏(Navigation Bar)帮助用户轻松访问分层内容。 导航栏的标题可以显示用户当前所处的层级，而后退按钮可以回到上一层级。想要了解更多内容，请查看 Navigation Bar . 使用标签栏(Tab Bar)显示同类型的内容或功能。 标签栏很适合于扁平信息结构，可以让用户在分类之间随意切换，而不用在意当前所处的位置。想要了解更多内容，请查看 Tab Bar . 在应用中，如果每屏显示的都是同类项或同类页，可以使用页面控件(Page Control)。 页面控件的优点是可以直观地告诉用户有多少个项目或页面，以及当前所处位置。想要了解更多内容，请查看 Page Control 。 一般来说，最好能给用户提供到达每一屏的唯一路径。 如果某屏内容用户需要在不同场景下查看，可以考虑使用临时视图，例如模态视图、动作菜单或警告框。想要了解更多，请查看 Modal View 、 Action Sheet 和 Alert 。 UIKit同时还提供了以下相关控件： 分段控件(Segmented Control )。分段控件让用户在一屏内就可以查到不同分类的内容，而不需要切换到其他屏幕。 工具栏(Toolbar )。尽管工具栏和导航栏或标签栏相似，但是工具栏不具导航作用。相反，工具栏为用户提供了可以控制当前屏幕内容的控件。 ( 译者注： 上文提到的Navigation Bar, Tab Bar, Page Control, Modal View, Action Sheet, Alert, Segmented Control和Toolbar均处在iOS Human Interface Guidelines的第4章 UI Elements部分，翻译将在后续更新中放出，烦请各位耐心等候。若有需要，亦可先参考先前已翻译的iOS7 UI Elements章节： 上 ， 下 。)   1.6 模态情境(Modal Contexts) 模态是一个承载某些连贯操作或内容的优缺点并存的模式。它可以给用户提供一种不脱离主任务的方式去完成一个任务或者获得信息，但是也会临时性的阻止用户对应用的其他部分进行交互操作。 理想情况下，用户可以与iOS 应用进行一种非线性的交互，所以，尽可能的减少你应用中的模态体验是最好的。通常情况，仅在以下情境可以考虑使用模态： 必须引起用户关注的时候 一个独立的任务需要完成或者很明确需要被放弃，为了避免在模棱两可的状态下遗漏用户信息的时候 保证模态任务简单、简短和高度聚焦。 你肯定不希望用户使用模态视图时像使用应用中的一个mini应用一样。如果子任务过于复杂，用户会在进入模态情境时忽略了主要任务。在设计一个涉及视觉层次的模态任务时特别要考虑这一点，因为用户有可能迷失并且忘记如何回到之前的操作中去。如果一个模态任务必须包含不同视图的子任务，确保给用户一个独立、清晰的导航路径，并避免迂回。更多关于模态试图的信息请参考 Modal View . 始终提供明显、安全的退出模态任务的途径。 确保用户在退出模态视图时可以预期操作的结果。 一个任务需要多层级的模态视图时， 确保用户理解点击非最高层级下的完成按钮的结果。点击一个低层级视图上的完成按钮是完成这个视图中任务的一部分，还是整个任务。因为有可能存在这种困惑，所以要尽可能避免在下级视图中添加完成按钮。 保证提醒对话框的内容都是必要且可操作的。 提醒对话框会打断用户的体验并且要点击才会消失，所以要让用户感到提醒信息是有用的，打断是有价值的。想要了解更多请参考 Alert . ( 译者注： 上文提到的Modal View与Alert均处在iOS Human Interface Guidelines的第4章 UI Elements部分，翻译将在后续更新中放出，烦请各位耐心等候。若有需要，亦可先参考先前已翻译的iOS7 UI Elements章节： 上 ， 下 。) 尊重用户关于接收通知的偏好设置。 用户会设置接收应用通知的形式，确保遵重用户的喜好设置，否则可能会触怒用户，导致其关闭应用中所有的推送通知。   1.7 交互性与反馈(Interactivity and Feedback) 1.7.1 可交互元素吸引用户点击(Interactive Elements Invite Touch) 为了暗示交互性，设计时会使用很多线索，包括点击的反馈、颜色、位置、上下文、表意明确的图标和标签等。并不需要过于修饰元素来向用户展示可交互性。 在支持3D Touch的设备上，当用户按压主屏上的图标时，背景会虚化以此来暗示可以进行更多功能的选择。 一个关键的颜色可以给用户提供很强的视觉指引，尤其是没有冗余的其它颜色时。为了对比，使用蓝色来标记可交互的元素，同时能提供统一的、易识别的视觉风格。 返回按钮使用多个线索指明其可交互并传达其功能:它出现在导航中，显示了一个指向后方的图标，使用了关键色，并且显示了上一级页面的标题。

Recno:: 70
URL:: http://blog.csdn.net/opengl_es/article/details/50391081

ParseText::
[ISUX译]iOS 9人机界面指南(三)：iOS 技术 - 太阳火神的美丽人生 - 师夷长技以制夷 - 博客频道 - CSDN.NET 太阳火神的美丽人生 - 师夷长技以制夷 敏捷开发及移动和物联设备、绿色教育的研究：iOS、Android、Html5、Arduino、pcDuino 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [ISUX译]iOS 9人机界面指南(三)：iOS 技术 2015-12-24 01:11 82人阅读 评论 (0) 收藏 举报 分类： <=即时总结=> （710） 作者同类文章 X 平台-iOS （255） 作者同类文章 X [ISUX译]iOS 9人机界面指南(三)：iOS 技术 UI规范 summer 2015-11-29 3247浏览 0评论 专为0基础小白量身打造的UI设计入门课程（ps，ai软件＋图标技巧），在线学习2个月包教会（公开课3位师傅），拜师费1500，随到随学，可插班。抢名额请加qq群：429369013咨询。 本文译自苹果官方人机界面指南 iOS Human Interface Guidelines ，由腾讯ISUX设计师翻译整理，非发文者一人之作。 文章索引 3.1 3D触摸(3D Touch) 3.1.1 轻压和重压(Peek and Pop) 3.1.2 主屏幕快捷操作(Home Screen Quick Actions) 3.2 Live Photos 3.3 钱包(Wallet) 3.4 苹果的移动支付平台(Apple Pay) 3.5 研究型应用程序(Research Apps) 3.6  应用扩展(App Extensions) 3.6.1 今天部件(Today Widgets) 3.6.2 分享和动作扩展(Share and Action Extensions) 3.6.3 图片编辑扩展(Photo Editing Extensions) 3.6.4 文档提供者扩展(Document Provider Extensions) 3.6.5 自定义输入法(Custom Keyboards) 3.7  HomeKit 3.8 多任务处理(Multitasking) 3.9 通知(Notifications) 3.10 社交媒体(Social Media) 3.11 iCloud     译者注：本文译自苹果官方人机界面指南 iOS Human Interface Guidelines (2015年10 月21日)，由腾讯ISUX设计师翻译整理，非发文者一人之作。译文首发于ISUX博客，如在阅读过程中发现错误与疏漏之处，欢迎不吝指出。后续章节会陆续更新，敬请期待。 3.1 3D触摸(3D Touch) 3D Touch 给 iOS 9 用户提供了一个新的交互维度。在所支持3DTouch的设备上，人们可以通过按压应用的图标去快速选择应用定制的操作。在应用内，人们可以使用多种按压操作去获取一个项目的预览，可以在独立的视图里打开一个项获取相关操作。(了解更多在你的代码中如何添加3D Touch支持，参阅  Adopting 3D Touch on iPhone  .) 3.1.1 轻压和重压(Peek and Pop) 轻压让用户可以在不离开他们当前环境的情况下预览一个项和执行相关操作。支持轻压的该项会在轻压后给出一个小矩形视图作为反馈。 在Safari中的一个轻压视图 在Safari轻压中的快速操作 轻压(Peek)： 当用户按压在一个支持轻压的项上时出现轻压，用户手指抬起后会消失 当用户在轻压视图下再更加重一点的按压称之为重压，重压可以查看该项的详细视图 当用户在轻压视图中向上滑动，可以提供与该项相关的快速操作 当用户轻轻按压在屏幕，支持轻压的这个项会展示一个你提供的矩形视图，示意可以进行下一步交互操作。那个视图应该够大，这样才能让用户手指不会混淆内容，这个视图应该足够细节，这样可以让用户选择是否去更加重一点按压从而转换到轻压视图。 重要 你在应用中始终如一提供轻压和重压的体验是至关重要的。如果你在有些地方支持轻压和重压，在某些地方不支持，用户有可能认为你的应用或者他们的设备出现了问题。 使用轻压去为该项提供一个生动的，内容丰富的预览。 当轻压能够给用户提供关于该项的足够信息，从而帮助他们扩展当前的任务，这样做是最好的。例如，在用户决定好是在Safari中打开信息中的网页还是分享这个链接给朋友之前，用户可以使用轻压预览信息中URL的页面。在表单视图中，轻压可以给用户提供一个行项的详细内容。 为每个轻压提供重压。 虽然一个轻压可以提供给用户所需要的大部分信息，但是你应该可以让用户过渡到重压，从而让用户放开当前正在进行的任务，转移专注力到该项上来。重压的内容应该与用户点击该项后的内容一致。 不要为同样一个项授予轻压和编辑菜单(Edit menu)两个功能。 当同一个项的这两个功能都启用的时会很混乱。(获取更多编辑菜单信息，参看  Edit Menu .) 在轻压操作里，避免展现类似按钮的界面元素。 如果用户抬起手指去点击像按钮的元素，轻压会消失。 如果可能，提供轻压快捷操作。  在轻压里，用户可以向上滑动去显示该项的相关操作。例如，Mail里的轻压快捷操作包括回复全部，转发和删除信息。并不是每个轻压都需要快捷操作，但是如果你已经为该项提供定制的点击并长按的操作，那么最好在轻压里提供相同的操作从而替代点击并长按操作。(注意在网页视图中，轻压快速操作是自动提供的。) 不要将轻压作为唯一开启该项的指定操作的方式。 不是每一个设备都支持轻压和重压，一些用户可能选择关掉3D Touch, 因此在你的应用中去寻找其他方式实现轻压的功能是非常重要的。当你的应用在较旧的设备上运行时，可以把轻压的快捷操作映射到一个视图里，让用户通过点击并长按获得。 3.1.2 主屏幕快捷操作(Home Screen Quick Actions) 主屏幕快捷操作可以在主屏幕给用户呈现方便的、有用的、应用特定的操作。 Camara的主屏幕快捷操作 Mail的主屏幕快捷操作 主屏幕快捷操作： 当用户在主屏幕采用比点击且长按更重的按压，按压在应用图片上时，出现屏幕快捷操作 它会显示一个你提供的短标题，一个图标和可选的副标题 它不支持其他定制的内容   它可以随着你应用的更新，更新显示的信息 使用主屏幕快捷操作去开启引人注目的、高价值的任务。 例如，Maps可以让用户不需要打开Maps，通过在当前位置附近搜索就可以获得回家的方向。一个应用至少需要把一个有用的任务放在主屏幕快捷操作里；你可以提供最多四个快捷操作。 避免使用主屏幕快捷操作去减少应用里导航的内容。 如果用户访问你应用的重要区域非常困难和耗时，那么首先去修改你的应用的导航，这样做是可以让所有用户都获益的。接着，可以去为有用的深层次链接提供主屏幕快捷操作，从而开启这些有用的、创造性的任务。 不要把主屏幕快捷操作作为通知用户的一种方式。 iOS用户期望以其他方式接收应用中的信息(更多信息参看  Notifications )。 为主屏快捷操作提供一个简洁的标题(可有副标题)和一个模板的图标。 标题应该直接传达这个操作的结果；例如，“回家的方向”，“新建联系人”，和“新建信息”。你也可以提供一个副标题给用户更多上下文信息。例如，Mail使用一个副标题在主屏快捷操作的重要位置去告诉用户有未读信息。 不要把你的应用名字或者无关的信息放在标题和副标题里，同时要考虑到使用本地化的用语。 保持标题的简洁不会被切断从而帮助用户快速理解操作是非常重要的。如果你提供的副标题一行显示不全，系统会截断；如果你没有副标题，系统会把一行展示不完全的长标题以两行展现。 你可以从很多系统提供的模板图标中选择图标，你也可以创作定制的模板图标。更多关于图标尺寸、内边距和定位的详细引导信息，可以下载主屏快速操图标模板  https://developer.apple.com/design/downloads/Quick-Action-Guides.zip。更多关于设计模板图标的信息，参看 Template Icons 。 系统会自动安排图标在快速操作列表中的位置是在左侧或者在右侧，这依赖于你的应用的图标在用户主屏幕的位置。(摒除图标在列表中的位置，在自左向右的语言中文字总是左对齐。)这里有主屏快捷操作的多种展现方式的例子。 3.2 Live PhotosLive Photos 让用户在丰富的声音和动作环境下，捕捉和再现他们喜爱的回忆。从iOS 9开始，相机(Camera)应用可以捕捉附加的内容(拍照之前和结束后的声音和额外的画面)为传统的、静止的图片增加生活气息。 在iOS9.1及之后的版本中，你的应用可以让用户享受和分享Live Photos。这个指引可以帮助你给用户提供更好的体验。 在不支持Live Photo的环境中，把Live Photo像传统照片一样展示。 不要在支持Live Photos的环境中，自定一种与Live Photo相似的体验。 不要分开展现Live Photo的附加画面和声音。 要让用户在不同的应用中体验Live Photos时，有一致的视觉呈现和交互方式。把Live Photo拆分开展现是一个很坏的体验。 确保用户可以区分Live Photo 和传统静止图片。 在用户分享照片时，帮助他们做好区分是特别重要的。最好在用户查看一个LivePhoto的时候，展现一点移动作为提示。万一这个提示没有起到作用，你可以在LivePhoto上展示一个系统提供的标记。LivePhoto不要展现一个像视频里回放按钮的界面元素。 注意 上图这种情况，不支持像照片应用里全屏浏览滑动切换照片时的显示的 把用户所做的调整应用到Live Photo的所有帧中。 如果你的应用可以让用户为照片添加滤镜或者调整，应确保它可以作用于整个LivePhoto中。如果你不支持调整用户想分享的 LivePhoto的所有内容，要让他们知道可以以传统照片的方式分享。  让用户在决定分享前 ，可以预览这个Live Photo的所有内容。如果你的应用UI可以让用户选择照片分享，要为他们提供一个把Live Photo作为传统照片分享的方式。 如果你使用系统提供的标记，应该把它放在每个LivePhoto上同样的位置。标记可以放在一个不会影响用户查看照片的角落。确保在你的应用中采用一致的方式添加标记，这样可以让用户依靠它去识别LivePhoto。iOS有两种方式提供标记： 覆盖。这种覆盖的方式包含一个阴影，适合覆盖在照片上 纯色。这种纯色的方式(无阴影)可以被用来创建一个可调色的图片模板 iOS也提供了很多纯色标记，其中，图片上一个删除线代表现在的LivePhoto被当做是一个传统的照片 在用户下载一个Live Photo的时候给他们一个好的体验。 尤其重要的是，用户需要知道他们正在下载的是一个LivePhoto，他们需要知道什么时候可以播放它。如果你为一个Live Photo展示一个未播放的进度指示器，确保这个指示器与你的应用中其他的下载体验一致。 3.3 钱包(Wallet) Wallet应用是帮助用户查看和管理各种数字化票券的，他们是一些物理个体的数字展现，例如登机牌、优惠券、会员卡、奖励卡和各种票。Wallet也可以让人们添加他们的信用卡、借记卡和储值卡结合Apple Pay使用。你可以在应用中创建一个票券，分发给用户，并且在有更改时进行更新。 使用PassKit框架可以方便地用自定义内容来收集一个票券和使用户票券库中的票券。(想要学习Passbook技术的核心概念和PassKit接口的使用方法，请参考 Passbook Programming Guide 。)以下几点可以帮助你创建一个用户乐意保留并使用的票券。 设计一个在各个设备上呈现很好票券。当你选择一个票券的样式——比如登机牌，优惠券，票据，奖励卡或者通用的票券——你会获得一个特别的布局和一系列区域去处理(更加详细关于不同票券的样式，参看 Pass Style Sets the Overall Visual Appearance )。这个系统在各个设备上合理展示你的票券，所以正确使用票券的区域是非常重要的。例如，在Apple Watch上，条状图(strip)和缩略图(thumbnail)图片是不显示的，所以你不希望把基本的信息放到这些元素里。更多Apple Watch票券的布局，参看 Designing Passes for Apple Watch . 使用合适的票券区域展现文本。在你的票券中使用允许VoiceOver的用户获取票券中的所有信息的区域，保持你的票券外观的一致性。避免将文本嵌入图片或使用自定义的字体也是一个很好的方法，因为不是所有的图标会展示到所有的设备上，这样对用户来说阅读这样的文字会有困难。 避免使用识别一个设备的语言。 你不能预料到哪些用户将会查看你的票据的设备，因此你不想使用可能在一个特别设备上不起作用的语言。比如，文字告诉用户“滑动去查看”内容，当这个发生在Apple Watch上将会不起作用。 尽可能，不要只是简单复制已有的物理票券。 Wallet 已经建立了有美感的设计，票券也都配合这种设计以看起来更好。所以不要只是复制物理票券的外观，抓住这次机会设计一个符合Wallet 组成和功能的干净简洁的票券样式。 对放在票券正面的信息精挑细选。 用户期望扫一眼票券就能快速获得他们需要的信息，所以票券正面的信息应该是整洁且易读的。如果有用户可能会需要的额外信息，将它们放到票券的背面要比挤在正面好得多。注意，Apple Watch上的票券没有背面。 通常情况下，避免使用纯白色背景。 通常，一个好看的票券应该使用鲜艳的纯色背景或者使用强烈的，充满活力的图片作为背景。当然，在设计背景时还要确保内容的可读性。 在商标文本区域显示你的公司名称。 所有票券的商标文本区域的文字都使用了统一的字体。为了避免和其他票券发生冲突，还是建议您在商标文本区域输入文字，不要使用自定义字体。 使用白色的公司商标。 商标图片放置在票券左上角公司名称的旁边。最好提供一个白色的，单色的，不包含文字的商标。如果你想要增强商标的效果，又想要与文字风格匹配的话，可以增加一个在y轴方向上有1像素偏移，有1像素模糊和透明度为35%的黑色阴影效果。 如果可以的话，使用矩形的条形码。 类似于PDF417这样的长方形条形码比正方形二维码更适合票券的布局。如下右图所示，正方形的二维码会使两边有空白区域并且会在垂直方向上使上下方内容变得拥挤。 为性能去优化图片。 因为用户通常会通过电子邮件或者Safari接收票券，所以让下载的越快越好是非常重要的。为了提高用户体验，使用能满足视觉效果的最小的图片文件。 在合适的时候更新票券以增强其效用。 即使一个票券代表的是一个并不会改变的物理实体，数字的票券也可以通过映射真实世界的一些事件来提供更好的用户体验。例如，当某个航班延误时你可以更新登机牌上的信息，这样用户就能够通过查看电子登机牌来获得当前的信息。 3.4 苹果的移动支付平台(Apple Pay) Apple Pay是苹果公司面向iOS移动设备推出的一种简单、安全、个人的移动支付方式。当用户在购买实体商品和服务时时，可以使用Apple Pay快速、安全地提供个人联系方式、收货地址以及付款信息。 通过用Apple Pay支付，用户无需每次购物都要创建账号或填一遍个人信息。Apple Pay显著加快了支付流程，有助于消除前期的各种信息登记，进而为用户的“无障碍”选购过程提供更好的体验。欲了解更多信息，请参阅  Apple Pay Programming Guide . Apple Pay的用户界面非常清晰、简洁高效、低调。它包含三个界面元素，各出现在不同的上下文情境中。 按钮。 Apple Pay的按钮用来告诉用户，他们可以在当前的情境下(比如商品页面)完成购买。当用户点击了Apple Pay的按钮，立即显示支付上拉菜单(见下文) 开始帮助用户完成支付流程。用户通过“设置Apple Pay”的选项Apple Pay的相关银行卡信息绑定操作。通过调用PKPaymentButton API口可以找到这两个按钮(想要了解更多信息，请查阅 PKPaymentButton Class Reference )。有关使用Apple Pay支付按钮的更多详情，请参阅 Identity Guidelines . Apple Pay支付标识。 当用户需要在授权支付之前选择付款方式并敲定其他信息时，他们期望看到Apple Pay的支付标识。Apple Pay的支付标识应该同其他付款方式以相同或类似的格式显示。 支付上拉菜单。 在用户提交订单以及完成相关支付之前，Apple Pay会显示一个包含了联系方式、收货地址以及与结账相关付款信息的支付上拉菜单。尽管用户依然可以在支付上拉菜单里做些微调，比如选择不同的送货方式，但他们不用做出重大改变或输入其他信息。当用户看到该支付上拉菜单，他们应该能够立即完成交易并授权付款。 对于可以使用Apple Pay付费的用户，Apple Pay的用户界面应当始终显示。 如果用户的移动设备支持Apple Pay，并且他们已经激活了相关可用的银行卡因此可以通过将Apple Pay设为默认支付方式来满足用户的期望。 如果用户无法使用Apple Pay服务，就不要显示任何Apple Pay的用户界面。 如果用户使用的设备不支持Apple Pay，仍强行将其作为一个支付方式选项，可能会对用户造成混淆。但是，如果用户使用的设备是支持Apple Pay，但没有绑定任何信用卡或借记卡，你可以在界面中显示“设置Apple Pay”的按钮。 当用户点击了Apple Pay的按钮，立即显示支付上拉菜单。 当用户决定使用Apple Pay来结账时，如果还要迫使用户经历额外步骤，会使支付流程显得复杂，增加不必要的矛盾，并可能会让用户感到沮丧受挫。当用户点击了Apple Pay按钮，不要显示其他警告或模态对话框视图。如果用户可以提供像打折或促销代码之类的信息，请在用户点击Apple Pay按钮之前找到一种方式来接收该信息。 Apple Pay按钮与其他可见的支付按钮应保持相同的尺寸大小或更大。 将Apple Pay按钮放置在醒目的位置，可以帮助用户轻松找到它。 使用Handoff功能帮助用户完成在Apple Watch上发起的购买。  Apple Watch佩戴者可以在商店完成支付，但他们无法完成由Apple Watch第三方应用程序调用的支付行为。当Apple Watch佩戴者发起了由第三方应用程序调用的支付行为，则显示一条消息告诉他们请在iPhone上完成支付。为了更好的用户体验，还可以使用Handoff功能深层链接到你的iOS应用程序上，并立即显示包含预设好的相应付款信息的支付上拉菜单。 有关使用Apple Pay支付按钮以及Apple Pay支付标识的更多信息指南，请参阅  Apple Pay Identity Guidelines . 3.4.1 自定义支付上拉菜单 (Customizing the Payment Sheet) 根据完成交易付款所需要了解的信息，以及所要传达给用户关于本次购物的信息，来自定义Apple Pay支付上拉菜单所要显示的内容。 支付上拉菜单仅显示对完成交易付款有必要的信息。 如果Apple Pay支付上拉菜单显示了些无关的信息，用户可能会感到困惑或焦虑。举个例子，如果商品是在线交付或通过电子方式完成，需要联系人的电子邮件地址是有意义的，而不是收货地址。在这种情况下，要求收货地址可能给用户产生会有什么东西将意外被派件到家中或公司的错觉，或许还可能导致他们对个人隐私被访问产生不必要的担忧。 支付上拉菜单允许用户可以选择更换送件或取件方式。 用户可以从你在支付上拉菜单中设定的几种交付方式中随意选择一种。通过用文本标签控件、报价以及可选的第二行预计到达日期，来具体描述一种收货方式。另外，你还可以设定交付方式为“派件”或“取件”，让用户指定一个可接收快递送货上门或需要运输服务取件的位置。 使用并排项来描述周期性付款和一些购买费用的小计。  并排项包含了一个标签文本和花费数值。并排项被用来： 表明用户授权一个定期付款项目，比如“每月订阅 $19.99” 告知用户关于额外费用，比如“礼品包装 $5.00”和“税费 $4.53” 显示优惠券或折扣信息带来的减价，比如“周五特价 -$2.00”  描述某个项目需要按实际计费，比如运输服务“时间&距离 …” 不要用并排项来显示所要购买的商品的构成清单。 创建并排项标签时，尽可能显示在同一行。 并排项标签应该具体、容易理解。如果行条目标签字符数过长，那么很难让你的用户一看就懂。 商户名称需要紧紧跟随在同一行的“Pay”字符后面作为一个整体。 确保所使用的商户名称以及相应的开销支出，必须与用户检查自己的信用卡或银行对账单时的数据保持一致。这一点很重要，因为它有助于用户确信他们的开销支出是无误的。如果你的应用程序只是作为中间媒介，而不是最终的商户支付，请明确向用户表明这个具体说明“付款给 最终的商户名称(通过 你的应用程序名称)。 如果总价花费在支付授权时还不明确，请向用户传达有可能会有额外费用的信息。 举个例子，一次汽车旅程从支付授权时刻起到驶向最终目的地，它的开销报价可能会受行车距离或时间的影响变化。或者，一个客户可能想要给点小费在商品已派件之后。对于这样的情况，在支付上拉菜单中给予一个非常明确的解释说明是很有必要的。当你使用一个并排项来配置最终总价的更新信息时，总价金额会自动显示为“总价待定”。另外，如果你是预授权支付一个具体金额的订单，确保支付上拉菜单准确地反映了这一信息。 3.4.2 简化结账流程(Streamlining the Checkout Process) Apple Pay使得购物变得快速、简单，对此人们会欣然接受的。更少的步骤和更少的需要用户手动输入的信息，使得整个结账流程更好。 始终使用Apple Pay的最新数据信息。 假设用户一直保持Apple Pay个人信息的完整性和时刻更新，那么不要依赖于任何先前收集的信息。即使你以前已收集过用户的联系方式、交付方式和支付信息，也要在结账时获取来自Apple Pay的最新信息。在结账环节，尽量避免用户输入本可以从Apple Pay获取的任何信息。 使用Apple Pay加快购买。 对于单个商品项目的购买，让用户只需通过点击商品页面上的Apple Pay支付按钮，即可显示支付上拉菜单并进行即时结算。购买单个商品时，无需采取额外的步骤，也无需将商品添加到购物车，用户喜欢在应用程序中体验到这种便利性。对于多个商品被添加到购物车中会使用相同的交付方式被送到相同地址的情况，一旦用户有意向支付时，会通过显示支付上拉菜单的快速结账流程来支持。 在显示支付上拉菜单前需提前收集好赎回代码或促销代码。 因为在Apple Pay支付上拉菜单中没有办法输入这些代码，请务必在显示支付上拉菜单之前收集好相关代码。 如果人们可以将购买的商品派送到不同地方，或以不同的速度发货，请在显示支付上拉菜单之前提前收集好该信息。 对于这种极端情况，你需要在显示支付上拉菜单之前得到发货信息，因为在支付上拉菜单中没有办法来指定多种交付方式和地址。一般情况下，在支付上拉菜单中务必收集到交付方式和地址信息。 显示订单确认页面或致谢页面。 在交易完成时，通过使用订单确认页，以这种直接的用户体验来显示关于商品能派送到的预计时间以及用户如何跟进订单状态的信息。 如果合适的话，请在你的订单确认页上提到Apple Pay。 尽管在你的确认页面上提到Apple Pay不是必要的，如果你愿意选，可以使用其中的一种格式： “Visa  1234(Apple Pay)”  “用Apple Pay已完成付款” 3.5 研究型应用程序(Research Apps) 研究型应用程序可以让苹果用户充分利用iOS移动设备的便利性，参与到各种研究性学习中来。通过调用开源代码ResearchKit，使用预设的几种界面视图和转场动画，可以很轻易为你的研究和参与者自定义一个美观易用的研究型应用程序，这些资源都可以在苹果的开源代码ResearchKit项目中调用。要想了解如何使用ResearchKit来为你的研究开发一个研究型应用程序，请查阅 researchkit.org . 重要 这些规范准则仅供参考之用，并不构成任何法律意见。对于与你的研究型应用程序发展以及任何法律适用的相关建议，你应该向律师咨询。 通常情况下，一个研究型应用程序是由ResearchKit定制化的界面视图以及应用程序本身具体设定的界面视图组成，可归纳为三种主要的体验： 参与者的就位培训(Onboarding) 研究性调查(Study-specific investigation)  管理条目信息(Management items) 设计你的研究型应用程序时务必要遵循以下每个部分的规范准则，将有助于你的用户参与者感到舒服和保持参与感。 3.5.1 参与者的就位培训(Onboarding) 就位培训的体验包含了一系列向潜在参与者介绍研究内容以及征询他们同意的环节。完成这些以后，参与者通常不会再重新访问这些就位培训的内容环节： 你应该按如图所示的这个顺序呈现就位培训的各个体验环节，也就是按介绍指引、适任、知情同意，以及授权访问数据。 创建一个具有号召性用语的介绍指引。 指引环节应该帮助人们了解更多关于你的研究以及告诉他们如何成为一名参与者。指引环节最好也能向那些现有的参与者提供快捷登录的入口以便继续正在进行的研究。 尽快确认招募的用户是否合格。 适任环节呈现在指引环节之后、知情同意环节之前(如果参与者并不适合该研究则没有必要让其查看知情同意环节)。请确认所呈现的适任资质要求对于你的研究来说是必要的。请使用简单、直白的语言描述这些要求，并让用户可以很容易就输入相关信息。 在得到参与者的同意之前，确保他们已充分了解你的研究内容 。ResearchKit有助于让知情同意流程显得简洁、友好，同时还允许将你同意的任何法律规定或由机构审查委员会和伦理审查委员会所设定的规定纳入其中。(如果你的应用程序涉及到进行人体生物学相关的研究，必须确保你的应用程序符合现有的苹果应用商店规范指南，并获得参与者的许可。)通常情况下，知情同意环节包含了： 说明这项研究是如何工作的 确保参与者了解研究内容以及各自的责任  获得参与者的许可 将冗长的同意书分解成易理解消化的小节。 每个小节可以只覆盖研究内容的一个方面，比如数据采集、数据应用、潜在好处、可能的风险、时间承诺、如何撤出等等。每个小节请使用简洁、直白的语言来说明一个高度概括的内容。如果有必要，提供一个查看详情的按钮便于参与者了解该小节更详细的解释。应该让他们在同意参与之前，就查看完全部知情同意内容。 通过一个小测验来测试参与者的理解情况是有意义的。 在获得参与者允许的情况下，你可以选择向每个参与者询问相同的问题。 你的研究必须获得参与者的同意，如果合适，还可以收集一些联系人信息。 参与者同意参与研究后，他们需要提供个人签名以及联系方式，最后会收到一个确认对话框。对于这些信息记录，大多数的研究型应用程序会向参与者电邮一份PDF格式的同意书。 参与者需要对这个确认自愿参与研究的告警对话框给予响应 参与者可以提供他们的个人签名在知情同意流程中 如果你需要访问参与者的设备或数据必须得到他们的许可。 必须解释清楚你的研究型应用程序为什么需要访问他们的位置信息、健康应用程序或其他数据，并且确保避免向参与者索要对你研究并非至关重要的数据。同样地，如果你需要向参与者发送通知提醒也要获得参与者的许可。 让参与者准备授权访问数据，比如健康应用程序的数据 让参与者自己选择他们愿意与你共享的数据 3.5.2 具体研究的调查(Study-Specific Investigation) 为了从参加者获得数据输入，你的研究可能会使用情况调查、活动任务，或两者的组合。根据你的研究的体系结构，参与者可能会在每个环节多次或仅需完成一次交互即可。 问卷调查的设计应该能让参与者专注参与其中。  ResearchKit可以很容易就呈现多种答案类型的调查问题，比如对错、多选、日期和时间、比例计算，以及开放式文本填写。当你使用ResearchKit的界面视图来创建一项调查，请遵循以下准则，来保证好的用户体验： 告诉参与者总共有多少道问题，以及完成调查预计需要花费的时间 每屏只呈现一道问题 显示给参与者当前调查的进度 调查应该尽可能简短。几个简短的调查往往好于一个冗长的调查 对于需要额外解释的问题，问题描述请用标准字体大小，然后解释文字用略小的字体大小  调查结束时要告知参与者 ResearchKit提供了许多用于调查环节的可自定义界面视图。这里有一些样例。 使得活动任务容易理解。 活动任务需要参与者参与到一次活动中来，比如对着麦克风语音、手指在屏幕上完成点击、行走散步，以及执行一次记忆力测试。请按照以下几点准则来鼓励参与者执行活动任务，并给与他们成功的绝佳机会： 请用简洁易懂的语言来描述如何执行本次任务。 如果任务必须在特定的时间或特定情况下进行，请务必明示。  确保参与者可以分辨出任务何时结束。 以下是ResearchKit所支持的两个活动任务样例。 3.5.3 管理条目信息(Management Items) ResearchKit提供了个人档案的界面视图来让参与者可以管理他们的个人信息。此外，创建一个可以激励用户并能让他们追踪他们在研究中的进度的界面视图是个不错的选择。在大多数情况下，参加者应该能够随时访问这两个模块。 使用个人档案来帮助参与者管理个人信息和与你研究相关的数据。 个人档案界面视图允许参与者在研究进程期间可以编辑相应数据，比如体重或睡眠习惯，并且可以提醒他们即将到来的活动任务。你同样可以在个人档案中给予参与者一种简单的方式离开该研究、查看知情同意书，以及查看该应用程序的隐私政策。 使用仪表盘概览视图来激励参与者，并呈现进度。 一个概览视图可以让你与参与者对信息一览无余并鼓励他们继续参与。如果你的研究内容合适的话，你可以使用该概览视图给予参与者丰富的反馈，比如每日进度、每周评估、具体活动的结果，以及同其他参与者的汇总结果进行对比。 3.6  应用扩展(App Extensions) 应用扩展可以延伸应用的使用范围。当用户使用其他应用时，应用扩展使得用户仍能使用你应用的核心功能。举个例子，当人们在Safari中浏览网页时，他们可以使用你的分享扩展来发送一张图片或一篇文章到你的社交网站上。或者当使用Photos(照片)应用时，人们可能会使用你的图片编辑扩展来为一张图片加上一个滤镜效果。(在这些场景中，Safari和照片应用承载用户使用扩展的场景，因而被称为宿主应用(host apps)。) 你需要提交包含应用扩展的完整iOS应用到App Store(包含扩展的应用被称为容器应用(containing app))。在你的容器应用中启用扩展之后，人们就可以在使用其他应用时，使用扩展来执行快速任务。例如，在邮件中浏览某个商品时，人们可以不用离开邮件应用就使用你的动作扩展来把商品添加到购物清单中。 表 22-1 列举了可以多个创建的iOS应用扩展类型。 以下指南适用于所有类型的应用扩展，针对特定类型应用扩展的指南请参阅后续章节。(如果想了解如何开发、调试和发布一个扩展，请参阅 App Extension Programming Guide .) 确保是单任务。 应用扩展并不是应用的精简版，它帮助用户在有全局目标的上下文中完成狭义范围内的有限任务。例如，动作扩展可以为用户提供一种不同的方式来查看当前内容。 保证用户的交互是有限和流畅的。 好的应用扩展应该只需几步点击就可以帮助人们完成任务，这样他们就能尽快回到之前的场景中。例如，分享扩展只需一次点击即可完成一张图片的分享。 将容器应用及其应用扩展的名称保持一致。 一个容器应用中如果有多个扩展，需要使用不同的名称，你需要确保用户能够理解你的扩展和应用之间的关系。人们会在很多不同的情况下遇到扩展，如果他们当下没有认出来，那么他们就未必会信任这些扩展。 大部分情况下，复用容器应用的图标。显示用户熟悉的图标是获得用户信任的另一种方式。请注意，对于动作扩展来说，你应该使用单色版本的容器应用图标(详见 分享和动作扩展 )。 重要：和设计图标和图形一样，不要重复使用iOS的图标和图片，不要为苹果的产品和设计再设计一套图片。 避免在扩展上显示模态视图。 很多扩展默认以模态视图来显示，所以应避免再叠加模态视图。尽管有时候用户可能会在扩展上遇到警告框，但是在设计扩展的流程时，应避免出现模态视图。 3.6.1 今天部件(Today Widgets) 人们会在通知中心的今天区域中查看今天部件(Today widgets)。因为人们会设置今天区域以显示他们最关注的信息，所以在此进行设计可以有效帮助你的部件在这些用户最重要的信息中占据一席之地。 设计与通知中心风格一致的外观。 当使用通知中心的默认边距和背景时，你的今天部件就会给用户以统一的体验。为获得最佳的结果，你应该重点关注你的内容而不是背景或者其他的，尤其应该避免绘制一片纯色背景。 注意：iOS会自动在自定义的部件内容上方显示应用的图标和标题(图标会显示在标题前面的空白处)。 将部件内容与标题对齐。 当你的部件内容与标题对齐时，人们就可以很简单地浏览今天视图中他们想要的部件。遵守今天视图中的边距规范，并将内容约束在如图的部件内容区内。   一般情况下，使用白色的系统字体来显示文本。 在通知中心默认背景下白色文字会看起来较好。对于二级文本，可以使用系统提供的vibrant外观样式(查看 notificationCenterVibrancyEffect 了解更多)。 提供通知中心式的体验。 人们访问通知中心来获取简要的更新或者执行一个非常简单的任务，所以今天部件最好只显示适量的信息和进行有限的互动，特别是： 避免用户在部件中需要滚动或纵向移动来查看全部的信息。部件可以通过纵向扩展来显示更多的信息，但若部件的高度超过通知中心的高度就不是一种好的体验了，因为这样会干扰其他部件的查看 避免使用横向扫动或拖曳，因为这会干扰在通知中心进行导航 尽可能使用户只需一步操作就完成任务或打开你的应用(注意，在今天部件中键盘是不可用的)   优化性能以便人们可以即刻获得有用的信息。可以考虑在本地缓存信息，以便当有更新时就可显示最近信息。人们只希望在今天视图中花很少的时间，如果部件使用内存不当，iOS就可能会终止它 在适当情况下，让人们点击你的今天部件来打开你的应用。 因为今天部件提供了专一的体验，所以就能有效引导人们去到你的应用以获取更多信息或功能。最好不要显示“打开应用”按钮，而是应该让你的整个今天部件都可被点击来打开应用。你也可以让用户点击部件中的UI对象，以打开你的应用并跳转到关于此UI对象的视图中。举个例子，日历部件显示了今天的事件，如果用户想要获得某个事件的更多信息，他们可以点击部件中的事件来打开日历应用进行查看。 注意：虽然从部件打开应用的方式对用户来说还不错，但继续在部件中提供有用且及时的信息依然是很重要的。人们可不一定会欣赏一个功能只是打开应用的今天部件。 如果可能，在今天部件中让人们知道他们需要登录来获取有用的信息。如果你的今天不见需要人们登录查看信息，展示一个信息去鼓励他们登录和解释什么样的内容将会被呈现。例如，如果你的时间部件即将到来的预约是用户登录后展现的，你可能需要让用户“登录我的应用去查看即将到来的预约”。 不要制作一个今天不见需要打开除了你自己应用外的应用。一个模拟iOS主屏的行为的时间部件不会为你的用户提供有用的功能。 3.6.2 分享和动作扩展(Share and Action Extensions) 人们通过点击应用中的动作按钮(Action button)来使用分享和动作扩展。在通过动作按钮显示的动作视图控制器(activity view controller)中，动作扩展被列在底部，分享扩展被列在动作扩展之上。人们可以使用更多（More）按钮来管理显示在动作视图控制器中的分享和动作扩展。 分享或动作扩展通常被认为是在当前用户场景下用来输入内容之用。例如，当在Safari中阅读一篇文章时，用户可能会点击动作按钮并使用一个分享扩展来发送这篇文章到分享网站上，也可能会使用一个动作扩展来查看这篇文章的翻译。 注意：在动作视图控制器中，iOS只会显示支持当前内容类型的动作扩展。例如，当用户当前内容是视频时，iOS就不会显示支持文本的动作扩展。 尽可能在分享扩展中使用系统提供的UI。 系统所提供的撰写视图控制器 (compose view controller) 提供给用户一种一致的体验，并能自动支持一些常用任务，例如预览和确认标准项，同步内容，查看动画，以及完成一封邮件。欲知更多关于使用系统提供的撰写视图控制器，请参见  App Extension Programming Guide 中的 Share . 如果上传需要一定时间，那就应考虑在分享扩展的容器应用中显示上传进度。 无论分享的文件有多大，人们都期待在点击扩展中的发送或分享按钮后，能立即返回他们之前的场景。你需要让进度状态随时更新，但是人们不想每次上传完毕后都收到通知，并且也无法自动重启扩展。在这种场景下，在容器应用中显示上传进度是一种解决方案，这样容器应用就可以在后台处理任务，并在遇到问题时发送通知。 动作扩展使用单色的应用图标。 ( 不同的是，分享扩展则应该使用其容器应用的彩色应用图标。) 要为动作扩展设计图标时，你可能需要从创建一个应用图标的模版开始着手。如有需要，可以专注图标�

Recno:: 71
URL:: http://blog.csdn.net/u010850027/article/details/48824919

ParseText::
IT女孩特不烦恼---九月实习总结 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 IT女孩特不烦恼---九月实习总结 标签： 博客 成长 实习 2015-10-12 00:01 1087人阅读 评论 (38) 收藏 举报 分类： --------【Android】 （13） 作者同类文章 X --------【实习之旅】 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。         对着岁月落笔，画出一场清风，那是最真的笑容        一溜烟的功夫，小编来实习Android已经四个月了，从刚开始的电商项目到现在的车段子项目，小编渐渐对这个曾经陌生的名字慢慢扭转变成熟悉的面孔，四个月的时间，让一个曾经没有接触过Android项目的傻丫头到现在可以歪歪斜斜的做完一个完整的功能，小编知道，小编长大了，虽然在项目中也还是会遇到各种各样不会的问题，但是小编都不会逃避，因为小编相信 所有的BUG都不是问题，无论小编此时正被线程困扰，还是为xml布局发愁，还是那时小编正孤独地走在编写handler的道路上，无论是飘着小雪的微亮清晨，还是被热浪炙烤的薄暮黄昏，小编会一一走过所有的调试，让自己在IT这条路上越走越远......                                          在你身边，为你设计        这个月，小编继续着车段子的项目，这个项目是一个关于浏览车的新闻，有视频信息和图文信息两种，总的来说，这个项目分为三个大模块，分别是首页、发现和我的，首页包括一些频道分类，各种各样的关于车的最新新闻，发现，推荐一些最新的关于车的新闻，还可以进行一些搜索操作，搜索出自己想要的某些关于车的信息，还有一个就是我的，我的里面包括一些常用的功能，修改密码、修改昵称、我的评论，我的收藏等一些基本功能。经过一个月的奋斗，小编的项目就要上线啦，开心，想着自己的做的软件，真正的有用户用到，得到用户的喜欢和肯定，赶脚棒棒哒`(*∩_∩*)′！         做项目的旅途不停地辗转，从一个旧的结束，到另一个新的开始，每个小小的项目码成了小编的IT之路，做项目的过程中，总会有些许的不甘心，为什么其他小伙伴一看就能看出的bug，小编需要捣鼓老半天，甚至想逃避bug，可是小编静下来仔细斟酌，这个痛苦各种百度谷歌的过程，又何尝不是另一种拥有？打开另一扇窗，小编看到的仍是明媚的曙光。项目经验是我们的载体，我们热爱她，她就会回馈给你，会赐予我们快乐和坚强。做项目的过程中，总会遇到各种各样的困难，也往往会打击小编一阵子，但是她就像一条河，只要小编想过，就一定有过得去的方法，有时候把某个功能想象的特别难实现，其实那都是一个软弱的借口，知识缺乏足够的勇气来面对而已。项目像一本书，需要慢慢去品，用心去体会，才解读出来其中的韵味，他不是单一的某行代码，与我们一路同行的还有责任。走过的路很漫长，小编在这个十月给自己一个交代，曾经的不知所措，曾经为线程苦恼，都在沉淀之后显得那么清澈，那一个个走过项目的故事，就像吟唱在时光里的歌，歌声唱出喜怒哀乐，唱出了悲欢离合，唱出了岁月的缄默。渐渐的懂得，在用户身边，为用户设计......                                      you are my sunshine         九月的结尾，写一些文字给英语，让心中的各种困惑都放逐到无影无踪，然后  ，对着岁月落笔，画出一场清风，那是最真的笑容，英语小情绪偶而也随风摇曳，如枝头的花事，一会儿不想坚持，一会儿又说看不到效果，熟不知坚持是奇迹的另一个名字，效果需要岁月慢慢沉底，英语的坚持，正在盛开，只那么几簇，就嫣然了整个冬季，但是问题也接踵而至，我想，正是因为这个，我们才会生长的更加美丽茁壮，英语学习的平平仄仄中，因为有了遇见的温暖，所有的日子都沾满了露水和花香，守一份心之约定，在岁月辗转中不惊不扰，用微笑将美好收藏，人们常说，所有的相遇都是久别重逢，如果是这样，我想，我会用最虔诚的韵律，将你我的遇见写成刻骨，若人生最美是初见，我会用深情的笔调，将初见的惊艳定格，我用温馨的词章，记下岁月的痕迹，对每一个生命片段，淡淡微笑，于红尘中默念，浅喜，深爱。                                  珍惜拥有的幸福         有段熟悉的话叫曾经有段真挚的感情在我面前，我没有好好去珍惜，等到失去后，才后悔莫及， 但是小编想说的是，只有失去了，当你再次拥有的时候，才会更加懂得该如何去珍惜，但是有时候有些事，错过了就是永远，她不像计算机可以ctrl+z恢复。今目标的使用从进入到提高班开始，不只一次又一次的说过她的重要性，那么今天的我，跟老师学习三年了，为什么还会出现这样那样的关于今目标的问题，说到底就是不够重视，没有发现她的好处，她的价值。         人们常说，失去后才珍惜，还有什么意义，可是我却想说，失去后珍惜，换种感情再次重新拥有的时候，这个时候的你，或许才更明白，当时拥有的心情，唯有再次拥有的时候，你的内心深处才会更加深刻的认识到，此时此刻，你该如何好好珍惜捧在你手心的幸福! 犯了错，要承担后果，今目标不合格，说到底，就是不重视，往深了说，就是态度问题，品质问题，而我们提高班的孩子都知道，品质这两字，在我们整个学习的过程中，占有多么重的地位，没错，她是主角，从拉开帷幕的时候，她就一直贯穿我们学习的始终，而我，从来都没有抬起头，好好的看过她一眼，我知道，她生气了，终于有一天，她爆发了，我们被“流放”了，很苦恼，不知道明天的路该往哪儿走，可是米老师常说，方法总比困难多，我们开始头脑风暴，各种风暴，洗礼自己。          有种有家不能回的感觉，我知道，我犯错了，必须为自己的错误承担后果，现在发现，学习是一件如此奢侈的事情，严格意义上来说，纪律不是用来约束我们的，而是用来帮助我们的，因为感觉到了疼，所以我们才会成长的更快，今目标在我心目中重新定义！ 以前在四楼的时候，不觉得有什么，也从来没有想过，如果有一天我不能在这里学习的时候，会是怎样的一种心情，但是当你失去了，不能再去里面学习了，只能远远的望他一眼的时候，心里有种说不出来的酸楚，我想，十期的孩子都有这种感觉吧，四楼失去了，或许有机会再次拥有，但是，有些事，错过了就是就是一辈子，有些人，一转身，就是一辈子，还记得，有句话这样说，你所挥霍的今天，是昨天死去的人渴望的明天，你所厌恶的现在，是未来的你，回不去的曾经......                                    IT之路，精彩仍在继续上演......          来公司实习，之前没有玩儿过Android，如果说玩儿过，没错，那就是Android手机`(*∩_∩*)′，刚接手项目的时候，总是感觉自己没有学过，这个怎么做的出来啊，实习过程中渐渐明白，很多事情，不是因为有了能力才去做，而是因为做了某件事，才获得了相应的能力，一个人最可贵的地方，不在于把自己熟悉的事情做好，而在于，这个东西我从来都没有接触过，但是我依然可以完成的漂亮，渐渐明白，知识不是学来的，是在实践中锻炼出来的，项目马上就要上线了，激动ing，从开始到现在，一路走来，磕磕绊绊，终于成型了，好开心，每次遇到一个新技术点，捣鼓真的需要勇气，捣鼓捣鼓他就出来了，捣鼓捣鼓不捣鼓永远出不来，所以捣鼓真的需要勇气来面对所有的技术点。相信所有的BUG都不是问题，无论小编此时正被下拉刷新困扰，还是为发现搜索发愁，还是那时我正孤独地走在编写从底部滑出按钮的道路上，无论是飘着小雪的微亮清晨，还是被热浪炙烤的薄暮黄昏，实习慢慢走过所有的调试，让小编在这条路上越走越远~~~~~~                                  上一篇 Android Demo---实现从底部弹出窗口 下一篇 发现----Android Demo 顶 2 踩 0 我的同类文章 --------【Android】 （13） --------【实习之旅】 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397330次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 72
URL:: http://blog.csdn.net/u010850027/article/details/50042261

ParseText::
Android Demo 下拉刷新+加载更多+滑动删除 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android Demo 下拉刷新+加载更多+滑动删除 2015-11-28 08:38 1125人阅读 评论 (30) 收藏 举报 分类： --------【Android】 （13） 作者同类文章 X --------【项目实战】 （41） 作者同类文章 X --------【实习之旅】 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        小伙伴们在逛淘宝或者是各种app上，都可以看到这样的功能，下拉刷新和加载更多以及滑动删除，刷新，指刷洗之后使之变新，比喻突破旧的而创造出新的，比如在手机上浏览新闻的时候，使用下拉刷新的功能，我们可以第一时间掌握最新消息，加载更多是什么nie，简单来说就是在网页上逛淘宝的时候，我们可以点击下一页来满足我们更多的需求，但是在手机端就不一样了，没有上下页，怎么办nie，方法总比困难多，细心的小伙伴可能会发现，在手机端中，有加载更多来满足我们的要求，其实加载更多也是分页的一种体现。小伙伴在使用手机版QQ的时候，消息界面会有很多的信息，如果你也像小编一样有强迫症，想把看完的消息进行删除，怎么办nie，QQ实现了向右滑动删除的功能，最近在小编的项目中，就遇到这样的功能下拉刷新和加载更多以及滑动删除，经过几天的捣鼓，当冬日的第二缕阳光照到小编身上的时候，小编终于把她捣鼓出来了，今天这篇博客，小编主要和小伙伴们分享下拉刷新和加载更多一级滑动删除，希望可以帮助到有需要的小伙伴，还请小伙伴们多多指教。         首先我们需要来编写xml里面的内容，我们命名为activity_item，具体代码如下所示：        <?xml version="1.0" encoding="utf-8"?> <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:id="@+id/ll_parent" android:layout_width="match_parent" android:layout_height="match_parent" android:background="@android:color/darker_gray" android:orientation="vertical" > <TextView android:id="@+id/tv_text" android:layout_width="match_parent" android:layout_height="match_parent" android:gravity="center" android:textSize="25sp" /> </LinearLayout>         接着，我们来编写list_item里面有关xml的代码，具体代码如下所示：        <?xml version="1.0" encoding="utf-8"?> <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:id="@+id/ll_parent" android:layout_width="match_parent" android:layout_height="match_parent" android:gravity="center" android:background="@android:color/darker_gray" tools:context=".MainActivity" > <TextView android:id="@+id/list_item_textview" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_centerVertical="true" android:textColor="#000" android:textSize="16sp" /> <FrameLayout android:layout_width="wrap_content" android:layout_height="match_parent" android:layout_centerVertical="true" android:layout_alignParentRight="true" android:padding="15dp" > <TextView android:id="@+id/tv_functions" android:layout_width="90dp" android:layout_height="50dp" android:layout_gravity="center" android:background="@drawable/btn_del_bg" android:gravity="center" android:textColor="@android:color/white" android:text="删除" /> <TextView android:id="@+id/tv_coating" android:layout_width="90dp" android:layout_height="50dp" android:background="@android:color/darker_gray" android:layout_gravity="center" android:visibility="gone" /> </FrameLayout> </RelativeLayout>         第三步，我们来编写main里面的xml文件，具体代码如下所示：          <?xml version="1.0" encoding="utf-8"?> <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="fill_parent" android:layout_height="fill_parent" android:background="#f0f0f0" android:orientation="vertical" > <TextView android:layout_width="fill_parent" android:layout_height="wrap_content" android:text="@string/hello" /> <me.maxwin.view.XListView android:id="@+id/xListView" android:layout_width="fill_parent" android:layout_height="fill_parent" android:cacheColorHint="#00000000" > </me.maxwin.view.XListView> </LinearLayout>         第四步，我们来编写xlistview_footer里面的xml文件，具体代码如下所示： <?xml version="1.0" encoding="utf-8"?> <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="fill_parent" android:layout_height="wrap_content" > <RelativeLayout android:id="@+id/xlistview_footer_content" android:layout_width="fill_parent" android:layout_height="wrap_content" android:padding="10dp" > <ProgressBar android:id="@+id/xlistview_footer_progressbar" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_centerInParent="true" android:visibility="invisible" /> <TextView android:id="@+id/xlistview_footer_hint_textview" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_centerInParent="true" android:text="@string/xlistview_footer_hint_normal" /> </RelativeLayout> </LinearLayout>         第五步，我们来编写xlistview_header里面的xml文件，具体代码如下所示： <?xml version="1.0" encoding="utf-8"?> <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="fill_parent" android:layout_height="wrap_content" android:gravity="bottom" > <RelativeLayout android:id="@+id/xlistview_header_content" android:layout_width="fill_parent" android:layout_height="60dp" > <LinearLayout android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_centerInParent="true" android:gravity="center" android:orientation="vertical" android:id="@+id/xlistview_header_text"> <TextView android:id="@+id/xlistview_header_hint_textview" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="@string/xlistview_header_hint_normal" /> <LinearLayout android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_marginTop="3dp" > <TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="@string/xlistview_header_last_time" android:textSize="12sp" /> <TextView android:id="@+id/xlistview_header_time" android:layout_width="wrap_content" android:layout_height="wrap_content" android:textSize="12sp" /> </LinearLayout> </LinearLayout> <ImageView android:id="@+id/xlistview_header_arrow" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_alignLeft="@id/xlistview_header_text" android:layout_centerVertical="true" android:layout_marginLeft="-35dp" android:src="@drawable/xlistview_arrow" /> <ProgressBar android:id="@+id/xlistview_header_progressbar" android:layout_width="30dp" android:layout_height="30dp" android:layout_alignLeft="@id/xlistview_header_text" android:layout_centerVertical="true" android:layout_marginLeft="-40dp" android:visibility="invisible" /> </RelativeLayout> </LinearLayout>          至此，关于我们的布局xml文件的代码都已经写完了，接着，我们开始编写java类里面的代码，首先，我们来编写ItemActivity里面的代码，具体代码如下所示： package me.maxwin; import android.app.Activity; import android.os.Bundle; import android.view.MotionEvent; import android.view.View; import android.view.View.OnTouchListener; import android.widget.TextView; public class ItemActivity extends Activity implements OnTouchListener { private float x, upx; protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_item); init(); } private void init() { findViewById(R.id.ll_parent).setOnTouchListener(this); ((TextView) findViewById(R.id.tv_text)).setText(getIntent().getStringExtra("item")); } public boolean onTouch(View v, MotionEvent event) { if (event.getAction() == MotionEvent.ACTION_DOWN) { x = event.getX(); } if (event.getAction() == MotionEvent.ACTION_UP) { upx = event.getX(); if (Math.abs(x - upx) > 20) { this.finish(); overridePendingTransition(0, R.anim.slide_out_to_right); } } return true; } }       接着，我们来编写适配器adapter里面的代码，具体代码如下所示： package me.maxwin; import java.util.ArrayList; import android.content.Context; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup; import android.widget.BaseAdapter; import android.widget.TextView; public class ItemAdapter extends BaseAdapter { private LayoutInflater inflater; private ArrayList<String> datas; public ItemAdapter(Context context) { inflater = LayoutInflater.from(context); } public void setData(ArrayList<String> datas) { this.datas = datas; } public int getCount() { return datas.size(); } public Object getItem(int position) { return datas.get(position); } public long getItemId(int position) { return position; } public View getView(final int position, View convertView, ViewGroup parent) { ViewHolder holder = null; if (convertView == null) { holder = new ViewHolder(); convertView = inflater.inflate(R.layout.list_item, null); holder.coating = (TextView) convertView.findViewById(R.id.tv_coating); holder.functions = (TextView) convertView.findViewById(R.id.tv_functions); holder.list_item_textview=(TextView) convertView.findViewById(R.id.list_item_textview); convertView.setTag(holder); } else { holder = (ViewHolder) convertView.getTag(); } holder.list_item_textview.setText(datas.get(position)); holder.coating.setVisibility(View.VISIBLE); holder.functions.setClickable(false); return convertView; } public final class ViewHolder { public TextView coating; public TextView functions; public TextView list_item_textview; } }       最后我们来编写XListViewActivity里面的代码，具体代码如下所示： package me.maxwin; import java.util.ArrayList; import me.maxwin.view.XListView; import me.maxwin.view.XListView.IXListViewListener; import me.maxwin.view.XListView.RemoveListener; import android.app.Activity; import android.content.Context; import android.content.Intent; import android.os.Bundle; import android.os.Handler; import android.view.View; import android.widget.AdapterView; import android.widget.AdapterView.OnItemClickListener; public class XListViewActivity extends Activity implements IXListViewListener ,RemoveListener,OnItemClickListener{ private XListView mListView; // private ArrayAdapter<String> mAdapter; private ItemAdapter adapter; // private Context context; private ArrayList<String> items = new ArrayList<String>(); private Handler mHandler; private int start = 0; private static int refreshCnt = 0; /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); geneItems(); init(); mHandler = new Handler(); } private void init() { // TODO Auto-generated method stub mListView = (XListView) findViewById(R.id.xListView); mListView.setPullLoadEnable(true); mListView.setRemoveListener(this); mListView.setOnItemClickListener(this); // mListView.setPullLoadEnable(false); // mListView.setPullRefreshEnable(false); mListView.setXListViewListener(this); adapter=new ItemAdapter(this); adapter.setData(items); mListView.setAdapter(adapter); } private void geneItems() { for (int i = 0; i != 20; ++i) { items.add("refresh cnt " + (++start)); } } private void onLoad() { mListView.stopRefresh(); mListView.stopLoadMore(); mListView.setRefreshTime("刚刚"); } @Override public void onRefresh() { mHandler.postDelayed(new Runnable() { @Override public void run() { start = ++refreshCnt; items.clear(); geneItems(); // mAdapter.notifyDataSetChanged(); adapter=new ItemAdapter(XListViewActivity.this); adapter.setData(items); mListView.setAdapter(adapter); onLoad(); } }, 2000); } @Override public void onLoadMore() { mHandler.postDelayed(new Runnable() { @Override public void run() { geneItems(); adapter.notifyDataSetChanged(); onLoad(); } }, 2000); } @Override public void removeItem(int position) { // TODO Auto-generated method stub mListView.isSlide = false; mListView.itemView.findViewById(R.id.tv_coating).setVisibility(View.VISIBLE); items.remove(position); adapter.notifyDataSetChanged(); } @Override public void onItemClick(AdapterView<?> parent, View view, int position, long id) { // TODO Auto-generated method stub Intent intent = new Intent(getApplicationContext(), ItemActivity.class); intent.putExtra("item", items.get(position)); startActivity(intent); overridePendingTransition(R.anim.slide_in_from_right, R.anim.remain_original_location); } }       至此，我们代码部分都已经编写完毕，由于小编的genymotion暂时不能运行，所以截图暂时看不了了，还请小伙伴们多多见谅哦`(*∩_∩*)′！       小编寄语 ： 该博客小编主要简单的介绍了下拉刷新，加载更多以及活动删除的相关知识， 还是那句话对于小编来说，既是挑战更是机遇，因为知识都是相通的，再者来说，在小编的程序人生中，留下最珍贵的记忆，虽然以后小编不一定从事安卓这个行业，代码世界里，很多种事，有的甜蜜，有的温馨，有的婉转成歌，有的绵延不息，在这些故事里，我们唯一的共通之处就是，某年，某月，某个波澜不惊的日子里，曾经很爱很爱你！爱你--这段接触Android日子里，安卓带给小编的种种的惊喜。 上一篇 深入浅出Tabhost+简单入门Demo 下一篇 如何使用excel画甘特图 顶 3 踩 0 我的同类文章 --------【Android】 （13） --------【项目实战】 （41） --------【实习之旅】 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397331次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 73
URL:: http://blog.csdn.net/u011225629/article/details/50187965

ParseText::
Python 元组 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 元组 2015-12-05 18:09 706人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python  元组 Python的元组与列表类似，不同之处在于元组的元素不能修改。 元组使用小括号，列表使用方括号。 元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。 如下实例： tup1 = ( 'physics' , 'chemistry' , 1997 , 2000 ); tup2 = ( 1 , 2 , 3 , 4 , 5 ); tup3 = "a" , "b" , "c" , "d" ; 创建空元组 tup1 = (); 元组中只包含一个元素时，需要在元素后面添加逗号 tup1 = ( 50 ,); 元组与字符串类似，下标索引从0开始，可以进行截取，组合等。 访问元组 元组可以使用下标索引来访问元组中的值，如下实例: #!/usr/bin/python tup1 = ( 'physics' , 'chemistry' , 1997 , 2000 ); tup2 = ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ); print "tup1[0]: " , tup1 [ 0 ] print "tup2[1:5]: " , tup2 [ 1 : 5 ] 以上实例输出结果： tup1 [ 0 ]: physics tup2 [ 1 : 5 ]: ( 2 , 3 , 4 , 5 ) 修改元组 元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例: #!/usr/bin/python # -*- coding: UTF-8 -*- tup1 = ( 12 , 34.56 ); tup2 = ( 'abc' , 'xyz' ); # 以下修改元组元素操作是非法的。 # tup1[0] = 100; # 创建一个新的元组 tup3 = tup1 + tup2 ; print tup3 ; 以上实例输出结果： ( 12 , 34.56 , 'abc' , 'xyz' ) 删除元组 元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例: #!/usr/bin/python tup = ( 'physics' , 'chemistry' , 1997 , 2000 ); print tup ; del tup ; print "After deleting tup : " print tup ; 以上实例元组被删除后，输出变量会有异常信息，输出如下所示： ( 'physics' , 'chemistry' , 1997 , 2000 ) After deleting tup : Traceback ( most recent call last ): File "test.py" , line 9 , in <module> print tup ; NameError : name 'tup' is not defined 元组运算符 与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。 Python 表达式 结果 描述 len((1, 2, 3)) 3 计算元素个数 (1, 2, 3) + (4, 5, 6) (1, 2, 3, 4, 5, 6) 连接 ['Hi!'] * 4 ['Hi!', 'Hi!', 'Hi!', 'Hi!'] 复制 3 in (1, 2, 3) True 元素是否存在 for x in (1, 2, 3): print x, 1 2 3 迭代 元组索引，截取 因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素，如下所示： 元组： L = ( 'spam' , 'Spam' , 'SPAM!' ) Python 表达式 结果 描述 L[2] 'SPAM!' 读取第三个元素 L[-2] 'Spam' 反向读取；读取倒数第二个元素 L[1:] ('Spam', 'SPAM!') 截取元素 无关闭分隔符 任意无符号的对象，以逗号隔开，默认为元组，如下实例： #!/usr/bin/python print 'abc' , - 4.24e93 , 18 + 6.6j , 'xyz' ; x , y = 1 , 2 ; print "Value of x , y : " , x , y ; 以上实例允许结果： abc - 4.24e+93 ( 18 + 6.6j ) xyz Value of x , y : 1 2 元组内置函数 Python元组包含了以下内置函数 序号 方法及描述 1 cmp(tuple1, tuple2) 比较两个元组元素。 2 len(tuple) 计算元组元素个数。 3 max(tuple) 返回元组中元素最大值。 4 min(tuple) 返回元组中元素最小值。 5 tuple(seq) 将列表转换为元组。 上一篇 Python 列表(Lists) 下一篇 Python 字典(Dictionary) 顶 0 踩 0 我的同类文章 Python （33）

Recno:: 74
URL:: http://blog.csdn.net/u011225629/article/details/50187973

ParseText::
Python 字典(Dictionary) - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 字典(Dictionary) 2015-12-05 18:10 721人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python  字典(Dictionary) 字典是另一种可变容器模型，且可存储任意类型对象，如其他容器模型。 字典由键和对应值成对组成。字典也被称作关联数组或哈希表。基本语法如下： dict = { 'Alice' : '2341' , 'Beth' : '9102' , 'Cecil' : '3258' } 也可如此创建字典： dict1 = { 'abc' : 456 }; dict2 = { 'abc' : 123 , 98.6 : 37 }; 每个键与值用冒号隔开（:），每对用逗号分割，整体放在花括号中（{}）。 键必须独一无二，但值则不必。 值可以取任何数据类型，但必须是不可变的，如字符串，数或元组。 访问字典里的值 把相应的键放入熟悉的方括弧，如下实例: #!/usr/bin/python dict = { 'Name' : 'Zara' , 'Age' : 7 , 'Class' : 'First' }; print "dict['Name']: " , dict [ 'Name' ]; print "dict['Age']: " , dict [ 'Age' ]; 以上实例输出结果： dict [ 'Name' ]: Zara dict [ 'Age' ]: 7 如果用字典里没有的键访问数据，会输出错误如下： #!/usr/bin/python dict = { 'Name' : 'Zara' , 'Age' : 7 , 'Class' : 'First' }; print "dict['Alice']: " , dict [ 'Alice' ]; 以上实例输出结果： dict [ 'Zara' ]: Traceback ( most recent call last ): File "test.py" , line 4 , in <module> print "dict['Alice']: " , dict [ 'Alice' ]; KeyError : 'Alice' 修改字典 向字典添加新内容的方法是增加新的键/值对，修改或删除已有键/值对如下实例: #!/usr/bin/python dict = { 'Name' : 'Zara' , 'Age' : 7 , 'Class' : 'First' }; dict [ 'Age' ] = 8 ; # update existing entry dict [ 'School' ] = "DPS School" ; # Add new entry print "dict['Age']: " , dict [ 'Age' ]; print "dict['School']: " , dict [ 'School' ]; 以上实例输出结果： dict [ 'Age' ]: 8 dict [ 'School' ]: DPS School 删除字典元素 能删单一的元素也能清空字典，清空只需一项操作。 显示删除一个字典用del命令，如下实例： #!/usr/bin/python # -*- coding: UTF-8 -*- dict = { 'Name' : 'Zara' , 'Age' : 7 , 'Class' : 'First' }; del dict [ 'Name' ]; # 删除键是'Name'的条目 dict . clear (); # 清空词典所有条目 del dict ; # 删除词典 print "dict['Age']: " , dict [ 'Age' ]; print "dict['School']: " , dict [ 'School' ]; 但这会引发一个异常，因为用del后字典不再存在： dict [ 'Age' ]: Traceback ( most recent call last ): File "test.py" , line 8 , in <module> print "dict['Age']: " , dict [ 'Age' ]; TypeError : 'type' object is unsubscriptable 注： del()方法后面也会讨论。 删除字典元素 字典键的特性 字典值可以没有限制地取任何python对象，既可以是标准的对象，也可以是用户定义的，但键不行。 两个重要的点需要记住： 1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住，如下实例： #!/usr/bin/python dict = { 'Name' : 'Zara' , 'Age' : 7 , 'Name' : 'Manni' }; print "dict['Name']: " , dict [ 'Name' ]; 以上实例输出结果： dict [ 'Name' ]: Manni 2）键必须不可变，所以可以用数，字符串或元组充当，所以用列表就不行，如下实例： #!/usr/bin/python dict = {[ 'Name' ]: 'Zara' , 'Age' : 7 }; print "dict['Name']: " , dict [ 'Name' ]; 以上实例输出结果： Traceback ( most recent call last ): File "test.py" , line 3 , in <module> dict = {[ 'Name' ]: 'Zara' , 'Age' : 7 }; TypeError : list objects are unhashable 字典内置函数&方法 Python字典包含了以下内置函数：

Recno:: 75
URL:: http://blog.csdn.net/u011225629/article/details/50187979

ParseText::
Python 日期和时间 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 日期和时间 2015-12-05 18:11 847人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python  日期和时间 Python程序能用很多方式处理日期和时间。转换日期格式是一个常见的例行琐事。Python有一个 time 和 calendar 模组可以帮忙。 什么是Tick？ 时间间隔是以秒为单位的浮点小数。 每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示。 Python附带的受欢迎的time模块下有很多函数可以转换常见日期格式。如函数time.time()用ticks计时单位返回从12:00am, January 1, 1970(epoch) 开始的记录的当前操作系统时间, 如下实例: #!/usr/bin/python import time ; # This is required to include time module. ticks = time . time () print "Number of ticks since 12:00am, January 1, 1970:" , ticks 以上实例输出结果： Number of ticks since 12 : 00am , January 1 , 1970 : 7186862.73399 Tick单位最适于做日期运算。但是1970年之前的日期就无法以此表示了。太遥远的日期也不行，UNIX和Windows只支持到2038年某日。 什么是时间元组？ 很多Python函数用一个元组装起来的9组数字处理时间: <td0到59< td="" style="color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', sans-serif;"> 序号 字段 值 0 4位数年 2008 1 月 1 到 12 2 日 1到31 3 小时 0到23 4 分钟 5 秒 0到61 (60或61 是闰秒) 6 一周的第几日 0到6 (0是周一) 7 一年的第几日 1到366 (儒略历) 8 夏令时 -1, 0, 1, -1是决定是否为夏令时的旗帜 上述也就是struct_time元组。这种结构具有如下属性： 序号 属性 值 0 tm_year 2008 1 tm_mon 1 到 12 2 tm_mday 1 到 31 3 tm_hour 0 到 23 4 tm_min 0 到 59 5 tm_sec 0 到 61 (60或61 是闰秒) 6 tm_wday 0到6 (0是周一) 7 tm_yday 1 到 366(儒略历) 8 tm_isdst -1, 0, 1, -1是决定是否为夏令时的旗帜 获取当前时间 从返回浮点数的时间辍方式向时间元组转换，只要将浮点数传递给如localtime之类的函数。 #!/usr/bin/python import time ; localtime = time . localtime ( time . time ()) print "Local current time :" , localtime 以上实例输出结果： Local current time : time . struct_time ( tm_year = 2013 , tm_mon = 7 , tm_mday = 17 , tm_hour = 21 , tm_min = 26 , tm_sec = 3 , tm_wday = 2 , tm_yday = 198 , tm_isdst = 0 ) 获取格式化的时间 你可以根据需求选取各种格式，但是最简单的获取可读的时间模式的函数是asctime(): #!/usr/bin/python import time ; localtime = time . asctime ( time . localtime ( time . time ()) ) print "Local current time :" , localtime 以上实例输出结果： Local current time : Tue Jan 13 10 : 17 : 09 2009 获取某月日历 Calendar模块有很广泛的方法用来处理年历和月历，例如打印某月的月历： #!/usr/bin/python import calendar cal = calendar . month ( 2008 , 1 ) print "Here is the calendar:" print cal ; 以上实例输出结果： Here is the calendar : January 2008 Mo Tu We Th Fr Sa Su 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 Time模块 Time模块包含了以下内置函数，既有时间处理相的，也有转换时间格式的： 序号 函数及描述 1 time.altzone 返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。 2 time.asctime([tupletime]) 接受时间元组并返回一个可读的形式为"Tue Dec 11 18:07:14 2008"（2008年12月11日 周二18时07分14秒）的24个字符的字符串。 3 time.clock( ) 用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。 4 time.ctime([secs]) 作用相当于asctime(localtime(secs))，未给参数相当于asctime() 5 time.gmtime([secs]) 接收时间辍（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0 6 time.localtime([secs]) 接收时间辍（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。 7 time.mktime(tupletime) 接受时间元组并返回时间辍（1970纪元后经过的浮点秒数）。 8 time.sleep(secs) 推迟调用线程的运行，secs指秒数。 9 time.strftime(fmt[,tupletime]) 接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。 10 time.strptime(str,fmt='%a %b %d %H:%M:%S %Y') 根据fmt的格式把一个时间字符串解析为时间元组。 11 time.time( ) 返回当前时间的时间戳（1970纪元后经过的浮点秒数）。 12 time.tzset() 根据环境变量TZ重新初始化时间相关设置。 Time模块包含了以下2个非常重要的属性： 序号 属性及描述 1 time.timezone 属性time.timezone是当地时区（未启动夏令时）距离格林威治的偏移秒数（>0，美洲;<=0大部分欧洲，亚洲，非洲）。 2 time.tzname 属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。

Recno:: 76
URL:: http://blog.csdn.net/u011225629/article/details/50187981

ParseText::
Python函数 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python函数 2015-12-05 18:12 701人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python函数 函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。 函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以自己创建函数，这被叫做用户自定义函数。 定义一个函数 你可以定义一个由自己想要功能的函数，以下是简单的规则： 函数代码块以def关键词开头，后接函数标识符名称和圆括号()。 任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数。 函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。 函数内容以冒号起始，并且缩进。 Return[expression]结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。 语法 def functionname ( parameters ): "函数_文档字符串" function_suite return [ expression ] 默认情况下，参数值和参数名称是按函数声明中定义的的顺序匹配起来的。 实例 以下为一个简单的Python函数，它将一个字符串作为传入参数，再打印到标准显示设备上。 def printme ( str ): "打印传入的字符串到标准显示设备上" print str return 函数调用 定义一个函数只给了函数一个名称，指定了函数里包含的参数，和代码块结构。 这个函数的基本结构完成以后，你可以通过另一个函数调用执行，也可以直接从Python提示符执行。 如下实例调用了printme（）函数： #!/usr/bin/python # -*- coding: UTF-8 -*- # 定义函数 def printme ( str ): "打印任何传入的字符串" print str ; return ; # 调用函数 printme ( "我要调用用户自定义函数!" ); printme ( "再次调用同一函数" ); 以上实例输出结果： 我要调用用户自定义函数! 再次调用同一函数 按值传递参数和按引用传递参数 所有参数（自变量）在Python里都是按引用传递。如果你在函数里修改了参数，那么在调用这个函数的函数里，原始的参数也被改变了。例如： #!/usr/bin/python # -*- coding: UTF-8 -*- # 可写函数说明 def changeme ( mylist ): "修改传入的列表" mylist . append ([ 1 , 2 , 3 , 4 ]); print "函数内取值: " , mylist return # 调用changeme函数 mylist = [ 10 , 20 , 30 ]; changeme ( mylist ); print "函数外取值: " , mylist 传入函数的和在末尾添加新内容的对象用的是同一个引用。故输出结果如下： 函数内取值: [ 10 , 20 , 30 , [ 1 , 2 , 3 , 4 ]] 函数外取值: [ 10 , 20 , 30 , [ 1 , 2 , 3 , 4 ]] 参数 以下是调用函数时可使用的正式参数类型： 必备参数 命名参数 缺省参数 不定长参数 必备参数 必备参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样。 调用printme()函数，你必须传入一个参数，不然会出现语法错误： #!/usr/bin/python # -*- coding: UTF-8 -*- #可写函数说明 def printme ( str ): "打印任何传入的字符串" print str ; return ; #调用printme函数 printme (); 以上实例输出结果： Traceback ( most recent call last ): File "test.py" , line 11 , in <module> printme (); TypeError : printme () takes exactly 1 argument ( 0 given ) 命名参数 命名参数和函数调用关系紧密，调用方用参数的命名确定传入的参数值。你可以跳过不传的参数或者乱序传参，因为Python解释器能够用参数名匹配参数值。用命名参数调用printme()函数： #!/usr/bin/python # -*- coding: UTF-8 -*- #可写函数说明 def printme ( str ): "打印任何传入的字符串" print str ; return ; #调用printme函数 printme ( str = "My string" ); 以上实例输出结果： My string 下例能将命名参数顺序不重要展示得更清楚： #!/usr/bin/python # -*- coding: UTF-8 -*- #可写函数说明 def printinfo ( name , age ): "打印任何传入的字符串" print "Name: " , name ; print "Age " , age ; return ; #调用printinfo函数 printinfo ( age = 50 , name = "miki" ); 以上实例输出结果： Name : miki Age 50 缺省参数 调用函数时，缺省参数的值如果没有传入，则被认为是默认值。下例会打印默认的age，如果age没有被传入： #!/usr/bin/python # -*- coding: UTF-8 -*- #可写函数说明 def printinfo ( name , age = 35 ): "打印任何传入的字符串" print "Name: " , name ; print "Age " , age ; return ; #调用printinfo函数 printinfo ( age = 50 , name = "miki" ); printinfo ( name = "miki" ); 以上实例输出结果： Name : miki Age 50 Name : miki Age 35 不定长参数 你可能需要一个函数能处理比当初声明时更多的参数。这些参数叫做不定长参数，和上述2种参数不同，声明时不会命名。基本语法如下： def functionname ([ formal_args ,] * var_args_tuple ): "函数_文档字符串" function_suite return [ expression ] 加了星号（*）的变量名会存放所有未命名的变量参数。选择不多传参数也可。如下实例： #!/usr/bin/python # -*- coding: UTF-8 -*- # 可写函数说明 def printinfo ( arg1 , * vartuple ): "打印任何传入的参数" print "输出: " print arg1 for var in vartuple :

Recno:: 77
URL:: http://blog.csdn.net/u011225629/article/details/50187987

ParseText::
Python 模块 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 模块 2015-12-05 18:13 871人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python 模块 模块让你能够有逻辑地组织你的Python代码段。 把相关的代码分配到一个 模块里能让你的代码更好用，更易懂。 模块也是Python对象，具有随机的名字属性用来绑定或引用。 简单地说，模块就是一个保存了Python代码的文件。模块能定义函数，类和变量。模块里也能包含可执行的代码。 例子 一个叫做aname的模块里的Python代码一般都能在一个叫aname.py的文件中找到。下例是个简单的模块support.py。 def print_func ( par ): print "Hello : " , par return import 语句 想使用Python源文件，只需在另一个源文件里执行import语句，语法如下： import module1 [, module2 [,... moduleN ] 当解释器遇到import语句，如果模块在当前的搜索路径就会被导入。 搜索路径是一个解释器会先进行搜索的所有目录的列表。如想要导入模块hello.py，需要把命令放在脚本的顶端： #!/usr/bin/python # -*- coding: UTF-8 -*- # 导入模块 import support # 现在可以调用模块里包含的函数了 support . print_func ( "Zara" ) 以上实例输出结果： Hello : Zara 一个模块只会被导入一次，不管你执行了多少次import。这样可以防止导入模块被一遍又一遍地执行。 From…import 语句 Python的from语句让你从模块中导入一个指定的部分到当前命名空间中。语法如下： from modname import name1 [, name2 [, ... nameN ]] 例如，要导入模块fib的fibonacci函数，使用如下语句： from fib import fibonacci 这个声明不会把整个fib模块导入到当前的命名空间中，它只会将fib里的fibonacci单个引入到执行这个声明的模块的全局符号表。 From…import* 语句 把一个模块的所有内容全都导入到当前的命名空间也是可行的，只需使用如下声明： from modname import * 这提供了一个简单的方法来导入一个模块中的所有项目。然而这种声明不该被过多地使用。 定位模块 当你导入一个模块，Python解析器对模块位置的搜索顺序是： 当前目录 如果不在当前目录，Python 则搜索在 shell 变量 PYTHONPATH 下的每个目录。 如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为/usr/local/lib/python/。 模块搜索路径存储在system模块的sys.path变量中。变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录。 PYTHONPATH变量 作为环境变量，PYTHONPATH由装在一个列表里的许多目录组成。PYTHONPATH的语法和shell变量PATH的一样。 在Windows系统，典型的PYTHONPATH如下： set PYTHONPATH = c : \python20\lib ; 在UNIX系统，典型的PYTHONPATH如下： set PYTHONPATH = /usr/ local / lib / python 命名空间和作用域 变量是拥有匹配对象的名字（标识符）。命名空间是一个包含了变量名称们（键）和它们各自相应的对象们（值）的字典。 一个Python表达式可以访问局部命名空间和全局命名空间里的变量。如果一个局部变量和一个全局变量重名，则局部变量会覆盖全局变量。 每个函数都有自己的命名空间。类的方法的作用域规则和通常函数的一样。 Python会智能地猜测一个变量是局部的还是全局的，它假设任何在函数内赋值的变量都是局部的。 因此，如果要给全局变量在一个函数里赋值，必须使用global语句。 global VarName的表达式会告诉Python， VarName是一个全局变量，这样Python就不会在局部命名空间里寻找这个变量了。 例如，我们在全局命名空间里定义一个变量money。我们再在函数内给变量money赋值，然后Python会假定money是一个局部变量。然而，我们并没有在访问前声明一个局部变量money，结果就是会出现一个UnboundLocalError的错误。取消global语句的注释就能解决这个问题。 #!/usr/bin/python # -*- coding: UTF-8 -*- Money = 2000 def AddMoney (): # 想改正代码就取消以下注释: # global Money Money = Money + 1 print Money AddMoney () print Money dir()函数 dir()函数一个排好序的字符串列表，内容是一个模块里定义过的名字。 返回的列表容纳了在一个模块里定义的所有模块，变量和函数。如下一个简单的实例： #!/usr/bin/python # -*- coding: UTF-8 -*- # 导入内置math模块 import math content = dir ( math ) print content ; 以上实例输出结果： [ '__doc__' , '__file__' , '__name__' , 'acos' , 'asin' , 'atan' , 'atan2' , 'ceil' , 'cos' , 'cosh' , 'degrees' , 'e' , 'exp' , 'fabs' , 'floor' , 'fmod' , 'frexp' , 'hypot' , 'ldexp' , 'log' , 'log10' , 'modf' , 'pi' , 'pow' , 'radians' , 'sin' , 'sinh' , 'sqrt' , 'tan' , 'tanh' ] 在这里，特殊字符串变量__name__指向模块的名字，__file__指向该模块的导入文件名。 globals()和locals()函数 根据调用地方的不同，globals()和locals()函数可被用来返回全局和局部命名空间里的名字。 如果在函数内部调用locals()，返回的是所有能在该函数里访问的命名。 如果在函数内部调用globals()，返回的是所有在该函数里能访问的全局名字。 两个函数的返回类型都是字典。所以名字们能用keys()函数摘取。 reload()函数 当一个模块被导入到一个脚本，模块顶层部分的代码只会被执行一次。 因此，如果你想重新执行模块里顶层部分的代码，可以用reload()函数。该函数会重新导入之前导入过的模块。语法如下： reload ( module_name ) 在这里，module_name要直接放模块的名字，而不是一个字符串形式。比如想重载hello模块，如下： reload ( hello ) Python中的包 包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的Python的应用环境。 考虑一个在Phone目录下的pots.py文件。这个文件有如下源代码： #!/usr/bin/python # -*- coding: UTF-8 -*- def Pots (): print "I'm Pots Phone" 同样地，我们有另外两个保存了不同函数的文件： Phone/Isdn.py 含有函数Isdn() Phone/G3.py 含有函数G3() 现在，在Phone目录下创建file __init__.py： Phone/__init__.py 当你导入Phone时，为了能够使用所有函数，你需要在__init__.py里使用显式的导入语句，如下： from Pots import Pots from Isdn import Isdn from G3 import G3 当你把这些代码添加到__init__.py之后，导入Phone包的时候这些类就全都是可用的了。 #!/usr/bin/python # -*- coding: UTF-8 -*- # 导入 Phone 包 import Phone Phone . Pots () Phone .

Recno:: 78
URL:: http://blog.csdn.net/u011225629/article/details/50188001

ParseText::
Python 文件I/O - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 文件I/O 2015-12-05 18:14 932人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python 文件I/O 本章只讲述所有基本的的I/O函数，更多函数请参考Python标准文档。 打印到屏幕 最简单的输出方法是用print语句，你可以给它传递零个或多个用逗号隔开的表达式。此函数把你传递的表达式转换成一个字符串表达式，并将结果写到标准输出如下： #!/usr/bin/python # -*- coding: UTF-8 -*- print "Python 是一个非常棒的语言，不是吗？" ; 你的标准屏幕上会产生以下结果： Python 是一个非常棒的语言，不是吗？ 读取键盘输入 Python提供了两个内置函数从标准输入读入一行文本，默认的标准输入是键盘。如下： raw_input input raw_input函数 raw_input([prompt]) 函数从标准输入读取一个行，并返回一个字符串（去掉结尾的换行符）： #!/usr/bin/python str = raw_input ( "Enter your input: " ); print "Received input is : " , str 这将提示你输入任意字符串，然后在屏幕上显示相同的字符串。当我输入"Hello Python！"，它的输出如下： Enter your input : Hello Python Received input is : Hello Python input函数 input([prompt]) 函数和raw_input([prompt]) 函数基本可以互换，但是input会假设你的输入是一个有效的Python表达式，并返回运算结果。 #!/usr/bin/python str = input ( "Enter your input: " ); print "Received input is : " , str 这会产生如下的对应着输入的结果： Enter your input : [ x * 5 for x in range ( 2 , 10 , 2 )] Recieved input is : [ 10 , 20 , 30 , 40 ] 打开和关闭文件 到现在为止，您已经可以向标准输入和输进行读写。现在，来看看怎么读写实际的数据文件。 Python提供了必要的函数和方法进行默认情况下的文件基本操作。你可以用file对象做大部分的文件操作。 open函数 你必须先用Python内置的open()函数打开一个文件，创建一个file对象，相关的辅助方法才可以调用它进行读写。 语法： file object = open ( file_name [, access_mode ][, buffering ]) 各个参数的细节如下： file_name：file_name变量是一个包含了你要访问的文件名称的字符串值。 access_mode：access_mode决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。 buffering:如果buffering的值被设为0，就不会有寄存。如果buffering的值取1，访问文件时会寄存行。如果将buffering的值设为大于1的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。 不同模式打开文件的完全列表： 模式 描述 r 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。 rb 以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。 r+ 打开一个文件用于读写。文件指针将会放在文件的开头。 rb+ 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。 w 打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 wb 以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 w+ 打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 wb+ 以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 a 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。 ab 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。 a+ 打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。 ab+ 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。 File对象的属性 一个文件被打开后，你有一个file对象，你可以得到有关该文件的各种信息。 以下是和file对象相关的所有属性的列表： 属性 描述 file.closed 返回true如果文件已被关闭，否则返回false。 file.mode 返回被打开文件的访问模式。 file.name 返回文件的名称。 file.softspace 如果用print输出后，必须跟一个空格符，则返回false。否则返回true。 如下实例： #!/usr/bin/python # -*- coding: UTF-8 -*- # 打开一个文件 fo = open ( "foo.txt" , "wb" ) print "Name of the file: " , fo . name print "Closed or not : " , fo . closed print "Opening mode : " , fo . mode print "Softspace flag : " , fo . softspace 以上实例输出结果： Name of the file : foo . txt Closed or not : False Opening mode : wb Softspace flag : 0 Close()方法 File对象的close（）方法刷新缓冲区里任何还没写入的信息，并关闭该文件，这之后便不能再进行写入。 当一个文件对象的引用被重新指定给另一个文件时，Python会关闭之前的文件。用close（）方法关闭文件是一个很好的习惯。 语法： fileObject . close (); 例子： #!/usr/bin/python # -*- coding: UTF-8 -*- # 打开一个文件 fo = open ( "foo.txt" , "wb" ) print "Name of the file: " , fo . name # 关闭打开的文件 fo . close () 以上实例输出结果： Name of the file : foo . txt 读写文件： file对象提供了一系列方法，能让我们的文件访问更轻松。来看看如何使用read()和write()方法来读取和写入文件。 Write()方法 Write()方法可将任何字符串写入一个打开的文件。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。 Write()方法不在字符串的结尾不添加换行符('\n')： 语法： fileObject . write ( string ); 在这里，被传递的参数是要写入到已打开文件的内容。 例子： #!/usr/bin/python # -*- coding: UTF-8 -*- # 打开一个文件 fo = open ( "/tmp/foo.txt" , "wb" ) fo . write ( "Python is a great language.\nYeah its great!!\n" ); # 关闭打开的文件 fo . close () 上述方法会创建foo.txt文件，并将收到的内容写入该文件，并最终关闭文件。如果你打开这个文件，将看到以下内容: Python is a great language . Yeah its great !! read()方法 read（）方法从一个打开的文件中读取一个字符串。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。 语法： fileObject . read ([ count ]); 在这里，被传递的参数是要从已打开文件中读取的字节计数。该方法从文件的开头开始读入，如果没有传入count，它会尝试尽可能多地读取更多的内容，很可能是直到文件的末尾。 例子： 就用我们上面创建的文件foo.txt。 #!/usr/bin/python # -*- coding: UTF-8 -*- # 打开一个文件 fo = open ( "/tmp/foo.txt" , "r+" ) str = fo . read ( 10 ); print "Read String is : " , str # 关闭打开的文件 fo . close () 以上实例输出结果： Read String is : Python is 文件位置： Tell()方法告诉你文件内的当前位置；换句话说，下一次的读写会发生在文件开

Recno:: 79
URL:: http://blog.csdn.net/u011225629/article/details/50188011

ParseText::
Python 异常处理 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 异常处理 2015-12-05 18:15 1012人阅读 评论 (1) 收藏 举报 分类： Python （33） 作者同类文章 X Python 异常处理 python提供了两个非常重要的功能来处理python程序在运行中出现的异常和错误。你可以使用该功能来调试python程序。 异常处理: 本站Python教程会具体介绍。 断言(Assertions):本站Python教程会具体介绍。 python标准异常 异常名称 描述 BaseException 所有异常的基类 SystemExit 解释器请求退出 KeyboardInterrupt 用户中断执行(通常是输入^C) Exception 常规错误的基类 StopIteration 迭代器没有更多的值 GeneratorExit 生成器(generator)发生异常来通知退出 StandardError 所有的内建标准异常的基类 ArithmeticError 所有数值计算错误的基类 FloatingPointError 浮点计算错误 OverflowError 数值运算超出最大限制 ZeroDivisionError 除(或取模)零 (所有数据类型) AssertionError 断言语句失败 AttributeError 对象没有这个属性 EOFError 没有内建输入,到达EOF 标记 EnvironmentError 操作系统错误的基类 IOError 输入/输出操作失败 OSError 操作系统错误 WindowsError 系统调用失败 ImportError 导入模块/对象失败 LookupError 无效数据查询的基类 IndexError 序列中没有此索引(index) KeyError 映射中没有这个键 MemoryError 内存溢出错误(对于Python 解释器不是致命的) NameError 未声明/初始化对象 (没有属性) UnboundLocalError 访问未初始化的本地变量 ReferenceError 弱引用(Weak reference)试图访问已经垃圾回收了的对象 RuntimeError 一般的运行时错误 NotImplementedError 尚未实现的方法 SyntaxError Python 语法错误 IndentationError 缩进错误 TabError Tab 和空格混用 SystemError 一般的解释器系统错误 TypeError 对类型无效的操作 ValueError 传入无效的参数 UnicodeError Unicode 相关的错误 UnicodeDecodeError Unicode 解码时的错误 UnicodeEncodeError Unicode 编码时错误 UnicodeTranslateError Unicode 转换时错误 Warning 警告的基类 DeprecationWarning 关于被弃用的特征的警告 FutureWarning 关于构造将来语义会有改变的警告 OverflowWarning 旧的关于自动提升为长整型(long)的警告 PendingDeprecationWarning 关于特性将会被废弃的警告 RuntimeWarning 可疑的运行时行为(runtime behavior)的警告 SyntaxWarning 可疑的语法的警告 UserWarning 用户代码生成的警告 什么是异常？ 异常即是一个事件，该事件会在程序执行过程中发生，影响了程序的正常执行。 一般情况下，在Python无法正常处理程序时就会发生一个异常。 异常是Python对象，表示一个错误。 当Python脚本发生异常时我们需要捕获处理它，否则程序会终止执行。 异常处理 捕捉异常可以使用try/except语句。 try/except语句用来检测try语句块中的错误，从而让except语句捕获异常信息并处理。 如果你不想在异常发生时结束你的程序，只需在try里捕获它。 语法： 以下为简单的 try....except...else 的语法： try : <语句> #运行别的代码 except <名字>： <语句> #如果在try部份引发了'name'异常 except <名字>，<数据>: <语句> #如果引发了'name'异常，获得附加的数据 else : <语句> #如果没有异常发生 try的工作原理是，当开始一个try语句后，python就在当前程序的上下文中作标记，这样当异常出现时就可以回到这里，try子句先执行，接下来会发生什么依赖于执行时是否出现异常。 如果当try后的语句执行时发生异常，python就跳回到try并执行第一个匹配该异常的except子句，异常处理完毕，控制流就通过整个try语句（除非在处理异常时又引发新的异常）。 如果在try后的语句里发生了异常，却没有匹配的except子句，异常将被递交到上层的try，或者到程序的最上层（这样将结束程序，并打印缺省的出错信息）。 如果在try子句执行时没有发生异常，python将执行else语句后的语句（如果有else的话），然后控制流通过整个try语句。 实例 下面是简单的例子，它打开一个文件，在该文件中的内容写入内容，且并未发生异常： #!/usr/bin/python try : fh = open ( "testfile" , "w" ) fh . write ( "This is my test file for exception handling!!" ) except IOError : print "Error: can\'t find file or read data" else : print "Written content in the file successfully" fh . close () 以上程序输出结果： Written content in the file successfully 实例 下面是简单的例子，它打开一个文件，在该文件中的内容写入内容，但文件没有写入权限，发生了异常： #!/usr/bin/python try : fh = open ( "testfile" , "w" ) fh . write ( "This is my test file for exception handling!!" ) except IOError : print "Error: can\'t find file or read data" else : print "Written content in the file successfully" 以上程序输出结果： Error : can 't find file or read data 使用except而不带任何异常类型 你可以不带任何异常类型使用except，如下实例： try : You do your operations here ; ...................... except : If there is any exception , then execute this block . ...................... else : If there is no exception then execute this block . 以上方式try-except语句捕获所有发生的异常。但这不是一个很好的方式，我们不能通过该程序识别出具体的异常信息。因为它捕获所有的异常。 使用except而带多种异常类型 你也可以使用相同的except语句来处理多个异常信息，如下所示： try : You do your operations here ; ...................... except ( Exception1 [, Exception2 [,... ExceptionN ]]]): If there is any exception from the given exception list , then execute this block . ...................... else : If there is no exception then execute this block . try-finally 语句 try-finally 语句无论是否发生异常都将执行最后的代码。 try : <语句> finally : <语句> #退出try时总会执行 raise 实例 #!/usr/bin/python try : fh = open ( "testfile" , "w" ) fh . write ( "This is my test file for exception handling!!" ) finally : print "Error: can\'t find file or read data" 如果打开的文件没有可写权限，输出如下所示： Error : can 't find file or read data 同样的例子也可以写成如下方式： #!/usr/bin/python try : fh = open (

Recno:: 80
URL:: http://blog.csdn.net/u011225629/article/details/50207959

ParseText::
10个Python练手项目 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 10个Python练手项目 2015-12-07 16:55 205人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X 标记一下Python的练手项目 10个Python练手项目： python项目练习一：即时标记 python项目练习二：画幅好画 python项目练习三：万能的XML python项目练习四：新闻聚合 python项目练习五：虚拟茶话会 python项目练习六：使用CGI进行远程编辑 python项目练习七：自定义公告板 python项目练习八：使用XML-RPC进行远程文件共享 python项目练习九：文件共享2-GUI版本 python项目练习十：DIY街机游戏 上一篇 Python 异常处理 下一篇 Python 面向对象 顶 0 踩 0 我的同类文章 Python （33） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u011225629 访问： 406710次 积分： 14776 等级： 积分：14776 排名： 第366名 原创： 961篇 转载： 169篇 译文： 14篇 评论： 297条 文章搜索 博客专栏 Python学习 文章：19篇 阅读：11812 Go语言学习 文章：7篇 阅读：3664 程序员英语单词册 文章：11篇 阅读：7502 程序员英语单词册 文章：1篇 阅读：736 Git学习 文章：7篇 阅读：4088 JavaEE面试秘籍 文章：38篇 阅读：22034 Java面试题集锦 文章：58篇 阅读：21467 Struts学习 文章：24篇 阅读：4759 Java设计模式 文章：27篇 阅读：9670 Ajax学习 文章：6篇 阅读：1411 JQuery学习 文章：7篇 阅读：1500 深入JavaScript 文章：17篇 阅读：3410 数据结构 文章：33篇 阅读：5528 C++入门 文章：31篇 阅读：5532 C语言入门 文章：13篇 阅读：3499 算法速成 文章：16篇 阅读：3622 MongoDB学习 文章：8篇 阅读：1709 Hibernate学习 文章：10篇 阅读：2627 Shiro学习 文章：25篇 阅读：5082 iBatis学习 文章：10篇 阅读：1766 MyBatis学习 文章：7篇 阅读：2122 跟我学Spring 文章：15篇 阅读：5282 Spring详解 文章：15篇 阅读：3796 Scala详解 文章：32篇 阅读：6995 Oracle442个应用场景 文章：9篇 阅读：3800 MySQL详解 文章：39篇 阅读：12707 Oracle学习笔记 文章：16篇 阅读：3940 MySQL数据库学习 文章：16篇 阅读：5084 XML学习笔记 文章：13篇 阅读：4528 Spring学习笔记 文章：20篇 阅读：5127 疯狂Java学习笔记 文章：86篇 阅读：42148 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 文章分类 Java (262) Scala (34) Spring (50) Hibernate (28) MySQL (78) Oracle (31) XML (17) JavaScript (39) Tool (24) ImportantJava (18) Network (19) OperatorSystem (27) Database (70) MyEclipse (11) 品世间百味 (110) ITAddress (22) Interview (60) 看世间百态 (70) TCP/IP (10) Front-end (50) Web backend (24) Maven (6) NoSQL (13) TortoiseSVN (1) Spark (2) Spring MVC (36) Velocity (2) MySQL (3) SVN (1) Android (1) iBatis (10) JSP (29) MyBatis (8) Shiro (26) Algorithm (38) 敏捷开发 (5) MongoDB (10) C (17) C++ (62) Data Structure (53) jQuery (9) Ajax (15) Struts (36) DesignPattern (35) JVM (14) Linux (24) Junit (5) JPA (2) EJB (5) Servlet (6) 数据挖掘 (1) Git (7) RMI (1) Python (34) Go (19) Thread (1) 程序猿 (11) QQ联系方式 78283501 阅读排行 Servlet完全教程 (2411) 程序员常去的14个顶级开发社区 (2138) 100个高质量Java开发者博客 (1849) 关于腾讯微博之死，离职员工所了解的真相 (1602) JAVA面试题大全（高级） (1558) 疯狂Java之学习笔记（11）------------算法性能分析 (1511) 想访问外网？越狱已不是问题!So Easy！时空隧道邀请码！ (1369) Java面试题 (1327)

Recno:: 81
URL:: http://blog.csdn.net/u011225629/article/details/50314117

ParseText::
Python 面向对象 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 面向对象 2015-12-15 13:13 603人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python 面向对象 Python从设计之初就已经是一门面向对象的语言，正因为如此，在Python中创建一个类和对象是很容易的。本章节我们将详细介绍Python的面向对象编程。 如果你以前没有接触过面向对象的编程语言，那你可能需要先了解一些面向对象语言的一些基本特征，在头脑里头形成一个基本的面向对象的概念，这样有助于你更容易的学习Python的面向对象编程。 接下来我们先来简单的了解下面向对象的一些基本特征。 面向对象技术简介 类(Class):  用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。 类变量： 类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。 数据成员： 类变量或者实例变量用于处理类及其实例对象的相关的数据。 方法重写： 如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。 实例变量： 定义在方法中的变量，只作用于当前实例的类。 继承： 即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟"是一个（is-a）"关系（例图，Dog是一个Animal）。 实例化： 创建一个类的实例，类的具体对象。 方法： 类中定义的函数。 对象： 通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。 创建类 使用class语句来创建一个新类，class之后为类的名称并以冒号结尾，如下实例: class ClassName : '类的帮助信息' #类文档字符串 class_suite #类体 类的帮助信息可以通过ClassName.__doc__查看。 class_suite 由类成员，方法，数据属性组成。 实例 以下是一个简单的Python类实例: #!/usr/bin/python # -*- coding: UTF-8 -*- class Employee : '所有员工的基类' empCount = 0 def __init__ ( self , name , salary ): self . name = name self . salary = salary Employee . empCount += 1 def displayCount ( self ): print "Total Employee %d" % Employee . empCount def displayEmployee ( self ): print "Name : " , self . name , ", Salary: " , self . salary empCount变量是一个类变量，它的值将在这个类的所有实例之间共享。你可以在内部类或外部类使用Employee.empCount访问。 第一种方法__init__()方法是一种特殊的方法，被称为类的构造函数或初始化方法，当创建了这个类的实例时就会调用该方法 创建实例对象 要创建一个类的实例，你可以使用类的名称，并通过__init__方法接受参数。 "创建 Employee 类的第一个对象" emp1 = Employee ( "Zara" , 2000 ) "创建 Employee 类的第二个对象" emp2 = Employee ( "Manni" , 5000 ) 访问属性 您可以使用点(.)来访问对象的属性。使用如下类的名称访问类变量: emp1 . displayEmployee () emp2 . displayEmployee () print "Total Employee %d" % Employee . empCount 完整实例： #!/usr/bin/python # -*- coding: UTF-8 -*- class Employee : '所有员工的基类' empCount = 0 def __init__ ( self , name , salary ): self . name = name self . salary = salary Employee . empCount += 1 def displayCount ( self ): print "Total Employee %d" % Employee . empCount def displayEmployee ( self ): print "Name : " , self . name , ", Salary: " , self . salary "创建 Employee 类的第一个对象" emp1 = Employee ( "Zara" , 2000 ) "创建 Employee 类的第二个对象" emp2 = Employee ( "Manni" , 5000 ) emp1 . displayEmployee () emp2 . displayEmployee () print "Total Employee %d" % Employee . empCount 执行以上代码输出结果如下： Name : Zara , Salary : 2000 Name : Manni , Salary : 5000 Total Employee 2 你可以添加，删除，修改类的属性，如下所示： emp1 . age = 7 # 添加一个 'age' 属性 emp1 . age = 8 # 修改 'age' 属性 del emp1 . age # 删除 'age' 属性 你也可以使用以下函数的方式来访问属性： getattr(obj, name[, default]) : 访问对象的属性。 hasattr(obj,name) : 检查是否存在一个属性。 setattr(obj,name,value) : 设置一个属性。如果属性不存在，会创建一个新属性。 delattr(obj, name) : 删除属性。 hasattr ( emp1 , 'age' ) # 如果存在 'age' 属性返回 True。 getattr ( emp1 , 'age' ) # 返回 'age' 属性的值 setattr ( emp1 , 'age' , 8 ) # 添加属性 'age' 值为 8 delattr ( empl , 'age' ) # 删除属性 'age' Python内置类属性 __dict__ : 类的属性（包含一个字典，由类的数据属性组成） __doc__ :类的文档字符串 __name__: 类名 __module__: 类定义所在的模块（类的全名是'__main__.className'，如果类位于一个导入模块mymod中，那么className.__module__ 等于 mymod） __bases__ : 类的所有父类构成元素（包含了以个由所有父类组成的元组） Python内置类属性调用实例如下： #!/usr/bin/python # -*- coding: UTF-8 -*- class Employee : '所有员工的基类' empCount = 0 def __init__ ( self , name , salary ): self . name = name self . salary = salary Employee . empCount += 1 def displayCount ( self ): print "Total Employee %d" % Employee . empCount def displayEmployee ( self ): print

Recno:: 82
URL:: http://blog.csdn.net/u011225629/article/details/50314169

ParseText::
Python正则表达式 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python正则表达式 2015-12-15 13:19 648人阅读 评论 (1) 收藏 举报 分类： Python （33） 作者同类文章 X Python正则表达式 正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。 Python 自1.5版本起增加了re 模块，它提供 Perl 风格的正则表达式模式。 re 模块使 Python 语言拥有全部的正则表达式功能。 compile 函数根据一个模式字符串和可选的标志参数生成一个正则表达式对象。该对象拥有一系列方法用于正则表达式匹配和替换。 re 模块也提供了与这些方法功能完全一致的函数，这些函数使用一个模式字符串做为它们的第一个参数。 本章节主要介绍Python中常用的正则表达式处理函数。 re.match函数 re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。。 函数语法 ： re . match ( pattern , string , flags = 0 ) 函数参数说明： 参数 描述 pattern 匹配的正则表达式 string 要匹配的字符串。 flags 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。 匹配成功re.match方法返回一个匹配的对象，否则返回None。 我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。 匹配对象方法 描述 group(num=0) 匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。 groups() 返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。 实例 1： #!/usr/bin/python # -*- coding: UTF-8 -*- import re print ( re . match ( 'www' , 'www.runoob.com' ). span ()) # 在起始位置匹配 print ( re . match ( 'com' , 'www.runoob.com' )) # 不在起始位置匹配 以上实例运行输出结果为： ( 0 , 3 ) None 实例 2： #!/usr/bin/python import re line = "Cats are smarter than dogs" matchObj = re . match ( r '(.*) are (.*?) .*' , line , re . M | re . I ) if matchObj : print "matchObj.group() : " , matchObj . group () print "matchObj.group(1) : " , matchObj . group ( 1 ) print "matchObj.group(2) : " , matchObj . group ( 2 ) else : print "No match!!" 以上实例执行结果如下： matchObj . group () : Cats are smarter than dogs matchObj . group ( 1 ) : Cats matchObj . group ( 2 ) : smarter re.search方法 re.search 扫描整个字符串并返回第一个成功的匹配。 函数语法： re . search ( pattern , string , flags = 0 ) 函数参数说明： 参数 描述 pattern 匹配的正则表达式 string 要匹配的字符串。 flags 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。 匹配成功re.search方法返回一个匹配的对象，否则返回None。 我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。 匹配对象方法 描述 group(num=0) 匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。 groups() 返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。 实例 1： #!/usr/bin/python # -*- coding: UTF-8 -*- import re print ( re . search ( 'www' , 'www.runoob.com' ). span ()) # 在起始位置匹配 print ( re . search ( 'com' , 'www.runoob.com' ). span ()) # 不在起始位置匹配 以上实例运行输出结果为： ( 0 , 3 ) ( 11 , 14 ) 实例 2： #!/usr/bin/python import re line = "Cats are smarter than dogs" ; searchObj = re . search ( r '(.*) are (.*?) .*' , line , re . M | re . I ) if searchObj : print "searchObj.group() : " , searchObj . group () print "searchObj.group(1) : " , searchObj . group ( 1 ) print "searchObj.group(2) : " , searchObj . group ( 2 ) else : print "Nothing found!!" 以上实例执行结果如下： searchObj . group () : Cats are smarter than dogs searchObj . group ( 1 ) : Cats searchObj . group ( 2 ) : smarter re.match与re.search的区别 re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。 实例： #!/usr/bin/python import re line = "Cats are smarter than dogs" ; matchObj = re . match ( r 'dogs' , line , re . M | re . I ) if matchObj : print "match --> matchObj.group() : " , matchObj . group () else : print "No match!!" matchObj = re . search ( r 'dogs' , line , re . M | re . I ) if

Recno:: 83
URL:: http://blog.csdn.net/u011225629/article/details/50314183

ParseText::
Python CGI编程 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python CGI编程 2015-12-15 13:20 610人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python CGI编程 什么是CGI CGI 目前由NCSA维护，NCSA定义CGI如下： CGI(Common Gateway Interface),通用网关接口,它是一段程序,运行在服务器上如：HTTP服务器，提供同客户端HTML页面的接口。 网页浏览 为了更好的了解CGI是如何工作的，我们可以从在网页上点击一个链接或URL的流程： 1、使用你的浏览器访问URL并连接到HTTP web 服务器。 2、Web服务器接收到请求信息后会解析URL，并查找访问的文件在服务器上是否存在，如果存在返回文件的内容，否则返回错误信息。 3、浏览器从服务器上接收信息，并显示接收的文件或者错误信息。 CGI程序可以是Python脚本，PERL脚本，SHELL脚本，C或者C++程序等。 CGI架构图 Web服务器支持及配置 在你进行CGI编程前，确保您的Web服务器支持CGI及已经配置了CGI的处理程序。 Apache 支持CGI 配置： 设置好CGI目录： ScriptAlias / cgi - bin / / var / www / cgi - bin / 所有的HTTP服务器执行CGI程序都保存在一个预先配置的目录。这个目录被称为CGI目录，并按照惯例，它被命名为/var/www/cgi-bin目录。 CGI文件的扩展名为.cgi，python也可以使用.py扩展名。 默认情况下，Linux服务器配置运行的cgi-bin目录中为/var/www。 如果你想指定其他运行CGI脚本的目录，可以修改httpd.conf配置文件，如下所示： <Directory "/var/www/cgi-bin" > AllowOverride None Options +ExecCGI Order allow,deny Allow from all </Directory> 在 AddHandler 中添加 .py 后缀，这样我们就可以访问 .py 结尾的 python 脚本文件： AddHandler cgi - script . cgi . pl . py 第一个CGI程序 我们使用Python创建第一个CGI程序，文件名为hello.py，文件位于/var/www/cgi-bin目录中，内容如下，修改文件的权限为755： #!/usr/bin/python # -*- coding: UTF-8 -*- print "Content-type:text/html\r\n\r\n" print '<html>' print '<head>' print '<title>Hello Word - First CGI Program</title>' print '</head>' print '<body>' print '<h2>Hello Word! This is my first CGI program</h2>' print '</body>' print '</html>' 以上程序在浏览器访问显示结果如下： Hello Word ! This is my first CGI program 这个的hello.py脚本是一个简单的Python脚本，脚本第一行的输出内容"Content-type:text/html\r\n\r\n"发送到浏览器并告知浏览器显示的内容类型为"text/html"。 HTTP头部 hello.py文件内容中的" Content-type:text/html\r\n\r\n"即为HTTP头部的一部分，它会发送给浏览器告诉浏览器文件的内容类型。 HTTP头部的格式如下： HTTP 字段名: 字段内容 例如 Content - type : text / html\r\n\r\n 以下表格介绍了CGI程序中HTTP头部经常使用的信息： 头 描述 Content-type: 请求的与实体对应的MIME信息。例如: Content-type:text/html Expires: Date 响应过期的日期和时间 Location: URL 用来重定向接收方到非请求URL的位置来完成请求或标识新的资源 Last-modified: Date 请求资源的最后修改时间 Content-length: N 请求的内容长度 Set-Cookie: String 设置Http Cookie CGI环境变量 所有的CGI程序都接收以下的环境变量，这些变量在CGI程序中发挥了重要的作用： 变量名 描述 CONTENT_TYPE 这个环境变量的值指示所传递来的信息的MIME类型。目前，环境变量CONTENT_TYPE一般都是：application/x-www-form-urlencoded,他表示数据来自于HTML表单。 CONTENT_LENGTH 如果服务器与CGI程序信息的传递方式是POST，这个环境变量即使从标准输入STDIN中可以读到的有效数据的字节数。这个环境变量在读取所输入的数据时必须使用。 HTTP_COOKIE 客户机内的 COOKIE 内容。 HTTP_USER_AGENT 提供包含了版本数或其他专有数据的客户浏览器信息。 PATH_INFO 这个环境变量的值表示紧接在CGI程序名之后的其他路径信息。它常常作为CGI程序的参数出现。 QUERY_STRING 如果服务器与CGI程序信息的传递方式是GET，这个环境变量的值即使所传递的信息。这个信息经跟在CGI程序名的后面，两者中间用一个问号'?'分隔。 REMOTE_ADDR 这个环境变量的值是发送请求的客户机的IP地址，例如上面的192.168.1.67。这个值总是存在的。而且它是Web客户机需要提供给Web服务器的唯一标识，可以在CGI程序中用它来区分不同的Web客户机。 REMOTE_HOST 这个环境变量的值包含发送CGI请求的客户机的主机名。如果不支持你想查询，则无需定义此环境变量。 REQUEST_METHOD 提供脚本被调用的方法。对于使用 HTTP/1.0 协议的脚本，仅 GET 和 POST 有意义。 SCRIPT_FILENAME CGI脚本的完整路径 SCRIPT_NAME CGI脚本的的名称 SERVER_NAME 这是你的 WEB 服务器的主机名、别名或IP地址。 SERVER_SOFTWARE 这个环境变量的值包含了调用CGI程序的HTTP服务器的名称和版本号。例如，上面的值为Apache/2.2.14(Unix) 以下是一个简单的CGI脚本输出CGI的环境变量： #!/usr/bin/python # -*- coding: UTF-8 -*- import os print "Content-type: text/html\r\n\r\n" ; print "<font size=+1>Environment</font><\br>" ; for param in os . environ . keys (): print "<b>%20s</b>: %s<\br>" % ( param , os . environ [ param ]) GET和POST方法 浏览器客户端通过两种方法向服务器传递信息，这两种方法就是 GET 方法和 POST 方法。 使用GET方法传输数据 GET方法发送编码后的用户信息到服务端，数据信息包含在请求页面的URL上，以"?"号分割, 如下所示： http : //www.test.com/cgi-bin/hello.py?key1=value1&key2=value2 有关 GET 请求的其他一些注释： GET 请求可被缓存 GET 请求保留在浏览器历史记录中 GET 请求可被收藏为书签 GET 请求不应在处理敏感数据时使用 GET 请求有长度限制 GET 请求只应当用于取回数据 简单的url实例：GET方法 以下是一个简单的URL，使用GET方法向hello_get.py程序发送两个参数： /cgi-bin/ hello_get . py ? first_name = ZARA & last_name = ALI 以下为hello_get.py文件的代码： #!/usr/bin/python # -*- coding: UTF-8 -*- # CGI处理模块 import cgi , cgitb # 创建 FieldStorage 的实例化 form = cgi . FieldStorage () # 获取数据 first_name = form . getvalue ( 'first_name' ) last_name = form . getvalue ( 'last_name' ) print "Content-type:text/html\r\n\r\n" print "<html>" print "<head>" print "<title>Hello - Second CGI Program</title>" print "</head>" print "<body>" print "<h2>Hello %s %s</h2>" % ( first_name , last_name ) print "</body>" print "</html>" 浏览器请求输出结果： Hello ZARA ALI 简单的表单实例：GET方法 以下是一个通过HTML的表单使用GET方法向服务器发送两个数据，提交的服务器脚本同样是hello_get.py文件，代码如下： <form action = "/cgi-bin/hello_get.py" method = "get" > First Name: <input type = "text" name = "first_name" > <br /> Last Name: <input type = "text" name = "last_name" /> <input type = "submit" value = "Submit" /> </form> 使用POST方法传递数据 使用POST方法向服务器传递数据是更安全可靠的，像一些敏感信息如用户密码等需要使用POST传输数据。 以下同样是hello_get.py ，它也可以处理浏览器提交的POST表单数据: #!/usr/bin/python # -*- coding: UTF-8 -*- # 引入 CGI 模块

Recno:: 84
URL:: http://blog.csdn.net/u011225629/article/details/50314201

ParseText::
python操作mysql数据库 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 python操作mysql数据库 2015-12-15 13:22 653人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X python操作mysql数据库 Python 标准数据库接口为 Python DB-API，Python DB-API为开发人员提供了数据库应用编程接口。 Python 数据库接口支持非常多的数据库，你可以选择适合你项目的数据库： GadFly mSQL MySQL PostgreSQL Microsoft SQL Server 2000 Informix Interbase Oracle Sybase 你可以访问 Python数据库接口及API 查看详细的支持数据库列表。 不同的数据库你需要下载不同的DB API模块，例如你需要访问Oracle数据库和Mysql数据，你需要下载Oracle和MySQL数据库模块。 DB-API 是一个规范. 它定义了一系列必须的对象和数据库存取方式, 以便为各种各样的底层数据库系统和多种多样的数据库接口程序提供一致的访问接口 。 Python的DB-API，为大多数的数据库实现了接口，使用它连接各数据库后，就可以用相同的方式操作各数据库。 Python DB-API使用流程： 引入 API 模块。 获取与数据库的连接。 执行SQL语句和存储过程。 关闭数据库连接。 什么是MySQLdb? MySQLdb 是用于Python链接Mysql数据库的接口，它实现了 Python 数据库 API 规范 V2.0，基于 MySQL C API 上建立的。 如何安装MySQLdb? 为了用DB-API编写MySQL脚本，必须确保已经安装了MySQL。复制以下代码，并执行： #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb 如果执行后的输出结果如下所示，意味着你没有安装 MySQLdb 模块： Traceback ( most recent call last ): File "test.py" , line 3 , in <module> import MySQLdb ImportError : No module named MySQLdb 安装MySQLdb，请访问  http://sourceforge.net/projects/mysql-python  ，(Linux平台可以访问： https://pypi.python.org/pypi/MySQL-python )从这里可选择适合您的平台的安装包，分为预编译的二进制文件和源代码安装包。 如果您选择二进制文件发行版本的话，安装过程基本安装提示即可完成。如果从源代码进行安装的话，则需要切换到MySQLdb发行版本的顶级目录，并键入下列命令: $ gunzip MySQL - python - 1.2 . 2.tar . gz $ tar - xvf MySQL - python - 1.2 . 2.tar $ cd MySQL - python - 1.2 . 2 $ python setup . py build $ python setup . py install 注意： 请确保您有root权限来安装上述模块。 数据库连接 连接数据库前，请先确认以下事项： 您已经创建了数据库 TESTDB. 在TESTDB数据库中您已经创建了表 EMPLOYEE EMPLOYEE表字段为 FIRST_NAME, LAST_NAME, AGE, SEX 和 INCOME。 连接数据库TESTDB使用的用户名为 "testuser" ，密码为 "test123",你可以可以自己设定或者直接使用root用户名及其密码，Mysql数据库用户授权请使用Grant命令。 在你的机子上已经安装了 Python MySQLdb 模块。 如果您对sql语句不熟悉，可以访问我们的  SQL基础教程 实例： 以下实例链接Mysql的TESTDB数据库： #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # 打开数据库连接 db = MySQLdb . connect ( "localhost" , "testuser" , "test123" , "TESTDB" ) # 使用cursor()方法获取操作游标 cursor = db . cursor () # 使用execute方法执行SQL语句 cursor . execute ( "SELECT VERSION()" ) # 使用 fetchone() 方法获取一条数据库。 data = cursor . fetchone () print "Database version : %s " % data # 关闭数据库连接 db . close () 执行以上脚本输出结果如下： Database version : 5.0 . 45 创建数据库表 如果数据库连接存在我们可以使用execute()方法来为数据库创建表，如下所示创建表EMPLOYEE： #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # 打开数据库连接 db = MySQLdb . connect ( "localhost" , "testuser" , "test123" , "TESTDB" ) # 使用cursor()方法获取操作游标 cursor = db . cursor () # 如果数据表已经存在使用 execute() 方法删除表。 cursor . execute ( "DROP TABLE IF EXISTS EMPLOYEE" ) # 创建数据表SQL语句 sql = """CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )""" cursor . execute ( sql ) # 关闭数据库连接 db . close () 数据库插入操作 以下实例使用执行 SQL INSERT 语句向表 EMPLOYEE 插入记录： #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # 打开数据库连接 db = MySQLdb . connect ( "localhost" , "testuser" , "test123" , "TESTDB" ) # 使用cursor()方法获取操作游标 cursor = db . cursor () # SQL 插入语句 sql = """INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)""" try : # 执行sql语句 cursor . execute ( sql ) # 提交到数据库执行 db . commit () except : # Rollback in case there is any error db . rollback () # 关闭数据库连接 db . close () 以上例子也可以写成如下形式： #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # 打开数据库连接 db = MySQLdb . connect ( "localhost" , "testuser" , "test123" , "TESTDB" ) # 使用cursor()方法获取操作游标 cursor = db . cursor () # SQL 插入语句 sql = "INSERT INTO EMPLOYEE(FIRST_NAME, \ LAST_NAME, AGE, SEX, INCOME) \ VALUES ('%s', '%s', '%d', '%c', '%d' )" % \ ( 'Mac' , 'Mohan' , 20 , 'M' , 2000 ) try : # 执行sql语句 cursor . execute ( sql ) # 提交到数据库执行 db . commit () except : # 发生错误时回滚 db . rollback () # 关闭数据库连接 db . close () 实例： 以下代码使用变量向SQL语句中传递参数: .................................. user_id = "test123" password = "password" con

Recno:: 85
URL:: http://blog.csdn.net/u011225629/article/details/50314231

ParseText::
Python使用SMTP发送邮件 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python使用SMTP发送邮件 2015-12-15 13:25 648人阅读 评论 (0) 收藏 举报 Python使用SMTP发送邮件 SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。 python的smtplib提供了一种很方便的途径发送电子邮件。它对smtp协议进行了简单的封装。 Python创建 SMTP 对象语法如下： import smtplib smtpObj = smtplib . SMTP ( [ host [, port [, local_hostname ]]] ) 参数说明： host: SMTP 服务器主机。 你可以指定主机的ip地址或者域名如:w3cschool.cc，这个是可选参数。 port: 如果你提供了 host 参数, 你需要指定 SMTP 服务使用的端口号，一般情况下SMTP端口号为25。 local_hostname: 如果SMTP在你的本机上，你只需要指定服务器地址为 localhost 即可。 Python SMTP对象使用sendmail方法发送邮件，语法如下： SMTP . sendmail ( from_addr , to_addrs , msg [, mail_options , rcpt_options ] 参数说明： from_addr: 邮件发送者地址。 to_addrs: 字符串列表，邮件发送地址。 msg: 发送消息 这里要注意一下第三个参数，msg是字符串，表示邮件。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要注意msg的格式。这个格式就是smtp协议中定义的格式。 实例 以下是一个使用Python发送邮件简单的实例： #!/usr/bin/python import smtplib sender = 'from@fromdomain.com' receivers = [ 'to@todomain.com' ] message = """From: From Person <from@fromdomain.com> To: To Person <to@todomain.com> Subject: SMTP e-mail test This is a test e-mail message. """ try : smtpObj = smtplib . SMTP ( 'localhost' ) smtpObj . sendmail ( sender , receivers , message ) print "Successfully sent email" except SMTPException : print "Error: unable to send email" 使用Python发送HTML格式的邮件 Python发送HTML格式的邮件与发送纯文本消息的邮件不同之处就是将MIMEText中_subtype设置为html。具体代码如下： import smtplib from email . mime . text import MIMEText mailto_list =[ "YYY@YYY.com" ] mail_host = "smtp.XXX.com" #设置服务器 mail_user = "XXX" #用户名 mail_pass = "XXXX" #口令 mail_postfix = "XXX.com" #发件箱的后缀 def send_mail ( to_list , sub , content ): #to_list：收件人；sub：主题；content：邮件内容 me = "hello" + "<" + mail_user + "@" + mail_postfix + ">" #这里的hello可以任意设置，收到信后，将按照设置显示 msg = MIMEText ( content , _subtype = 'html' , _charset = 'gb2312' ) #创建一个实例，这里设置为html格式邮件 msg [ 'Subject' ] = sub #设置主题 msg [ 'From' ] = me msg [ 'To' ] = ";" . join ( to_list ) try : s = smtplib . SMTP () s . connect ( mail_host ) #连接smtp服务器 s . login ( mail_user , mail_pass ) #登陆服务器 s . sendmail ( me , to_list , msg . as_string ()) #发送邮件 s . close () return True except Exception , e : print str ( e ) return False if __name__ == '__main__' : if send_mail ( mailto_list , "hello" , "<a href='http://www.cnblogs.com/xiaowuyi'>小五义</a>" ): print "发送成功" else : print "发送失败" 或者你也可以在消息体中指定Content-type为text/html,如下实例: #!/usr/bin/python import smtplib message = """From: From Person <from@fromdomain.com> To: To Person <to@todomain.com> MIME-Version: 1.0 Content-type: text/html Subject: SMTP HTML e-mail test This is an e-mail message to be sent in HTML format <b>This is HTML message.</b> <h1>This is headline.</h1> """ try : smtpObj = smtplib . SMTP ( 'localhost' ) smtpObj . sendmail ( sender , receivers , message ) print "Successfully sent email" except SMTPException : print "Error: unable to send email" Python发送带附件的邮件 发送带附件的邮件，首先要创建MIMEMultipart()实例，然后构造附件，如果有多个附件，可依次构造，最后利用smtplib.smtp发送。 from email . mime . text import MIMEText from email . mime . multipart import MIMEMultipart import smtplib #创建一个带附件的实例 msg = MIMEMultipart () #构造附件1 att1 = MIMEText ( open ( 'd:\\123.rar' , 'rb' ). read (), 'base64' , 'gb2312' ) att1 [ "Content-Type" ] = 'application/octet-stream' att1 [ "Content-Disposition" ] = 'attachment; filename="123.doc"' #这里的filename可以任意写，写什么名字，邮件中显示什么名字 msg . attach ( att1 ) #构造附件2 att2 = MIMEText ( open ( 'd:\\123.txt' , 'rb' ). read (), 'base64' , 'gb2312' ) att2 [ "Content-Type" ] = 'application/octet-stream' att2 [ "Content-Disposition" ] = 'attachment; filename="123.txt"' msg . attach ( att2 ) #加邮件头 msg [ 'to' ] = 'YYY@YYY.com' msg [ 'from' ] = 'XXX@XXX.com' msg [ 'subject' ] = 'hello world' #发送邮件 try : server = smtplib . SMTP () server . connect ( 'smtp.XXX.com' ) server . login ( 'XXX' , 'XXXXX' )# XXX

Recno:: 86
URL:: http://blog.csdn.net/u011225629/article/details/50314251

ParseText::
Python 多线程 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python 多线程 2015-12-15 13:27 845人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python 多线程 多线程类似于同时执行多个不同程序，多线程运行有如下优点： 使用线程可以把占据长时间的程序中的任务放到后台去处理。 用户界面可以更加吸引人，这样比如用户点击了一个按钮去触发某些事件的处理，可以弹出一个进度条来显示处理的进度 程序的运行速度可能加快 在一些等待的任务实现上如用户输入、文件读写和网络收发数据等，线程就比较有用了。在这种情况下我们可以释放一些珍贵的资源如内存占用等等。 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。 每个线程都有他自己的一组CPU寄存器，称为线程的上下文，该上下文反映了线程上次运行该线程的CPU寄存器的状态。 指令指针和堆栈指针寄存器是线程上下文中两个最重要的寄存器，线程总是在进程得到上下文中运行的，这些地址都用于标志拥有线程的进程地址空间中的内存。 线程可以被抢占（中断）。 在其他线程正在运行时，线程可以暂时搁置（也称为睡眠） -- 这就是线程的退让。 开始学习Python线程 Python中使用线程有两种方式：函数或者用类来包装线程对象。 函数式：调用thread模块中的start_new_thread()函数来产生新线程。语法如下: thread . start_new_thread ( function , args [, kwargs ] ) 参数说明: function - 线程函数。 args - 传递给线程函数的参数,他必须是个tuple类型。 kwargs - 可选参数。 实例： #!/usr/bin/python # -*- coding: UTF-8 -*- import thread import time # 为线程定义一个函数 def print_time ( threadName , delay ): count = 0 while count < 5 : time . sleep ( delay ) count += 1 print "%s: %s" % ( threadName , time . ctime ( time . time ()) ) # 创建两个线程 try : thread . start_new_thread ( print_time , ( "Thread-1" , 2 , ) ) thread . start_new_thread ( print_time , ( "Thread-2" , 4 , ) ) except : print "Error: unable to start thread" while 1 : pass 执行以上程序输出结果如下： Thread - 1 : Thu Jan 22 15 : 42 : 17 2009 Thread - 1 : Thu Jan 22 15 : 42 : 19 2009 Thread - 2 : Thu Jan 22 15 : 42 : 19 2009 Thread - 1 : Thu Jan 22 15 : 42 : 21 2009 Thread - 2 : Thu Jan 22 15 : 42 : 23 2009 Thread - 1 : Thu Jan 22 15 : 42 : 23 2009 Thread - 1 : Thu Jan 22 15 : 42 : 25 2009 Thread - 2 : Thu Jan 22 15 : 42 : 27 2009 Thread - 2 : Thu Jan 22 15 : 42 : 31 2009 Thread - 2 : Thu Jan 22 15 : 42 : 35 2009 线程的结束一般依靠线程函数的自然结束；也可以在线程函数中调用thread.exit()，他抛出SystemExit exception，达到退出线程的目的。 线程模块 Python通过两个标准库thread和threading提供对线程的支持。thread提供了低级别的、原始的线程以及一个简单的锁。 thread 模块提供的其他方法： threading.currentThread(): 返回当前的线程变量。 threading.enumerate(): 返回一个包含正在运行的线程的list。正在运行指线程启动后、结束前，不包括启动前和终止后的线程。 threading.activeCount(): 返回正在运行的线程数量，与len(threading.enumerate())有相同的结果。 除了使用方法外，线程模块同样提供了Thread类来处理线程，Thread类提供了以下方法: run():  用以表示线程活动的方法。 start(): 启动线程活动。 join([time]):  等待至线程中止。这阻塞调用线程直至线程的join() 方法被调用中止-正常退出或者抛出未处理的异常-或者是可选的超时发生。 isAlive():  返回线程是否活动的。 getName():  返回线程名。 setName():  设置线程名。 使用Threading模块创建线程 使用Threading模块创建线程，直接从threading.Thread继承，然后重写__init__方法和run方法： #!/usr/bin/python # -*- coding: UTF-8 -*- import threading import time exitFlag = 0 class myThread ( threading . Thread ): #继承父类threading.Thread def __init__ ( self , threadID , name , counter ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . counter = counter def run ( self ): #把要执行的代码写到run函数里面 线程在创建后会直接运行run函数 print "Starting " + self . name print_time ( self . name , self . counter , 5 ) print "Exiting " + self . name def print_time ( threadName , delay , counter ): while counter : if exitFlag : thread . exit () time . sleep ( delay ) print "%s: %s" % ( threadName ,

Recno:: 87
URL:: http://blog.csdn.net/u011225629/article/details/50314295

ParseText::
Python XML解析 - 小米 - 博客频道 - CSDN.NET 小米 业精于勤，荒于嬉。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Python XML解析 2015-12-15 13:30 668人阅读 评论 (0) 收藏 举报 分类： Python （33） 作者同类文章 X Python XML解析 什么是XML？ XML 指可扩展标记语言（e X tensible  M arkup  L anguage）。 你可以通过本站学习 XML教程 XML 被设计用来传输和存储数据。 XML是一套定义语义标记的规则，这些标记将文档分成许多部件并对这些部件加以标识。 它也是元标记语言，即定义了用于定义其他与特定领域有关的、语义的、结构化的标记语言的句法语言。 python对XML的解析 常见的XML编程接口有DOM和SAX，这两种接口处理XML文件的方式不同，当然使用场合也不同。 python有三种方法解析XML，SAX，DOM，以及ElementTree: 1.SAX (simple API for XML ) python 标准库包含SAX解析器，SAX用事件驱动模型，通过在解析XML的过程中触发一个个的事件并调用用户定义的回调函数来处理XML文件。 2.DOM(Document Object Model) 将XML数据在内存中解析成一个树，通过对树的操作来操作XML。 3.ElementTree(元素树) ElementTree就像一个轻量级的DOM，具有方便友好的API。代码可用性好，速度快，消耗内存少。 注： 因DOM需要将XML数据映射到内存中的树，一是比较慢，二是比较耗内存，而SAX流式读取XML文件，比较快，占用内存少，但需要用户实现回调函数（handler）。 本章节使用到的XML实例文件movies.xml内容如下： <collection shelf = "New Arrivals" > <movie title = "Enemy Behind" > <type> War, Thriller </type> <format> DVD </format> <year> 2003 </year> <rating> PG </rating> <stars> 10 </stars> <description> Talk about a US-Japan war </description> </movie> <movie title = "Transformers" > <type> Anime, Science Fiction </type> <format> DVD </format> <year> 1989 </year> <rating> R </rating> <stars> 8 </stars> <description> A schientific fiction </description> </movie> <movie title = "Trigun" > <type> Anime, Action </type> <format> DVD </format> <episodes> 4 </episodes> <rating> PG </rating> <stars> 10 </stars> <description> Vash the Stampede! </description> </movie> <movie title = "Ishtar" > <type> Comedy </type> <format> VHS </format> <rating> PG </rating> <stars> 2 </stars> <description> Viewable boredom </description> </movie> </collection> python使用SAX解析xml SAX是一种基于事件驱动的API。 利用SAX解析XML文档牵涉到两个部分:解析器和事件处理器。 解析器负责读取XML文档,并向事件处理器发送事件,如元素开始跟元素结束事件; 而事件处理器则负责对事件作出相应,对传递的XML数据进行处理。 <psax适于处理下面的问题：< p="" style="color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', sans-serif;"> 1、对大型文件进行处理； 2、只需要文件的部分内容，或者只需从文件中得到特定信息。 3、想建立自己的对象模型的时候。 在python中使用sax方式处理xml要先引入xml.sax中的parse函数，还有xml.sax.handler中的ContentHandler。 ContentHandler类方法介绍 characters(content)方法 调用时机： 从行开始，遇到标签之前，存在字符，content的值为这些字符串。 从一个标签，遇到下一个标签之前， 存在字符，content的值为这些字符串。 从一个标签，遇到行结束符之前，存在字符，content的值为这些字符串。 标签可以是开始标签，也可以是结束标签。 startDocument()方法 文档启动的时候调用。 endDocument()方法 解析器到达文档结尾时调用。 startElement(name, attrs)方法 遇到XML开始标签时调用，name是标签的名字，attrs是标签的属性值字典。 endElement(name)方法 遇到XML结束标签时调用。 make_parser方法 以下方法创建一个新的解析器对象并返回。 xml . sax . make_parser ( [ parser_list ] ) 参数说明: parser_list  - 可选参数，解析器列表 parser方法 以下方法创建一个 SAX 解析器并解析xml文档： xml . sax . parse ( xmlfile , contenthandler [, errorhandler ]) 参数说明: xmlfile  - xml文件名 contenthandler  - 必须是一个ContentHandler的对象 errorhandler  - 如果指定该参数，errorhandler必须是一个SAX ErrorHandler对象 parseString方法 parseString方法创建一个XML解析器并解析xml字符串： xml . sax . parseString ( xmlstring , contenthandler [, errorhandler ]) 参数说明: xmlstring  - xml字符串 contenthandler  - 必须是一个ContentHandler的对象 errorhandler  - 如果指定该参数，errorhandler必须是一个SAX ErrorHandler对象 Python 解析XML实例 #!/usr/bin/python # -*- coding: UTF-8 -*- import xml . sax class MovieHandler ( xml . sax . ContentHandler ): def __init__ ( self ): self . CurrentData = "" self . type = "" self . format = "" self . year = "" self . rating = "" self . stars = "" self . description = "" # 元素开始事件处理 def startElement ( self , tag , attributes ): self . CurrentData = tag if tag == "movie" : print "*****Movie*****" title = attributes [ "title" ] print "Title:" , title # 元素结束事件处理 def endElement ( self , tag ): if self . CurrentData == "type" : print "Type:" , self . type elif self . CurrentData == "format" : print "Format:" , self . format elif self . CurrentData == "year" : print "Year:" , self . year elif self . CurrentData == "rating" : print "Rating:" , self . rating elif

Recno:: 88
URL:: http://blog.csdn.net/wangyangzhizhou/article/details/48649297

ParseText::
增量会话对象——DeltaSession - wangyangzhizhou的专栏 - 博客频道 - CSDN.NET wangyangzhizhou的专栏 追求思想自由，追求技术自由，追求研究自由 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 增量会话对象——DeltaSession 标签： tomcat DeltaSession 集群 会话同步 同步机制 2015-09-22 12:51 587人阅读 评论 (1) 收藏 举报 分类： tomcat内核 （51） 作者同类文章 X JAVA （71） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在集群环境中为了使集群中各个节点的会话状态都同步，同步操作是集群重点解决的问题，一般来说有两种同步策略，其一是每次同步都把整个会话对象传给集群中其他节点，其他节点更新整个会话对象；其二是对会话中增量修改的属性进行同步。这两种同步方案各有优缺点，整个会话对象同步策略实现过程比较简单方便，但会造成大量无效信息的传输。增量同步方式则不会传递无效的信息，但在实现上会比较复杂因为涉及到对会话属性操作过程的管理。 这节讨论的正是增量同步方式中涉及的会话对象 DeltaSession ，这个对象其实是对标准会话对象的扩展使之具备在整个请求过程记录会话所有的增量更改。 DeltaSession 的类图如下，除了继承 StandardSession 类外还实现了 Externalizable 、 ClusterSession 、 ReplicatedMapEntry 三个接口， Externalizable 接口主要提供对外部的对象读写操作， ClusterSession 接口主要提供判断集群会话是否为原始的会话操作，只有原始会话才有资格使会话过期， ReplicatedMapEntry 接口提供差异复制的操作。对于 DeltaSession 其实就是除了继承 StandardSession 特性外还要额外实现这三个接口。       当客户端发起一个请求时，服务端对请求的处理可能涉及会话相关的操作，例如获取客户端某些属性再根据属性值进行逻辑处理，而且在整个请求过程中可能涉及多次的会话操作，为了将这些改变能同步到集群的其他节点上，必须要有一个机制来实现，实际上同步的颗粒度大小是很重要，颗粒度太大会导致同步不及时，而颗粒度太小则可能导致传输及性能问题，考虑到性能及可行性， tomcat 同步的颗粒度是以一个完整的请求为单位的，即从客户端发起请求到服务器完成逻辑处理返回结果之前这段时间为同步颗粒度。这个过程中对某会话的所有操作（对同一个属性的操作只记录最新的操作）都会被记录下来，如下图，绿色箭头表示一个完整的请求过程，期间包括了四个修改属性操作，分别修改了属性 a 、 b 、 c 、 d ，这四个操作会被抽象成四个动作放进一个列表中，集群其他节点获取列表后根据这些动作就可以对自己本地对应的会话进行同步。         集群成员接收到某节点发送过来的同步消息后，将会逐一执行动作集里面的每个动作，下图大箭头表示同步的整个过程，最下面的为动作集列表，一共有 4 个动作，按顺序首先取出第一个 update1 动作，动作对象里面包含了指定修改哪个会话的会话 id ，根据此 id 去修改会话集对应的会话的属性。接着把剩下的其余 3 个动作执行完毕，于是完成了会话同步。    在 tomcat 中会话增量的具体由 DeltaSession 类实现， DeltaSession 继承了 StandardSession 标准会话的所有特性且增加了会话增量记录的功能，增量记录功能即通过动作集实现，动作集被封装在 DeltaRequest 类，所以 DeltaSession 主要通过 DeltaRequest 实现动作集的管理，动作集由一个 LinkedList<AttributeInfo> 结构保存， AttributeInfo 描述了动作的一些消息，所以一个动作就被抽象成了一个 AttributeInfo 对象，它主要包含四个属性  name(String) 、 value(Object) 、 action(int) 、 type(int) ， name 表示会话的属性名，即哪个属性被改； value 表示会话属性名对应的值； action 表示动作类型，可能是设置属性也可能是删除属性； type 表示会话哪种类别的属性将被修改。       整个增量会话的实现机制就是上面所说的，会话的增量拷贝比起全量拷贝有很多好处，即使实现相对比较复杂。         喜欢java的同学可以加下好友 上一篇 如何设计一个可用的web容器 下一篇 集群增量会话管理器——DeltaManager 顶 0 踩 0 我的同类文章 tomcat内核 （51） JAVA （71） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 作者 笔名：seaboat 汪洋之舟 微信： 个人资料 wangyangzhizhou 访问： 103412次 积分： 2516 等级： 积分：2516 排名： 第8399名 原创： 117篇 转载： 5篇 译文： 0篇 评论： 46条 文章搜索 博客专栏 集群 文章：15篇 阅读：9285 tomcat内核 文章：48篇 阅读：32183 Java并发 文章：18篇 阅读：17190 java开源研究 文章：32篇 阅读：28841 文章分类 阿里技术 (0) 杂 (1) 英语 (0) 资讯 (0) J2EE (3) 标准 (1) 安全 (5) JAVA (71) 架构模型 (8) 设计 (3) tomcat内核 (52) 设计模式 (1) 支付 (3) 算法 (1) 阿汪梦中入侵故事 (2) 协议 (5) 多线程&并发 (22) JVM (9) 软件设计 (2) web中间件 (2) 集群 (4) 中间件 (1) tomcat (1) 文章存档 2015年12月 (5) 2015年11月 (2) 2015年10月 (3) 2015年09月 (6) 2015年08月 (6) 2015年07月 (4) 2015年06月 (4) 2015年05月 (5) 2015年04月 (4) 2015年03月 (6) 2015年02月 (6) 2015年01月 (6) 2014年12月 (10) 2014年11月 (10) 2014年10月 (7) 2014年09月 (5) 2014年08月 (18) 2014年07月 (1) 2014年06月 (1) 2014年05月 (1) 2014年04月 (2) 2014年03月 (10) 阅读排行 支付平台风控系统架构模型设计 (2461) 监控平台架构设计 (1547) Java多线程的调度策略 (1446) 乐观的并发策略——基于CAS的自旋 (1372) tomcat如何避免遭遇ClassNotFoundException (1274) 支付平台PCI认证整改 (1222) 悲观的并发策略——Synchronized互斥锁 (1217) 多线程之Java线程阻塞与唤醒 (1191) 系统支付金额效能监控设计 (1104) 动态令牌认证 (1082) 评论排行 tomcat会话之持久化会话管理器 (3) 集群增量会话管理器——DeltaManager (3) Tomcat的管道 (3) 支付平台风控系统架构模型设计 (2) socket系列之客户端socket——Socket类 (2) 设计一个中间件的访问日志组件 (2) 集群通信组件tribes之使用方法 (2) 从单机到集群会话的管理之集群模式一 (2) 集群通信组件tribes之应用程序处理入口 (2) 管道模式——pipeline与valve (1) 最新评论 Tomcat的管道 JackieLiuLixi : 不错，非常不错，谢谢 连接器与容器的桥梁——CoyoteAdapter CXBY1187819603 : 一般般 NIO模式例子 u013047005 : NIO模式主要优势是体现在对多连接的管理，对众多连接各种事件的转发让处理变得更加高效，所以一般是服务... NIO模式例子 u013047005 : NIO模式主要优势是体现在对多连接的管理，对众多连接各种事件的转发让处理变得更加高效，所以一般是服务... 从单机到集群会话的管理之集群模式一 wangyangzhizhou : @u010786678:一起进步 从单机到集群会话的管理之集群模式一 u010786678 : 谢谢小伙伴的分享，学习了 支付平台风控系统架构模型设计 wangyangzhizhou : @rainbowmiaoyun:黑名单是已经确认了的list，但假如这个黑名单已经合法了是可以从黑名... 支付平台风控系统架构模型设计 rainbowmiaoyun : 很有用处，但是我想了解一下，黑名单和白名单的区别在哪里？黑名单应该是做排除，那么黑名单那块能否处理成... 集群增量会话管理器——DeltaManager wangdan199112 : 没用过，学习啦！ 管道模式——pipeline与valve zhanghongjie0302 : 多谢楼主的分享！

Recno:: 89
URL:: http://blog.csdn.net/woxueliuyun/article/details/45242467

ParseText::
鼠标事件比较与鼠标位置 - 清箫的专栏 - 博客频道 - CSDN.NET 清箫的专栏 生命的可能,贵在自我实现;生命的欠缺,是努力的空间 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 鼠标事件比较与鼠标位置 2015-04-24 09:41 1658人阅读 评论 (2) 收藏 举报 分类： 前端开发 （19） 作者同类文章 X javascipt （30） 作者同类文章 X html （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Mouseenter和mouseover的区别 这两个都是鼠标移入元素内部时触发，它们的区别是mouseenter事件 没有 冒泡阶段，而mouseover事件则有冒泡阶段，这是第一个区别。 第二个区别是触发的几率不一样： 鼠标从元素外进入元素内，一定会触发mouseenter，但不一定触发mouseover。因为mouseover只有当元素有空间被鼠标直接接触到才能触发。即使同时触发，它们的先后顺序在不同的浏览器也有差别：在Chrome42中，mouseenter事件比mouseover事件先派发；在IE5.5-10，Firefox37中，mouseover事件比mouseenter事件先触发。 鼠标从子元素移入当前元素，不会触发mouseenter，但有可能会触发mouseover（前提是当前元素有空间可以被鼠标 直接接触 到）。 有一点需要注意的是，理论上父元素的mouseenter应该比子元素的mouseenter先触发，但在Chrome42中则不一定是这样。当父元素没有空间可以被鼠标直接接触到的时候，鼠标直接移入子元素中，首先触发的是子元素的mousenter，然后才是父元素的mouseenter。 Mouseleave和mouseout的区别 这两个都是鼠标移出元素时触发，它们的区别是mouseleave事件 没有 冒泡阶段，而mouseout事件则有冒泡阶段，这是第一个区别。 第二个区别是触发的几率不一样： 鼠标从元素内移到元素外，两个事件都只触发一次，但它们的先后顺序在不同的浏览器有差别：在Chrome42中，mouseleave事件比mouseout事件先派发；在IE5.5-10，Firefox37中，mouseout事件比mouseleave事件先触发。 鼠标从元素进入子元素，不会触发mouseleave，但会触发mouseout。 Mousedown、mouseup、mousemove 这三个事件都有冒泡阶段，这是它们唯一的共同点。 鼠标在元素上点击（左键、右键，包括中间滚轴点击）的时候就会触发mousedown事件，在拖拽元素的操作中，通常是在这个事件的监听器中记录鼠标点下时的鼠标位置。 Mouseup是鼠标按键松开时，鼠标所在位置直接接触的元素触发的事件。因此，mousedown和mouseup可能不是在同一个元素上触发。 Click、contextmenu与dblclick 在IE5-10和Chrome中，Click仅指鼠标左键和滚轴点击，鼠标右键点击触发的是contextmenu事件。 而在Firefox37，鼠标右键点击同时会触发click事件，而且click事件在contextmenu事件之前触发。 而dblclick是连续两次快速单击鼠标左键触发的事件，常见问题也出在这，因为dblclick同时会触发两次click事件。目前没有完美的方法解决这个问题，所以一般不用dblclick。 Click事件同时包含会触发mousedown和mouseup这两个事件，只有当这两个事件发生在同一个元素上时才会触发click事件。因此其先后顺序是mousedown、mouseup、click。 Mousewheel 这个事件应该说是兼容性最差的鼠标事件，因为Firefox完全不支持。IE6+和Chrome都支持这个事件。 虽然Firefox不支持，但滚轴转动一般也是滚动条在动，因此监听元素的scroll事件即可，所以这个事件一般在应用中很少用，手持设备更没有这个事件。不排除这个事件在将来被淘汰，所以尽量不用。 Window & document上的鼠标事件 IE6-8，window不会派发或接收以上任何鼠标事件，但document可以接收mouseover、mouseout、mousedown、mouseup和mousemove事件。Firefox37，Chrome42和IE9+，在window和document上都可以接受mouseover、mouseout、mousedown、mouseup和mousemove事件。 Chrome42支持document对象触发mouseenter和mouseleave事件，window对象不能触发mouseenter和mouseleave事件。 IE6-10和Firefox37 不 支持document和window触发mouseenter和mouseleave事件。 Body支持触发mouseenter和mouseleave事件，但如果需要监测鼠标是不是在当前窗口，不能完全依靠监听body上的这两个事件来判断。因为body也是有高度的，不一定能撑满整个窗口。兼容性最好的方法是监听document的mouseover和mouseout事件。 需要额外注意的是，在IE和Chrome中，鼠标即使在元素上没有移动，每隔一小段时间仍然会触发mousemove事件，而Firefox则不会。 鼠标位置 屏幕坐标 – event.screenX, event.screenY screenX和screenY带表的是鼠标在整个屏幕上的坐标。 窗口坐标-event.clientX, event.clientY 这个鼠标在浏览器客户窗口区域（实际展示页面的那部分）的坐标。客户窗口区域不包括浏览器内部出现的滚动条和其他窗口附件（比如firebug）。 不管是横坐标还是纵坐标，鼠标客户坐标一般都比屏幕坐标要小，因为浏览器最外层一般是有框的。 在支持position:fixed的浏览器中，这两个属性是非常有用的，尤其是clientY对应的就是fixed定位的y坐标。 元素坐标-event.offsetX,event.offsetY 当鼠标事件发生在某个元素上时，这个坐标就是鼠标相对于元素最左上角的一个坐标，最大坐标值取决于元素的大小。也就是说这个坐标是元素内部坐标系的一个新坐标，只跟元素大小有关，原点位于元素最左上角。 IE5-10和Chrome都支持着两个属性，但在Firefox是没有这两个属性的。 这两个属性在拖拽元素的时候比较有用，利用这两个值可以保证鼠标在拖的过程中一直位于初始点击元素的位置。但因为Firefox不支持着两个属性，导致这个计算有些复杂。好在从Firefox3开始元素就支持getBoundingClientRect()方法，通过这个方法可以获取元素相对于浏览器窗口的坐标。然后使用鼠标事件的窗口坐标减去元素的窗口坐标就是相对元素左上角的偏移坐标，也就是offsetX和offsetY了。 移动偏移向量-event.movementX,event.movementY 这两个值是两个鼠标移动事件间隔时间中当中鼠标移动的相对坐标，计算方式是： currentEvent.movementX =currentEvent.screenX - previousEvent.screenX 。 目前只有Firefox，Chrome支持这两个属性。 上一篇 HTML焦点与键盘事件 下一篇 前端跨域数据访问 顶 1 踩 0 我的同类文章 前端开发 （19） javascipt （30） html （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 woxueliuyun 访问： 345061次 积分： 4894 等级： 积分：4894 排名： 第3063名 原创： 133篇 转载： 17篇 译文： 12篇 评论： 71条 文章搜索 文章分类 c++ (2) Flex (9) hibernate (6) html (15) j2ee (27) javascipt (31) MySQL (1) oracle (2) UML (1) VC (4) windows (9) 学习 (19) 汇编 (2) 网络 (4) 计算机组成原理 (2) 软件工程 (5) 移动 (1) 版本控制 (3) interface (8) 前端开发 (20) 架构 (1) jsp (1) security (1) java (6) 设计模式 (4) build (2) 正则表达式 (1) CSS (3) 文章存档 2015年12月 (3) 2015年09月 (1) 2015年07月 (1) 2015年06月 (2) 2015年05月 (3) 2015年04月 (8) 2015年01月 (2) 2014年12月 (1) 2014年11月 (3) 2014年09月 (2) 2014年07月 (1) 2014年03月 (3) 2014年02月 (2) 2014年01月 (1) 2013年10月 (4) 2013年08月 (1) 2013年06月 (1) 2013年05月 (1) 2013年04月 (3) 2013年03月 (4) 2013年02月 (2) 2013年01月 (2) 2012年12月 (4) 2012年07月 (1) 2012年06月 (4) 2012年04月 (1) 2011年09月 (2) 2011年06月 (1) 2011年05月 (1) 2011年03月 (2) 2010年05月 (1) 2010年03月 (1) 2010年02月 (2) 2009年12月 (2) 2009年11月 (1) 2009年10月 (4) 2009年09月 (2) 2009年06月 (2) 2009年05月 (8) 2009年04月 (4) 2009年03月 (5) 2009年02月 (17) 2009年01月 (5) 2008年12月 (9) 2008年05月 (3) 2008年04月 (1) 2008年03月 (5) 2008年02月 (7) 2008年01月 (17) 2007年12月 (3) 2007年11月 (1) 2007年08月 (1) 阅读排行 随机函数rand()[c++] (29043) package.json字段全解 (13515) window.open()打开窗口的几种方式 (12286) Hibernate配置过程可能发生的问题及解决方法 (10416) document.createElement()介绍与用法 (9884) 详解HttpURLConnection (9769) Form表单传递数组 (9660) War包 (9292) offsetHeight, clientHeight与scrollHeight的区别 (9286) Arrays.copyOf()&Arrays.copyOfRange() (8599) 评论排行 Hibernate配置过程可能发生的问题及解决方法 (8) 随机函数rand()[c++] (7) 垂直居中的几种方法比较（纯CSS） (5) 高效回文判断方法(java) (5) DataTable在支持滚动时的实现方式与遗留问题 (4) Log4j 2 XML 配置 (3) org.hibernate.dialect.MySQLInnoDBDialect与org.hibernate.dialect.MySQLMyISAMDialect (3) package.json字段全解 (3) 什么时候使用JavaScript (3) revealTrans的神奇运用 (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 HTTP Cache如何计算Age buwuzhe90 : 博主您好！这里一直有个不明白的地方，希望博主能指点：response_time - date_val... HTTP Cache如何计算Age buwuzhe90 : 博主您好！这里一直有个不明白的地方，希望博主能指点：response_time - date_val... 垂直居中的几种方法比较（纯CSS） mevicky : @woxueliuyun:嗯，向你学习 垂直居中的几种方法比较（纯CSS） woxueliuyun : @mevicky:多谢提醒，因为你说的这些支持性还不是很好，比如IE9不支持flex，所以一般不使用... 垂直居中的几种方法比较（纯CSS） mevicky : 还有很多居中方法 比如利用transform。flex等等 package.json字段全解 jiangcaiyang123 : 博主您好。我也是新写这样的模块，请问package.json这个文件是要程序生成的吗？还是说这些字段... 元素样式控制 clover1107 : 楼主好啊！看到你的博客写了很多web前端的内容，很钦佩，目前我们也在这方面的课程，不知道你有没有兴趣... 详解HttpURLConnection GXG_HONEYLOVE : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 eclipse3.2下解决数据插入mysql数据库时乱码无法插入问题(Hibernate) chenyanmoting : 学习了，给个赞 DataTable在支持滚动时的实现方式与遗留问题 woxueliuyun : @koki_cy:不好意思，回复晚了，不是经常在线。不让它换行只能通过样式td{white-spac...

Recno:: 90
URL:: http://blog.csdn.net/youxin2012/article/details/17083261

ParseText::
KMP算法原理与实现（精简） - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] KMP算法原理与实现（精简） 标签： 算法 kmp 2013-12-02 23:10 9008人阅读 评论 (8) 收藏 举报 分类： 面向对象编程 （37） 作者同类文章 X 数据结构与算法 （11） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 思想：使源字符串中的下标不回溯，利用模式字符串自身的相关性，减少模式字符串中下标回溯的距离。从而减少比较的次数。 关键问题： 分析模式字符串，得出 部分匹配值数组。 原理参考 此处 。 具体实现： #include <stdio.h> #include <string.h> #include <malloc.h> void get_next(int next[], char source[], int n);//获取部分匹配字符数组 int Index_KMP(char* s_string, char* t_string, int pos);//返回源字符串s_string中pos开始 与t_string匹配的第一个字符串首字母下标，无匹配返回0 int main() { char *source_str = "BBC ABCDAB ABCDABCDABDE"; char *t_str = "ABCDAB";//模式串 printf("%d\n", Index_KMP(source_str, t_str, 8)); return 0; } void get_next(int next[], char source[], int n) { int i = 0; next[0] = 0; for(i = 1; i < n; i++) { if(source[i] == source[next[i-1]]) next[i] = next[i-1] + 1; else next[i] = 0; } } int Index_KMP(char* s_string, char* t_string, int pos) { int i = pos;//指向 s_string的起始下标 int j = 0;//指向 t_string的起始下标 int t_len = strlen(t_string); int s_len = strlen(s_string); int* t_next = (int*)malloc(sizeof(int)*t_len); int m; get_next(t_next, t_string, t_len);//获取t_string的部分匹配字符数组 for(m = 0; m < t_len; m++) printf("%d ",t_next[m]); printf("\n"); while( (i<s_len)&&(j<t_len) ) { if(s_string[i] == t_string[j]) { i++; j++; } else { if(j == 0) { i++; //源字符串下表前移动 } else { m = j - t_next[j-1];//需回溯的位数 j = j - m;//设置下一次的起始坐标 } } } free(t_next); if(j==t_len) return i-t_len; else return 0; } 顶 5 踩 0 我的同类文章 面向对象编程 （37） 数据结构与算法 （11） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375721次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章搜索

Recno:: 91
URL:: http://blog.csdn.net/youxin2012/article/details/44018097

ParseText::
java 相对路径获取 -- getResource的应用 - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 java 相对路径获取 -- getResource的应用 2015-03-02 14:46 611人阅读 评论 (0) 收藏 举报 分类： java开发 （12） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 （一）函数：      （1）   Class.getResource(String path)                 （2）    Class.getClassLoader.getResource(String path) 其中（2）中 path不能以'/'开头 （1）中path 开头有无'/' 均可，含义不同 （二） 测试目录结构： |--project        |--src                |--mytest                        |--RePathTest.java                        |--file1.txt                |--file2.txt        |--bin                |--mytest                        |--RePathTest.class                        |--file3.txt                |--file4.txt （三）用法： （2）中  默认是从ClassPath （即 bin 或 classes路径）下获取 本例中： File  file3  =  new  File(RePathTest. class .getClassLoader().getResource( "mytest/file3.txt" ).getFile());     File  file4  =  new  File(RePathTest. class .getClassLoader().getResource( "file4.txt" ).getFile()); （1）中  a. 以'/'开头，而表示从 ClassPath （即 bin 或 classes路径）下获取 本例中： File  file3  =  new  File(RePathTest. class .getResource( "/mytest/file3.txt" ).getFile()); // 从classpath 即 bin下找  b. 不以 '/'开头，表示相对于  RePathTest.class 的路径 本例中： File  file3  =  new  File(RePathTest. class .getResource( "file3.txt" ).getFile());   // 从 package mytest 包  找，相对于 .class（此处为   RePathTest. class  ）文件 （四）   getResourceAsStream()   vs  getResouce() getResourceAsStream()方法，参数是与getResouce()方法是一样的，它相当于你用getResource()取得File文件后， 再new InputStream(file)一样的结果 （五）补充 1. web中以 WEB-INF中classes文件为classpath目录 2. getResource 获取路径与 .class文件夹有关，与 .java文件夹无关 （六）测试 package  mytest; import  java.io.BufferedReader; import  java.io.File; import  java.io.FileNotFoundException; import  java.io.FileReader; import  java.io.IOException; public   class  RePathTest {     RePathTest  Test  =  new  RePathTest();      public   static   void  main(String[]  args )  throws  FileNotFoundException {     File  file3  =  new  File(RePathTest. class .getResource( "file3.txt" ).getFile());      //File file3 = new File(RePathTest.class.getResource("/ mytest /file3. txt ").getFile());      //File file3 = new File(RePathTest.class.getClassLoader().getResource(" mytest /file3. txt ").getFile());          FileReader  fr  =  new  FileReader( file3 );     BufferedReader  br  =  new  BufferedReader( fr );      try  {         String  line  =  br .readLine();          while  ( line  !=  null ) {             System. out .print( line );              line  =  br .readLine();         }     }  catch  (IOException  e ) {          e .printStackTrace();     }      //File file4 = new File(RePathTest.class.getResource("/file4. txt ").getFile());      //File file4 = new File(RePathTest.class.getClassLoader().getResource("file4. txt ").getFile());          } }    参考： http://blog.163.com/ygm0104@126/blog/static/1697674882011112045456653/ http://www.cnblogs.com/javayuer/archive/2011/01/02/1924192.html 上一篇 tomcat 热加载 下一篇 java反编译工具jad及jadclipse 顶 0 踩 0 我的同类文章 java开发 （12） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375722次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章存档 2015年12月 (3) 2015年11月 (1) 2015年06月 (3) 2015年05月 (2) 2015年03月 (1) 2015年02月 (1) 2015年01月 (2) 2014年12月 (1) 2014年11月 (4) 2014年09月 (3) 2014年08月 (1) 2014年07月 (2) 2014年06月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年02月 (3) 2014年01月 (1) 2013年12月 (8) 2013年11月 (6) 2013年10月 (8) 2013年09月 (6) 2013年08月 (3) 2013年07月 (2) 2013年06月 (4) 2013年05月 (11) 2013年04月 (6) 2013年03月 (7) 2013年02月 (3) 2013年01月 (20) 2012年12月 (2) 2012年10月 (3) 文章搜索

Recno:: 92
URL:: http://blog.csdn.net/youxin2012/article/details/45424489

ParseText::
eclipse应用技巧 - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 eclipse应用技巧 标签： ide 规范 2015-05-01 23:39 472人阅读 评论 (0) 收藏 举报 分类： java开发 （12） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近发现eclipse作为ide还是有很多值得探索的使用技巧的，转载一下他人整理好的资源以做分享。 快捷键 的使用，加速开发 codestype 配置，规范代码风格 上一篇 java反编译工具jad及jadclipse 下一篇 java中访问修饰符 顶 0 踩 0 我的同类文章 java开发 （12） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375724次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章存档 2015年12月 (3) 2015年11月 (1) 2015年06月 (3) 2015年05月 (2) 2015年03月 (1) 2015年02月 (1) 2015年01月 (2) 2014年12月 (1) 2014年11月 (4) 2014年09月 (3) 2014年08月 (1) 2014年07月 (2) 2014年06月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年02月 (3) 2014年01月 (1) 2013年12月 (8) 2013年11月 (6) 2013年10月 (8) 2013年09月 (6) 2013年08月 (3) 2013年07月 (2) 2013年06月 (4) 2013年05月 (11) 2013年04月 (6) 2013年03月 (7) 2013年02月 (3) 2013年01月 (20) 2012年12月 (2) 2012年10月 (3) 文章搜索

Recno:: 93
URL:: http://blog.csdn.net/youxin2012/article/details/8548647

ParseText::
微软面试题 经典测试（推理题） - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 微软面试题 经典测试（推理题） 2013-01-28 13:46 3930人阅读 评论 (10) 收藏 举报 分类： 经典面试题 （9） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。         教授选出两个从 2 到 9 的数，把它们的和告诉学生甲，把它们的积告诉学生乙，让他们轮流猜这两个数   　　甲说： “ 我猜不出 ”  　　乙说： “ 我猜不出 ”  　　甲说： “ 我猜到了 ”  　　乙说： “ 我也猜到了 ”  　　问这两个数是多少           参考答案 见后文   http://blog.csdn.net/youxin2012/article/details/8551750 上一篇 微软面试题 经典测试 （博弈论 经典案例） 下一篇 微软面试题 经典测定 （1） （参考答案） 顶 3 踩 1 我的同类文章 经典面试题 （9） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375726次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章存档 2015年12月 (3) 2015年11月 (1) 2015年06月 (3) 2015年05月 (2) 2015年03月 (1) 2015年02月 (1) 2015年01月 (2) 2014年12月 (1) 2014年11月 (4) 2014年09月 (3) 2014年08月 (1) 2014年07月 (2) 2014年06月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年02月 (3) 2014年01月 (1) 2013年12月 (8) 2013年11月 (6) 2013年10月 (8) 2013年09月 (6) 2013年08月 (3) 2013年07月 (2) 2013年06月 (4) 2013年05月 (11) 2013年04月 (6) 2013年03月 (7) 2013年02月 (3) 2013年01月 (20) 2012年12月 (2) 2012年10月 (3) 文章搜索

Recno:: 94
URL:: http://blog.csdn.net/youxin2012/article/details/8757814

ParseText::
快速排序 算法 详解 及 深度优化 - Just To Be - 博客频道 - CSDN.NET Just To Be 记录与分享 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 快速排序 算法 详解 及 深度优化 2013-04-03 22:54 3558人阅读 评论 (5) 收藏 举报 分类： 面向对象编程 （37） 作者同类文章 X 数据结构与算法 （11） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 下面简介经典算法  快速排序算法 实现及优化。 （ 欢迎大家指点，继续提出优化的方法，共同提高 ） 基本思想：（以按从小到大排序为例说明）通过多次的排序，每次的排序均将要排序的数组分为两部分，前一部分均比中间值小，后一部分均比中间值大，这样重复递归下去将每一部分按相同的思路进行分割，最终使整个数组达到从小到大有序排列。 较冒泡排序的优点：同为通过不断的比较和移位来得到有序数组，但快排增大了比较和移动的距离，使关键字大的能从最前移到最后，关键字小的能从叫最后移到最前，从而减少了比较和移动的次数。 关键代码： int Qsort(int arr[], int low, int high)//len不包括arr[0] { int pivot; if (low < high) { pivot = Partition(arr, low, high);//分成两组 Qsort(arr, low, pivot - 1);//数组 low~pivot-1 的元素均比pivot小 Qsort(arr, pivot + 1, high); //数组 pivot+1~high 的元素均比pivot大 } return 0; } int Partition(int arr[], int low, int high) { int pivot = arr[low]; while (low < high) { while(low < high && arr[high] >= pivot) high--; swap(arr, low, high);//处理数组的后部分，将比 pivot小的移到前面 while(low < high && arr[low] <= pivot) low++; swap(arr, low, high); //处理数组的前部分，将比 pivot大的移到后面 } return low;//当low,high指向同一值时退出循环,此时low,high指向pivot } int swap(int arr[], int low, int high) { int temp; temp = arr[low]; arr[low] = arr[high]; arr[high] = temp; return 0; } 以上为 基本 快拍算法的实现。可通过下面测试验证： #include <stdio.h> #include <string.h> #include <stdlib.h> int array[50] = {0,3,6, 7,6,8,23,46,8,23,75,23,11,84,2,56,32}; int Partition(int arr[], int low, int high); int Qsort(int arr[], int low, int high);//len不包括arr[0] int swap(int arr[], int low, int high); int main() { int i; int len = 20; Qsort(array, 1, len); for (i = 0; i <len; i++) { printf("%d ",array[i]); } return 0; } 复杂度分析： 当选取的pivot为中间值时，递归树是平衡的，此时性能较好。因为分成的两端，在递归划分是能进行最少次数的划分。此时，复杂度为O(logn)，而当 最坏的情况，即pivot为最大时，将出现极端情况，此时复杂度为O（n）。具体推到可参考其他资料～ 优化： 1.优化选取的枢纽。避免出现极端情况 思想：选多个数，取中间值作为pivot  2.优化不必要的交换 思想：arr[ow] = arr[high] 行，采用替换，而不是交换的方式进行优化。 int Partition(int arr[], int low, int high) { int pivot = arr[low]; while (low < high) { while(low < high && arr[high] >= pivot) high--; arr[low] = arr[high]; while(low < high && arr[low] <= pivot) low++; arr[high] = arr[low]; } arr[low] = pivot; return low; } 3.优化小数组排序方案 思想：快排适合 数组较大时的排序，较少时不如简单排序。 方案：Qsort()排序对数组大小进行判断，选择适当的排序。 4.优化递归操作 思想：过多递归占用大量堆栈，同时入栈退栈浪费大量时间，改为迭代 int Qsort(int arr[], int low, int high)//len不包括arr[0] { int pivot; while (low < high) { pivot = Partition(arr, low, high);//分成两组 Qsort(arr, low, pivot - 1); low = pivot + 1; //Qsort(arr, pivot + 1, high); } return 0; } 讲解完毕。 欢迎大家提更多方案。 上一篇 protected,public,private 的区别 下一篇 常用排序算法 的分析与对比 顶 2 踩 1 我的同类文章 面向对象编程 （37） 数据结构与算法 （11） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 youxin2012 访问： 375725次 积分： 4292 等级： 积分：4292 排名： 第3760名 原创： 107篇 转载： 18篇 译文： 0篇 评论： 237条 文章分类 面向对象编程 (38) 数据结构与算法 (12) 计算机网络与编程 (9) 操作系统 (11) 数据库操作 (2) Linux开发 (10) Windows开发 (9) 经典面试题 (10) 博文精选 (11) 开发工具 (5) java开发 (13) 设计模式 (1) jvm (1) 阅读排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (73237) C++ string中find() ，rfind() 等函数 用法总结及示例 (29932) WebApp实时开源框架Clouda---认识心得 (27656) 虚拟机 网络模式简介 及桥接模式设置 (27318) WebApp实时开源框架Clouda入门使用与记录 (9220) KMP算法原理与实现（精简） (9008) MinGW的安装 （可在windows 下 使用Linux 环境进行gcc编程） (7490) 微软面试题 经典测试 （博弈论 经典案例） (6200) Python的字典操作 (5675) C/C++经典书籍推荐 (5470) 评论排行 cs硕士妹子找工作经历【阿里人搜等互联网】 (144) 从此刻立志——我要做大牛 (13) 微软面试题 经典测试（推理题） (10) KMP算法原理与实现（精简） (8) 读《黑客与画家》--关于创业问题的思考 (6) WebApp实时开源框架Clouda---认识心得 (6) 快速排序 算法 详解 及 深度优化 (5) 微软面试题 经典测试 （博弈论 经典案例） (4) WebApp实时开源框架Clouda入门使用与记录 (4) C/C++经典书籍推荐 (3) 文章存档 2015年12月 (3) 2015年11月 (1) 2015年06月 (3) 2015年05月 (2) 2015年03月 (1) 2015年02月 (1) 2015年01月 (2) 2014年12月 (1) 2014年11月 (4) 2014年09月 (3) 2014年08月 (1) 2014年07月 (2) 2014年06月 (3) 2014年05月 (3) 2014年04月 (1) 2014年03月 (1) 2014年02月 (3) 2014年01月 (1) 2013年12月 (8) 2013年11月 (6) 2013年10月 (8) 2013年09月 (6) 2013年08月 (3) 2013年07月 (2) 2013年06月 (4) 2013年05月 (11) 2013年04月 (6) 2013年03月 (7) 2013年02月 (3) 2013年01月 (20) 2012年12月 (2) 2012年10月 (3) 文章搜索

Recno:: 95
URL:: http://blog.csdn.net/yuanziok/article/details/49994337

ParseText::
农商行信息化建设过程中存在哪些问题？ - IT小牛的IT见解 - 博客频道 - CSDN.NET IT小牛的IT见解 资深IT人士吐血打造IT专业博客，贡献给广大网民最干货的企业信息化建设方案和工具的分析、点评。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 农商行信息化建设过程中存在哪些问题？ 标签： 农商行 信息化建设 2015-11-23 14:09 508人阅读 评论 (0) 收藏 举报 分类： 信息化系统 （2） 作者同类文章 X 银行行业 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 大数据时代已然来临，作为对数据的依赖性极强的金融行业，信息数据处理能力对农商行的重要性越来越强烈。这个时候引入对大数据的处理能力比较完备、解决方案也相对成熟的商业智能系统，对农商行等金融企业就成了一件十分必要的事情。商业智能被成为企业信息化的最后一公里，是企业提高自身信息化水平无法跨越的台阶。 从企业新系统上线开始，随着银行的业务不断拓展，信息化应用的不断深入，因此也会有不少的系统陆续投产。这些系统的投产一方面支持了银行业务和信息化的发展，但另一方面也暴露出一些新的问题，通过对这些系统进行分析， 那么在农商行等金融行业企业实施商业智能系统的过程中，需要注意哪些问题呢？以下内容根据帆软软件有限公司银行业信息化顾问杨扬的某些观点整理而来。 信息化存在的问题 1. 大量的业务数据难以充分利用 传统的业务系统产生的业务明细数据，虽然包含着大量对决策非常有价值的信息，但由于它们的组织方式是面向业务应用而不是面向管理，从中抽取有价值信息的难度非常大，所花费的代价很高（投入的IT人员和时间）。而且，随着基础业务系统将来不断的改进和扩充，这些数据将逐渐具 备如下的特点： ●异构的数据结构； ●不同的数据库； ●分布存放； ●各级行社利用率不一； ●数据量极大。 这将造成难于全面、综合地掌握和利用在经营过程中得到的信息。 2.各级行式建立自己的管理驾驶舱，资源重复浪费，无法形成有效聚力； 3.基于传统联机业务处理技术的查询系统，面对分析人员随时发生变化的需求， 不够灵活，不能即时地动态生成报表； 4.面对海量数据，基于传统联机业务处理技术的查询系统在执行复杂、大量计算 的查询、分析、监控方面将表现出极低的效率； 5.查询系统和基础业务系统相互干扰； 6.多个业务系统，可能导致多个查询系统，使用起来非常不方便； 7.多个查询系统会导致统计口径存在差异，从而引起数据的不一致性，甚至错误 数据，可能误导决策； 8.同时从多个查询系统中发掘有价值的数据，需要通过人工的方法汇总加工，这样势必降低时效性和准确性； 9.查询系统不仅在统计和报表方面缺乏灵活和自由，而且缺乏对数据的分析和挖掘功能，不能发现隐藏在数据后面的有价值的信息。 10.查询系统不能够监控和预测风险。 这些问题如何解决？ 综上所述，目前迫切需要搭建一个符合银行特色的商业智能平台，把需要的数据和信息集中起来，统一管理。在此基础上进行多角度、全方位的分析，如绩效考核、大客户分析、经营指标分析、关系营销分析、风险分析、员工行为监测（EAST监管）等，提升银行的运营能力，增强企业的竞争力；更进一步是对信息灵活地进行深度加工、分析，实现对风险监控、风险预测、决策分析等工作的支持。达到寻找潜在市场、潜在客户和和发掘商机的目的，为银行开拓业务、降低风险提供依据。 ［文章原作者：帆软传说哥，微信号：frbiaoge 。］   上一篇 如何规划农商行商业智能系统中的决策分析系统？ 下一篇 化工企业数据分析报表系统项目之销售模块分析 顶 0 踩 0 我的同类文章 信息化系统 （2） 银行行业 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 yuanziok 访问： 83468次 积分： 1775 等级： 积分：1775 排名： 第13331名 原创： 77篇 转载： 0篇 译文： 0篇 评论： 104条 文章搜索 文章分类 知识科普 (5) IT产品论 (4) IT秘籍 (24) IT茶社 (3) 保险行业 (2) BI报表 (4) 实例 (4) 技术架构 (2) 数据仓库解析 (1) 能源企业 (1) 信息化系统 (3) 客户管理 (1) 数据分析 (5) 银行行业 (2) 商业智能 (1) 决策分析 (2) 化工企业 (3) 销售模块 (1) 应收款模块 (1) 采购模块 (1) 大数据 (1) 管理要素 (1) 数据化 (2) 制药企业 (2) 报表核算 (0) 电力企业 (4) 信息化 (3) 调度信息 (2) 整体解决 (1) 文章存档 2015年12月 (11) 2015年11月 (11) 2015年10月 (2) 2015年09月 (8) 2015年08月 (11) 2015年07月 (6) 2015年04月 (7) 2015年03月 (14) 2015年02月 (1) 2014年12月 (3) 2014年07月 (1) 2014年05月 (2) 阅读排行 正确选择报表工具的十大标准 (22544) 价值5000元的web报表分享 (3810) 绝对干货：保险公司决策分析系统建设方案 (3446) 报表引擎API开发入门—带参程序数据集 (1823) web报表工具FineReport常用函数的用法总结（文本函数） (1684) 报表填报时，如何实现多个单元格绑定一个字段？ (1657) 电信业务支撑报表系统解决方案 (1587) web报表工具FineReport常用函数的用法总结（日期和时间函数） (1562) 报表软件公司悬赏 BUG，100块钱1个的真实用意 (1498) FineReport性能调优的一些办法 (1426) 评论排行 绝对干货：保险公司决策分析系统建设方案 (40) 正确选择报表工具的十大标准 (13) 价值5000元的web报表分享 (7) 报表引擎API开发入门—带参程序数据集 (7) web报表工具FineReport常用函数的用法总结（文本函数） (3) 巧用FineReport搭建成本管控监测系统 (3) 在开发过程中调试报表插件详细教程 (3) 如何对报表的参数控件赋值 (2) 报表与微信公众号(企业号)集成方案 (2) 报表填报时，如何实现多个单元格绑定一个字段？ (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 电力企业信息化系统主要报表展示 ikkmme28206 : 支持一个！ 化工企业数据分析中心项目之采购模块分析 u012466304 : 突然觉得程序员都懂得好多 化工企业数据分析中心项目之采购模块分析 u010786678 : 感谢楼主的分享，学习了！！ （干货分享）农商行中商业智能建设的整体思路与架构 ggf123456789 : 学习了，呵呵～ 能源企业信息化系统中的典型客户管理数据分析模块展示 u012377333 : 不错， 财务报表开发实例分析：几个通用维度介绍与关键点 laotou99 : 长财务知识了，谢谢博主 报表session与应用session常识普及 wangdan199112 : 写的真心好，学习了！ 报表session与应用session常识普及 u010786678 : 严格的讲，做不到这一点。可以做一点努力的办法是在所有的客户端页面里使用javascript代码win... 报表性能优化方案之多种报表服务器内存修改方法 lipintang0825 : 很有帮助 报表性能优化方案之单数据集分页SQL实现层式报表 IThuabanxie : 感谢楼主分享，学习了

Recno:: 96
URL:: http://blog.csdn.net/yuanziok/article/details/50143999

ParseText::
大数据时代下的“管理”要素数据化 - IT小牛的IT见解 - 博客频道 - CSDN.NET IT小牛的IT见解 资深IT人士吐血打造IT专业博客，贡献给广大网民最干货的企业信息化建设方案和工具的分析、点评。 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 大数据时代下的“管理”要素数据化 标签： 大数据时代 管理要素 数据化 2015-12-02 09:58 601人阅读 评论 (0) 收藏 举报 分类： 大数据 管理要素 数据化 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 注： 本文 为 帆软软件总经理陈炎在2015 中国数据分析师行业峰会上的演讲 记录。   今天，我要跟大家分享的是“ 管理数据化”。 联想的柳传志先生说过，管理三要素：建班子，定战略，带队伍。中国典型的建班子思维，都是通过望闻问切来选人和用人，这个弊端大家都知道，但是以大数据兴起的基于互联网的技术，能解决建班子的数据化。     带队伍对于企业来说，其实就是对中低层员工工作过程进行量化。对于员工来说，工作量化了之后，他随时能知道自己的进展，自我改进。对于管理者来说，我随时能监控，随时指出来不足。   但在带队伍过程中，在数据化过程中我们发现有两个痛点，一个痛点就是说，我们的管理越细，报表数量越来越多，一个产业有多个部门，接口要量化过程，就会产生报表数量的大爆炸。我指的报表是广义的，包含大家传统理解的固定报表，交互报表，查询报表，统计报表，或者分析报表。   这个就是典型的中国式复杂报表： 除了表格还是表格，表格嵌表格，这个对中 低 层员工是最 不 简单明了的，酷眩的仪表板对他们来说可能就是一种负担。十年以前，帆软就研发了一款产品，通过快速制作中国式复杂报表来解决以上两个痛点。 其实我们业务人员和IT 人员合作时还面临一个痛点，就是这些报表制作出来没有人看。为了有效解决看的问题， 我们可以从四个角度解决这个问题 ： 第一，强制大屏展示。 像在办公室，或者在办公室通过大屏展示，让大家每天都被激励。 第二是主动推送 ，我们有一个客户，是行业的领军企业，它面临一个困难，就是办事流程没有明显的提高。这个时候有人说是系统难用，有人说是由于员工拖沓。这个公司的安全人员和业务人员就一起做了刚刚那样一套流程绩效分析报表，报表虽然简单，但是一年之后他们发现了自己公司的流程效率大约提高了80% 。 第三是报表移动化。 还有很多公司说可能每个月都要开月度经营会，常见的方法就是找下数或者安全人员要数据做PPT ，最后还是逃不了每个月加班写报告的“生理期”。这里有我们一个客户，他IT人员把月度经营的报表全部移动化，最后他们每个月开会的时候就是基于IPAD开会，连着投影仪，原来月度经营后要月中开，现在可以月初开了。 第四是PC 端查看。 我们中基层员工数据化的过程中，经常会发现数据缺失，这些数据要么是存在表格里，要么存在不开放的数据库里，要么是存在互联网上，这时候我们需要有数据自动补录这个功能，当然填报就可以很好的实现数据补录。 刚才讲了带队伍，现在回到定战略，这里面有大师的经典理论。 信息化角度定战略要有三点： 第一个是整合信息系统数据，有大量的明细数据。 第二个是来自互联网外部数据。要导入大量的外部数据，比如说行业标杆企业的数据，这些数据可能存在互联网上或者存在表格上，这给大家带来一个挑战，数据量更大。 第三还要结合管理思维，管理思维要跟数据结合才能产生化学反应，管理思维一般擅长的都是非技术人员，这也是一个挑战。 这些是大家常见工具： R 和Python 数据专家，还有Hadoop，这跟大数据要结合起来。还有就是常用的表格，这是大家用的最多的，但是它有两个短板，不能解决多数据量，还有大数据量，希望微软能解决这个问题。还有Cogno这个工具，可能是目前最先进的，要解决大数据量和分析的要用它，包括企业业务调整速度，包括有帆软的新的工具。   大数据时代的到来，大家可能谁都想成为数据管理专家，站在数据之巅。其实这我要引用任正非的一句话，大数据时代不要太机会主义。数据分析不要只是为中高层人员管控员工服务，盯员工用，我们的客户早些年做了一些领导用的，领导驾驶舱。起先看是高大上，随后是假大空，谁都不能保证数据的准确。其实我们量化工薪层员工的工作，是让他们发现自己的工作不足，驱动、改良，而不是上面管着下面。   还有一个误区，不要指望人人都是数据分析师，特别是传统企业，80% 的员工可能更适合做报表的查看者而不是报表的创作者，对他们来说就是踏踏实实做好眼下的事，比成天梦想着改变世界更好。这个地方应该也是以IT中心为主导的数据分析，和以业务人员主导的数据分析应该是共存的，或者是长期存在的。   另外，就是大家买工具的时候，不要追求功能多而且便宜，其实我们就是一个受害企业，中国的知识产权环境非常不好，国外开源任我翻译，国内开源任我侵权。一些工具大而全，便宜的原因就是在于，奥秘就在这儿。 上一篇 化工企业数据分析中心项目之采购模块分析 下一篇 制药企业核算报表系统整体方案 顶 1 踩 0 我的同类文章 数据化 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 yuanziok 访问： 83470次 积分： 1775 等级： 积分：1775 排名： 第13331名 原创： 77篇 转载： 0篇 译文： 0篇 评论： 104条 文章搜索 文章分类 知识科普 (5) IT产品论 (4) IT秘籍 (24) IT茶社 (3) 保险行业 (2) BI报表 (4) 实例 (4) 技术架构 (2) 数据仓库解析 (1) 能源企业 (1) 信息化系统 (3) 客户管理 (1) 数据分析 (5) 银行行业 (2) 商业智能 (1) 决策分析 (2) 化工企业 (3) 销售模块 (1) 应收款模块 (1) 采购模块 (1) 大数据 (1) 管理要素 (1) 数据化 (2) 制药企业 (2) 报表核算 (0) 电力企业 (4) 信息化 (3) 调度信息 (2) 整体解决 (1) 文章存档 2015年12月 (11) 2015年11月 (11) 2015年10月 (2) 2015年09月 (8) 2015年08月 (11) 2015年07月 (6) 2015年04月 (7) 2015年03月 (14) 2015年02月 (1) 2014年12月 (3) 2014年07月 (1) 2014年05月 (2) 阅读排行 正确选择报表工具的十大标准 (22544) 价值5000元的web报表分享 (3810) 绝对干货：保险公司决策分析系统建设方案 (3446) 报表引擎API开发入门—带参程序数据集 (1823) web报表工具FineReport常用函数的用法总结（文本函数） (1684) 报表填报时，如何实现多个单元格绑定一个字段？ (1657) 电信业务支撑报表系统解决方案 (1587) web报表工具FineReport常用函数的用法总结（日期和时间函数） (1562) 报表软件公司悬赏 BUG，100块钱1个的真实用意 (1498) FineReport性能调优的一些办法 (1426) 评论排行 绝对干货：保险公司决策分析系统建设方案 (40) 正确选择报表工具的十大标准 (13) 价值5000元的web报表分享 (7) 报表引擎API开发入门—带参程序数据集 (7) web报表工具FineReport常用函数的用法总结（文本函数） (3) 巧用FineReport搭建成本管控监测系统 (3) 在开发过程中调试报表插件详细教程 (3) 如何对报表的参数控件赋值 (2) 报表与微信公众号(企业号)集成方案 (2) 报表填报时，如何实现多个单元格绑定一个字段？ (2) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 电力企业信息化系统主要报表展示 ikkmme28206 : 支持一个！ 化工企业数据分析中心项目之采购模块分析 u012466304 : 突然觉得程序员都懂得好多 化工企业数据分析中心项目之采购模块分析 u010786678 : 感谢楼主的分享，学习了！！ （干货分享）农商行中商业智能建设的整体思路与架构 ggf123456789 : 学习了，呵呵～ 能源企业信息化系统中的典型客户管理数据分析模块展示 u012377333 : 不错， 财务报表开发实例分析：几个通用维度介绍与关键点 laotou99 : 长财务知识了，谢谢博主 报表session与应用session常识普及 wangdan199112 : 写的真心好，学习了！ 报表session与应用session常识普及 u010786678 : 严格的讲，做不到这一点。可以做一点努力的办法是在所有的客户端页面里使用javascript代码win... 报表性能优化方案之多种报表服务器内存修改方法 lipintang0825 : 很有帮助 报表性能优化方案之单数据集分页SQL实现层式报表 IThuabanxie : 感谢楼主分享，学习了

Recno:: 97
URL:: http://my.csdn.net/itmyhome

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 517 关注 816 粉丝 麦田 互联网·电子商务 | 软件工程师 | 中国-北京-海淀区 | 男 | 1990-4-13 生命本来就是一束耀眼的花火... V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 517 人 被关注： 816 人

Recno:: 98
URL:: http://my.csdn.net/leftfist

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 5 关注 717 粉丝 左直拳 计算机软件 | 高级软件工程师 | 中国-广东省-广州市 | 男 | 1974-6-1 1、熟悉C#，ASP.NET MVC，JavaScript，有数年互联网项目工作经验，擅长WEB、B/S结构程序开发 2、熟悉 Sql Server，工作中兼任项目组DBA，有比较大数据量（千万级别）的处理经历；对noSql有一定理解 3、有移动项目开发经验，对原生模式（android)、混合模式（phonegap)均有涉及 4、有 node.js + mongodb + redis + linux 实际工作经验 V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 5 人 被关注： 717 人

Recno:: 99
URL:: http://my.csdn.net/microrain

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 25 关注 653 粉丝 microrain 互联网·电子商务 | 总裁助理 | 辽宁省-沈阳市 | 数年IT行业从业经验，从软件开发到咨询到管理一路走来。 在基于WEB应用系统开发方面有多年开发及项目管理经验。 目前聚焦于云计算、O2O方向。 V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 25 人 被关注： 653 人
