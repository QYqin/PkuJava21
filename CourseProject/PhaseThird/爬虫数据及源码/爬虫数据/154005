
Recno:: 0
URL:: http://bbs.csdn.net/forums/Activity

ParseText::
活动专区论坛-CSDN论坛-CSDN.NET-中国最大的IT技术社区 隐藏侧边栏← 显示侧边栏→ 个人资料 guest 登录 注册 CSDN 网盘 首页 精选版块 移动开发 iOS Android Qt WP 云计算 IaaS Pass/SaaS 分布式计算/Hadoop Java技术 Java SE Java Web 开发 Java EE Java其他相关 .NET技术 .NET Framework C# .NET分析与设计 ASP .NET VB .NET Web开发 PHP JavaScript ASP HTML(CSS) HTML5 Apache 开发语言/框架 Delphi VC/MFC VB C/C++ C++ Builder 其他开发语言 数据库开发 MS-SQL Server Oracle PowerBuilder Informatica 其他数据库开发 硬件/嵌入式开发 嵌入开发(WinCE) 驱动开发/核心开发 硬件设计 单片机/工控 汇编语言 VxWorks开发 Linux/Unix社区 系统维护与使用区 应用程序开发区 内核源代码研究区 驱动程序开发区 CPU和硬件区 论坛帮助 论坛牛人 论坛地图 专家问答 我的帖子 | 我参与的帖子 | 我得分的帖子 CSDN 社区中心 活动专区论坛 版主： cpongo1 版面简介： 活动专区 C程序员从校园到职场 【惊喜】游戏开发与动画设计者快进 学院APP首次下载，可得50C币！ CSDN 移动客户端 正式发布 【PK对决】程序员，亮出自己的博客，你敢吗？ 推荐精华,经典共享 CSDN > CSDN论坛 > 站务专区 > 活动专区 待解决 已解决 推荐[精华] 排行榜 版主管理 公告 随时随地逛论坛 论坛移动客户端 发帖 刷新 RSS 标题 分数 提问人 回复数 最后更新时间 功能 ？ [置顶] CSDN学院APP全新亮相，分享有奖！ [推荐] [ 培训认证 IT培训 ] 40 CSDNedu 12-01 09:58 30 qq_33252609 12-23 08:56 管理 ？ [置顶] 2015年下半年热门下载资源呈现 [推荐] [ 站务专区 社区公告 ] 100 u012005572 12-14 17:29 6 daidaineteasy 12-24 10:19 管理 ？ [置顶] CSDN“攒课”活动课程资料集锦！ [推荐] [ 站务专区 活动专区 ] 40 rmyymr 09-17 10:47 16 mzh03 11-01 23:44 管理 ？ [置顶] 【大牛必看】课讲给想听的人，快来攒课活动申请讲师吧！ [ Web 开发 Apache ] 40 rmyymr 07-01 19:10 57 weikeli19 11-17 09:27 管理 ？ [置顶] 深圳小伙伴的福利来啦，到场就送礼品哦！ [推荐] [ 站务专区 活动专区 ] 40 chinese915 12-22 10:32 36 chinese915 12-25 14:46 管理 ？ 30C币的专辑，错过的看过来 [推荐] [ 站务专区 活动专区 ] 100 u012005572 10-22 11:22 185 jane007123 12-25 10:15 管理 ？ 只要推荐精华，人人都拿幸运奖 [推荐] [ 站务专区 活动专区 ] 100 u012005572 10-21 16:13 77 A123456789CC 12-24 19:44 管理 ？ 如果你希望开源未来能更好，那么欢迎来帮助开源“进步” [推荐] [ 站务专区 活动专区 ] 300 CSDN 12-15 10:25 23 CSDN_wei 12-24 14:00 管理 ？ 有奖试读&征文--当青春遇上互联网，能否点燃你的创业梦 [推荐] [ 站务专区 活动专区 ] 100 soledadzz 08-18 11:54 8 enpterexpress 12-17 16:57 管理 ？ 攒（cuan）自己想听的课，让别人投票去吧！——CSDN个性化知识服务2015第三期 [推荐] [ 站务专区 活动专区 ] 40 rmyymr 11-11 13:23 72 rmyymr 12-16 15:13 管理 ？ 问答8月活动 大波C币等着你！！！ [推荐] [ 站务专区 活动专区 ] 40 hjknet 08-04 10:24 161 u014591113 12-10 20:48 管理 ？ 【聚焦ios】Swift和OC混编分享会【CSDN社区专家分享会】 [推荐] [ 站务专区 活动专区 ] 100 baiyuzhong2012 08-25 15:45 12 weixin_28924783 12-03 15:40 管理 ？ 【CSDN 问答频道】天天爱答题 一大波C币向你袭来！！ [推荐] [ 站务专区 活动专区 ] 100 hjknet 04-01 10:41 702 qq_32797741 11-17 11:42 管理 ？ 【商城吐血】疯狂十天抢！带C币来！ [ 站务专区 活动专区 ] 40 baiyuzhong2012 06-09 15:29 13 enpterexpress 11-15 17:51 管理 ？ 问答7月活动 大波C币等着你！！！ [推荐] [ 站务专区 活动专区 ] 100 hjknet 07-02 09:38 156 ZZDL123 11-10 19:11 管理 ？ 攒（cuan）自己想听的课，让别人投票去吧！——CSDN个性化知识服务2015第二期 [ 站务专区 活动专区 ] 40 rmyymr 08-12 11:52 84 JaCman 11-10 11:26 管理 ？ CSDN博客&论坛——读好书，畅想“我的IT成长路”活动开始了！ [ 站务专区 活动专区 ] 40 CSDN 03-19 15:01 7 zsdjch 11-06 16:13 管理 ？ 寻找 没有弯路 编程摇篮 第二学堂 [ 站务专区 活动专区 ] 40 syysyz6 10-17 17:31 4 syysyz6 11-02 14:21 管理 ？ **********CSDN社区问答精华QA********** [推荐] [ 站务专区 活动专区 ] 100 hjknet 04-17 12:22 115 shengcun2014 10-30 20:32 管理 ？ 论坛标兵，福利来袭!! [推荐] [ 站务专区 活动专区 ] 40 u012005572 08-19 11:12 59 u012068969 10-15 19:35 管理 ？ 集齐C币，召唤神龙！ [ 站务专区 活动专区 ] 40 baiyuzhong2012 07-21 12:02 3 starytx 09-23 15:40 管理 ？ 博客管理员自爆 [ 站务专区 活动专区 ] 40 baiyuzhong2012 07-01 19:56 18 starytx 09-23 15:38 管理 ？ 社区专家分享会，ios开发前沿和Swift探秘 [ 站务专区 活动专区 ] 40 baiyuzhong2012 09-15 16:46 3 sinbas 09-19 16:52 管理 ？ 聚焦iOS开发：iOS前沿和Swift探秘，社区专家分享会 [ 站务专区 活动专区 ] 40 baiyuzhong2012 09-15 15:37 3 sinbas 09-19 16:50 管理 ？ 【福利来袭】扫描CSDN学院二维码，即送电子优惠券一张！ [推荐] [ 站务专区 活动专区 ] 100 CSDNedu 06-11 18:41 11 enpterexpress 09-13 10:17 管理 ？ CSDN学院下单用户专属福利来袭，你还不快来？ [推荐] [ 站务专区 活动专区 ] 100 CSDNedu 05-28 11:38 7 enpterexpress 09-13 10:15 管理 ？ 【C币活动】回答问题送C币喽 [ 站务专区 活动专区 ] 40 baiyuzhong2012 01-29 16:31 852 qq_31252405 09-12 19:59 管理 ？ 攒（cuan）自己想听的课，让别人投票去吧！——CSDN个性化知识服务2015第一期 [ 站务专区 活动专区 ] 40 rmyymr 06-08 13:12 67 wj424160115 08-19 17:07 管理 ？ 谁的口号会带走创意T恤？穿出自我，有奖征集CSDN T恤口号！ [推荐] [ 站务专区 活动专区 ] 100 CSDNedu 03-27 13:31 23 gy127132060 05-26 10:41 管理 ？ 关注CSDN论坛微博 送CSDN积分大礼包 [推荐] [ 站务专区 活动专区 ] 300 CSDN 04-15 14:33 8620 al999999999 04-27 11:38 管理 ？ 我愿意做你的大白，把对你的爱编写为程序！ [推荐] [ 站务专区 活动专区 ] 100 CSDNedu 03-18 18:28 30 xmt1139057136 04-15 13:46 管理 ？ “京东电商云用户俱乐部沙龙”第二弹 —— 传统企业转型路的乐与痛 [推荐] [ 站务专区 活动专区 ] 50 xiaobeileizi 07-30 11:17 4 shjhcx 02-16 08:55 管理 ？ 先吐槽后脱光，决战光棍节！第一季活动火热进行中！ [ 站务专区 活动专区 ] 40 itcast_cn 10-20 13:25 5 xmt1139057136 10-30 12:46 管理 ？ 大福利：程序员杂志2014全年纸刊订户赠iPad版或Android版 [ 站务专区 活动专区 ] 300 CSDN 02-14 13:35 222 afrish 08-30 21:08 管理 ？ 【谁是问答英雄？】CSDN问答频道“Ask 联赛”全面开启！！！ [推荐] [ 站务专区 活动专区 ] 100 CSDN_Ask 05-09 12:04 85 qq_18525711 08-12 23:00 管理 标题 分数 提问人 回复数 最后更新时间 功能 发帖 刷新 RSS

Recno:: 1
URL:: http://blog.csdn.net/NoMasp/article/list/2

ParseText::
nomasp - 博客频道 - CSDN.NET nomasp Some people die at 20 and aren't buried until 80. 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 【UWP通用应用开发】应用布局、基本导航 简单示例看页面布局和导航首先按照上一篇博客中的顺序来新建一个项目。新建好之后就点开MainPage.xaml开始敲代码了。 <RowDefinition Height="100... 2015-12-10 17:41 阅读 (658) 评论 (0) 【UWP通用应用开发】开发准备、部分新特性 准备操作系统、SDK不知道大家有没有升级到Windows 10呢，我从第一个预览版一直用到现在了，虽然还不够稳定，不过也足够了。尤其在11月更新之后，已经非常不错了。操作系统大家可以直接升级到Windows 10，也可以去官网下载镜像自行安装，还可以在DreamSpark等地方下载。DreamSpark上除了Office外其他诸如操作系统、开发工具及其他软件对学生均免费开放。Visual Studi... 2015-12-10 14:52 阅读 (560) 评论 (0) POJ 3009 Curling 2.0 {深度优先搜索} 原题$On Planet MM-21, after their Olympic games this year, curling is getting popular. But the rules are somewhat different from ours. The game is played on an ice game board on which a square mesh is ma... 2015-12-09 22:26 阅读 (732) 评论 (0) POJ 1979 Red and Black（红与黑） 原文DescriptionThere is a rectangular room, covered with square tiles. Each tile is colored either red or black. A man is standing on a black tile. From a tile, he can move to one of four adjacent tiles.... 2015-12-09 20:13 阅读 (586) 评论 (0) 【OpenCV】5种图像滤波辨析：方框、均值、高斯、中值、双边 图像滤波什么是图像滤波图像滤波，即在尽量保留图像细节特征的条件下对目标图像的噪声进行抑制，是图像预处理中不可缺少的操作，其处理效果的好坏将直接影响到后续图像处理和分析的有效性和可靠性。（摘自网络）图像滤波的目的1，消除图像中混入的噪声 2，为图像识别抽取出图像特征图像滤波的要求1，不能损坏图像轮廓及边缘 2，图像视觉效果应当更好滤波器的定义滤波器，顾名思义，是对波进行过滤的器件。（摘自网络）... 2015-12-08 14:41 阅读 (1158) 评论 (0) Android : Can't create handler inside thread that has not called Looper.prepare() 又报错了，不过并不感到烦恼，因为又可以学习了……Can't create handler inside thread that has not called Looper.prepare()我把文档给摘录下来了，大家可以看看。这个类被用于为线程运行消息循环。默认线程并没有消息循环与之关联，所以你需要创建一个，在线程中调用prepare()以运行这个循环，然后调用loop()在循环结束时获取进程信息。... 2015-12-06 15:51 阅读 (809) 评论 (0) 如何写软件概要设计？ 软件概要设计做什么，怎么做 一、软件设计一般流程： 1、先前的软件需求分析阶段，已经搞清楚了 “要解决什么问题”，并输出了《软件需要说明书》。这时一切都是理想。 2、现在进入概要设计阶段，重点说清楚“总体实现方案”，确定软件系统的总体布局，各个子模块的功能和模块间的关系，与外部系统的关系。有一些研究与论证性的内容。并输出《软件概要设计说明书》。这时一切都是概念。 3、最后进入详细设计阶段... 2015-12-05 16:15 阅读 (798) 评论 (0) 如何用Sencha Touch打包Android的APK 什么是Sencha Touch前不久基于JavaScript编写的Ajax框架ExtJS,将现有的ExtJS整合JQTouch、Raphaël库，推出适用于最前沿Touch Web的Sencha Touch框架，该框架是世界上第一个基于HTML5的Mobile App框架。同时，ExtJS更名为Sencha，JQTouch的创始人David Kaneda，以及Raphaël的创始人也已加盟Sench... 2015-12-04 17:25 阅读 (669) 评论 (0) LeetCode 38 Count and Say（计数与报数） 翻译计数报数序列按如下规律开始递增： 1，11，21，1211，111221，……1 读作“1个1”或11. 11 读作“2个1”或21. 21 读作“1个2，1个1”或1211.给定一个整数n，生成第n个序列。备注：数字序列应该用字符串表示。原文The count-and-say sequence is the sequence of integers beginning as follows:... 2015-12-03 10:32 阅读 (597) 评论 (0) LeetCode 37 Sudoku Solver（求解数独）（*） 翻译写一个程序来通过填充空格求解数独。空格用'.'表示。你可以假定这里只有唯一解。（示例图片看下文）原文代码这道题我没写……不过为了博客的连续性，先凑一篇占个位置，以后再修改。class Solution { public: bool col[10][10],row[10][10],f[10][10]; bool flag = false; void solveSudoku(... 2015-12-02 12:47 阅读 (652) 评论 (0) LeetCode 36 Valid Sudoku（有效数独）（*） 翻译数独板被部分填充，空格部分用'.'来填充。一个部分填充的数组是否有效只需要看其填充的部分即可。原文代码这道题写了一会，错了……因为输入太懒搞了，就直接看了别人写的……class Solution { public: int a[9]; bool isValidSudoku(vector<vector>& board) { memset(a,0,size... 2015-11-30 20:58 阅读 (548) 评论 (0) LeetCode 35 Search Insert Position（搜索并插入） 翻译给定一个已排序的数组和一个目标值，如果这个目标值能够在数组中找到则返回索引。如果不能，返回它应该被插入的位置的索引。你可以假设数组中没有重复项。以下是一些示例。原文Given a sorted array and a target value, return the index if the target is found. If not, return the index where it w... 2015-11-28 21:16 阅读 (690) 评论 (0) LeetCode 34 Search for a Range（搜索范围） 翻译给定一个整型已排序数组，找到一个给定值在其中的起点与终点。你的算法复杂度必须低于O(logn)。如果目标在数组中不会被发现，返回[-1, -1]。例如，给定[5, 7, 7, 8, 8, 10]，目标值为8，返回[3, 4]。原文Given a sorted array of integers, find the starting and ending position of a given... 2015-11-28 21:08 阅读 (680) 评论 (1) LeetCode 33 Search in Rotated Sorted Array（在旋转排序数组中搜索）（*） 翻译假定一个数组在一个我们预先不知道的轴点旋转。例如，0 1 2 4 5 6 7可能会变为4 5 6 7 0 1 2。给你一个目标值去搜索，如果找到了则返回它的索引，否则返回-1。你可以假定没有重复的元素存在于数组中。原文Suppose a sorted array is rotated at some pivot unknown to you beforehand.(i.e., 0 1 2 4... 2015-11-26 18:50 阅读 (494) 评论 (0) LeetCode 32 Longest Valid Parentheses（最长有效括号）（*） 翻译给定一个仅仅包含“（”或“）”的字符串，找到其中最长有效括号子集的长度。对于“（（）”，它的最长有效括号子集是“（）”，长度为2。另一个例子“）（）（））”，它的最长有效括号子集是“（）（）”，其长度是4。原文Given a string containing just the characters '(' and ')', find the length of the longest val... 2015-11-26 18:19 阅读 (428) 评论 (1) LeetCode 31 Next Permutation（下一个排列） 翻译实现下一个排列，将排列中的数字重新排列成字典序中的下一个更大的排列。如果这样的重新排列是不可能的，它必须重新排列为可能的最低顺序（即，升序排序）。重排必须在原地，不分配额外的内存。这里有些例子。输入是在左侧列和与其对应的输出在右侧列。 1,2,3→1,3,2 3,2,1→1,2,3 1,1,5→1,5,1原文Implement next permutation, which rearranges... 2015-11-18 22:40 阅读 (757) 评论 (0) LeetCode 30 Substring with Concatenation of All Words（与所有文字串联子串）（*） 翻译给定一个字符串S，一个单词的列表words，全是相同的长度。找到的子串（多个）以s即每个词的字串联恰好一次并没有任何插入的字符所有的起始索引。原文You are given a string, s, and a list of words, words, that are all of the same length. Find all starting indices of substring... 2015-11-18 21:30 阅读 (710) 评论 (0) LeetCode 29 Divide Two Integers（两个整数相除）（*） 翻译不用乘法、除法、取余操作，将两个数相除。如果它溢出了，返回MAX_INT原文Divide two integers without using multiplication, division and mod operator.If it is overflow, return MAX_INT.代码一心扑到了递归上，可惜没能写出来…………烦躁至极还是找了别人的答案……class Solution... 2015-11-17 20:04 阅读 (693) 评论 (0) LeetCode 28 Implement strStr()（实现strStr()函数） 翻译实现strStr()函数。返回针（needle）在草垛/针垛（haystack）上第一次出现的索引， 如果不存在其中则返回-1。其实也就是说字符串str2在字符串str1中第一次出现的索引而已。原文Implement strStr().Returns the index of the first occurrence of needle in haystack, or -1 if needle... 2015-11-13 23:46 阅读 (796) 评论 (0) LeetCode 27 Remove Element（移除元素） 翻译这里写代码片原文Given an array and a value, remove all instances of that value in place and return the new length.The order of elements can be changed. It doesn't matter what you leave beyond the new length.... 2015-11-13 23:25 阅读 (890) 评论 (4) 425条数据 共22页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 个人资料 NoMasp 访问： 577555次 积分： 12838 等级： 积分：12838 排名： 第505名 原创： 413篇 转载： 0篇 译文： 11篇 评论： 561条 Notice： ^ nomasp 博客导航 ^ 欢迎您访问我的更多博客文章 《 nomasp 博客导读 》 点击此处即可轻松导航喔 感谢您的支持，希望我的博客对您有所帮助 转载请联系本人 ^ 个人信息 ^ * 邮箱： kinhiox#gmail.com * 备用邮箱： nomasp#outlook.com * CSDN 博客专家、论坛版主 * 微软MSP Billboard * 欢迎入群交流 * 【UWP开发交流群】 523310660 * 【Android开发交流群】 303295519 * 【算法交流群】 376079805 微博 博客专栏 UWP通用应用开发 文章：6篇 阅读：9475 Android 开发 文章：6篇 阅读：5733 LeetCode 文章：27篇 阅读：18469 算法 文章：10篇 阅读：42943 万里征程——Windows App开发 文章：37篇 阅读：86176 欧拉工程 文章：0篇 阅读：0 OpenCV归纳 文章：5篇 阅读：14524 Scheme归纳 文章：13篇 阅读：45166 SICP练习 文章：151篇 阅读：179579 文章分类 nomasp 博客导读 (1) Algorithm (31) Books (2) C (1) C++ (9) C# (5) CampusLife (1) Data Structures (9) Fun (9) Git+Github (2) HTML5 (0) IT-Talk (7) Learning World (1) Mathematics (1) Music (1) OpenCV (6) OpenXML (1) Project Euler (9) Scheme & SICP (14) SICP Exercise (151) TCP/IP (3) TechLife (8) Useful gadgets (18) Windows 10 (30) WPF (4) Android Errors (5) Android Notes (11) Windows App (10) Linux Notes (5) LeetCode (42) Android (9) Java (3) UWP (10) Kinect (0) AOJ and POJ (5) 文章存档 2015年12月 (30) 2015年11月 (20) 2015年10月 (19) 2015年09月 (35) 2015年07月 (13) 2015年06月 (28) 2015年05月 (48) 2015年04月 (43) 2015年03月 (92) 2015年02月 (97) 阅读排行 【算法】1 由插入排序看如何分析和设计算法 (9405) 【算法】5 传说中的快排是怎样的 (7875) 怎样学习一门编程语言 (7072) 好玩的WPF第三弹：颤抖吧，地球！消失吧，地球！ (7048) nomasp 博客导读：UWP、Android、Algorithm、Lisp (6637) 【算法】4 五张图带你体会堆算法 (5690) 【SICP归纳】1 过程和代换模型 (5574) 【Scheme归纳】3 比较do, let, loop (5313) 【SICP归纳】2 高阶函数和数据抽象 (5112) 【万里征程——Windows App开发】页面布局和基本导航 (5006) 最新评论 【万字总结】图解堆算法、链表、栈与队列（多图预警） NoMasp : @superleexpert:可以加群以后一起刷LeetCode呐 【万字总结】图解堆算法、链表、栈与队列（多图预警） superleexpert : 详细且深入，又看了几篇LeeCode，学习学习！ 图论算法 有图有代码 万字总结 向前辈致敬 NoMasp : @turbo_mars_yang:哈哈 欢迎加入我博客侧边栏中的算法交流群来一块刷题呐 图论算法 有图有代码 万字总结 向前辈致敬 turbo_mars_yang : 收了收了！恰逢学数据结构的东西，很多东西都讲的通俗易懂，很受用！ nomasp的2015博客之星投票总结 NoMasp : @erlian1992:你的图标新换的么？ID我见过……共勉啦！ nomasp的2015博客之星投票总结 erlian1992 : 看了楼主这些，觉得自己差的好远，自己还的努力。 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @wu2304211:有的 【算法】1 由插入排序看如何分析和设计算法 NoMasp : @CaidChen:可以加群交流喔 nomasp的2015博客之星投票总结 yamorn : @yamorn:good nomasp的2015博客之星投票总结 yamorn : @yamorn:good

Recno:: 2
URL:: http://blog.csdn.net/column/details/android-nomasp.html

ParseText::
专栏：Android 开发 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 移动开发专栏 > Android 开发 分享到： 新浪微博 腾讯微博 Android 开发 通过一系列实例来学习Android 开发。 订阅 最新更新文章 [移动开发] Android 开发第六弹：简易时钟（计时器） 接上篇Android 开发第五弹：简易时钟（闹钟） ，这次是一个时钟类应用，目前依旧是主要的功能，长得还是很挫。当然了，核心功能是有的……时钟先把简单的时钟给列出来吧，这里都写的很简单，即便要用世界各个城市的话，也只是相应的加上或减去几个小时。新建TimeView类，并扩展自LinearLayout，然后布局文件和上一篇中那么写就好了。<myapplication.nomasp.com.clock.... android 开发 扩展 布局 应用 NoMasp 2015-10-08 19:03 阅读(733) 评论(0) [移动开发] Android 开发第五弹：简易时钟（闹钟） 这次是一个时钟类应用，目前依旧是主要的功能，长得还是很挫。当然了，核心功能是有的……闹钟之前的准备布局的话，不管是采用FrameLayout或者LinearLayout都可以。我这里采用了FrameLayout，然后加上一个TabHost，之前在论坛看到有同学提问在WF中这种多个栏目的用什么控件，我的答案是在WF、WPF、Windows App、ASP.NET以及安卓上都是Tab开头的控件。<Fra... android windows asp.net 开发 控件 NoMasp 2015-10-08 18:29 阅读(923) 评论(1) [移动开发] Android 开发第四弹：围住神经猫（简单Demo） 前言如下图所示，这篇文章要完成的就是这个简单的示例，后续会继续添加上动画和声音。这里主要包含了游戏的一些简单元素和逻辑。在我的多次尝试后发现想赢它还是挺难的……毕竟它的走法不是简简单单的Random而已。代码已经上传至Github，建议大家直接Fork而不是Download，毕竟开源的意义在于彼此分享代码，而且这个太简单了，后续肯定还会继续更新的，所以……游戏背景元素的定义由于代码还会继续更新，所以... android github 开发 代码 游戏 NoMasp 2015-09-26 12:50 阅读(1184) 评论(6) [移动开发] Android 开发第三弹：自定义左右菜单（滑动动画+蒙版效果） 下面的截图……哎，因为1080P在Windows 10上虽然适配了，但大部分软件并没有跟上，比如某个录制GIF的软件，所以这里有一定的偏移导致画面不完整，但效果大概就是这么一个效果了。MainUI.java首先需要这么一个类，在这里一些UI的滑动呀之类的都会定义。首先吧，定义好这些变量，当然了，实际开发过程中肯定需要哪一个就添加上哪一个的。 private Context context;... android windows ui 软件 开发 NoMasp 2015-09-24 13:30 阅读(986) 评论(2) [移动开发] Android 开发第二弹：通讯录 MainActivity.javapackage myapplication.nomasp.com.addressbook;import android.app.Activity; import android.os.Bundle; import android.view.Menu; import android.view.MenuItem; import android.widget.ListVi... 通讯录 开发 android NoMasp 2015-09-22 21:08 阅读(812) 评论(2) [移动开发] Android 开发第一弹：倒计时 好吧……我承认很尴尬……但毕竟作为开端，还是将这个贴出来，以后一定写出厉害的！<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent... android 布局 倒计时 UI ui NoMasp 2015-09-21 21:27 阅读(1095) 评论(2) 申请专栏 我的专栏 专栏创建者： NoMasp 创建时间：2015-09-26 文章数：6篇 浏览量： 5733 次 热门文章 最新评论

Recno:: 3
URL:: http://blog.csdn.net/column/details/anotherc.html

ParseText::
专栏：软件项目实践中的C语言一瞥 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > 软件项目实践中的C语言一瞥 分享到： 新浪微博 腾讯微博 软件项目实践中的C语言一瞥 以编码规范为基础，对C语言的发展历史、特点、程序版式、注释、变量和函数命名、异常保护、指针、结构体、文件操作等诸多内容进行了详细的描述，并对实际软件开发工作中经常用到的配置文件、算法、日志等进行了一定的介绍。 订阅 最新更新文章 [编程语言] Linux下合并前缀相同的文件的程序流程及其C代码实现 一、概述 在实际的软件开发项目中，会出现对多个前缀(或后缀)相同的文件进行合并的需求。也就是说，将这些前缀(或后缀)相同的文件中的内容合并到一个文件中。这些文件的来源可能是前一流程中程序生成的文件，也可能是其他模块生成的文件。 例如，我们要将前缀相同(以“Test_”作为前缀)的Test_1.txt和Test_2.txt文件中的内容合并到ResultFile.txt文件中，如果Test_1.tx... zhouzxi 2015-07-09 10:57 阅读(3270) 评论(7) [编程语言] Linux下一个简单的日志系统的设计及其C代码实现 1.概述 在大型软件系统中，为了监测软件运行状况及排查软件故障，一般都会要求软件程序在运行的过程中产生日志文件。在日志文件中存放程序流程中的一些重要信息，包括：变量名称及其值、消息结构定义、函数返回值及其执行情况、脚本执行及调用情况等。通过阅读日志文件，我们能够较快地跟踪程序流程，并发现程序问题。因此，熟练掌握日志系统的编写方法并快速地阅读日志文件，是对一个软件开发工程师的基本要求。 本文详细地... zhouzxi 2015-05-22 15:17 阅读(4216) 评论(12) [编程语言] Linux下配置文件读取操作流程及其C代码实现 一、概述 Linux具有免费、可靠、安全、稳定、多平台等特点，因此深受广大程序员的欢迎。 为了体现软件产品的灵活性，可添加配置文件存放某些重要的参数，在部署的时候根据实际的安装环境对每个配置项的值进行设置。这就要求程序能够准确读取到各个配置项的值。 本文详细介绍了Linux下配置文件的读取方法及读取操作的C代码实现，为相关的软件开发工作的开展提供了有益的参考。二、配置文件介绍 为了便于程序处... zhouzxi 2015-05-07 16:47 阅读(2847) 评论(10) [编程语言] Windows下一个简单的日志系统的C代码实现 问题描述       实现一个简单的基于Windows的日志系统，要求写入日志文件的内容的样式如下：       [时间]+[文件名]+[日志等级]+日志具体内容       如：       [2015.02.2514:35:13.143][WriteLog.c][INFO]This is a test!       其中，“2015.02.25 14:35:13.143”为当前时间(精确到毫秒... zhouzxi 2015-03-24 15:40 阅读(1077) 评论(0) [编程语言] 生成随机密码的C代码实现 问题描述        某些软件在登录的时候，经常会要求用户输入一个系统发过来的随机密码(或称校验码)，用于对用户的身份进行校验，防止恶意登录。        要求用C语言生成一组长度为6位的随机密码串。         rand函数简介        rand函数是真正的随机数生成器，它会返回一个范围在0到RAND_MAX(2147483647)之间随机数值。        该函数的原型为：in... zhouzxi 2015-03-21 14:12 阅读(723) 评论(0) [编程语言] 修改文件后缀的C语言实现 在实际的软件开发项目中，大家也许会遇到修改文件的后缀的需求(例如，将doc格式修改为docx格式)。本文提供了修改文件后缀的C语言实现，并演示了修改文件后缀的过程。        1. C程序实现        2. 修改后缀的过程        step 1：       在本地的D盘中，有一个叫做“Test”的文件夹，该文件夹下有一个命名为“123.doc”的文件，如下图所示：... zhouzxi 2015-03-20 14:58 阅读(658) 评论(0) [编程语言] 两种文件配置项设置方法及C程序处理的比较 在实际的软件开发项目中，程序经常需要从外界读取某些可能会变化的信息，我们把需要读取的信息统一放到一个文件中(通常是ini文件)，并把这个文件叫做配置文件。        考虑这样一个场景，程序需要与多个数据库打交道，要从配置文件中读取各个数据库的信息。那么，我们如何在配置文件中设置各个配置项以及如何编写程序将各配置项的值读入呢？        假设有两个数据库，每个数据库包含了IP地址和端口号两种... zhouzxi 2014-10-18 11:16 阅读(976) 评论(2) [编程语言] ASCII与Unicode编码消息写文件浅析 【文章摘要】        ASCII与Unicode是两种常见的字符编码。它们的表示方法不一样，因而在程序中就要区别处理。       本文基于作者的实际开发经验，对ASCII与Unicode两种字符编码消息的写文件过程进行了详细的分析，为相关软件开发工作的开展提供了有益的参考。【关键词】       ASCII  Unicode  C语言  编码  开发 一、ASCII与Unicode编码简介... zhouzxi 2014-10-10 17:20 阅读(950) 评论(0) [综合] 两起变量初始化问题的排查过程 【文章摘要】        变量初始化看似很简单，但如果初始化位置不当或忘记初始化，则会导致程序行为异常。       本文基于作者的实际项目经验，对近期遇到的两起变量初始化问题进行了详细的分析，为相关软件问题的分析及解决提供了有益的参考。【关键词】       C语言  变量  初始化  开发 一、问题1的排查过程        在对某程序版本进行自测的过程中，发现在程序运行一段时间之后，某指针... zhouzxi 2014-09-24 16:24 阅读(735) 评论(0) [编程语言] Linux下的目录扫描操作函数使用实践 【文章摘要】       本文以实际的C源程序为例子，介绍了Linux下的目录扫描函数(scandir)的使用方法，为相关开发工作的开展提供了有益的参考。【关键词】       C语言  Linux  目录扫描  makefile  scandir 一、scandir命令简介        scandir函数的声明为：        int scandir(const char *dir, str... zhouzxi 2014-08-04 15:52 阅读(1064) 评论(3) [编程语言] Linux下的目录创建命令使用实践 【文章摘要】       本文以实际的C源程序为例子，介绍了Linux下的目录创建命令(mkdir)的使用方法，为相关开发工作的开展提供了有益的参考。【关键词】       C语言  Linux  目录创建  makefile  开发 一、mkdir命令简介        mkdir命令用来创建指定名称的目录，其命令格式为：mkdir [选项] 目录...       其中，[选项]可以是“-m”... zhouzxi 2014-07-14 18:53 阅读(887) 评论(0) [编程语言] 写给大家看的编程规范 (本文参加 2014 CSDN博文大赛，谢谢。)【文章摘要】       “没有规矩，不成方圆”，在实际的软件开发项目中，做任何事情都不是随心所欲的，我们编写代码需要遵守项目组约定的编程规范。很遗憾，在学校的计算机课程中，重在教导学生实现一定的程序功能，对程序的编写规范很少提及，这也就导致了从学校毕业踏上工作岗位之后一段艰辛的学习过程。       本文根据自身的软件开发实践，对实际的软件开发项目... zhouzxi 2014-07-07 17:26 阅读(1684) 评论(4) [综合] 一起C语言中程序时序问题的排查过程 【文章摘要】       对于由多个模块协同工作的软件来说，程序处理的时序是非常重要的。当消息处理的顺序出现混乱时，程序就会出现异常。       本文基于作者的实际项目经验，对软件模块之间的时序问题进行了详细的分析，为相关软件问题的分析及解决提供了有益的参考。【关键词】       C语言  时序  模块  开发  消息 一、问题描述       在某软件版本中，有两个模块(模块A与模块B)之间... zhouzxi 2014-06-26 18:56 阅读(879) 评论(0) [综合] 一个回车符引发的问题思考 在维护和开发通信类软件产品的过程中，经常需要处理一些软件故障问题。在问题刚出现的时候，大家可能显得手足无措，有一种天都要塌下来的感觉。但在问题原因找到之后，大家又会觉得问题原因非常的简单，要是当初开发的时候仔细一点，是不会犯这样的低级错误的。最近，本人就遇到了一个回车符引发的问题。       近日，在开发某软件版本时需要对文件进行操作，在代码中使用了Linux C语言中的opendir函数，但是... zhouzxi 2014-06-20 16:33 阅读(997) 评论(0) [编程语言] C语言中结构体参数变量的传递 【文章摘要】       在C语言中，结构体参数变量经常作为函数的参数来进行传递。但如果参数设置不当，会出现内存问题。       本文以实际的程序代码为例，详细地介绍如何正确地使用结构体参数变量，为相关的开发工作提供了参考。【关键词】       C语言  结构体  函数  参数  传递 一、前言       本文中的程序实现对员工信息结构体字段赋值并打印出来的功能。该结构体的定义如下：// 员... zhouzxi 2014-06-17 19:12 阅读(1173) 评论(4) [编程语言] C程序中唯一序列号的生成 在实际的软件开发项目中，经常会涉及唯一序列号的生成。本文以一个实际的程序为例，介绍了唯一序列号的生成过程。        本文生成的序列号的样式为：MMDDHHMINSS_XXXXXX。         程序如下：/*********************************************************************** 版权所有 (C)2014, 中兴通讯股份... zhouzxi 2014-06-03 20:10 阅读(1313) 评论(4) [综合] 让你提前认识软件开发(24)：C语言的发展历史和主要特点 第1部分 重新认识C语言C语言的发展历史和主要特点        作为一门众所周知的计算机编程语言，C语言是谁发明的呢？它是如何演进的？它有何特点？到底有多少人在使用它？1. C语言之父       C语言是1972年由美国贝尔实验室的计算机科学家Dennis Ritchie(丹尼斯·里奇)设计发明的。因此，Dennis Ritchie被誉为“C语言之父”(他已于2011年10月9日去世，享年70... zhouzxi 2014-05-25 12:35 阅读(1391) 评论(0) [编程语言] 让你提前认识软件开发(23)：如何在C语言中执行shell命令？ 第1部分 重新认识C语言如何在C语言中执行shell命令？ 【文章摘要】         Linux操作系统具备开源等诸多优秀特性，因此在许多通信类软件(主流开发语言为C语言)中，开发平台都迁移到了Linux上，同时shell操作在Linux的编程中占有很重要的地位，这就需要开发人员熟练掌握在C语言中执行shell命令的相关操作。        本文用实际的代码演示了如何在C语言程序中执行shel... zhouzxi 2014-05-21 20:20 阅读(1213) 评论(0) [编程语言] 让你提前认识软件开发(22)：shell脚本中的文件操作 第1部分 重新认识C语言shell脚本中的文件操作 【文章摘要】        编写shell脚本时，经常会涉及到对文件的操作，比如从文件中读取一行数据、向文件追加一行数据等。完成文件读写操作的方法有很多，了解各种命令下文件操作的执行情况，有助于开发人员在不同使用场景下选择合适的命令。       本文以实际的shell脚本为例，介绍了对文件进行操作的不同方法，为相关开发工作提供了参考。【关键词】... zhouzxi 2014-05-17 20:49 阅读(1253) 评论(0) [编程语言] 让你提前认识软件开发(21)：C程序中的定时器 第1部分 重新认识C语言C程序中的定时器 【文章摘要】        在实际的C程序中，一个模块执行多个操作是很常见的事情。如果多个操作同时进行，会出现程序效率低下、计算机CPU占用率过高等情况，这时就需要对所有操作的执行顺序作一个合理的安排，这就涉及到定时器的使用。        本文对C程序中的定时器的类型、设置和清除方法等作了详细的介绍，为相关开发工作的开展提供了参考。【关键词】      ... zhouzxi 2014-05-14 21:50 阅读(1061) 评论(0) 41条数据 共3页 1 2 3 下一页 尾页 申请专栏 我的专栏 专栏创建者： zhouzxi 创建时间：2014-05-03 文章数：41篇 浏览量： 62912 次 热门文章 最新评论

Recno:: 4
URL:: http://blog.csdn.net/column/details/askandanswer.html

ParseText::
专栏：IT读者问答 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 综合专栏 > IT读者问答 分享到： 新浪微博 腾讯微博 IT读者问答 基于自身经验，针对博客读者提出的有关专业课学习、考研、实习、论文写作等问题进行答复。 订阅 最新更新文章 [综合] 答读者问(30)：一个大一学生有关未来技术方向的疑问及答复 【来信】 周老师： 您好！ 我是一名学计算机专业的大一学生，首先非常感谢您能看这封信。 我大一主要尝试过Java Web后台开发和Linux C++ 后台服务器编程两个技术方向，共积累了3万行左右的代码量。 我想请您帮我指点的问题是： 1.网上很多人认为Linux服务器开发学习难度大、周期长、后劲大，我自己也感到学这个确实比学Java Web开发更难一些，牵扯到操作系统、底层的知识多一些... zhouzxi 2015-07-14 19:11 阅读(587) 评论(0) [综合] 答读者问(29)：三个在校学生有关在校学习、考研、编程语言、未来工作的疑问及答复 【来信1】 周学长： 您好，不好意思打扰了，我本科是重庆邮电大学的。学的是微电子，从CSDN上看到了，想麻烦请教几个问题。 昨天研招网上收到了大连海事的一个省实验室的复试通知，调剂的是计算机专硕。正好认识个东软的学长，他说大连海事这些省部级的实验室实力普遍弱，相当于边缘地带，都是搞很多理论性的课题和研究为主，也有物联网的项目，但不多，按他的意思是小实验室其他项目基本接不到。 但好处就是可以正... zhouzxi 2015-06-11 19:30 阅读(598) 评论(0) [综合] 答读者问(28)：一位在校本科生有关IT学习的疑问及答复 【来信】 周学长，你好。我现在是南京邮电大学的一名本科生，可以问你一个问题吗？其实我对it这一行业很感兴趣，但我的本专业不是学这个的。我自学完了C++，程度大概是可以写一个很初级的类似学生管理系统这样。然而我不知道之后应该干嘛了。你可以给我一些指点吗？谢谢。【答复】 同学，你好！ 你能在大学里面找到自己感兴趣的东西，作为学长，我也为你感到高兴。很多人在大学里面浑浑噩噩地度过了四年，最后发现所学... zhouzxi 2015-05-28 09:55 阅读(903) 评论(12) [综合] 答读者问(27)：一个大一学生有关未来规划的疑问及答复 【来信】周老师：您好！我是山东大学计算机科学与技术学院的大一新生，自从选择了这个专业以后，经常需要看别人的技术博客来学习知识，看到您的博客后十分敬佩，您这种工作勤奋又乐于帮助他人解决疑惑的精神实在是令人敬仰。学生有个关于大学学习方向的问题，想了很久，但是还不是很清晰。一直想给您写信咨询，但又怕耽误您的工作，在这里先谢谢您能为我看这封信了。首先介绍一下我的情况。1)我大学四年的目标：不读研究生，直接... zhouzxi 2015-03-28 11:40 阅读(964) 评论(4) [综合] 答读者问(26)：一个研一学生有关编程语言及未来工作的疑问及答复 【来信】        学长，你好！        打扰你了，我是南邮计算机学院研一学生，一年前就关注你的微博，感觉你的博客内容很有质量。想请教你几个问题：        1. 我现在比较迷惑，主要面临一个选择问题，以前我学通信的，java、C++一点都没有学过，C语言有点基础，但是从来没有实际应用过，现在就想学一门程序语言设计，宿舍人都学java，都说java简单，工作好找，他们也都有java基... zhouzxi 2015-03-27 16:47 阅读(596) 评论(0) [综合] 答读者问(25)：一个大三学生有关专业学习的相关疑问及答复 最近，在CSDN博客上，我收到了一位大三学生发来的私信，内容如下：       周老师：        你好，我是浙大一名大三学生，是自动化转计算机的，只有一点C和C#基础，没动手写过什么正式的程序，现在静下心来想好好学点东西，好在毕业的时候找个工作，我现在要怎么样的学习，用什么的方式，具体要学一些什么，感觉很迷茫，希望可以得到你的一些详细的建议，万分感谢！！！       我的答复如下：... zhouzxi 2015-03-19 16:54 阅读(532) 评论(0) [综合] 答读者问(24)：一个大二学生有关数据结构学习的疑问及答复 最近，在V众投上有一个标题为“最近学习数据结构陷入了死循环大脑一片空白”的问题(http://www.vzhongtou.com/question/744)，具体内容如下：        大一下学期学历c语言学了半吊子大二一开学就开始讲数据结构没学过汇编啥的我知道c语言的指针很重要就复习了指针现在对指针有所了解老师讲课是一星期讲两节大课一大章一节讲课一节上机只讲伪算法现在讲到树了感觉太抽象了完全搞... zhouzxi 2014-11-04 19:34 阅读(941) 评论(0) [综合] 答读者问(23)：一个研三学生有关工作之前的学习的疑问及答复 最近，我收到一位研三学生的邮件，内容如下：        周兆熊学长：        你好，之所以称呼你为学长，是因为我也是南邮的，通院的，今年研三，本科和硕士学的都是通信。从3月份就开始追随你的《让你提前认识软件开发》系列，在新浪微博上也和你交流过，我就是那个觉得你每篇文章内容写的有点少，建议你多写一些内容的学弟。如果你记性好的话应该还记得我，嘿嘿。系列里的每一篇我都认认真真地拜读过，并且文章里... zhouzxi 2014-11-02 09:57 阅读(1163) 评论(6) [综合] 答读者问(22)：一个在校学生有关持续学习的疑问及答复 最近，我在博客上收到一条私信，内容如下：        周老师，您好，最近在无意间接触java，很感兴趣，自己也在网上找了一些学习java的视频，作为一个零基础的学生，我在学习的过程中，遇到了很多问题，我十分享受解决问题的快感。        不过我现在接触的都是很简单的问题，我也十分想在在方面走下去。希望你能给我指一条路，让我在学习java的路途中少走弯路。         在学校中我是一个各个... zhouzxi 2014-10-31 16:31 阅读(1389) 评论(6) [综合] 答读者问(21)：一个研二学生有关论文的相关疑问及答复 最近，我在博客上收到一条私信，内容如下：         您好，我是XX通信专业的一名研究生，现在研二，刚刚开会又被老板骂了，唉，他说我不应该从理论开始再去实践，而是从实践开始再去找理论与之相配，简单点说就是，先分析一篇代码再在上面修改编程，然后再以理论来说明，这样的逻辑对么？         因为我看到你的一篇博客《再见，南邮！别了，南京！》上面有写到看了超过100篇的论文，写出的论文EI检索，... zhouzxi 2014-10-23 14:57 阅读(858) 评论(0) [综合] 答读者问(20)：一个在读研究生有关在校学习的相关疑问 最近，在V众投上有一个标题为“”的问题，是一个在读研究生提出来的。       这个问题的具体描述如下：              我的答复如下：       对于在校学生来说，感到迷茫是很正常的，因为在大学里面，缺少了像高中那样的严格管教，所以很多学生不知道自己如何去独立自主地学习。       从你描述的情况来看，应该不算是很大的问题，只要走过这段岁月就好了。我总结了一下，出现“迷茫”的原因有... zhouzxi 2014-10-21 14:40 阅读(933) 评论(2) [综合] 答读者问(19)：一个大四学生有关找工作的相关疑问 最近，我收到一位大四学生的邮件，内容如下：      我是一名大四学生，最近一直在找工作，可是没有着落。笔试的时候好多记不清了，面试问题又答不上来，自己觉得学得还可以啊，反正有点烦。我的专业是软件工程，希望你能给我指点一下，谢谢！       我的答复如下：      你好！      首先，非常感谢你的来信。自从本博客专栏开通以来，已经有很多学生朋友通过博客、微信、微博和邮件等方式与本人交流。我... zhouzxi 2014-10-13 14:08 阅读(904) 评论(9) [综合] 答读者问(18)：一个大四学生有关专业发展的相关疑问 最近，我收到一位大四学生的邮件，内容如下：      我是大四物联网专业的学生（兼修工商管理双学位），在学校主要学习的是嵌入式这方面的内容，我在csdn论坛里看到就是关于嵌入式行业发展里说这个行业已经有点夕阳行业的状态了，我也想从事it这一行，现在的问题是，算是稍微有点基础，但是不知道往那个方向走（心里是想走一个比较有前途的行业或者说朝阳行业），我想问一下java+安卓和嵌入式那个的前景好一些，我... zhouzxi 2014-10-09 10:06 阅读(1234) 评论(6) [综合] 答读者问(17)：一个在读女硕士有关实习及如何进入企业的相关疑问 最近，我收到一位研究生的邮件，内容如下：        学长你好！        我是一名现在在XXX读XXX的学生，我本科在国内一所211工科院校读通信工程专业。在你博客中答读者问的栏目，有些对我很有启发，比如16号的女生如何进入IT行业一文，你指出了女士从事IT行业的一些方向。现在我也有些疑惑，非常期待听听你的看法和建议。       因为本科读通信工程专业，接触一些通信方面的理论。... zhouzxi 2014-09-22 09:25 阅读(1301) 评论(4) [综合] 答读者问(16)：一个研二学生有关论文和学习的相关疑问 最近我收到一位研二学生朋友的邮件，内容如下：        您好，请允许我称呼你为师兄，我一直关注您的CSDN博客；我是某工科大学研2学生，后年毕业，本科和读研都是计算机专业；我有几个问题请教一下：       （1）关于论文：我论文点已经找到，表面上英语直译的内容意思还能懂，但是看懂论文的思想非常吃力，前面的综述还好，后面的数学公式，还有一些算法，仿真比较，看的我云里雾里的，非常不清楚；请问师兄... zhouzxi 2014-09-19 08:45 阅读(1386) 评论(4) [综合] 答读者问(15)：一位在校大二学生有关算法和英语学习的疑问 一位在校的大二学生朋友给我发邮件，内容如下：        您好，我是名在校的大二学生，我已经很认真地看完您写的文章，心有感触，我有些问题想请教您!        1、从事软件开发对需要具备怎样的编程技能？现在我总觉得算法是比较难，有些算法一点都不理解，感觉在这方面很困难，因为暑假一直想自学算法的，但学了几天，实在是学不下去了。您能给我点建议如何学习算法吗？        2、在软件开发的过程中，... zhouzxi 2014-09-17 19:29 阅读(898) 评论(12) [综合] 答读者问(14)：有关大学女生如何进入IT行业的问题 女生如何在IT行业发展？这是一个很古老的话题了。最近，我收到一位读者朋友的邮件，内容如下：        您好，学长。我是一名2015年将要毕业的三本大学本科生，当初报考学校不知不觉就被调剂到了计算机科学与技术专业，因为憧憬大学的美好，于是背上行囊就踏入了学校的大门。在校期间我很努力的学习自己应学的课程，每年都可以获得国家励志奖学金和校一等奖，在组织活动方面也是当过很多干部，校外兼职也从事过各行各... zhouzxi 2014-09-16 18:56 阅读(874) 评论(4) [综合] 答读者问(13)：有关应届生求职面试资料和职业规划等问题 最近，有读者发邮件，希望我提供一些应届生求职面试的资料，也有读者向我咨询有关职业规划的问题。我在此统一回复。        1. 有关应届生求职面试的资料        我在找工作之前，整理了一些资料。现将所有文档打包，上传到了CSDN上面，有需要的可以下载来参考，只收取一个资源分。        资料链接请见：http://download.csdn.net/download/zhouzxi/7... zhouzxi 2014-09-07 10:07 阅读(1228) 评论(8) [综合] 答读者问(12)：有关考研的问题 最近我收到一位本科生朋友的邮件，内容如下：        学长：        你好！        我是XXX大学的一名大三女生，本科阶段学的是电子信息工程，成绩专业15-20%。打算考南邮的通信学硕。南邮虽然不是“985"、“211”，但是通信专业就业好像还不错。想问:        1.学长，你觉得依我的水平以及南邮每年的报考录取情况的话我考这个学校成功率大不大？或者推荐一下其他学校也行。... zhouzxi 2014-08-28 18:43 阅读(709) 评论(0) [综合] 答读者问(11)：有关研究生论文及研究方向等问题 最近，收到一位准研究生朋友的邮件，邮件内容如下：       学长：         您好！         我是一名即将研一的学生。您的博客我很早就已经关注了，也分享给我的同学。这段假期时间，看了学长您的很多博文，能够感受到学长在学校期间以及现在在工作取得了很好的成绩，同时学长也非常热心帮助我们这些学弟学妹们。每次读完满满的都是正能量，虽然没见过学长，但您是我学习的榜样。因为我读的是大专，然后考... zhouzxi 2014-08-21 19:16 阅读(849) 评论(0) 30条数据 共2页 1 2 下一页 尾页 申请专栏 我的专栏 专栏创建者： zhouzxi 创建时间：2015-07-27 文章数：30篇 浏览量： 31888 次 热门文章 最新评论

Recno:: 5
URL:: http://blog.csdn.net/column/details/centos.html

ParseText::
专栏：CentOS服务器配置管理 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 系统运维专栏 > CentOS服务器配置管理 分享到： 新浪微博 腾讯微博 CentOS服务器配置管理 记录介绍CentOS作为Web服务器、应用程序服务器的相关系统配置管理技术，运行环境安装部署方法，系统监控远程控制等软件安装应用。 订阅 最新更新文章 [系统运维] cp: omitting directory xxx 系统环境：CentOS 6.5 将写的程序复制到桌面上，运行时提示： 看文件夹上带个锁，考虑到可能是权限的问题，于是尝试将文件复制到“/opt”目录下，结果出现“cp: omitting directory `AutoInstall_20150305’”的错误。在linux下拷贝的时候有时候会出现cp:omitting directory的错误 ，说明目录下面有子目录，不能直接拷贝。解决办法... Linux cp 拷贝 directory omitting testcs_dn 2015-03-06 18:11 阅读(1274) 评论(0) [系统运维] mysql无法启动ERROR! MySQL is running but PID file could not be found 过了一个春节，服务器一直运行着，今天检查发现Tomcat上发布的站点静态页面可以访问，但是连接数据的相关页面都无法访问； 以为Tomcat出了问题，于是把Tomcat重启了一下，结果重启之后还是一样。通过vi查看日志文件提示Error Write之类的错误，技术不行也搞不清状况，索性就重启一下服务器吧！ 结果服务器启动后就一直停在进度条100%的位置，进不了登录界面；感觉很奇怪，按了ESC键之后... CentOS error MySql PID 服务器 testcs_dn 2015-03-02 16:43 阅读(908) 评论(0) [系统运维] Centos修改root用户密码 如果不是以root用户登录的，请先切换到root用户下， 执行命令：su root 然后按提示输入root用户的密码。英文系统：[root@localhost ~]# passwd Changing password for user root. New password: Retype new password: passwd: all authentication tokens up... Centos 系统 root 用户 密码 testcs_dn 2015-02-06 15:35 阅读(690) 评论(0) [编程语言] Centos6.5 双网卡配置一个上外网一个接局域网 Centos6.5 双网卡配置一个上外网一个接局域网1、配置DNS修改对应网卡的DNS的配置文件# vi /etc/resolv.conf 修改以下内容，可以设置多个：nameserver 202.106.0.20nameserver 114.114.114.1142、配置外网网卡的网关 修改网关的配置文件[root@centos]# vi /etc/sysconfig/network修改以下内容... centos 双网卡 内网 外网 network testcs_dn 2014-12-18 19:17 阅读(3326) 评论(0) [编程语言] CentOS6.5下通过Shell创建、备份、还原MySQL数据库 CentOS6.5下通过Shell创建、备份、还原MySQL数据库创建数据库：mysql -uroot -p123456 -e "CREATE DATABASE IF NOT EXISTS yourDatabaseName DEFAULT CHARSET utf8 COLLATE utf8_general_ci;"备份数据库：mysqldump -uroot -p123456 yourDataba... CentOS6.5 shell mysql 备份 创建 testcs_dn 2014-12-08 20:03 阅读(2554) 评论(0) [编程语言] CentOS6.5下通过Shell修改MySQL初始密码，开启远程登录，授权远程登录用户 CentOS6.5下通过Shell修改MySQL初始密码，开启远程登录，授权远程登录用户；最近在写一个自动化部署的Shell脚本，需要通过Shell修改MySQL初始密码，开启远程登录，授权远程登录用户，经过一番查找和实验，得到以下几个命令，给大家分享一下：修改初始密码：mysqladmin -uroot -pvyCE2UwSaqx3xofR password "123456"开启远程登录，授权远... CentOS6.5 Shell MySQL 初始密码 远程登录 testcs_dn 2014-12-08 10:15 阅读(2312) 评论(0) [编程语言] CentOS 6.5使用安装盘自带的RPM包手动安装gcc CentOS 6.5使用安装盘自带的RPM包手动安装gcc [root@testcs_dn ~]# cd /media/CentOS_6.5_/Packages/ [root@testcs_dn Packages]# rpm -ivh gcc-4.4.7-4.el6.x86_64.rpm warning: gcc-4.4.7-4.el6.x86_64.rpm: Header V3 RSA/SHA... CentOS 安装盘 自带 RPM 手动安装gcc testcs_dn 2014-12-04 17:58 阅读(3600) 评论(0) [编程语言] error: Failed dependencies: cloog-ppl >= 0.15 is needed by gcc-4.4.7-4.el6.x86_64 cpp = 4.4.7-4.el6 CentOS 6.5下使用rpm -ivh gcc-4.4.7-4.el6.x86_64.rpm命令安装GCC时提示以下错误：warning: gcc-4.4.7-4.el6.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY error: Failed dependencies: cloog-ppl >= 0.15 ... CentOS error Failed dependencies gcc cpp testcs_dn 2014-12-04 17:52 阅读(4920) 评论(0) [编程语言] error: cannot open Packages database in /var/lib/rpm 在使用rpm -ivh gcc-4.4.7-4.el6.x86_64.rpm命令安装GCC时，提示以下错误：rpmdb: Thread/process 3343/139858349385472 failed: Thread died in Berkeley DB library error: db3 error(-30974) from dbenv->failchk: DB_RUNRECOVERY... error cannot open Packages database varlibrpm testcs_dn 2014-12-04 16:05 阅读(2054) 评论(2) [编程语言] ContOS如何使用本地cdrom作为yum源 1、挂载CDROM请参考：CentOS7使用mount命令来挂载CDROM2、查看是否已经安装createrepo命令：rpm -qa | grep createrepo如果没有安装，挂载ContOS的光盘，切换目录到“/mnt/cdrom/Packages”目录下，使用rpm命令安装。3、创建cdrom.repo文件vi /etc/yum.repos.d/cdrom.repo[cdrom] na... yum centos rpm cdrom 源 testcs_dn 2014-11-24 18:33 阅读(1637) 评论(0) [编程语言] CentOS7使用mount命令来挂载CDROM CentOS7使用mount命令来挂载CDROM命令：mount -t auto /dev/cdrom /mnt/cdrom 这命令就是把CentOS CDROM挂载在/mnt/cdrom目录中，这样我们就可以访问光盘里面的内容了。执行“mount -t auto /dev/cdrom /mnt/cdrom”命令前需要行确认“/mnt/cdrom”目录是否存在，如果不存在，就先用“mkdir /m... centos mount 挂载 CDROM umount testcs_dn 2014-11-24 17:57 阅读(4794) 评论(0) [编程语言] centos yum的配置文件 repo文件详解 什么是repo文件？repo文件是Fedora中yum源（软件仓库）的配置文件，通常一个repo文件定义了一个或者多个软件仓库的细节内容，例如我们将从哪里下载需要安装或者升级的软件包，repo文件中的设置内容将被yum读取和应用！YUM的工作原理并不复杂，每一个 RPM软件的头（header）里面都会纪录该软件的依赖关系，那么如果可以将该头的内容纪录下来并且进行分析，可以知道每个软件在安装之前需要... centos yum repo 配置文件 库 testcs_dn 2014-11-24 17:54 阅读(6273) 评论(0) [编程语言] CentOS6.5下解压文件.tar.gz .war .zip 解压.tar.gz文件：tar -zxvf web.tar.gztar不支付解压文件到指定的目录！解压.war .zip文件到指定目录：unzip web.war -d webapps/ROOT/... testcs_dn 2014-11-20 19:21 阅读(3613) 评论(0) [编程语言] Warning: File `src/core/nginx.h' has modification time 1.2e+07 s in the future Nginx安装时Warning: File `src/core/nginx.h' has modification time 1.2e+07 s in the future问题的解决方法问题场景：解压文件：tar -zxvf nginx-1.7.4.tar.gz nginx-1.7.4/ nginx-1.7.4/auto/ nginx-1.7.4/conf/ tar: nginx-1.7.4/au... nginx makefile PCRE future testcs_dn 2014-11-18 19:23 阅读(2472) 评论(0) [系统运维] CentOS6.5下安装远程桌面服务端软件VNC Server VNC 使您可以远程访问和控制您的计算机从另一计算机或移动设备上，无论你在世界的任何地方。常见的使用情形，包括给同事和朋友提供桌面支持、远程管理您的服务器。将 VNC Server部署到您想要控制计算机，使用VNC Viewer连接到你想要控制的计算机。安装服务：yum install tigervnc-server这名称有点怪，没用过不知道的话是猜测不到的。[root@localhost ~]#... centos vnc 远程桌面 VNC Server testcs_dn 2014-10-27 20:13 阅读(3723) 评论(0) [系统运维] CentOS6.5下使用NetHogs监控进程网络使用情况 Nethogs 是一个终端下的网络流量监控工具，它的特别之处在于可以显示每个进程的带宽占用情况，这样可以更直观获取网络使用情况。它支持 IPv4 和 IPv6 协议、支持本地网卡及 PPP 链接。下载：从SourceForge上下载nethogs-0.8.0.tar.gz使用wget下载：wget http://sourceforge.net/projects/nethogs/files/neth... testcs_dn 2014-10-27 13:54 阅读(7863) 评论(3) [编程语言] Hadoop学习笔记（二）设置单节点集群 本文描述如何设置一个单一节点的 Hadoop 安装，以便您可以快速执行简单的操作，使用 Hadoop MapReduce 和 Hadoop 分布式文件系统 (HDFS)。... hadoop 分布式文件系统 hdfs 单节点 集群 testcs_dn 2014-10-07 15:47 阅读(7002) 评论(0) [编程语言] CentOS 6.5安装TortoiseSVN svn 客户端 TortoiseSVN：TortoiseSVN 是 Subversion 版本控制系统的一个免费开源客户端，可以超越时间的管理文件和目录。文件保存在中央版本库，除了能记住文件和目录的每次修改以外，版本库非常像普通的文件服务器。你可以将文件恢复到过去的版本，并且可以通过检查历史知道数据做了哪些修改，谁做的修改。这就是为什么许多人将 Subversion 和版本控制系统看作一种“时间机器”。环境说明：... centos tortoisesvn svn 版本控制系统 subversion testcs_dn 2014-10-07 11:44 阅读(3398) 评论(0) [互联网] CentOS6.5下Nginx1.7.4安装记录 1.环境准备yum -y install gcc gcc-c++ autoconf automake makeyum -y install zlib zlib-devel openssl openssl--devel pcre pcre-devel 不执行以上两项安装的话，就可能会遇到下面我的安装过程中遇到的情况：到此页面下载自己想要的版本：http://nginx.org/en/download... linux centos nginx 安装 PCRE testcs_dn 2014-09-12 19:00 阅读(5127) 评论(4) [系统运维] xshell连接CentOS6.5 iptables或ls 输出乱码 今天用Xshell 连接CentOS6.5，当终端》编码设置为：Unicode（UTF-8）时，执行service iptables restart命令的输出就会乱码；当编码设置为：默认语言时，ls的输出就会乱码！乱码问题如下图：执行locale命令输出结果如下：LANG=zh_CN.GB18030 LC_CTYPE="zh_CN.GB18030" LC_NUMERIC="zh_CN.GB1803... centos iptables 乱码 编码 终端 testcs_dn 2014-06-26 16:00 阅读(1551) 评论(0) 25条数据 共2页 1 2 下一页 尾页 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2015-02-07 文章数：25篇 浏览量： 118455 次 热门文章 最新评论

Recno:: 6
URL:: http://blog.csdn.net/column/details/growup.html

ParseText::
专栏：一个程序员的成长史 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 综合专栏 > 一个程序员的成长史 分享到： 新浪微博 腾讯微博 一个程序员的成长史 本系列以本人从学校到职场的经历为原型，同时结合了自己对软件开发工作、程序员的学习和生活的认识和感悟，为大家从学校步入职场提供了参考。 订阅 最新更新文章 [综合] 租房&考驾照—一个程序员的成长史(5) 《一个程序员的成长史》系列第五篇。... zhouzxi 2015-11-26 10:11 阅读(841) 评论(1) [综合] 毕业典礼—一个程序员的成长史(4) 《一个程序员的成长史》系列第四篇。... zhouzxi 2015-11-19 12:06 阅读(722) 评论(0) [综合] 一个并不“艰难”的决定—一个程序员的成长史(3) 《一个程序员的成长史》系列第三篇。... zhouzxi 2015-09-28 09:01 阅读(777) 评论(3) [综合] 一个神秘的电话—一个程序员的成长史(2) 《一个程序员的成长史》系列第二篇。... zhouzxi 2015-09-23 15:15 阅读(819) 评论(9) [综合] 主人公的出场—一个程序员的成长史(1) 大家好，从今天起，我的微信公众号(zhouzxi)会连续推送《窗内窗外—一个程序员的成长史》系列。本系列以我本人从学校到职场的经历为原型，同时结合了我对软件开发工作、程序员的学习和生活的认识和感悟，欢迎大家阅读。你的点赞和支持是我写作的动力。下面是本系列的第一篇文章，让我们跟随主人公代是雄的脚步一起去体验程序员生活吧！... zhouzxi 2015-09-15 18:39 阅读(832) 评论(2) 申请专栏 我的专栏 专栏创建者： zhouzxi 创建时间：2015-11-26 文章数：5篇 浏览量： 3991 次 热门文章 最新评论 租房&考驾照—一个程序员的成长史(5) buxizhizhou530 ： 什么鬼？

Recno:: 7
URL:: http://blog.csdn.net/column/details/javaeclipse.html

ParseText::
专栏：JAVA学习实践及问题记录 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > JAVA学习实践及问题记录 分享到： 新浪微博 腾讯微博 JAVA学习实践及问题记录 JAVA学习实践过程中一些功能实现方法的记录，以及在学习过程中遇到的种种问题、Bug的解决方案的记录，希望与大家共同学习，共同进步。 订阅 最新更新文章 [编程语言] An internal error occurred during: "Loading descriptor for pro-test.". 在执行Maven Update的时候，提示以下错误： An error has occurred. See error log for more details. 详细错误： An error has occurred. See error log for more details. java.lang.NullPointerException重新启动Eclipse之后提示以下两个错误：... update error descriptor for loading testcs_dn 2015-05-13 10:39 阅读(4050) 评论(2) [研发管理] Ignoring unused library classes...java.io.IOException: You have to specify '-keep' options for the s 执行Maven Install打包的时候，出现以下错误信息： Ignoring unused library classes…java.io.IOException: You have to specify ‘-keep’ options for the shrinking step. [proguard] Ignoring unused library classes...java.io.IOE... maven library 打包 proguard Install testcs_dn 2015-05-12 16:34 阅读(867) 评论(0) [编程语言] Failed to execute goal com.github.wvengen:proguard-maven-plugin:2.0.10:proguard (default) on project 执行Maven Install打包的时候，出现以下错误信息：[ERROR] Failed to execute goal com.github.wvengen:proguard-maven-plugin:2.0.10:proguard (default) on project core: Can't find file F:\Workspaces\base-core\core\target\core... project execute maven default 信息 testcs_dn 2015-05-11 11:53 阅读(1220) 评论(0) [研发管理] java.io.IOException: The output jar is empty. Did you specify the proper '-keep' options? 执行Maven Install打包的时候，出现以下错误信息： [proguard] java.io.IOException: The output jar is empty. Did you specify the proper '-keep' options? [proguard] at proguard.shrink.Shrinker.execute(Shrinker.java:171... install maven 信息 jar 打包 testcs_dn 2015-05-11 11:26 阅读(1793) 评论(0) [研发管理] Error: Expecting keyword 'class', 'interface', or 'enum' before '-optimizationpasses' in line 11 of 执行Maven Install打包的时候，出现以下错误信息： [proguard] Error: Expecting keyword 'class', 'interface', or 'enum' before '-optimizationpasses' in line 11 of file 'F:\Workspaces\pro-test\proguard.conf', [proguard]... Maven proguard error before keyword testcs_dn 2015-05-11 11:22 阅读(897) 评论(0) [研发管理] proguard.ParseException: Expecting keyword 'class', 'interface', or 'enum' before '-libraryjars' in 执行Maven Install打包的时候，出现以下错误信息： [proguard] proguard.ParseException: Expecting keyword 'class', 'interface', or 'enum' before '-libraryjars' in argument number 7 [proguard] at proguard.Configuration... maven proguard before keyword class testcs_dn 2015-05-11 11:21 阅读(1345) 评论(0) [研发管理] java.io.IOException: You have to specify '-keep' options for the shrinking step. 执行Maven Install打包的时候，出现以下错误信息：[proguard] java.io.IOException: You have to specify '-keep' options for the shrinking step. [proguard] at proguard.SeedPrinter.write(SeedPrinter.java:60) [proguard]... install maven 打包 keep shrinking testcs_dn 2015-05-11 11:18 阅读(973) 评论(0) [研发管理] java.io.IOException: Can't read [proguard.ClassPathEntry@5ef04b5] (Can't process class [WEB-INF/clas 执行Maven Install打包的时候，出现以下错误信息：[proguard] ProGuard, version 4.4 [proguard] Reading input... [proguard] Reading program war [F:\Workspaces\pro-test\target\pro-test-0.0.1-SNAPSHOT.war] (filtered) [prog... maven install proguard can-t read testcs_dn 2015-05-10 18:22 阅读(1996) 评论(1) [研发管理] java.io.IOException: The same input jar [E:\Jre\lib\rt.jar] is specified twice. 执行Maven Install打包的时候，出现以下错误信息：[INFO] proguard jar: E:\maven\mvnRespo\net\sf\proguard\proguard-base\5.2\proguard-base-5.2.jar [proguard] ProGuard, version 5.2 [proguard] java.io.IOException: The same... maven install proguard same input testcs_dn 2015-05-10 18:05 阅读(2231) 评论(0) [研发管理] Error: Unsupported java version '1.8' in line 2 of file 'proguard.conf' 执行Maven Install打包的时候，出现以下错误信息：[proguard] Error: Unsupported java version '1.8' in line 2 of file 'F:\Workspaces\pro-test\proguard.conf', [proguard] included from argument number 6这是因为在proguard.conf文... error test 信息 file line testcs_dn 2015-05-10 17:08 阅读(942) 评论(0) [研发管理] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK? 执行Maven Install打包的时候，出现以下错误信息：[ERROR] COMPILATION ERROR : [INFO] ------------------------------------------------------------- [ERROR] No compiler is provided in this environment. Perhaps you are runn... maven error compiler jdk Runtime testcs_dn 2015-05-10 15:10 阅读(1149) 评论(0) [研发管理] Error: The input doesn't contain any classes. Did you specify the proper '-injars' options? 执行Maven Install打包的时候，出现以下错误信息：[proguard] ProGuard, version 4.4 [proguard] Reading program war [F:\Workspaces\pro-test\target\pro-test-0.0.1-SNAPSHOT.war] (filtered) [proguard] Error: The input doesn'... Maven Install Error input classes testcs_dn 2015-05-10 15:07 阅读(1171) 评论(0) [编程语言] Type name is discouraged. By convention, Java type names usually start with an uppercase letter 在Eclipse中添加类的时候，提示如下信息： Type name is discouraged. By convention, Java type names usually start with an uppercase letter 如下图： 原因是输入的类名“Name”首字母没有大写，把首字母改为大写的就好了。... uppercase names start convention type testcs_dn 2015-05-10 14:55 阅读(2102) 评论(0) [研发管理] Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in 执行Maven Install打包的时候，出现以下错误信息：[ERROR] Failed to execute goal org.apache.maven.plugins:maven-war-plugin:2.2:war (default-war) on project pro-test: Error assembling WAR: webxml attribute is required (or... error pre inf existing web-inf testcs_dn 2015-05-10 14:50 阅读(2615) 评论(0) [研发管理] Unrecognised tag: 'encoding' (position: START_TAG seen ...</version>\r\n\t\t\t\t<encoding>... @12:15 执行Maven Install打包的时候，出现以下错误信息：[INFO] Scanning for projects... [ERROR] The build could not read 1 project -> [Help 1] [ERROR] [ERROR] The project pro.test:pro-test:0.0.1-SNAPSHOT (F:\Workspaces\pro... encoding Unrecognis position START-TAG seen testcs_dn 2015-05-10 14:26 阅读(1713) 评论(0) [研发管理] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent! 执行Maven Install打包的时候，提示以下警告信息： [WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!解决方法： 打开项目属性》Resources，按下图修改就好了。... resources platform using encoding 图 testcs_dn 2015-05-08 18:46 阅读(2266) 评论(0) [研发管理] java.io.IOException: The input doesn't contain any classes. Did you specify the proper '-injars' opt 问题场景在使用Maven + Proguard打包项目进行混淆时，提示以下错误：[proguard] ProGuard, version 4.4 [proguard] Reading input... [proguard] java.io.IOException: The input doesn't contain any classes. Did you specify the proper... maven 打包 version Proguard IOExceptio testcs_dn 2015-05-08 18:03 阅读(999) 评论(0) [研发管理] 'build.plugins.plugin.version' for com.pyx4me:proguard-maven-plugin is missing. @ line 42, column 12 ‘build.plugins.plugin.version’ for com.pyx4me:proguard-maven-plugin is missing. @ line 42, column 12执行Maven Install的时候提示如下警告信息：[WARNING] [WARNING] Some problems were encountered while building the eff... maven build plugins version Proguard testcs_dn 2015-05-08 16:34 阅读(913) 评论(0) [研发管理] Failed to execute goal com.pyx4me:proguard-maven-plugin:2.0.4:proguard (default) on project xunge-mi Failed to execute goal com.pyx4me:proguard-maven-plugin:2.0.4:proguard (default) on project xunge-middleware: Execution default of goal com.pyx4me:proguard-maven-plugin:2.0.4:proguard failed: Plugin co... project execute maven default failed testcs_dn 2015-05-08 14:25 阅读(836) 评论(0) [研发管理] proguard.ParseException: Unknown option '-keepdirectories' in line 57 of file 问题场景在使用Maven + Proguard打包项目进行混淆时，提示以下错误： [proguard] proguard.ParseException: Unknown option ‘-keepdirectories’ in line 57 of file ‘F:\Workspaces\middle\trunk\proguard.conf’, [proguard] included... Maven Proguard Parse exception keepdirect testcs_dn 2015-05-08 12:20 阅读(1283) 评论(0) 98条数据 共5页 1 2 3 4 5 ... 下一页 尾页 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2015-05-16 文章数：98篇 浏览量： 390501 次 热门文章 最新评论 A child container failed during start testcs_dn ： @plok741:谢谢补充！ A child container failed during start plok741 ： 遇到相同的问题，是由于tomcat的版本的问题导致的。用tomcat8之后，可以成功启动应用。或者使... The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path testcs_dn ： @u014569566:欢迎来踩！ The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path u014569566 ： 感谢楼主，解决问题。。 HTTP Status 500 - javax.servlet.ServletException: java.lang.OutOfMemoryError: PermGen space testcs_dn ： @wcgdd:：） HTTP Status 500 - javax.servlet.ServletException: java.lang.OutOfMemoryError: PermGen space wcgdd ： xxx cannot be resolved to a type 错误解决方法 testcs_dn ： @successA:：） xxx cannot be resolved to a type 错误解决方法 successA ： 大神大神大神！！！！ The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path testcs_dn ： @luo_xia530:：） The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path luo_xia530 ： 感谢楼主

Recno:: 8
URL:: http://blog.csdn.net/column/details/markdown.html

ParseText::
专栏：Markdown - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 综合专栏 > Markdown 分享到： 新浪微博 腾讯微博 Markdown 带你走近CSDN博客Markdown编辑器，学习并使用Markdown编辑器编辑博客文章，感受博文编辑的全新的体验。 订阅 最新更新文章 [综合] CSDN-markdown编辑器语法——背景色 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。但是它本身是不支持修改背景色功能的！  从HTML Editor 转到CSDN-markdown编辑器的很多朋友可能有些不适应，明明很简单的背景色功能，这里却找不到了。  CSDN-markdown编辑器是其衍生版本，扩展了Markdown的功能（如表格、脚注、内嵌HTML等等... markdown 编辑器 html 背景色 bgcolor testcs_dn 2015-05-16 11:06 阅读(1751) 评论(4) [编程语言] CSDN-markdown编辑器语法——字体、字号与颜色 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。但是它本身是不支持修改字体、字号与颜色等功能的！  CSDN-markdown编辑器是其衍生版本，扩展了Markdown的功能（如表格、脚注、内嵌HTML等等）！对，就是内嵌HTML，接下来要讲的功能就需要使用内嵌HTML的方法来实现。字体、字号与颜色<font face="黑... CSDN markdown 字体 字号 颜色 testcs_dn 2015-05-14 12:33 阅读(6472) 评论(35) [综合] CSDN-Markdown编辑器之UML序列图 这里以“TCP协议中的三次握手”来讲一下Markdown编辑器中UML序列图的应用。连接建立的过程： ```sequence Title:连接建立的过程 客户主机->服务器主机: 连接请求（SYN=1,seq=client_isn） 服务器主机->客户主机: 授予连接（SYN=1,seq=client_isn）\n ack=client_isn+1 客户主机->服务器主机: 确认（SYN=0,se... markdown 编辑器 UML 序列图 sequence testcs_dn 2015-03-15 09:18 阅读(2143) 评论(0) [综合] Markdown编辑器语法指南 E文好的同学请查看英文原文： Markdown syntax guide标题# 这是一级标题，相当于HTML中的H1标签 ## This is an H2 ###### This is an H6呈现效果：这是一级标题，相当于HTML中的H1标签This is an H2This is an H6段落每个段落从一个新行开始，段落前最好有一个空行。只需按下回车键开始一个新行。例如， 像下... markdown syntax 编辑器 guide 指南 testcs_dn 2015-03-14 22:42 阅读(730) 评论(0) [综合] CSDN-markdown编辑器之从本机导入Markdown文件（二） CSDN-markdown编辑器支持从本机导入Markdown文件的功能，如果你有从其它网站上下载的博客文章或说明文档，或是用软件编写的博客文章或说明文档，想发布到CSDN博客中，就可以使用本功能很方便的完成操作。这里讲一下拖拽文件到markdown编辑器上的实现方式操作步骤：1、点击工具栏的从本机导入按钮：2、弹出从本机导入对话框：3、打开本地文件夹，将.md文档拖到虚线框里；其实使用Chrome... markdown 编辑器 本机导入 MD文件 testcs_dn 2015-03-13 13:32 阅读(832) 评论(0) [综合] CSDN-markdown编辑器之从本机导入Markdown文件（一） CSDN-markdown编辑器支持从本机导入Markdown文件的功能，如果你有从其它网站上下载的博客文章或说明文档，或是用软件编写的博客文章或说明文档，想发布到CSDN博客中，就可以使用本功能很方便的完成操作。这里讲一下类似上传文件的实现方式的操作步骤：1、点击工具栏的从本机导入按钮：2、弹出从本机导入对话框：3、点击选择文件，打开文件选择对话框：4、选中需要导入的MD文件，点击打开按钮就导入完... markdown 编辑器 导入 MD文件 testcs_dn 2015-03-13 13:20 阅读(1367) 评论(0) [综合] CSDN-markdown编辑器之从线上导入Markdown文件 CSDN-markdown编辑器支持从线上导入Markdown文件的功能，如果你用其它支持Markdown的编辑器在网上写了博客文章或说明档，想发布到CSDN博客中，就可以使用本功能很方便的完成操作。这里以从线上导入GitHub上的一个MD文件为例，说明操作步骤：1、找到GitHub上的一个MD文件：2、点击文件链接进入显示页面：3、点击“Raw”按钮进入MD原始文件页面：4、复制地址栏中的URL地... markdown 编辑器 github上 线上导入 文件 testcs_dn 2015-03-13 13:09 阅读(1319) 评论(0) [综合] CSDN-markdown编辑器使用LaTex数学公式 LaTex是什么？LaTeX（LATEX，音译“拉泰赫”）是一种基于ΤΕΧ的排版系统，由美国计算机学家莱斯利·兰伯特（Leslie Lamport）在20世纪80年代初期开发，利用这种格式，即使使用者没有排版和程序设计的知识也可以充分发挥由TeX所提供的强大功能，能在几天，甚至几小时内生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技... CSDN markdown 编辑器 LaTex 数学公式 testcs_dn 2015-03-12 22:45 阅读(1067) 评论(0) [综合] CSDN-markdown编辑器插入网上或本地电脑上的图片 写博客经常会用到图片，CSDN-markdown编辑器支持插入在线的网上图片，也可以上传本地电脑上的图片。   通过点击工具栏的图片工具或者按下快捷键“Ctrl+G(MAC系统使用Cmd+G)”打开插入图片对话框： 插入在线图片：  在插入图片对话框的“在线图片”标签模式下，输入或粘贴图片地址，点击确定就可以了；如果要添加图片提示，在图片地址后输入一个空格再输入“图片提示”： Chro... CSDN markdown 编辑器 在线图片 上传图片 testcs_dn 2015-03-12 21:57 阅读(2614) 评论(4) [综合] CSDN-markdown编辑器简洁的语法与呈现效果对照2 代码块用TAB键起始的段落，会被认为是代码块，如下： echo “hello world"; 呈现效果： echo “hello world"; 如果在一个行内需要引用代码，只要用反引号`引起来就好，如下：Use the `printf()` function.呈现效果： Use the printf() fun... markdown CSDN 编辑器 语法 效果 testcs_dn 2015-03-11 20:33 阅读(740) 评论(0) [综合] CSDN-markdown编辑器简洁的语法与呈现效果对照 标题在文字写书写不同数量的#可以完成不同的标题，如下：# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题呈现效果：一级标题二级标题三级标题四级标题五级标题六级标题等号及减号也可以进行标题的书写，不过只能书写二级标题，并且需要写在文字的下面，减号及等号的数量不会影响标题的基数，如下：二级标题 =========二级标题 ---------呈... csdn markdown 语法 效果 编辑器 testcs_dn 2015-03-11 20:15 阅读(921) 评论(2) [综合] 无需上网，离线也能用Markdown写博客 无需上网，离线也能用Markdown写博客  这里就讲一下如何使用一款名为“MarkdownPad”的Markdown编辑器离线写博客。有关下载安装的细节请参考Markdown编辑器“MarkdownPad”下载安装（图）  使用“MarkdownPad”可以通过键盘快捷键和工具栏按钮来使用或者移除 Markdown 格式。MarkdownPad左右栏的分割方式令用户可以实时看到 HTML 格式的... markdown 编辑器 离线写博客 无需上网 格式 testcs_dn 2015-03-10 23:23 阅读(872) 评论(0) [综合] Markdown编辑器“MarkdownPad”下载安装（图） MarkdownPad是Windows下的一个全功能Markdown编辑器。应该是使用.NET写的，依赖Microsoft .NET 4 Client Profile。下载MarkdownPad下载地址：http://markdownpad.com/ 打开网页后，点击“Download MarkdownPad”按钮开始下载： 如果看到以下页面还是没有开始下载，请点击“restart the... markdown 编辑器 下载安装 下载 安装 testcs_dn 2015-03-10 23:03 阅读(1343) 评论(0) [综合] 走近CSDN博客Markdown编辑器 Markdown是什么 为什么使用Markdown Markdown的优点 全新的体验 如何切换到MarkDown编辑器 通过发表文章页面切换到MarkDown编辑器 通过博客配置将Markdown设置为默认编辑器 初识Markdown编辑器布局 总体布局 通过博客管理菜单可以切换到HTML编辑器 点击工具栏的帮助按钮可以打开帮助面板 发表博客 设置摘要和标签 文章设置 发布Markdown是什么？... markdown 编辑器 csdn博客 testcs_dn 2015-03-09 22:55 阅读(784) 评论(0) [综合] 欢迎使用CSDN-markdown编辑器 欢迎使用Markdown编辑器写博客本Markdown编辑器使用StackEdit修改而来，用它写博客，将会带来全新的体验哦： Markdown和扩展Markdown简洁的语法 代码块高亮 图片链接和图片上传 LaTex数学公式 UML序列图和流程图 离线写博客 导入导出Markdown文件 丰富的快捷键 快捷键 加粗 Ctrl B 斜体 Ctrl I 引用 Ctrl... 编辑器 markdown 上传 代码 语法 testcs_dn 2015-01-30 21:28 阅读(4849) 评论(15) 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2015-03-09 文章数：15篇 浏览量： 27803 次 热门文章 最新评论 欢迎使用CSDN-markdown编辑器 scufzk2008 ： 代码块那地方很丑，不知道楼主怎么优化下？

Recno:: 9
URL:: http://blog.csdn.net/column/details/mysqltw.html

ParseText::
专栏：MySQL图文进阶 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 数据库专栏 > MySQL图文进阶 分享到： 新浪微博 腾讯微博 MySQL图文进阶 以图片加文字的形式讲述MySQL数据库的应用技巧，适合初学者。 订阅 最新更新文章 [数据库] [Err] 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL s [Err] 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near at line 3MySQL 5.6，Navicat For MySQL 10.0.10 中执行SQL语句时... manual syntax sql error MySQL testcs_dn 2015-06-18 18:02 阅读(2782) 评论(0) [编程语言] CentOS6.5下通过Shell修改MySQL初始密码，开启远程登录，授权远程登录用户 CentOS6.5下通过Shell修改MySQL初始密码，开启远程登录，授权远程登录用户；最近在写一个自动化部署的Shell脚本，需要通过Shell修改MySQL初始密码，开启远程登录，授权远程登录用户，经过一番查找和实验，得到以下几个命令，给大家分享一下：修改初始密码：mysqladmin -uroot -pvyCE2UwSaqx3xofR password "123456"开启远程登录，授权远... CentOS6.5 Shell MySQL 初始密码 远程登录 testcs_dn 2014-12-08 10:15 阅读(2312) 评论(0) [编程语言] MySQL索引的Index method中btree和hash的区别 在MySQL中，大多数索引（如 PRIMARY KEY,UNIQUE,INDEX和FULLTEXT）都是在BTREE中存储，但使用memory引擎可以选择BTREE索引或者HASH索引，两种不同类型的索引各自有其不同的使用范围。Hash 索引结构的特殊性，其检索效率非常高，索引的检索可以一次定位，不像B-Tree 索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问，所以 Hash 索... mysql 索引 hash 性能 BTree testcs_dn 2014-12-05 11:30 阅读(667) 评论(0) [编程语言] 解决Incorrect integer value: '' for column 'id' at row 1的方法 在使用Navicat for MySQL还原数据库备份时，出现Incorrect integer value: '' for column 'id' at row 1的错误; 网上查资料发现5以上的版本如果是空值应该要写NULL这种问题一般mysql 5.x上出现。使用Select version();查看，我用的是mysql5.0.37，而创建备份的MySQL数据库版本是5.6官方解释说：得知新... Navicat for MySQL Incorrect integer va for column id at row 1 testcs_dn 2014-09-29 15:34 阅读(4673) 评论(0) [数据库] CentOS下如何完全卸载MySQL？解决卸载不干净的问题 CentOS下如何完全卸载MySQL？解决卸载不干净的问题系统：CentOS 6.5，MySQL：MySql 5.6这里主要解决使用rpm安装的卸载问题，安装方法见：CentOS安装mysql*.rpm提示conflicts with file from package的解决办法虽然说这里的是使用rpm安装的卸载问题，我觉得使用yum方式安装的如果遇到相同的问题也一样适用。查看已经安装的服务rpm... CentOS 完全卸载 MySQL 卸载不干净 rpm testcs_dn 2014-09-23 19:29 阅读(6643) 评论(3) [数据库] Starting MySQL...The server quit without updating PID file [失败]lib/mysql/localhost.localdomain.pid). 重启了一下服务器，启动后就报以下错误了：Starting MySQL...The server quit without updating PID file [失败]lib/mysql/localhost.localdomain.pid).纠结了很久没找到解决办法，后来突然想到修改了mysql的配置文件“/usr/my.cnf”之前配置默认编码，在配置文件中添加了“default-characte... MySQ server updating PID 失败 testcs_dn 2014-09-05 13:18 阅读(12175) 评论(2) [数据库] CentOS安装mysql*.rpm提示conflicts with file from package的解决办法 CentOS 6.5下安装MySql 5.6解压文件：tar xvf MySQL-5.6.19-1.linux_glibc2.5.x86_64.rpm-bundle.tar释放出以下文件：MySQL-embedded-5.6.19-1.linux_glibc2.5.x86_64.rpmMySQL-devel-5.6.19-1.linux_glibc2.5.x86_64.rpmMySQL-share... CentOS mysql rpm conflicts testcs_dn 2014-09-03 13:23 阅读(10968) 评论(2) [数据库] Data source rejected establishment of connection, message from server: "Too many connections" 详细错误信息：严重: StandardWrapper.Throwableorg.springframework.transaction.CannotCreateTransactionException: Could not open JDBC Connection for transaction; nested exception is org.apache.commons.dbcp.SQLNes... springmvc server centos mysql jdbc testcs_dn 2014-07-30 14:24 阅读(10653) 评论(0) [数据库] CentOS下mysql最大连接数设置 1040 too many connection 当最大连接数比较小时，可能会出现“1040 too many connection”错误。可以通过修改配置文件来修改最大连接数，但我连配置文件在哪都不知道，应该怎么办呢？首先需要重启mysql服务，执行命令：service mysql restart也有可能是：service mysqld restart登录mysql:mysql -uroot -p输入密码，回车；登录成功后执行以下语句查询当前的... mysql centos 最大连接数 testcs_dn 2014-07-16 16:24 阅读(3964) 评论(2) [编程语言] MySQL在大型网站的应用架构演变 写在最前： 本文主要描述在网站的不同的并发访问量级下，Mysql架构的演变。可扩展性架构的可扩展性往往和并发是息息相关，没有并发的增长，也就没有必要做高可扩展性的架构，这里对可扩展性进行简单介绍一下，常用的扩展手段有以下两种：Scale-up：纵向扩展，通过替换为更好的机器和资源来实现伸缩，提升服务能力Scale-out：横向扩展,  通过加节点（机器）来实现伸缩，提升服务能力对于互联网的高并发应... mysql 集群 垂直拆分 水平拆分 主从架构 testcs_dn 2014-06-18 12:00 阅读(726) 评论(0) [数据库] Cobar使用文档（可用作MySQL大型集群解决方案） 原文：最近好不容易抽空研究了下Cobar，感觉这个产品确实很不错（在文档方面比Amoeba强多了），特此推荐给大家。Cobar是阿里巴巴研发的关系型数据的分布式处理系统，该产品成功替代了原先基于Oracle的数据存储方案，目前已经接管了3000+个MySQL数据库的schema，平均每天处理近50亿次的SQL执行请求。首先，使用Cobar的核心功能如下：分布式：Cobar的分布式主要是通过将表放入... Cobar mysql 存储 集群 testcs_dn 2014-06-17 17:02 阅读(824) 评论(1) [数据库] CentOS下安装MySQL，Windows下使用Navicat for MySql连接 安装查看有没有安装过：          yum list installed mysql*          rpm -qa | grep mysql* 查看有没有安装包：          yum list mysql* 安装mysql客户端：          yum install mysql 安装mysql 服务器端：          yum install mysql-server... windows mysql 数据库 centos Navicat testcs_dn 2014-06-16 19:42 阅读(4112) 评论(0) [数据库] MySQL学习（二）图形界面管理工具Navicat for MySQL安装和使用 Navicat for MySQL是一款强大的 MySQL 数据库管理和开发工具，它为专业开发者提供了一套强大的足够尖端的工具，但对于新用户仍然易于学习。Navicat for MySQL 基于Windows平台，为 MySQL 量身订作，提供类似于 MySQL 的用管理界面工具。此解决方案的出现，将解放 PHP、J2EE 等程序员以及数据库设计者、管理者的大脑，降低开发成本，为用户带来更高的开发效率。... MySQL 图形管理工具 Navicat 安装 使用 testcs_dn 2014-03-12 23:17 阅读(11738) 评论(0) [数据库] MySQL学习（一）数据库安装与配置全程图解 MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL所使用的SQL语言是用于访问数据库的最常用标准化语言。MySQL软件采用了双授权政策（本词条“授权政策”），它分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择MySQL作为网站数据库。由于其社区版的性能卓越，搭... mysql 数据库 testcs_dn 2014-03-11 22:17 阅读(3326) 评论(0) [数据库] MySQL类型转换注意事项 最近在做的一项工作是将之前使用MSSQLServer数据库的服务， 改写为支持MySQL数据库，SQL语句中涉及了一些类型转换的功能， 结果发现MySQL的类型转换函数“CONVERT”并没有提供很好的数据类型名称的兼容性， 参数顺序上也不一样！ SQLServer中使用convert(int, Port)，MySQL中要使用convert(Port, SIGNED) AS `po... mysql sqlserver 数据库 sql Convert testcs_dn 2014-03-07 14:48 阅读(1641) 评论(0) [数据库] c / c + + 调用mysql存储过程 原文：c / c + + call mysql stored procedure E文好的请查看原文，菜鸟级翻译，欢迎批评指正！ mysql5.0支持存储过程后，现在mysql6.0Alpha 版本也是可用的。6.0不仅支持大型数据库（如 oracle和如此的大多数功能（如存储过程、视图、触发器、作业等，并修复了这些功能存在的bug，6.0.1 版还支持windows 64 位 和表空间。 C/c + + 要访问 mysql，只是一些简单的常用操作，c嵌入式简单查询、插入、更新和其他操作的使用可以。这... c c + + mysql 存储过程 testcs_dn 2014-02-10 16:41 阅读(4275) 评论(1) [数据库] mysql如何跟踪执行的sql语句 在SQL SERVER下跟踪sql采用事件探查器，而在mysql下如何跟踪sql呢？ 其实方法很简单，开启mysql的日志log功能，通过查看跟踪日志即可。 开启mysql的日志log方法： windows环境下的配置方法： 我使用的版本：Version: 5.0.37-community-nt-log (MySQL Community Edition (GPL)) 找到my... mysql 跟踪 sql testcs_dn 2014-01-26 10:30 阅读(4586) 评论(2) [数据库] MySql从表结果集中随机取一条数据 该功能的实现基于“mysql 查找结果中自动加序号列 ” 博客文章地址：http://blog.csdn.net/macwhirr123/article/details/7489484 Select * from (Select (@rowNo :=@rowNo+1) AS rowno, pwd from pur_admininfo, (Select @rowNo := 0) b) t... MySql 随机取一条数据 testcs_dn 2013-08-21 15:36 阅读(2981) 评论(2) 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2014-05-05 文章数：18篇 浏览量： 89044 次 热门文章 最新评论

Recno:: 10
URL:: http://blog.csdn.net/column/details/nosql.html

ParseText::
专栏：NoSQL入门与提高 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 数据库专栏 > NoSQL入门与提高 分享到： 新浪微博 腾讯微博 NoSQL入门与提高 “non-relational”，“Not Only SQL”，带你认识什么是NoSQL，有哪些实现及其优势与劣势，与关系型数据库的对比分析，到如何选择合适的数据库，深入学习并在项目中使用它。 订阅 最新更新文章 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2015-03-01 文章数：0篇 浏览量： 0 次 热门文章 最新评论

Recno:: 11
URL:: http://blog.csdn.net/column/details/vcmfc.html

ParseText::
专栏：VC学习实践及问题记录 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专栏 > 编程语言专栏 > VC学习实践及问题记录 分享到： 新浪微博 腾讯微博 VC学习实践及问题记录 Visual c++学习实践过程中一些功能实现方法的记录，以及在学习过程中遇到的种种问题、Bug的解决方案的记录，希望与大家共同学习，共同进步。 订阅 最新更新文章 [编程语言] VC Windows API应用之GetDesktopWindow ——获得桌面所有窗口句柄的方法 Windows APIWindows 这个多作业系统除了协调应用程序的执行、分配内存、管理资源…之外， 它同时也是一个很大的服务中心，调用这个服务中心的各种服务（每一种服务就是一个函数），可以帮应用程式达到开启视窗、描绘图形、使用周边设备等目的，由于这些函数服务的对象是应用程序(Application)， 所以便称之为 Application Programming Interface，简称 API... vc WindowAPI 获得桌面 窗口句柄 应用 testcs_dn 2015-04-19 14:49 阅读(3271) 评论(9) [编程语言] RegisterClass和RegisterClassEx有什么区别？ 引言继上篇文章“VC CreateWindow 找不到窗口类”中将RegisterClassEx改为RegisterClass问题就解决了，究竟是什么原因，RegisterClass和RegisterClassEx有什么区别呢？ 经过一番查找和测试，终于找到了答案：不同之处：The RegisterClass function has been superseded by the Register... RegisterCl 区别 VC c API testcs_dn 2015-02-09 16:51 阅读(1624) 评论(1) [编程语言] VC CreateWindow 找不到窗口类 VC CreateWindow 找不到窗口类，有提示是因为没有调用RegisterClass注册窗口类，可是我已经使用RegisterClassEx注册了！ //函数：MyRegisterClass //作用：注册窗口类ATOM MyRegisterClass(HINSTANCE hInstance) { WNDCLASSEX wndclass; wndclass.cbSize = sizeof... vc hinstance CreateWind 找不到窗口类 RegisterCl testcs_dn 2015-02-09 16:10 阅读(916) 评论(0) [编程语言] 不能将参数 2 从“char [8]”转换为“LPCWSTR” 在编译一个网上的小项目的代码时，出现以下错误： 不能将参数 2 从“char [8]”转换为“LPCWSTR” 错误原因： 项目属性使用的Uncode字符集，与代码要求的不匹配； 解决办案： 选中项目，然后点击菜单中的项目——>属性——>配置属性——>常规——>项目默认值——>字符集，选为“使用多字节字符集”... c 字符集 char LPCWSTR 转换 testcs_dn 2015-02-09 15:21 阅读(1374) 评论(8) [编程语言] 《Visual c++2013入门经典（第7版）》上机练习：为 Win32 控制台应用程序创建项目 看到《那些年我们追过的Wrox精品红皮计算机图书》有奖活动下载了《Visual c++2013入门经典（第7版）》的试读PDF，开始学习。这本书的读者对象本书针对任何想要学习如何使用 Visual C++编写在 Microsoft Windows 操作系统下运行的 C++应用程序的读者。阅读本书不需要预先具备任何特定编程语言的知识。如果属于下列 3 种情形之一，你就适合学习本教程：● 属于编程新手... Wrox 精品红皮 计算机图书 Visual c++2013 入门经典 testcs_dn 2015-01-25 14:50 阅读(3946) 评论(11) [编程语言] c++命令提示符窗口下打印指定大小的菱形代码 c++命令提示符窗口下打印指定大小的菱形代码VS2010下，新建空项目，添加源文件，将代码粘贴进去就可以了。通过改maxRows值的大小，可以控制菱形的大小#include #include //添加依赖的头文件 void main() { int i,j,k; int maxRows = 12;//控制菱形的大小 //先打印上边的四行 for(i=1;i<maxRows;i+... c++ printf 菱形 算法 testcs_dn 2014-10-03 19:11 阅读(2396) 评论(0) [编程语言] VS2010编写动态链接库DLL及单元测试用例，调用DLL测试正确性 本文将创建一个简单的动态链接库，并编写一个应用台控制程序使用该动态链接库，该动态链接库为“JAVA调用动态链接库DLL之JNative学习”中使用的DLL，只是项目及文件名称不同。创建动态链接库项目：1、打开Microsoft Visual Studio 2010，选择文件->新建->项目。2、在新建项目窗口中选择其他语言->Visual C++->Win32。3、选择Win32 项目，设置名称：... vs2010 visual studio 2010 动态链接库 DLL 单元测试 testcs_dn 2014-05-27 22:46 阅读(6655) 评论(0) [研发管理] vs2010发布时去除msvcp100.dll和msvcr100.dll图解说明 最近开发个程序，Copy到虚拟机环境中测试时提示缺少msvcr100.dll，于是想到编译时设置选项去除依赖。什么是 msvcr100.dll MS = Microsoft V = Visual C = C program language R = Run-time 100 = Version什么是 msvcp100.dllMS = Microsoft V = Visual CP = C++ 10... vs2010 去除 msvcp100.dll msvcr100.dll 说明 testcs_dn 2014-05-25 20:34 阅读(5184) 评论(5) [编程语言] VS2010中wmain入口函数中使用wprintf输出中文乱码问题 正确代码：#include "stdio.h" #include "Windows.h" #include int wmain(int argc, wchar_t* argv[]) { setlocale(LC_ALL, "chs"); wprintf(L"%s\n", L"中文字符"); }其关键代码为：setlocale(LC_ALL, "chs");配置地域化信息函数为什么一定要调用... vs2010 乱码 本地化 语言 输出 testcs_dn 2014-05-18 19:52 阅读(1427) 评论(0) [编程语言] IntelliSense 无法重载仅按返回类型区分的函数 IntelliSense:无法重载仅按返回类型区分的函数       d:\programfiles (x86)\microsoft sdks\windows\v7.0a\include\winbase.h         3540在VS2010下用C语言写Windows系统服务，从另一个c#的项目中Copy过来一段代码，修改后再编译，就产生了这个错误！在网上搜索得到的答案是：“无法重载仅按返回类... vs2010 c语言 经验 IntelliSense testcs_dn 2014-05-18 17:50 阅读(1844) 评论(0) [编程语言] SHA-1算法c语言实现 安全哈希算法（Secure Hash Algorithm）主要适用于数字签名标准 （Digital Signature Standard DSS）里面定义的数字签名算法（Digital Signature Algorithm DSA）。对于长度小于2^64位的消息，SHA1会产生一个160位的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，... c hash sha1 加密 算法 testcs_dn 2014-05-14 09:59 阅读(4652) 评论(4) [编程语言] C语言获取文件的SHA1哈希值 安全哈希算法（Secure Hash Algorithm）主要适用于数字签名标准 （Digital Signature Standard DSS）里面定义的数字签名算法（Digital Signature Algorithm DSA）。对于长度小于2^64位的消息，SHA1会产生一个160位的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，... c hash sha1 算法 安全 testcs_dn 2014-05-12 00:17 阅读(4292) 评论(0) [编程语言] 多进程浏览器下ActiveX插件调试技巧 概述： 现在主流的浏览器都是多进程浏览器，这却给ActiveX插件的调试带来了很大的不便！ 最近在使用VS2010开发ActiveX插件，由于要在真实的浏览器环境下调试， 发现在附加到进程时想找到真正的宿主进程比较麻烦！ 于时想到了一个工具“Process Explorer”，使用它很容易就可以找到真正的宿主进程。 使用方法： 打开“Process Explorer”，点击“Find... 多进程 浏览器 ActiveX 插件 调试技巧 testcs_dn 2014-03-12 10:31 阅读(1558) 评论(0) [数据库] c / c + + 调用mysql存储过程 原文：c / c + + call mysql stored procedure E文好的请查看原文，菜鸟级翻译，欢迎批评指正！ mysql5.0支持存储过程后，现在mysql6.0Alpha 版本也是可用的。6.0不仅支持大型数据库（如 oracle和如此的大多数功能（如存储过程、视图、触发器、作业等，并修复了这些功能存在的bug，6.0.1 版还支持windows 64 位 和表空间。 C/c + + 要访问 mysql，只是一些简单的常用操作，c嵌入式简单查询、插入、更新和其他操作的使用可以。这... c c + + mysql 存储过程 testcs_dn 2014-02-10 16:41 阅读(4275) 评论(1) [编程语言] VC #define EC(x) L##x 作用说明 #define EC(x) L##x 作用说明 表示L与x连接。 #define Conn(x,y) x##y #define ToChar(x) #@x #define ToString(x) #x x##y表示什么？表示x连接y，举例说： int n = Conn(123,456); 结果就是n=123456; char* str = Conn("asdf", "adf")结果就是... vc define 宏定义 连接符 testcs_dn 2014-01-24 14:40 阅读(1499) 评论(0) [编程语言] c++ 如何使用CryptoAPI创建一个自签名证书 引文链接：How to create a self-signed certificate with CryptoAPI (C++) CryptoAPI编程 （1） 微软加密服务体系 微软加密服务体系CryptoAPI的结构如下图所示，微软加密服务体系包含三层结构和两个接口，分别为应用程序层、操作系统层（OS）、加密服务提供者层(Cryptographic Service Pr... testcs_dn 2013-12-14 21:16 阅读(3368) 评论(0) [编程语言] 线程，进程间的通讯和同步原理，实现用例和应用 线程/进程间的通讯方式 —使用全局变量/共享内存 —使用thread中的lParam参数 —使用socket —使用窗口和消息 —使用命名管道/匿名管道 —使用cmd参数 —使用environment变量 线程的启动，退出和lParam参数通讯 VC: #include DWORD WINAPI ThreadProc(LPVOID lParam);... 线程 同步原理 实现用例 应用 进程间通讯 testcs_dn 2013-03-27 15:00 阅读(3572) 评论(7) [编程语言] C/C++ For循环语句的效率测试优化及运行时错误：Stack Overflow的解决办法 C/C++ For循环语句的效率测试优化及运行时错误：Stack Overflow的解决办法 在多重循环中，如果有可能，应当将最长的循环放在最内层，最短的 循环放在最外层，以减少CPU跨切循环层的次数。 使用以下代码对嵌套For循环的效率进行测试验证： // For嵌套性能.cpp : Defines the entry point for the console ap... CC++ 循环 效率 优化 运行时错误 testcs_dn 2013-03-04 14:45 阅读(1912) 评论(0) [编程语言] VC编程时关于 WM_MOUSEENTER 和 WM_MOUSELEAVE消息 关于 WM_MOUSEENTER 和 WM_MOUSELEAVE消息 这两个消息比较古怪，虽然你能找到他们的定义，看起来也似乎挺有用，但是却接收不到。 如果要处理这两个消息需要手动在WM_MOUSEMOVE消息处理函数中添加： 添加变量： BOOL m_bTracking; m_bTracking = FALSE; 添加消息处理函数： afx_msg LRESULT OnMo... testcs_dn 2012-10-25 17:18 阅读(2554) 评论(0) [编程语言] 无法执行添加/移除操作，因为代码元素**是只读的 在vs中，大量添加窗体或者控件后，发现无法由系统IDE自动生成代码，如自动添加按钮响应函数等，rc管理器界面双击按钮添加函数，会出现 提示框 “无法执行添加/移除操作，因为代码元素**是只读的”。开始认为可能是对应的.cpp和.h被加了只读属性，后来发现是工程的ncb文件引起的。 解决方案：关闭vs，删除工程对应的.ncb文件，重启vs就好了。 问题原因：NCB是no compile brow... testcs_dn 2012-10-25 17:08 阅读(6388) 评论(1) 33条数据 共2页 1 2 下一页 尾页 申请专栏 我的专栏 专栏创建者： testcs_dn 创建时间：2015-04-23 文章数：33篇 浏览量： 89083 次 热门文章 最新评论

Recno:: 12
URL:: http://blog.csdn.net/csfreebird/rss/list

ParseText::


Recno:: 13
URL:: http://blog.csdn.net/domypp/article/details/49421113

ParseText::
超级表格全新界面全新体验 - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 超级表格全新界面全新体验 标签： 超级表格 体验 界面 版本升级 2015-10-26 14:59 3472人阅读 评论 (9) 收藏 举报 分类： 产品升级 （3） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 致亲爱的超级表格用户：               2015年的夏天已经过去，因为有您的陪伴，超级表格如同小树苗一样在这些日子里逐渐生长，发芽。金色秋季里，超级表格也换上2015秋季新款。全新的界面更加耳目一新，人性化操作更加灵活方便。           2015秋天，希望您与我们继续相伴。                                                          超级表格团队 超级表格全新界面 全新体验 文件列表移至工具栏【打开】中 旧版本中，占据全屏的文件列表由于非常害羞，已经获得特批，不再以全屏的姿态“暴露”在众目睽睽之下，而是躲在了表格的工具栏中“打开”按钮里。 【共享给我的文件】也可以分类 文件目录不甘心仅仅出现在【我建的表格】中，于是在一系列的宫斗剧情后，成功获得了入住【共享的表格】之中，从此共享表格被它俘虏，共享文件也能分类文件查看。 近期打开的表格出现在【工具栏】中 其实，当我们打开一张表格时，并不意味着我们不喜欢另一张表格了。但是表格总是很多心，为了避免它离家出走，我们给它们安排了一个叫“…”的小房子，当它们在工具栏里住不下时，就会到那里去，所以不用担心它们离家出走啦。 文件【复制】【删除】【重命名】【导出】在这里 关于表格自己的一切都由它自己管理，在靠近它的小三角里，赶紧看看里面都有些什么吧！ 【行操作】搬家了 当表格们都来到了工具栏后，有钱的【行操作】（多行删除、批量修改、导入表格）自然要重新换一个简单舒适的地方重新安家。于是，它来到了左上角一个“下三角”的地方开始新的贵族生活。 【格式】和【添加】也挪地方了 工具栏中的格式和添加两个功能，竟然趁我们不注意悄悄私奔了。去了哪里呢？哪里呢……哈哈，找到了，添加化名成编辑和格式一块都在点击单元格后的浮动条里面。小样，你们也去找找看吧。 新旧版本随时切换 当然，天冷穿棉袄，天热穿短裙。超级表格在有了秋季新装后也不会舍弃曾经的衣裳。新旧版本可以来回切换，随时随地变装更加轻松。 多人协作的在线表格 优美的企业管理软件 欢迎关注超级表格公众号 ：chaojibiaoge www.chaojibiaoge.com 上一篇 跟支持创业的政府官员打交道是怎样的体验 下一篇 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ 顶 1 踩 0 我的同类文章 产品升级 （3） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203881次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 14
URL:: http://blog.csdn.net/domypp/article/details/49535897

ParseText::
当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ 标签： 马英九 创业 卡梅伦 陈坤极 超级表格 2015-10-31 20:27 1082人阅读 评论 (2) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 随着国人的生活水平的不断提升，吃饱穿暖已经不再是人们渴求的事情，更多的目光则被放到了 健康上面。 不久前，《中国青少年体育发展报告（2015）》正式公布，显示出的情况令人咋舌， 大学生的体质堪忧，在耐力方面甚至赶不上中学生。 年年都有大学生在校进行体测时猝死的情况发生，导致不少大学为避免类似情况纷纷取消1000米跑步测试，改为其他项目，加上大学生基本上是属于放养教育，很少有学生会主动锻炼，也就给健康埋下了极大的隐患。 今年4月份，美网站就评选出了全球最健康的10个国家。 如果你问中国排在第几，我只能呵呵一笑。 因此，从此刻开始，开始去买一双好的运动鞋吧。 什么，没有时间？让你看看比你忙碌100倍的人们在做什么吧！ 马英九 中国台湾国民党主席。一向帅气、儒雅的他其实一直在坚持锻炼。已过60的他用27分34秒的出色成绩完成了5公里长跑，他从20岁开始就一直坚持跑步，跑量已经超过一万五千公里，而时间更是不计其数。 卡梅伦 英国首相。被称为“政治金童”的他在政治场上聪明、谦虚，被很多人作为自己的榜样。然而，还有一点值得学习的就是英国举办的各大跑步赛事中总能看到他的身影。 刘爱明 协信地控股有限公司首席执行官；原万科企业股份有限公司执行副总裁。对于他来说，值得一提的是，一年多前参加马拉松比赛时，刘爱明跑步时间已经超过了关门时间，但他却并不着急，他说：“马拉松是我自己的马拉松，关不关门有什么关系？活出自我，跑出灵魂！ 王德源 深圳德弘基集团董事长，曾就职于万科。他不仅仅是很优秀企业家还是一位很有学问的诗人，他把跑步理解成人生的另一种感悟，他认为跑步时一样可以感受到流霞乱飞，岁月静好的味道，并且还在跑步期间作诗一首：“禅心静水自相拥，不与秋风慷慨同。灵光百丈投犀至，相逢一笑又西东” 毛大庆 万科集团高级副总裁。他认为一个月跑一次马拉松是非常健康的事情，远比在餐桌上和朋友喝酒聚会要好得多。 陈坤极 上海铀尼信息科技有限公司总裁，可在线多人协作的电脑办公软件超级表格的创始人。曾经在刚开始创业时，压力非常大的时候，他就去跑步，甚至把整个团队的成员叫上一块去跑步，为了有更健康的跑步和工作环境，他还把团队带领到了厦门，每天花1-2小时进行跑步，通常累了一身汗后，总会在产品设计方面迸发出新的思路。 跑步的好处我相信所有的人都知道，我就不再赘述，只是想说，当很多人用没有时间，没有精力来推脱锻炼时，你仔细看看那些比你忙碌100倍的人们都在怎样对待这件事情的吧。 多人协作的在线表格 优美的企业管理软件 欢迎关注超级表格公众号 ：chaojibiaoge www.chaojibiaoge.com 上一篇 超级表格全新界面全新体验 下一篇 创业在腾讯、在阿里巴巴、在团中央机构！ 顶 4 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203884次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 15
URL:: http://blog.csdn.net/domypp/article/details/50060681

ParseText::
从普通程序员到估值上亿的公司老板，他只用了1年！ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 从普通程序员到估值上亿的公司老板，他只用了1年！ 标签： 超级表格 创业 陈坤极 互联网 程序员 2015-11-26 20:39 869人阅读 评论 (1) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 微信公众号 ： chaojibiaoge 2015年11月6日。大雪纷飞。 “超级表格第一次投资者大会”在京正式召开，像是初生幼儿的百日宴迎来了人生中的第一次庄重的典礼。 各个行业的领军人物都齐聚一堂， 如来自北软天使的著名投资人王童、以及天使成长营的发起人徐勇、还有清控科创董事长秦君 等等，和在场的40多位全国各地远道而来的投资者或者媒体人们一起见证超级表格一路走来的坎坷，与成长。 其实他们也和我们共同成长。 2014年6月6日，“中关村天使投资成长论坛暨天使成长营首期开营典礼”在北京文津国际酒店盛大开幕，以“公益、开放、系统、实效、互助、创新”作为理念，告诉了全世界，天使成长营正式成立了。 时光再往前移，14年4月15日，天使成长营揭牌，整个仪式只花了几百块买了一块黑板，上写了五个字——“天使成长营”，就低调的启动了。到如今已经是界内知名的天使投资机构，他们就像是摆渡者，将学员们带领着直至彼岸。 “目前，我们已经成功指导了前三期的学员，第四期学员也正在招募的过程中。”天使成长营运营总监张彦说道。当时揭牌仪式上“天使成长营”五个字就是她亲自写上去的。 那是超级表格投资者大会结束后的第二个星期，我和张彦约好，在北京海龙大厦的办公室和她简单聊聊。因为对于超级表格来众多的投资者来说，光是天使成长营里的学员就有26个。 他们共同见证了我们的成长，所以理应由我们来给他们交一份满意的答卷。 张彦提到说，“天使成长营招募的天使投资人作为学员并不是仅仅有钱就能通过筛选的。 他们或来自上市公司、大企业的成功企业家、或来自BAT等互联网公司高管、或来自创业服务机构的专家。在投资这方面能有自己的看法和独到的主张 ”因此当他们都看好超级表格的前景，有意愿出资时就是对超级表格莫大的鼓舞。 也是莫大的希望！ 今年11月15日，超级表格CEO陈坤极在接受中央人民广播电台的访问时回忆道：“我们几乎不做任何推广，吸引到的用户都来源于口耳相传。我的第一批用户就来自我的博客。”而超级表格的投资人都来自他的路演。 15年春天，北京中关村创业大街花枝招展地吸引着所有创业者和投资者的目光，而由“一杯咖啡”主办的路演活动上，颁奖仪式刚刚结束。超级表格最终以远超第二名的高分获得了创业大街“最受欢迎的项目”；当时，坐在第一排评委区里的一个男人站起来说：“ 所有项目里，我最看好的就是超级表格。 ” 所有人都把目光聚焦过来，这个说话的人就是北软天使的创始人王童，被评为中关村十大天使投资人。陈坤极当时并没有立刻认出他，虽然路演很快结束，但是创业还在继续…… 两个月后，在一场Binggo咖啡项目的路演上，来自天使成长营的投资经理看中了其中一个项目，他收集好了它的具体内容，推给了天使成长营的投委会主席。那是“超级表格”第一次出现在天使成长营的视线里。 没过几天，陈坤极就接到了那边邀约的电话，他去到见面的地点，见了三个人。一个是梧桐树资本合伙人童玮亮、戈壁投资合伙人徐诚，另外一个就是王童。 好项目必定会邂逅好的投资人，伯乐自然会发现千里马。 所以，几个月后，王童作为投资人代表在“超级表格投资者大会”上说：“ 协同表格有非常大的市场前景，虽然Excel也开发了自己的在线产品，但从技术的角度讲，其基因已经决定了Excel很难在在线产品上发力。未来数年，随着各个版权领域对付费环境的改善，在线软件产品也将逐步展开新的篇章。 ” 张彦后来提到说，超级表格的天使融资非常顺利，他们整理好项目计划书以及进调报告，发给了天使成长营的第一期学员。 一开始，他们想到了这个项目肯定会吸引学员投资，但是当有意向的投资者人数超过了预期估计时，这确实也带来了额外的惊喜。 陈坤极后来回忆时，在创业过程中，总是能想起王童对超级表格说过的一句话，他说：“专业的团队要做专业的事情。”反过来也可以这样说，专业的事情要有专业的人去做。 如今，超级表格可以顺利渡过资本寒冬，并且在偌大的世界里占据一席之地。有来自北大、用友和搜狐的产品、技术和市场人才加盟。目前仅十五人的团队，发挥着难以想象的超大能量场。 请点击这里 ，收集与整理信息，一张超级表格搞定！ 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号： chaojibiaoge 上一篇 SaaS应用“超级表格”获数百万天使融资 下一篇 超级表格一个小功能就甩全国高校的管理平台甩N条街！ 顶 2 踩 1 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203883次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 16
URL:: http://blog.csdn.net/domypp/article/details/50390010

ParseText::
即将被裁掉，她是如何替他力挽狂澜？ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 即将被裁掉，她是如何替他力挽狂澜？ 标签： 超级表格 超表论坛 互联网 多人协作 在线表格 2015-12-23 22:15 535人阅读 评论 (2) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超级表格微信公众号 ： chaojibiaoge 张小小下班的时候已经接近凌晨了 。 她站起身，把椅子推回原来的位置，转身走到办公室门口，关了灯，锁好了办公室的门。 北方的寒风呼呼地吹过，黑夜里空无一人的街道，和被风吹起的长发。 王小超突然一惊，睡梦中也被寒风吹醒。 他想起白天上班时老板的话，像是一个耳光打在脸上，一下子睡意全无。 “明天早上，我一定要见到报表统计的结果，否则你也不用来上班了！” 老板说这话的时候，张小小刚刚泡好一杯咖啡，恰巧从办公室经过，险些把咖啡洒在了开门而出的王小超身上， 他失魂落魄，她尽收眼底。 张小小的办公位离王小超不远，曾试着好几次提起话题，都被王小超岔过去了。她知道王小超的自尊心极强，便不再多问了。再去多方打听才知道，王小超是因为报表统计的事情在发愁，张小小突然想起曾经接触过的一个软件叫“超级表格”，可是只是简单用过，许多功能自己也不是很熟。 于是她登录超级表格的官方网站，发现了“进入社区”，直接点了进去。 超级表格社区里不仅有许多关于超级表格的使用教程 在汇集了所有使用超级表格的高手区里，还可以自由提问。 也没多想，时间一分一秒过去了。下班时间很快到了，张小小登录论坛后突然发现刚才的疑问已经收到了 十几条建议 ，她便逐一筛选，整理统计了出来。 深夜里，王小超看到了张小小发来的一条微信，后面附上了张小小从超表论坛上整理出来的内容。 王小超于是一夜未睡，重新整理…… 老板在季度大会上着重表扬了王小超的统计效率，并当众发了奖金给他。 “嗨，小小，谢谢你。”茶水间里，王小超悄悄跟张小小道谢，又问：“你很少用超级表格，是怎么知道这么好用的方法的？” 张小小看了看他，神秘地说：“ 有问题，问超表论坛 。” 王小超看了看张小小，觉得这个姑娘漂亮极了。   请点击这里 ，收集与整理信息，一张超级表格搞定！ 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号： chaojibiaoge 上一篇 超级表格如何成就了速度与激情？ 顶 0 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203885次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 17
URL:: http://blog.csdn.net/experts/apply_blog_expert.html

ParseText::
博客专家申请 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专家 > 博客专家申请规则 > 博客专家申请 博客专家申请 尊敬的用户： 感谢您对CSDN博客的支持！ “博客专家”是CSDN给予质量较高、影响力较大的IT类博客的荣誉称号，代表了CSDN官方对其博客的肯定。成为博客专家后会得到我们一系列的服务，如 在头像上加象征荣誉的专家勋章、有专人对接提供服务、文章获得更多的推荐机会、不定时获得CSDN的礼品、优先获得CSDN举办的各种会议的门票等。 博客专家申请表 * 真实姓名： * 上传照片：   图片最大可支持2MB。该图片不会替代您的头像，仅供专家访谈或约稿配图使用。 * E-mail： * 手机： * 所在城市： * 所在公司： * 目前职位： * 擅长领域： 选择擅长的领域 移动开发 Web前端 架构设计 编程语言 互联网 数据库 系统运维 云计算 研发管理 * 擅长技术：   如：Android,JavaScript,Php,Oracle,搜索,Linux等技术，最多填写5个，用英文逗号隔开 QQ： MSN： * 邮寄地址： * 个人简介：  

Recno:: 18
URL:: http://blog.csdn.net/foruok/article/details/50323093

ParseText::
大龄程序员的未来在何方 - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 大龄程序员的未来在何方 标签： 程序员 软件开发 技术人 职业规划 软件开发工程师 2015-12-16 07:36 17139人阅读 评论 (60) 收藏 举报 分类： 随笔 （68） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 我发了一篇题为“ 35岁程序员的独家面试经历 ”的文章，结果引起了不少大龄程序员的共鸣和感慨，大家都对大龄技术人员的未来非常关心，有的迷惘，有的坚定，不一而足。因此，我准备写一篇文章专门来谈谈这个问题。 大龄程序员的界定 老早网上有人说，软件开发干不过30岁，后来又有人说干不过35岁，后来又有人说干不过40岁，后来又有人说干不过45岁……各种说法很多，所以我写了一篇文章，题为“ 程序员的年龄天花板 ”来讨论这个问题，感兴趣的可以跟进去看看。 这里我采取通俗的说法，认为过了30岁的程序员算是大龄程序员，只是为了讨论方便，不同意的请保留自己的意见。 人生的阶段发展理论 《论语•为政》篇： 子曰：“吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。” 这是至圣先师孔老夫子对人一生的发展阶段的精辟概括，里面谈到三十而立。所谓三十而立，是指人在三十岁之后，就应该在稳定在某一个职业上，有所建树。 现代社会，对人生职业发展阶段研究最为著名的学者是美国的舒伯（D.E.Super），他是世界职业规划发展史上里程碑式的人物。舒伯对人的生命发展过程，提出了以成长、探索、确立、维持、衰退为中心的五个阶段模型。每个阶段都有不同的职业课题需要完成，当前阶段的职业课题没有完成的话，就会影响后续的职业发展和人生生活。 对舒伯感兴趣的可以问下贴心的度娘，她会微微一笑很倾城地告诉你舒伯职业生涯阶段理论的细节。我这里只涉及与大龄程序员相关的阶段。 在舒伯的生涯阶段里有个确立阶段，25岁~44岁。在这个阶段，职业上的发展课题有这些： 逐渐稳定于一项工作 确立自己将来的保障 发现适当的晋升路线 作为程序员，请先好好理解一下这个老前辈提出的这些课题，反观自身，自省三分钟再往下看。 确立阶段又可以细分为两个小阶段： 25~30岁，修正期 31~44岁，安定期 如你所见，我们所说的大龄程序员，就是30岁往后，即过了孔老夫子所说的三十而立阶段的程序员，大龄程序员基本也是处在舒伯老前辈提出的安定期内。你要说你超过44岁了，噢卖糕的，按孔老夫子所说，应该不惑了。 31~44岁这个安定期，其实是人生最富有创造力的阶段，如果能稳定到一项工作上，一定可以有所成就，为将来打下保障。 30岁这个年龄，是每个人都会遇到的，不单是程序员、软件开发工程师，它是人生的一个节点。所以，你不是一个人在困惑，程序员，世界上所有的人都会经历这个阶段。而且，已经有人经历过并提出了一些有效的应对措施。 还有一点很重要，25~32岁是人的婚育高峰，所以，此时人会面临工作、生活的双重压力，事业家庭两头忙，身心俱疲。假如两头都不定，那就基本没法愉快地生活了。 我不想扯到太原，还是要聚焦在程序员身上来。 技术人生的三个方面 这节会谈到对程序员来讲至关重要的三点： 知识、技术 技术能力和阅历 业务积累 前文书咱说过，30岁是所有人都会面临的人生转折节点，那对于程序员来讲，这样的节点，有什么特殊的表现和含义呢？且来水水。 软件现在已经成为各行各业的基础服务，它具有非常特别的属性：软件本身形成了一种产业，它又和其他产业结合形成了交叉领域。 说白点，纯粹的代码没有意义，解决现实问题是软件存在的最大意义。而现实问题来自各行各业，所以， 大部分的软件产品，是软件技术和行业需求的有机结合 。 所以，多数 程序员的工作方式是这样的：使用某种开发工具、通过编程语言来实现一个解决特定问题和需求的软件 。有了这样的界定，真的可以开始水了。 知识、技术 程序员需要掌握编程语言、应用框架、开发工具等这些具体的知识和技术。这是第一点，必须的。 不同的语言和技术，都有特定的应用场景，这种语言解决这种问题效率高，那种语言解决那种问题效率高。 随着人类社会的不断发生发展，随着信息化和互联网化的不断深入深化，现实问题越来越多，越来越复杂，老的知识、技术在面对新的问题时可能力不从心或效率低下，所以不断有新的语言和技术问世，比如Go、比如Scala、比如Swift、比如ROR，都才出现没多久，都是因为特定领域问题而出现的。没有最好的语言，只有最合适的语言。 面对这样的现状，程序员就需要保持学习，为了更好的解决问题，可能需要掌握多种语言和技术，而且会随着社会的发展和技术的发展不断地调整自己的知识、技术图谱。 所以，早在几千年前，我们的儒家经典《大学》就预料到了将来会有程序员这种人群，对他们的生活做出了概括性的预言：“苟日新，日日新，又日新”。 OK，这就是程序员面临的知识、技术现状，所以有人觉得过了30岁奔四张去的时候，家庭事业两头忙，身心疲惫精力不足没时间充电没时间学习不再适合做程序员了。 这是一种现状，当然它对某些人如此，对另外一些人则不然。其实，31~44岁，正是人年富力强精力旺盛创造力爆棚学习能力焕发第二春的黄金阶段啊。不信你去看看舒伯的生涯彩虹图，一看便知。 举个例子，王江民就是这个时候（38岁）转做软件开发，后来（45岁）一骑独行白衣飘飘杀进中关村创造了江民杀毒的传奇历史，塑造了一代软件神话。 在30岁到44岁这个阶段，如果你还在做程序员，对自己的学习模式一定有所了解了，加上之前的积累，学起新东西来很快，应该会不断收获举一反三触类旁通的愉快体验。 技术能力与阅历 对程序员来讲，知识、技术是一方面，是容易习得的，是较浅的层面。那较深的层面，就是技术能力与阅历。 技术能力是指，对具体的知识和技术的运用水平。它在很大程度上决定了一个程序员身上的技术价值。 技术能力是在不断地运用知识、技书解决现实问题的过程中培养出来的。在这个过程中，有的人爱琢磨好总结能升华，技术能力提升就快，干一年可能能收获一般人两三年的技术经验；有的人可能会停留在写段代码写完了事儿这种层面，那可能干三年不如人家干一年。 《天龙八部》中的神仙姐姐王语嫣，很多少年看了都很喜欢。从IT的角度看，她实际上就是一个掌握了很多知识、技术的字典型程序员，但不会实际开发。当然，她也可以是很妙的程序员鼓励师，既能极大激励程序员的干劲，又能在必要时提供字典式的帮助与指导。 与王语嫣对应的另一个人物是扫地僧，超越了知识、技术，阅历极深，不拘泥于招式，一抬手一投足就拍“死”了慕容博和萧远山这种超强高手。他是我们专业技术者的梦中梦。 扯了这么多，我想说的是， 技术能力和阅历，随着程序员年龄和工作经验的增加，其重要性和价值将超越知识、技术本身 。这是我们必须意识到的，这也是老江湖的价值所在。 你可以在三两个月学会服务端开发，但如何应对大用户量、大业务量、大数据、大并发带来的挑战，绝对不是一个小白三两个月能搞定的，不积累个五年八年，不随着企业的产品、服务的发展而经历技术架构的变迁，你很难有能力去解决这些问题。 业务积累 大部分软件是技术和业务的结合，甚至有的行业软件，开发技术只占20%，80%的都是业务层面的知识、流程。所以，对于一个程序员来讲，熟悉业务也是非常重要的。做电商网站和测绘软件绝对是天差地别。 业务和行业紧密相关，你选择一个行业，选择一家企业，就会决定你能积累的产业、业务知识、经验。而这部分业务积累，是程序员的重要价值所在，它和技术阅历一样是经得起时间考验的。 有句老话，早已告诉了我们业务积累的重要性：隔行如隔山。还有一句老话也说明了同样的道理：男怕入错行。 学一门编程语言容易，深刻理解业务却没那么简单。而你不理解业务，空有编程语言和应用技术框架，实际上没什么卵用。这就是我们强调业务积累的原因。 企业的分类 我在“ 程序员的年龄天花板 ”一文中曾经提出过软件企业的分类： 外包型 项目型 产品型 这里结合前面提到的“技术人生的三个方面”再啰嗦一下。 外包型公司，通过承接别的企业的部分或全部软件业务来发展。这导致了业务不稳定，编程语言、技术框架等技术方面也不稳定。 外包型公司做软件的心态，是“干活、交活、拿钱、完事儿”。在这样一种心态支配下，程序员较难有机会仔细打磨产品，对技术能力的积累会有一些影响。另一方面，因为业务随时会变，对行业知识积累也会有较大影响。 还有，从企业角度讲，考虑成本的话，更愿意用成本低的年轻人，所以，大龄程序员的将来，在这种公司不够乐观。你一个35岁的程序员和22岁的程序员，做同样的App，老板不会觉得你35岁就比22岁做出来的东西好多少，他会认为年轻人多加个班多改改就差不多了，这时候会产生劣币驱逐良币的效应。 项目型公司通过承接电信、银行、电力、政府或其他单位的软件项目为生，比外包型稍强一些，技术上可以自己选择，也能够在某个行业长期积累经验。如果这类公司的项目规模小而多、行业不集中，那就与外包型公司类似。另外，做项目的心态和外包有些类似，对成本的考量较多，对程序员的持续技术发展不利，比如有新技术出现，公司不一定会用，可能为了快和规避风险而选择较老较趁手的技术来完成项目，这一方面会减缓开发人员的技术更新周期，另一方面也减少了锻炼机会降低了技术成长速度。 产品型公司是最好的，一个产品，要产生竞争力，要么靠对业务的深刻理解，要么靠技术上的领先优势。这类公司是对程序员的技术阅历、业务知识都很有好处，我认为是程序员的较好选择。 大龄程序员的将来 通过前面的分析，我们知道程序员这种技术性职业，价值体现在三点： 语言、技术 技术能力与阅历 业务积累 用一句话来概括， 程序员最大的价值就是运用技术解决问题的能力 。而这种能力的构成里，技术能力与阅历、业务这两方面是具有经久价值的，是相比语言、技术更耐得住时间考验的。 程序员的将来，就与价值维系有关，可以参看我发布在微信订阅号“程序视界”的文章“ 程序员保值的四个秘密 ”。在我们进一步展开阐述之前，需要先看看四大职能取向。 常见的四种职能取向 一般来讲，有常见的四种职能取向： 管理者 专业技术者 自由职业者 创业者 管理者又分为职能管理者和全面管理者。CEO、总经理之类的角色属于全面管理者，开发经理、研发部门经理、项目经理、项目总监、HR经理等属于职能管理者。 专业技术者指靠技术吃饭的人群，比如程序员，比如测试工程师，比如UI设计师，比如会计，比如律师，比如编辑……这些人的一个共同点就是拥有独特手艺和技术，能用自身所掌握的技术为别人解决问题创造价值，他们通常会依附一个组织来工作。 自由职业者首先是一个专业技术者，然后他脱离了特定组织，自己跑单帮了，自己安排自己，今天想干就今天干，老子今天不爽就明天再干。 创业者是特殊的一类职能取向，他们特别想拥有自己的产品和服务，于是就拉一帮人成立一组织，协调各种资源来实现自己的梦想。 程序员的职能取向，多数会落在专业技术者 。我个人来讲，做了6、7年管理，现在还是回到了专业技术上来，因为做具体技术工作会让我更自然更自在也更快乐。每一个程序员都应该理清自己的职能取向，只有职能取向清晰了，谈将来才比较靠谱。 所谓“成功” 有人说，三十出头的程序员，如果你混的不够成功，面临的压力就会山大。话听起来没错，不过也不尽然，这里面有个关键的问题需要澄清。那就是“成功”的定义。 世俗的成功，古时候是“十年寒窗无人问，一朝成名天下知”，是“春风得意马蹄疾，一日看遍长安花”。现在也差不多，财富更多，老婆更多，社会地位更高，不过如此吧，你看流布甚广的“当上CEO，迎娶白富美，走上人生巅峰”之类的说法就是这种观念的反应。 但 我这里说的成功，是指找到适合自己的职业，完成自我实现 。简单点说，就是你在干你想干的事儿，又有成就感又快乐。就这么简单了。 我们不必活在社会统一的价值取向里，也不必活在别人的期望里，你的人生是你自己的，哪怕父母非要你成为一个什么样的人，也不必去听。 有了这样的基本认识，就可以继续了。 程序员在企业中的发展 程序员的直接发展通路如下：初级工程师–>中级–>高级–>架构师（专家）–>技术总监–>CTO。 技术总监和CTO带一些管理职能，也可以从另外一条路上来。这条路就是程序员的管理之路：工程师–>项目组长–>项目经理–>项目总监–>技术总监–>CTO。 一条技术通道，一条管理通道。这是程序员常见的职业晋升通道。 除此之外，还有一些交叉发展的机会。比如开发转测试，开发转产品经理，开发转售前，开发转售后，开发转销售…… 最后，还有一个选择，就是离开软件行业，到别的行业里自由自在的飞翔。啊哈，朋友再见，朋友再见，再见吧再见吧。祝你好运。 走管理路线的人十不其一，这次不谈也罢（回头我会写文章聊）；转做别的职业的朋友们我已经说了再见了；那剩下的，就只能说说技术这条路的将来了。 走技术路线的程序员怎么办 其实这原本不是一个问题。你说，哪行哪业没有老将？ 而这之所以又成为一个问题，是因为程序员是“有知识、有技术、有理想、有焦虑”的四有新人，觉着自己已然学了那么多，付出了那么多，将来总不能停滞不前吧总不能走下坡路吧总得蒸蒸日上吧，所以就焦虑这件事儿，就担心，就困惑，就觉得这行当是青春饭吃不了几年。 其实根据我前面的分析，结论已经呼之欲出了： 保持学习能力，丰富技术能力与阅历，积累行业知识与经验 ，然后就可以持续走下去。即使会有衰退阶段，那也是正常的，人生就如花儿一样，有含苞待放，有盛放，也有枯萎的过程，我们需要自然接纳。 程序员的二八定律 有结论只是第一步，我们还要讲清楚一个事实：程序员群体中的二八定律。 先说技术路线和管理路线的选择，基本上也是二八开（或者一九）。 小部分的人走了管理路线，剩下的大部分程序员，走技术通道。那技术通道，有多少人能成为高级软件工程师、架构师、技术专家、CTO？ 百分之二十。 那剩下的百分之八十，在技术路上不能走得更远，但还得维持自己的竞争力，保持价值不衰退，这样才可能继续做下去。怎么维持竞争力，前面已经说过了。 大量的大龄程序员将面临无法晋升和如何维持竞争力的问题 ，这是每个人都必须看到事实。 从晋升角度看，任何一个行业的从业人员的分布，都是金字塔型的。大锅饭不存在，共产主义按需分配也还没到来，我们必须接受、接纳这个事实，然后才能在此之上谋求发展。 怎样面对将来 前面已经确认，技术路线可以走下去。现在我们来看，如果一个程序员的四大职能取向定位到专业技术者，到30多岁时，该如何走好，如何适应。 选择企业 就做技术来讲，如果想维持竞争力，在选择企业时就应当做一些考量，选择将来向好的行业，选择产品型、重视技术的公司，这种选择非常重要。它会严重影响你将来能在技术路线上走多远。 我前阵子找工作，就根据行业、企业、产品，只选了三家来面试。我35岁，需要稳定下来啦。 有人说可否选择创业公司，我的观点是，如果你能承受一定的风险（金钱和时间成本），创业公司的创始团队和产品又都比较靠谱，可以尝试。小米当时创立时，从摩托罗拉等公司找了好大一批开发工程师哦。 稳定于一项工作 根据舒伯的职业生涯阶段理论，31~44岁是安定期，程序员应该稳定于一项工作，发现适当的晋升通道，确立自己将来的保障。 在这个时期，频繁的跳槽对将来的发展不利，这是毋庸置疑的，所以选择要慎重。尤其你到了40岁还没在哪个行业长时间待过，技术也换来换去，那再出去找工作，就会遇到比较大的困扰。 到招聘网站遛一遭，看看招聘信息中对年龄的要求，你就知道我所言非虚，除了技术总监、架构师、技术专家、高级软件开发工程师等岗位的年龄区间落在30~45岁，其他岗位，绝大部分都要求你30以下。所以，如果你在不同行业、不同公司晃来晃去，到了三十四五岁还没稳定，也没能达到高级软件开发工程师应有的水平，那再找工作肯定会遭遇比较尴尬的状况。 不能晋升怎么办 技术路线，可以初级、中级、高级、架构师（技术专家）……这么走下去，假如一个程序员发现自己到一定程度无法再走下去，就会产生挫折或倦怠。通常这种情况会在你稳定一项工作7年左右出现，所谓七年之痒。对本科毕业来讲，这个年龄就在33~35岁左右。 此时怎么办？这是很现实的问题。 这个我们就要具体问题具体分析：是你很牛X限于企业环境无法晋升？还是你自身能力到了天花板了无法晋升？ 不同的原因对应的行动是不一样的，前者的话，可能应该考虑换一下。后者的话，要调试心态，建立第二生活中心，在职业之外发展其他的兴趣爱好来平衡。 在这个年龄阶段，有一大批程序员会因为晋升受挫或倦怠而成为创业者或参与到创业中来。这是需要留意的现象。 竞争力有区域性和相对性 程序员的价值和竞争力，其实是相对的。比如你在腾讯，牛人太多，无法晋升了，其实别处可能有鸡头的位置等着，比如其他行业内的小公司的技术总监、部门经理，如果你看重职位和头衔，就可以去尝试。这也是典型的一种路线，有部分程序员在大公司镀镀金，回头到其他行业的相对规模较小的公司去做管理或技术专家。 如果你很在意职位等级，很在意比别人更受尊重，那就找一个能凸显出你价值的环境。比如乒乓球运动员何智丽，在39届世乒赛上因为没按领导指示输球，后来被取消参奥资格，在国内无法发展了，她移民日本，继续在乒乓球领域活跃并取得了辉煌战绩，还曾经战胜邓亚萍取得亚运乒乓球女单金牌。类似的还有一些国外的业余足球运动员或退役的足球选手到中国来，迅速成为热门选手受到重视。这都是一个道理。 所以，对于大龄程序员来讲，为了发挥价值和竞争力，还有下面的路径可选择： 到其他公司，不换行业，利用自己的技术优势，谋求管理职能，走管理通道 到能凸显自己技术价值的公司，继续做开发 到平均技术水平较差的地域，继续做开发，彰显自己的优势 学习其他技能 哦，亲爱的，如果你有时间，也可以学习其他可以赚钱的技能，因为，虽然我们说大龄程序员可以一直做技术，但能一直做到退休的，估计也只有20%。如果你是那80%，当你不得不离开心爱的开发岗位时，就能够因为有所准备而不至于忽然失重。 职业之外的兴趣 这点是我们必须要谈的，程序员的人生里不只有软件和工作，还应当有其他的。生活是多元中心的，要有一些其它的兴趣爱好，能够滋养心灵，修复纯技术工作给心灵带来的磨损。 提笼架鸟，雕刻，书法，围棋，游戏，写作，读书……都挺好的，有比没有强太多了。很多人（包括我）缺乏信仰，再没有点兴趣爱好，那就太容易内分泌失调了。 到底能干到多少岁 还问啊……让星爷来回答你吧： “曾经，有一份真诚的爱情放在我面前，我没有珍惜，等到我失去的时候才后悔莫及，人世间最痛苦的事莫过于此……如果上天能够给我一个再来一次的机会，我会对那个女孩子说三个字：‘我爱你。’如果非要在这份爱上加上一个期限，我希望是……一万年！” 更多精彩文章，参看“ 漫谈程序员 ”专栏。 困惑、成长、发展、增值、新知，尽在微信订阅号“程序视界”： 上一篇 一招搞定多Offer选择 下一篇 VS 2013+Qt 5.4.1 顶 45 踩 0 我的同类文章 随笔 （68） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1819928次 积分： 20930 等级： 积分：20930 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3193条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911255 Qt Quick简明教程 文章：30篇 阅读：192473 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35165 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022)

Recno:: 19
URL:: http://blog.csdn.net/happydeer

ParseText::
呦呦鹿鸣 - 博客频道 - CSDN.NET 呦呦鹿鸣 穷则独善其身，达则兼济天下 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 程序员大牛 Jeff Atwood 的两本中文书 程序员大牛Jeff Atwood的力作，CodingHorror博客精华文章集结——程序员们不可错失的好书！！！... 2014-04-20 09:18 阅读 (8814) 评论 (11) [置顶] Jeff Atwood倾情推荐——程序员必读之书 英文版：《Code Complete 2》 中文版：《代码大全（第二版）》 作者：Steve McConnell 译者：金戈  汤凌  陈硕  张菲 出版社：电子工业出版社 出版日期：2007 年8月 Jeff Atwood的推荐：Steve McConnell的这本书是软件开发领域里的《烹饪的乐趣》。如果你对这本书感兴趣，说明你热爱你现在的工作，你对你正在做的事情是认真的，并且你想不... 2013-04-13 00:04 阅读 (14419) 评论 (37) 传统的项目经理可以担当Scrum Master吗 一个传统的项目经理，只有当他接受改变，并且对变化保持着开放心态和积极态度，他才能做好Scrum Master。... 2015-10-27 11:19 阅读 (713) 评论 (4) 你不会因为实施了Scrum而变敏捷 Scrum不等于敏捷！仅仅在软件开发部门实施Scrum是不够的，这不足以达成真正的敏捷。很多公司忽视了在企业文化、管理风格、流程以及项目执行方法上的必要改变。... 2015-10-12 09:18 阅读 (759) 评论 (1) 我体验过VR，还行吧 对VR的大肆宣传有点过头了。VR相关的技术挑战是深层次的、难以攻克的。当今的VR头戴装置像20世纪90年代的大哥大一样。问题是，它们需要多久来走完手机从1990年到2007年的发展历程？... 2015-09-01 19:54 阅读 (1135) 评论 (2) 程序员要有持续产出 优秀的程序员都是行动派！要坚持写代码，最起码要确保用在“做”上面的时间与用在“讨论”上的时间是相当的。... 2015-06-15 08:42 阅读 (2920) 评论 (8) 边开火边移动 每天你都得前进一点点。当竞争者对你开火的时候要注意。他们可能只是想逼你忙着应付，让你不能继续前进。... 2015-05-27 13:26 阅读 (798) 评论 (3) FFmpeg续篇：截取视频片段转成GIF动画 更多FFmpeg使用方法：截图转成GIF动画。... 2015-05-14 22:14 阅读 (1434) 评论 (0) 管理神话之23：随便多少人你都能管 你所处的管理位置（不管是否在一线），就是要求你去建立信任关系。如果你管理的人数超过了9个，你就在冒着风险不能建立好那种关系。... 2015-03-02 13:08 阅读 (1023) 评论 (1) 管理神话之八：我还能做大量的技术工作 管理者之所以存在，就是要有目的地组织。作为管理者，我们最好去创造一个能让人们在其中施展才能、做好工作的环境。别再一头扎进技术细节去解决具体的技术问题，这些事要交给团队去做。... 2015-01-26 12:50 阅读 (4691) 评论 (10) 技术宅学会几招FFmpeg 介绍FFmpeg的几种常用应用场景... 2015-01-04 08:17 阅读 (2268) 评论 (2) 管理神话之三：人人都须被同等对待 人与人是不一样的。我们都是独特的个体。如果我们同等地对待每一个人，我们最终会落入一个不平等的处境。但如果我们公平地对待每一个人，我们将营造一个公平的工作环境。... 2015-01-02 19:41 阅读 (1274) 评论 (0) 管理神话之二：只有专家才能做这事 你需要做一件特定的事情，但是平常做那个工作的人偏偏不在——在你的项目里，你碰到过多少次这种情况？你的项目受到什么影响？是不是只能等着那位专家回来？... 2014-12-15 11:51 阅读 (4152) 评论 (4) 管理神话之一：100%利用 程序员的工作必须被排得满满的，必须工作在一种100%忙碌的状态吗？... 2014-12-03 13:06 阅读 (3213) 评论 (8) 日常管理的五条小建议 有时候，你需要为工作理一理头绪。你需要给自己一些喘息的机会，停下来，思考一会儿。这里有一些小建议，可以帮助你处理好日常管理工作。... 2014-11-20 09:12 阅读 (1954) 评论 (2) 谨防串行的状态报告会 怎么做好高管？怎么有效地解决组织里的管理问题？... 2014-11-20 09:11 阅读 (1584) 评论 (2) 与客户患难与共 如果你不身体力行地去表现帮助客户有效使用软件的意愿——更重要的是，弄明白他们为什么需要帮助——你不能算是真正完成了软件开发！... 2014-11-07 09:37 阅读 (1741) 评论 (2) 171条数据 共12页 1 2 3 4 5 ... 下一页 尾页 个人资料 happydeer 访问： 813641次 积分： 11296 等级： 积分：11296 排名： 第651名 原创： 43篇 转载： 9篇 译文： 106篇 评论： 1438条 关注我... 我的专访 我的资讯 @豆巴陆其明 我的著作和译作 《程序员的修炼——从优秀到卓越》 《高效能程序员的修炼》 《代码之道》 《脚本驱动的应用软件...》 《Windows Media编程导向》 《DirectShow实务精选》 《DirectShow开发指南》 文章搜索 文章分类 Coding Horror (96) Johanna Rothman (7) 我的书 (24) 多媒体 (20) 管理 (17) 杂译 (7) 其他 (10) 文章存档 2015年10月 (2) 2015年09月 (1) 2015年06月 (1) 2015年05月 (2) 2015年03月 (1) 2015年01月 (3) 2014年12月 (2) 2014年11月 (4) 2014年10月 (3) 2014年08月 (2) 2014年07月 (3) 2014年06月 (3) 2014年04月 (4) 2014年03月 (2) 2014年02月 (9) 2014年01月 (16) 2013年12月 (12) 2013年11月 (16) 2013年10月 (4) 2013年09月 (1) 2013年08月 (5) 2013年07月 (5) 2013年06月 (2) 2013年05月 (4) 2013年04月 (6) 2013年03月 (8) 2013年02月 (2) 2013年01月 (4) 2012年12月 (7) 2012年11月 (1) 2012年10月 (1) 2010年05月 (2) 2008年12月 (2) 2008年11月 (1) 2008年10月 (2) 2007年10月 (1) 2007年04月 (2) 2006年11月 (1) 2006年05月 (2) 2005年03月 (1) 2005年02月 (1) 2005年01月 (1) 2004年12月 (1) 2004年11月 (2) 2004年10月 (1) 2004年09月 (3) 2004年08月 (1) 2004年07月 (1) 2004年06月 (3) 2004年05月 (1) 2004年04月 (1) 2003年07月 (1) 2003年01月 (4) 阅读排行 最牛B的编码套路 (41991) 如何与人交流——程序员，赶紧生个孩子吧！ (40010) AVI文件格式 (25809) 程序员不爱读书，但这很不明智 (21337) 别为了学编程而学编程 (18681) 程序员要学会读源代码 (17855) Jeff Atwood倾情推荐——程序员必读之书 (14413) 程序员的八种境界 (13951) 所有编程皆为Web编程 (12821) 成为优秀程序员的方法就是抛开编程？ (11595) 评论排行 所有编程皆为Web编程 (186) 最牛B的编码套路 (151) 程序员不爱读书，但这很不明智 (100) 程序员的八种境界 (79) 成为优秀程序员的方法就是抛开编程？ (61) 培训有用吗？软件行业应采用“学徒制” (46) 我的DirectShow著作 (41) 程序员要学会读源代码 (37) Jeff Atwood倾情推荐——程序员必读之书 (37) 别为了学编程而学编程 (31) 最新评论 程序员：孤独的人是可耻的！ im1020110542 : 说的真好，但自己感觉与人合作的前提是自己也需要具备一定的基础和实力 我体验过VR，还行吧 weixin_33178310 : 手机屏Vr分辨率不达标是最大问题 传统的项目经理可以担当Scrum Master吗 cyy1981 : 纯scrum玩不好阿 现在就是敏捷下面小瀑布 传统的项目经理可以担当Scrum Master吗 qq_32897669 : 最重要的心态，和组织结构！ Gitflow工作流程 u011149565 : 看的挺带感的 传统的项目经理可以担当Scrum Master吗 zhangmike : 虽然是一个不一定的答案。但确实就是这样。不过Scrum Master的设置对比传统组织结构是个怪物。... 你不会因为实施了Scrum而变敏捷 CatherineJChen : 很全面的比较，很具有参考价值。 传统的项目经理可以担当Scrum Master吗 CatherineJChen : 确实不一定，但是有人认为项目经理当ScrumMaster是理所当然这样不会涉及组织结构的变化，又能实... 程序员不爱读书，但这很不明智 K1342665094 : 关注一下 我体验过VR，还行吧 Winterto1990 : 学习

Recno:: 20
URL:: http://blog.csdn.net/honour/experts.html

ParseText::
荣誉专家博客专家 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 博客专家 > 荣誉专家 荣誉专家 杨中科 刘建文 刘锋 齐飞 陈伟东 段宝立 牟勇 尧庆宇 胡传照 沈东良 司纪刚 孙超 秦金卫 黄育源 徐磊 胡果 洪赫 盖国强 贺一丁 田春峰 蔡世友 邓斌 王金剑 赵学庆 姜瑞强 徐子焜 杨武 李先静 陈宝峰 陈正义 陈优章 李华领 蒋惠全 徐进阳 王集鹄 周爱民 闫辉 石山松 廖雪峰 张超(Ago) 张雄 乔梁 杨洪波 李君 王娟 朱云翔 韩磊 邢晓宁 郑健 邢波涛 胡争辉 林镇群 王豫翔 毛文波 陈洪 张志龙 张合福 童继龙 张亮 粟卫民 崔占民 李万鹏 秦军 崔红保 马超 林金海 晁岳攀 邓辉 颜友宁 曾振中 黄希彤 代振军 朱志兵 王保强 叶正盛 袁志俊 陈君 姜晓东 朱少民 张海 熊军民 唐一钧 汪涛 张振江 王小科 詹鹏 陈本峰 陈跃峰 金洋 郭红俊 杨亚利 梁清福 马召 辛鹏 丁运亮 许坤 DojoToolkit 辛凯 孟宪会 方剑斌 张羿 李绪成 张宇 彭伟 温昱 郭勇成 李子明 张亚飞 冀博 王震 曾家辉 刘伟 程学涛 潘爱民 冯国平 曾毅 王未 莫华枫 田海立 黄隽实 秦盛 九天雁翎 宗金良 岑文初 吴穹 蒋晟 王峰 黄刚 张颂 张德保 赵根 黄团利 胡长城 夏建波 刘洪涛 林信良 廖煜嵘 江涛 程明 李星 苏林 莫雨 李洪根 贺炘 胡孝文 苏杰 游陆 徐凡 潘宏 王帅 邹健 任桥伟 李荣陆 宋威 赵旭斌 微软一站式示例代码库 王刘强 吴碧涛 李光磊 韩小明 张泽鹏 刘清涛 杨彩 陈婕 宋忠洋 邓以克 杨吉祥 杨喆 张翠萍 萧易 刘鑫 王魁锋 张元礼 罗振辉 陶博翔 孙刚 倪义 尹树荣 符泉麟 董昊 靳英辉 方舟 徐悦 徐先生 孙东风 刘未鹏 钱冰 陈俊君 田湘东 徐非 饶荣庆 许式伟 王艳辉 鲁西西 顾海军 夏纯中 尹源 晋会雨 张中庆 崔启亮 编程随想 李世平 吕杰 郁郁仔 李丽媛 王毅 唐良 阳光 杜洋 陈绍英 黄庠魁 葛涵涛 叶伟民 李维 周伟明 宁小利 王开源 朱伟杰 周海汉 荆鹏 李宁 蒋波涛 陆一凡 李林 袁海明 马宁 靳雄飞 张钦雁 陈瑞江 关文柏 张波涛 郭鹏 宋巍巍 林仪明 佟强 任间 路松房 刘青 马帅 凌晓 肖桦 孙向晖 陈皓 高阳 韩祝鹏 凌云 李春雷 蒙洋 曹亮 王文涛 陈维 赵守福 冯翔 张宇 陈振飞 张忠良 施成章 芮雄健 刘立 杨志宁 李燕平 陈锐 贺师俊 费照东 杨枫 薛笛 宁德军 侯文平 黄松祥 吉日嘎拉 郑志勇 赵磊 张善友 陈广琛 胡林 孟岩 潘涛 顾森 车东 张锴 蒋金楠 刘志峰 罗小平 杨争 吴宇泽 孙天泽 陈亮 刘江 多菜鸟 芮祥麟 薛永 邱海峰 辛星 杨福川 姜昊 王煜全 贾涛 张建峰 孙松 杨正祎 李万鹏 关毛毛 廖浩志 ijacobson 李国平 刘伟 张贞 孙冰 马永占 郑柯 范伟伟 刘松 王杰 王飞 张友邦 陈小玉 张国良 张英刚 郑佐 韩现龙 李利平 于涌 付晓满 熊节 随风 杨勇 杨普 林杰 谢廷宝 杨明波 朱冲 黄季冬 程朝晖 章立民 杜红超 廖明群 英雄本色 杜倩 褚诚云 陈浩 楼方鑫 赖仪灵 龚逢树 朱晔 刘如鸿 荣植华 程化 Don Box 曾登高 霍泰稳 冯越 彭远峰 Bruce Eckel 王泽宾 方剑斌 刘铁猛 廖宇雷 李战 黄忠成 谢文初 袁泳 黄方荣 田景 孙辉 周永 冯大辉 李凡希 刘诗远 蔡学镛 陈金洲 李祖江 贝高林 邵宏钢 Phillip J.Eby Herb Sutter 李岩玻 胡百敬 李锟 奚江华 黎波 萧百龄 温伯格 常亮 王钧 黄福顺 D.H. Hansson 顾利斌 王咏刚 刘彦博 李维 崔秉正 李默 吴建平 袁红岗 马维峰 邹震 张侠 Scott Guthrie 魏泉 何砝 Martin Fowler 吴莹莹 孙鑫 谭晓鹏 郝培强 龙如俊 袁琳 瞿杰 陈江

Recno:: 21
URL:: http://blog.csdn.net/luckyzhoustar/article/details/50402427

ParseText::
Java中字节与对象之间的转换 - - 博客频道 - CSDN.NET 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Java中字节与对象之间的转换 2015-12-25 12:32 196人阅读 评论 (1) 收藏 举报 分类： Java学习 （90） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。    最近公司里面用到了消息队列，而正如我们知道的是消息队列之间的是通过二进制形式的，下面就分享一下java中字节与对象之间的转换。  主要是用到了ByteArrayOutputStream和ObjectOutputStream两个输出流，以及ByteArrayInputStream和ObjectInputStream两个输入流。废话不多说了，直接上代码吧！ /** * @FileName: ByteToObject.java * @Package:com.test * @Description: TODO * @author: LUCKY * @date:2015年12月25日 下午12:18:08 * @version V1.0 */ package com.test; import java.io.ByteArrayInputStream; import java.io.ByteArrayOutputStream; import java.io.ObjectInputStream; import java.io.ObjectOutputStream; import java.util.HashMap; import java.util.Map; /** * @ClassName: ByteToObject * @Description: 字节与对象之间的转换 * @author: LUCKY * @date:2015年12月25日 下午12:18:08 */ public class ByteToObject { public static void main(String[] args) throws Exception { Student stu=new Student(); stu.setAge("15"); stu.setName("张三"); Map<String, String> map=new HashMap<String, String>(); map.put("001", "001"); map.put("002", "002"); stu.setWage(map); ByteArrayOutputStream byt=new ByteArrayOutputStream(); ObjectOutputStream obj=new ObjectOutputStream(byt); obj.writeObject(stu); byte[] bytes=byt.toByteArray(); System.out.println(bytes); ByteArrayInputStream byteInt=new ByteArrayInputStream(bytes); ObjectInputStream objInt=new ObjectInputStream(byteInt); Student stu2=new Student(); stu2=(Student)objInt.readObject(); System.out.println(stu2); } } 上一篇 Redis中的主从复制 顶 0 踩 0 我的同类文章 Java学习 （90） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 ZHOUCHAOQIANG 访问： 145341次 积分： 8775 等级： 积分：8775 排名： 第1096名 原创： 264篇 转载： 5篇 译文： 1篇 评论： 2766条 博客专栏 Activiti入门教程 文章：10篇 阅读：1964 java并发编程 文章：5篇 阅读：2055 SSH框架 文章：12篇 阅读：3545 EJB学习笔记 文章：10篇 阅读：2379 Java读书笔记 文章：12篇 阅读：4906 一步一步学习WCF 文章：11篇 阅读：3628 软件工程 文章：12篇 阅读：12176 文章存档 2015年12月 (10) 2015年11月 (5) 2015年10月 (16) 2015年09月 (21) 2015年08月 (18) 2015年07月 (20) 2015年06月 (17) 2015年05月 (2) 2015年04月 (2) 2015年03月 (3) 2015年02月 (5) 2015年01月 (13) 2014年12月 (11) 2014年11月 (4) 2014年10月 (13) 2014年09月 (3) 2014年08月 (11) 2014年07月 (6) 2014年06月 (15) 2014年05月 (15) 2014年04月 (6) 2014年03月 (7) 2014年02月 (5) 2014年01月 (3) 2013年12月 (10) 2013年11月 (9) 2013年10月 (2) 2013年09月 (7) 2013年08月 (2) 2013年07月 (8) 2013年06月 (2)

Recno:: 22
URL:: http://blog.csdn.net/purpleendurer

ParseText::
Purpleendurer@CSDN - 博客频道 - CSDN.NET Purpleendurer@CSDN 编程……任是无情也动人~ 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 用ImDisk在Windows 10中创建内存虚拟盘 从win 7升级到win 10后，运行ramdisk1.1简体绿色版无法创建内存虚拟盘。Bing了一下，网友们一般用Primo Ramdisk　或　ImDisk。由于ImDisk是开源的，所以选择了它。... 2015-12-25 13:17 阅读 (151) 评论 (1) 五款超级易用的网络监控软件 如果您正在寻找网络监控软件，只需要轻点鼠标就能使用，那么这个名单就是给你准备的。... 2015-12-04 15:59 阅读 (472) 评论 (0) Windows身份验证可绕行小瑕疵 或成BitLocker磁盘加密大漏洞 使用BitLocker并加入域的Windows计算机应尽快打补丁作者：卢西恩·康斯坦丁（Lucian Constantin）2015-11-14 翻译：PurpleEndurer !伊恩·哈肯（Ian Haken）在阿姆斯特丹举行的黑帽欧洲安全会议上，2015年11月13日，卢西恩康斯坦丁（Lucian Constantin） 　　依托微软BitLocker加密员工计算机硬盘的公司应该立... 2015-11-23 09:06 阅读 (532) 评论 (0) 迅速增强公司信息安全性的10大划算方式 迅速增强公司信息安全性的10大划算方式作者：Jack Wallen （杰克·瓦伦） 翻译：PurpleEndurer英文来源：http://www.techrepublic.com/blog/10-things/10-cost-effective-ways-to-quickly-beef-up-your-company-security/　　由于预算短缺，公司信息安全有短板？这里有一些经济实惠的方... 2015-11-18 16:48 阅读 (371) 评论 (0) 如何检查你的安卓设备是否易受攻击？ 可以试试新的开源应用程序VTS，它可以扫描最常见的Andr​​oid漏洞，包括Stagefright。　　作者：扎克·惠特克（Zack Whittaker）　　翻译：PurpleEndurer| 2015年11月8日　　在今年的移动安全世界里，安卓系统已经遭受一系列沉重打击。　　从Stagefright 1.0至Stagefright 2.0，更不用说LTE的缺陷，甚至是木马化（trojanize... 2015-11-08 11:59 阅读 (655) 评论 (1) 针对小型企业三个基本的IT安全技巧 针对小型企业三个基本的IT安全技巧作者：丹·帕特森（Dan Patterson）翻译：PurpleEndurer 2015-11-06　　数以百万计的小企业很容易受到网络安全攻击，平均每次攻击可能造成$20,000的损失。下面是一些基本的技巧，可以帮助中小企业保护自己。　　像索尼、家得宝（Home Depot）、和人事管理办公室这样的大规模组织被黑时，他们会抢占了影响同样巨大的头条新闻。然而，尽管... 2015-11-06 12:35 阅读 (652) 评论 (1) 五款便携式反病毒和反恶意软件工具 随身随地随时用 杰克·瓦伦列出了他最喜爱的五个便携防病毒/反恶意软件工具，所有这些工具都是便于携带且马到功成的，你有最喜爱的便携反病毒工具吗？将你的建议与大家分享吧。... 2015-10-21 18:25 阅读 (541) 评论 (0) Web安全专家访谈 Web安全专家访谈作者：Rob Kenworthy（罗布·肯沃）翻译：PurpleEndurer，2015-09-28第1版　　Web安全专家谢里夫·库萨（Sherif Koussa）的观点可能会改变你对web应用程序安全性的许多想法。　　大多数开发人员可能都知道一些安全常识，他们天真地认为凭这些就足以保障自己开发的应用程序安全。直到大约一年前我还不愿承认这一点。除非开放Web应用安全项目(Ope... 2015-09-28 17:51 阅读 (504) 评论 (0) 电脑进入桌面后操作无响应？不妨试试禁用Windows Search服务 这两天有两位同事的电脑出现了相同的问题：进入桌面后，鼠标、键盘都能使用，就是进行操作时系统没有响应。两台电脑都使用Windows XP系统，都装有360卫士等软件。　　重启电脑进入安全模式，可以正常操作。检查开机启动项，未发现异常。检查系统日志，发现都有Windows Search服务启动。　　把这个服务禁用后重启，问题解决。... 2015-08-21 12:39 阅读 (370) 评论 (0) 狡猾的百度安全组件、百度安全防护服务 一位朋友电脑中的360卫士总是提示存在百度安全组件，想卸载却找不到地方，于是向我求助。　　朋友的电脑使用的是win7。　　先检查开始菜单，没有。　　再进控制面板，检查“程序”，没有。　　进入c:\program files\baidu，发现里面是空的，删除。　　右击桌面上的“计算机”图标，选择“管理”，点击展开“服务和应用程序”，检查“服务”，终于发现了百度安全组件藏在：c:\program fi... 2015-07-24 20:51 阅读 (335) 评论 (0) 可恶的百度！ G0603_71376.exe O4 - HKLM\..\run: [D4C56BB8DBB5D7646111D469D79E1684] C:\Users\pe\AppData\Local\Microsoft\Windows\Tmp\G0603_71376.exe /S文件说明符 : C:\Users\pe\AppData\Local\Microsoft\Windows\Tmp\G0603_71376.exe属性 : A---数... 2015-06-08 23:44 阅读 (382) 评论 (0) JavaScript中单引号和双引号的效果的一点区别 先写为 document.write('');无效果。 改写为 document.write(""); 才有效果。... 2015-06-05 18:35 阅读 (322) 评论 (0) Windows 10 免费升级版开始预订了…… Windows 10 免费升级版开始预订了……... 2015-06-04 12:14 阅读 (344) 评论 (0) 安装smartPPT，电脑显示系统桌面就卡住…… 　　一同事从网上下载安装了smartPPT。重启电脑，显示桌面后360提示cpu占用率接近100%，系统就卡住了。到安全模式下卸载了smartPPT，再正常启动，故障依旧……... 2015-05-22 18:47 阅读 (334) 评论 (0) Win7运行程序总提示出现一个问题，导致程序停止正常工作。请关闭该程序？原来GreenBrowser下载有问题…… 前段时间借了一位朋友的电脑来用。那台电脑里原有的浏览器不顺手，就先下载安装GreenBrowser，再运行GreenBrowser下载其它的应用程序。　　首先下载EditPlus，结果运行时提示：　　出现一个问题，导致程序停止正常工作。请关闭该程序。　　换了几个地址下载都是如此。下载WinRAR、MASM32……也出现同样的问题。真奇怪！　　考虑到用电脑里原有的浏览器浏览器下载的GreenBrow... 2015-05-02 16:56 阅读 (2086) 评论 (0) 360安全卫士举报360safe.exe？原来是在打假 360safe.exe被360安全卫士举报为伪装成360安全卫士的程序，大水冲了龙王庙?... 2015-04-07 16:34 阅读 (571) 评论 (0) 电脑开机自动装垃圾软件，原来中了Adware：usbadmi.sys 一位朋友的电脑最近出现异常情况，开机进入桌面后会自动安装 7k7k游戏、淘宝网、开心小工具、折子购物、爱奇艺之类乱七八糟的东东，卸载后下次开机又出来。　　电脑中安装的电脑管家在开机时会提示svchost.exe试图自动修改IE主页，已拦截。　　随后系统不断弹出错误提示框：　　Unable to write to C:\Users\Public\Desktop\InterNet Explorer.u... 2015-03-27 12:26 阅读 (2311) 评论 (0) Internet Explorer已停止工作？原来是np_tdiplat.dll惹的祸 一位同事的电脑，使用win7操作系统，在使用IE 10时经常弹出提示框，报告Internet Explorer已停止工作。　　点击提示框中的“查看问题详细信息”，发现引起故的障模块名称为: np_tdieplat.dll。　　在电脑中搜索，发现该文件位于　　C:\Program Files\Thunder Network\Thunder\Thunder BHO Platform中。　　原来是迅雷的... 2015-03-24 16:08 阅读 (408) 评论 (0) 微软的搜索引擎必应|bing会对搜索结果进行恶意软件检测和提醒…… 今天用微软的搜索引擎必应|bing搜索“海菜花”，想不到必应|bing也会对搜索结果进行恶意软件检测和提醒……... 2015-02-04 12:35 阅读 (408) 评论 (0) 将 Maxthon 1.6.7 识别成“傲游云浏览器” 腾讯电脑管家现“神”升级功能 使用腾讯“电脑管家”的“电脑加速”功能，居然把 Maxthon 1.6.7 识别成了 傲游云浏览器，囧…… 能把win xp 识别为 win 7就更好了。... 2015-01-01 20:24 阅读 (778) 评论 (0) 1117条数据 共56页 1 2 3 4 5 ... 下一页 尾页 个人资料 Purpleendurer 访问： 1971174次 积分： 31299 等级： 积分：31299 排名： 第87名 原创： 968篇 转载： 40篇 译文： 108篇 评论： 1546条 文章搜索 文章分类 autoXrun (2) FileInfo (9) 开源世界 (13) pe_xscan (32) 专家指路 (60) 原创作品 (197) 史海钩沉 (20) 名人传记 (2) 奇闻妙文 (7) 安全技术分析 (10) 安全资源 (22) 心情随笔 (43) 源码解析 (104) 系统安全 (352) 系统维护 (453) 编程资料 (13) 美文共赏 (0) 英语乐园 (24) 读书笔记 (1) 软件应用 (13) QQ (2) 礼品卡 (1) 钓鱼 (1) Linux世界 (1) IE8 (1) 安全设置 (1) bug (3) 安卓Android (1) 网页制作 (1) JavaScript (1) 单引号 (1) 双引号的效果的一点区别 (0) 双引号 (1) 区别 (1) 文章存档 2015年12月 (2) 2015年11月 (4) 2015年10月 (1) 2015年09月 (1) 2015年08月 (1) 2015年07月 (1) 2015年06月 (3) 2015年05月 (2) 2015年04月 (1) 2015年03月 (2) 2015年02月 (1) 2015年01月 (1) 2014年12月 (3) 2014年11月 (4) 2014年10月 (3) 2014年09月 (4) 2014年08月 (1) 2014年07月 (1) 2014年05月 (2) 2014年04月 (1) 2014年01月 (1) 2013年11月 (1) 2013年07月 (3) 2013年05月 (1) 2013年04月 (1) 2013年03月 (1) 2012年12月 (1) 2012年11月 (1) 2012年09月 (1) 2012年08月 (4) 2012年07月 (1) 2012年06月 (2) 2012年05月 (5) 2012年03月 (2) 2012年02月 (5) 2012年01月 (4) 2011年12月 (2) 2011年11月 (1) 2011年08月 (1) 2011年07月 (4) 2011年06月 (3) 2011年05月 (5) 2011年04月 (1) 2011年03月 (6) 2011年02月 (4) 2011年01月 (6) 2010年12月 (3) 2010年11月 (2) 2010年10月 (2) 2010年09月 (4) 2010年08月 (1) 2010年07月 (7) 2010年06月 (6) 2010年05月 (5) 2010年04月 (7) 2010年03月 (6) 2010年02月 (2) 2010年01月 (6) 2009年12月 (5) 2009年11月 (6) 2009年10月 (8) 2009年09月 (3) 2009年08月 (3) 2009年07月 (10) 2009年06月 (9) 2009年05月 (5) 2009年04月 (9) 2009年03月 (4) 2009年02月 (9) 2009年01月 (6) 2008年12月 (7) 2008年11月 (10) 2008年10月 (16) 2008年09月 (15) 2008年08月 (7) 2008年07月 (16) 2008年06月 (26) 2008年05月 (21) 2008年04月 (19) 2008年03月 (21) 2008年02月 (21) 2008年01月 (18) 2007年12月 (19) 2007年11月 (18) 2007年10月 (16) 2007年09月 (20) 2007年08月 (26) 2007年07月 (21) 2007年06月 (27) 2007年05月 (15) 2007年04月 (18) 2007年03月 (20) 2007年02月 (18) 2007年01月 (26) 2006年12月 (29) 2006年11月 (22) 2006年10月 (27) 2006年09月 (25) 2006年08月 (27) 2006年07月 (20) 2006年06月 (10) 2006年05月 (10) 2006年04月 (17) 2006年03月 (19) 2006年02月 (16) 2006年01月 (13) 2005年12月 (23) 2005年11月 (10) 2005年10月 (18) 2005年09月 (12) 2005年08月 (16) 2005年07月 (30) 2005年06月 (50) 2005年05月 (9) 2005年04月 (3) 2005年03月 (7) 2005年02月 (2) 2005年01月 (5) 2004年12月 (10) 2004年11月 (6) 2004年10月 (2) 2004年09月 (3) 2004年08月 (1) 阅读排行 关于编程学习的七点思索 (34252) 一名平庸程序员的自白 (19240) IT行业中的性别差距：程序员MM在哪呢？ (16638) 一位怀疑论者眼中的C++发展史 (14963) 昨天才提醒，今天就有网友点击QQ信息中的网址，中Worm.Viking.pk/Worm.Win32.Viking.jg了 (13041) 网易邮箱显示附件上传不成功，请重试！(错误码:FR_INVALID_REQUEST) 的解决方法 (11911) 传统杀毒软件 vs. 军用恶意软件 (10308) 我该怎样卸载IE7？ (10262) 在FlashFXP中设置数据传输模式为PORT（主动模式）的两种方法 (10084) 雇用黑客：好处、坏处和弊端 (9914) 评论排行 一名平庸程序员的自白 (214) IT行业中的性别差距：程序员MM在哪呢？ (175) 关于编程学习的七点思索 (137) 360浏览器被7322.com劫持，IE浏览器被6781.com劫持 (60) Unix vs. 微软Windows: 系统设计折射安全理念 (48) 雇用黑客：好处、坏处和弊端 (47) 一位怀疑论者眼中的C++发展史 (41) 若将瑞星比Borland　刘旭略胜Anders (36) 解决使用360卫士清理后出来的系统异常故障 (28) 反病毒软件的工作是否名符其实？ (27) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 用ImDisk在Windows 10中创建内存虚拟盘 u011552404 : 虚拟盘有什么好处？ 针对小型企业三个基本的IT安全技巧 hold_msd : 不错 如何检查你的安卓设备是否易受攻击？ hold_msd : 可以 IE8总提示当前安全设置会使计算机有风险，关闭提示的方法步骤 Purpleendurer : @hellobaby123321:;-P IE8总提示当前安全设置会使计算机有风险，关闭提示的方法步骤 Purpleendurer : @TheoneLove:No thanks IE8总提示当前安全设置会使计算机有风险，关闭提示的方法步骤 TheoneLove : 解决了 thanks 为什么 JavaScript仍将是程序员的首选 habit_reflection : 哎，只是入门的，太菜了 为什么 JavaScript仍将是程序员的首选 zero_create : mark 一名平庸程序员的自白 liuxiangjia : mark,。。。。。。 为什么 JavaScript仍将是程序员的首选 liuxiangjia : mark.写的很好~ My Blog purpleendurer@$inaBlog ( RSS ) 友情blog endurer@$inablog Google开源代码搜索 Google音乐搜索 endurer@csdn

Recno:: 23
URL:: http://blog.csdn.net/qing_gee/article/details/41447891

ParseText::
jQuery validate之remote - qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 jQuery validate之remote 标签： jquery validate remote 2014-11-24 17:13 2904人阅读 评论 (2) 收藏 举报 分类： Javaweb （32） 作者同类文章 X jquery 版权声明：这是自封为沉默王二的挨踢工作者，用文字打造的一个高品质的博客栏目。让你拥有一段快乐的阅读时光，不再是奢侈的梦想！ jquery.validate.js作为前端开发的利器之一，深受广大前端工程师的喜爱，然而很多人却不善于利用remote，下面，对，就是下面，下面还有，我们来看看如何更合理的利用jQuery validate的remote。 介绍的内容主要有两点： 传统情况下，我们习惯使用addMethod方法为某个input提供后端验证机制，而不善于使用remote。 为remote方法提供附加的动态参数，比如你要验证昵称有没有被使用，你需要传递一下用户id。 第一步：下载 jquery.validate.js ，并使用下面的语句将其加入到项目中 <script src="js/jquery.validate.js" type="text/javascript"></script> 第二步：注意remote源码，注意注释和附加参数！ remote: function( value, element, param ) { if ( this.optional(element) ) { return "dependency-mismatch"; } // 已经验证过了，会从这里面取 var previous = this.previousValue(element); if (!this.settings.messages[element.name] ) { this.settings.messages[element.name] = {}; } previous.originalMessage = this.settings.messages[element.name].remote; this.settings.messages[element.name].remote = previous.message; param = typeof param === "string" && {url:param} || param; if ( previous.old === value ) { return previous.valid; } previous.old = value; var validator = this; this.startRequest(element); var data = {}; data[element.name] = value; // 设置附加参数 if($(element).attr("params")){ // 通过eval方法将附加参数转换为object对象 var params = eval('(' + $(element).attr("params") + ')'); for(var p in params){ data[p] = params[p]; } } $.ajax($.extend(true, { url: param,// 传递的后台url，来进行数据验证 mode: "abort", type: "post", port: "validate" + element.name, dataType: "json", data: data,//传递的参数为对应intput标签对应name和value值 success: function( response ) {//response为后台返回数据，错误的时候返回错误提示信息，正确的时候返回true validator.settings.messages[element.name].remote = previous.originalMessage; var valid = response === true || response === "true";//如果返回true，则会进入到if语句，错误提示消失 if ( valid ) { var submitted = validator.formSubmitted; validator.prepareElement(element); validator.formSubmitted = submitted; validator.successList.push(element); delete validator.invalid[element.name]; validator.showErrors(); } else { var errors = {}; var message = response || validator.defaultMessage( element, "remote" );//如果后台返回有错误提示信息，则不会取默认显示信息 errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message; validator.invalid[element.name] = true; validator.showErrors(errors); } previous.valid = valid; validator.stopRequest(element, valid); } }, param)); return "pending"; } 第三步：页面上配置remote，请注意params属性！ <input type="text" class="required alphanumeric" remote="${ctx}/jade/checkCodeIsExist.do" name="code"/> <input name="marketname" id="marketname" class="required" maxlength="50" params="{oldname:'${market.marketname}'}" type="text" value="${market.marketname}" remote="${ctx}/stocks_config/marketnameCheck.do" maxlength="10"> 第四步：后台接收参数进行check，返回对应处理信息 注意： 正常的时候返回true，检验不通过的时候返回错误提示信息 @RequestMapping(value = "checkCodeIsExist") public void checkCodeIsExist(HttpServletRequest request, HttpServletResponse reponse) throws Exception { <span style="white-space:pre"> </span>Jadeinfo jadeinfo = this.jadeinfoDAO.selectByCodeKey(StrUtil.getUTF8String(request.getParameter("code"))); if (jadeinfo != null && jadeinfo.getDeleteflag() == 0) { out("商品代码已存在！", reponse); } else { out(true, reponse); } } 第五步：one more thing! 来看看传统的addMethod方法，我觉得够麻烦的，对比一下remote，相形见绌哦！当然了，addMethod还是有其应用场景呢！ jQuery.validator.addMethod("codeCheck", function(value, element) { $.ajax({ url : common.ctx + "/jade/jade.do?action=checkCode",// 请求的URL data : { code : value },// 传递给action的参数{dictTypeId:'PC_STATE'} async : false, // 改异步为同步 dataType : 'json', success : function(records) { $("#checkcode").val(records); } }); var result = $("#checkcode").val(); if (result == "true") { return this.optional(element) || true; } else { return this.optional(element) || false; } }), 总结 ：最后呢，就附上一张效果图吧，也没啥！ 上一篇 北洋大时代：大师们的理想国札记-随想篇 下一篇 mysql：使用字符串变量作查询条件 顶 0 踩 0 我的同类文章 Javaweb （32） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qing_gee 访问： 157845次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 24
URL:: http://blog.csdn.net/qing_gee/article/details/43229539

ParseText::
论证select count(*)和select count(1) - qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 论证select count(*)和select count(1) 标签： mysql select count 2015-01-28 14:38 2321人阅读 评论 (3) 收藏 举报 分类： mysql （14） 作者同类文章 X 版权声明：这是自封为沉默王二的挨踢工作者，用文字打造的一个高品质的博客栏目。让你拥有一段快乐的阅读时光，不再是奢侈的梦想！ 今天看到同事转载的一篇《 select count(*)和select count(1)的区别 》的博文，兴致所致，就想对文中提出的结论进行验证一下： 从内容来看，主要是有主键和没有主键的影响，那么 第一步：创建test1（有主键），test2（无主键）两张表 CREATE TABLE `test1` ( `id` int(12) NOT NULL AUTO_INCREMENT, `value` int(12) NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=400000 DEFAULT CHARSET=utf8; CREATE TABLE `test2` ( `id` int(12) NOT NULL, `value` int(12) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; 第二步：插入40万条数据 DROP PROCEDURE inserttest; CREATE PROCEDURE inserttest() BEGIN DECLARE i INT DEFAULT 1; WHILE i < 400000 DO -- test1表为test1，test2表为test2 INSERT INTO test1 VALUES(i, i); SET i = i+1; END WHILE; END CALL inserttest; 第三步：论证第一个观点“表没有主键的情况下，count(1)比count(*)快” 我们测试10遍（test2表没有主键，限于篇幅只列出10个） SELECT SQL_NO_CACHE COUNT(1) as ooo FROM test2; SELECT SQL_NO_CACHE COUNT(*) as aaa FROM test2; 结果数据 次数 count(1) count(*) 1 时间: 0.107s 时间: 0.105s 2 时间: 0.106s 时间: 0.105s 3 时间: 0.105s 时间: 0.106s 4 时间: 0.106s 时间: 0.106s 5 时间: 0.106s 时间: 0.108s 6 时间: 0.106s 时间: 0.103s 7 时间: 0.107s 时间: 0.106s 8 时间: 0.104s 时间: 0.103s 9 时间: 0.105s 时间: 0.105s 10 时间: 0.105s 时间: 0.110s 结论：该观点不值得相信，从结果数据来看，count(1)比count(*)平均时间可能稍短一点，但是并不总是这样 。 第四步：论证第二个观点“表在有主键的情况下，主键作为count条件时最快” 我们测试10遍（test1表有主键，限于篇幅只列出10个） SELECT SQL_NO_CACHE COUNT(1) as ooo FROM test1; SELECT SQL_NO_CACHE COUNT(*) as aaa FROM test1; SELECT SQL_NO_CACHE COUNT(id) as aaa FROM test1; 结果数据（忍不住多列了3个） 次数 count(1) count(*) count(id) 1 时间: 0.052s 时间: 0.053s 时间: 0.059s 2 时间: 0.053s 时间: 0.052s 时间: 0.060s 3 时间: 0.052s 时间: 0.052s 时间: 0.059s 4 时间: 0.052s 时间: 0.053s 时间: 0.060s 5 时间: 0.054s 时间: 0.052s 时间: 0.059s 6 时间: 0.052s 时间: 0.054s 时间: 0.059s 7 时间: 0.051s 时间: 0.053s 时间: 0.060s 8 时间: 0.052s 时间: 0.053s 时间: 0.061s 9 时间: 0.054s 时间: 0.053s 时间: 0.059s 10 时间: 0.071s 时间: 0.052s 时间: 0.062s 11 时间: 0.051s 时间: 0.052s 时间: 0.059s 12 时间: 0.051s 时间: 0.052s 时间: 0.059s 13 时间: 0.052s 时间: 0.053s 时间: 0.059s 结论：count在表有主键的时候比没有主键的时候快，但是主键作为count条件时最慢，count(1)在多数情况下性能更优。 第五步：本来想论证“表在只有一个字段的时候count(*)最快”，但是很少情况下表只有一个字段，我就不论证了。 第六步：论证“count(*)和count(1)时统计包括null的，而count(列名)不包含null值” 我们先将test1表的value列修改为可以为空 ALTER TABLE `test1` MODIFY COLUMN `value` int(12) NULL AFTER `id`; 再将其中13行数据修改为null UPDATE `test1` SET `value`=NULL WHERE (`id`='13') 通过以下语句 SELECT SQL_NO_CACHE COUNT(1) as ooo FROM test1; SELECT SQL_NO_CACHE COUNT(*) as aaa FROM test1; SELECT SQL_NO_CACHE COUNT(id) as aaa FROM test1; SELECT SQL_NO_CACHE COUNT(value) as aaa FROM test1; 数据证据 count(1) count(*) count(id) count(value) 399999 399999 399999 399998 结论：count(*)和count(1)时统计包括null的，而只有count(有空值的列)不包含null值 。 第七步：对于select sum(1)的使用介绍，主要是说sum方法的计算结果是参数值1或者其他和满足条件行数的乘积 当然也就是说sum(1)也可以用来统计行数，然后我测试了一下性能（测试有null值并且有主键的表test1），数据如下： 次数 count(1) count(*) count(id) count(value) SUM(1) 1 时间: 0.052s 时间: 0.052s 时间: 0.060s 时间: 0.091s 时间: 0.104s 2 时间: 0.054s 时间: 0.051s 时间: 0.060s 时间: 0.090s 时间: 0.105s 3 时间: 0.053s 时间: 0.051s 时间: 0.059s 时间: 0.093s 时间: 0.100s 4 时间: 0.052s 时间: 0.053s 时间: 0.060s 时间: 0.094s 时间: 0.102s 5 时间: 0.051s 时间: 0.052s 时间: 0.059s 时间: 0.091s 时间: 0.102s 结论：sum(1)作为统计行数时，性能最差 。 tips：可能我的测试结果和原作者有不符的地方，如果有理解有误的地方请指正，我使用的是mysql 。 上一篇 项目管理 下一篇 springMVC之Transactional 顶 4 踩 0 我的同类文章 mysql （14） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qing_gee 访问： 157851次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 25
URL:: http://blog.csdn.net/qing_gee/article/details/47341381

ParseText::
VS2013安装SVN插件 - qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 VS2013安装SVN插件 标签： VS 安装 svn 版本控制 2015-11-09 10:30 4846人阅读 评论 (4) 收藏 举报 分类： IT技术 （7） 作者同类文章 X 版权声明：这是自封为沉默王二的挨踢工作者，用文字打造的一个高品质的博客栏目。让你拥有一段快乐的阅读时光，不再是奢侈的梦想！ 因为项目需要，需要在VS2013安装SVN插件，而我之前一直搞Java，没搞过VS，更没有弄过VS的版本控制。没办法，只能从零到一啦。不过问了半天度娘，度娘嘟嘟囔囔的不知道在说哈，没找到什么可行的解决办法。不过后来听说专门有VS的SVN插件，这可让人太喜过望。 材料 VS 2013安装程序，这个我就不唠叨了。 VisualSVN安装程序 。 前期准备 自然先要装SVN的server版，大家可见 svn安装部署以及服务器转移 ，是我之前写的。 然后需要安装TortoiseSVN，这个大家在网上应该见到很多，就不多说了，这是我将服务端代码下载到本地的列表（嘻嘻，看不清了吧）。 开始 安装完VisualSVN后，再安装VS2013，完了之后在VS上可以看到下面的内容（突然，感觉SVN有点屌的样子）： 选中“Get Solution from Subversion..” 选择项目位置，以及项目名称，点击OK，完了就可以在解决方案中看到你的项目。 然后你将在解决方案中看到如下内容： ps： 这里就可以看到代码文件，注意 绿色 表示的是未修改的状态。 在源文件注视上加一个“。”(注意看下图)，就会变成了 黄色 ，表示有修改啦。 然后我们再把编辑后的源文件进行commit，见下图： 右键选中对应的文件，就可以提交了，提交完成后，就变成了 绿色 。 然后先看本地svn库代码（注意不是workspace，而是SVN客户端中的内容，更新前），你可以看到是不是提交前的状态，是没有“。”的，希望你没有看花眼哈。 /// <summary> /// 打开连接，其中包含握手连接操作 /// </summary> 9.进行SVN更新。 10.然后可以再查看代码： /// <summary> /// 打开连接，其中包含握手连接操作。 /// </summary> 可以看到增加的“。” 结语 ： 其实挺简单的，当然了且来看看我今天背的古诗：“予独爱莲之出污泥而不染，戳清涟而不妖，中通外直，不蔓不枝，香远益清，亭亭净植，可远观而不可亵玩焉。” 装逼的样子还是挺不错的！ 乔布斯语录 那么人生何处不爬虫，爬虫请标 http://blog.csdn.net/qing_gee 对自己负责，对父母感恩！ 其实乔布斯压根没有说过这句话，哈哈，是青·乔布斯说的！（嘻嘻） 上一篇 mysql配置 下一篇 dont make me think 顶 3 踩 0 我的同类文章 IT技术 （7） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qing_gee 访问： 157846次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 26
URL:: http://blog.csdn.net/qing_gee/article/details/48949701

ParseText::
bootstrap input-file小例子 - qing_gee的专栏 - 博客频道 - CSDN.NET qing_gee的专栏 路漫漫其修远兮，吾将上下而求索 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 bootstrap input-file小例子 标签： bootstrap input file 例子 2015-10-07 16:11 2514人阅读 评论 (2) 收藏 举报 分类： Javaweb （32） 作者同类文章 X jfinal （25） 作者同类文章 X 版权声明：这是自封为沉默王二的挨踢工作者，用文字打造的一个高品质的博客栏目。让你拥有一段快乐的阅读时光，不再是奢侈的梦想！ 前言 ：英语不够好，吃亏倒大霉。且听我来絮叨絮叨，bootstrap input-file是一个很好的插件，可惜api又™是英文，折腾来折腾去，只能粗糙的使用一些预览和上传功能，可惜可惜啊。 demo 插件引入 < link type = "text/css" rel = "stylesheet" href = "${ctx}/components/fileinput/css/fileinput.css" /> < script type = "text/javascript" src = "${ctx}/components/fileinput/js/fileinput.js" > </ script > < script type = "text/javascript" src = "${ctx}/components/fileinput/js/fileinput_locale_zh.js" > </ script > http://plugins.krajee.com/file-input ,这是其官方文档，里面有下载地址。 页面 <input type = "file" name= "image" class = "file" value = "${deal.image}" /> 1. type=file和class=file，指明其为input file类型。 2. name指定其在后台的获取key。 3. value指定其在展示的时候图片路径。 页面加载时执行 $( 'input[type=file]' ).each( function () { var imageurl = $( this ).attr( "value" ); if (imageurl) { $( this ).fileinput({ showUpload : false , language : 'zh' , allowedFileTypes : [ 'image' ], allowedFileExtensions : [ 'jpg' , 'png' , 'gif' ], maxFileSize : 2000 , initialPreview : [ // 预览图片的设置 "<img src='" + imageurl + "' class='file-preview-image'>" , ], }); } else { $( this ).fileinput({ showUpload : false , language : 'zh' , allowedFileTypes : [ 'image' ], allowedFileExtensions : [ 'jpg' , 'png' , 'gif' ], maxFileSize : 2000 , }); } }); 1. 通过jquery获取对应的input file，然后执行fileinput方法。 2. showUpload 设置是否有上传按钮。 3. language指定汉化 4. allowedFileTypes 、allowedFileExtensions 不知道为什么没有起到效果？ 5. maxFileSize 指定上传文件大小 jfinal端 // 获取file，进行保存 UploadFile file = getFile( "image" ); 很简单，不再赘述 上一篇 登录跳转到上一个界面 下一篇 bootstrap-switch使用 顶 0 踩 1 我的同类文章 Javaweb （32） jfinal （25） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qing_gee 访问： 157849次 积分： 3210 等级： 积分：3210 排名： 第5842名 原创： 137篇 转载： 0篇 译文： 0篇 评论： 345条 我的微博 我的QQ群 扫描、点击二维码都可加群，QQ群： 120926808 博客专栏 北洋杂录：阿猿的浮想录 文章：18篇 阅读：20184 Java，漂亮的不像实力派 文章：24篇 阅读：18135 我的标杆 程序视界foruok 豆巴陆其明 JFinal 极速开发 阅读排行 你不得不读的书籍清单 (10855) VS2013安装SVN插件 (4832) jQuery validate之remote (2898) bootstrap input-file小例子 (2496) 论证select count(*)和select count(1) (2318) dwz中jqGrid的主题变更 (2258) 26岁程序员的出路 (2188) 升级mysql到5.7 (2084) Illegal overloaded getter method with ambiguous type for property (2019) 读京东技术解密，感桑田沧海变迁 (1791) 最新评论 wysiwyg富文本数据如何保存到mysql mxh403 : 不能后退的时候，不再彷徨的时候 ^_^.Merry Christmas！ 了解Activity u010247281 : 不错，写的很详细嘛 26岁程序员的出路 wtjandjay : 你还找辉哥给你当导师了，他竟然还拒绝了哈哈太有意思了 26岁程序员的出路 wtjandjay : 二哥你是来拉仇恨的吗 同 26 同it码农 哎不能比啊 你不得不读的书籍清单 wtjandjay : 哈哈楼主终于换头像了 我有个二十多年的发小也叫王二后来我给他起了个外号叫王俩 wysiwyg富文本数据如何保存到mysql qingluohuaxiang : 赞 你不得不读的书籍清单 liran9094 : @qing_gee:买的跑步说些什么 到了 打算平时在地铁时候慢慢的看它我平时也没怎么读书吧，... 你不得不读的书籍清单 xx326664162 : @qing_gee:我是来学习的，这些书我只有一本Java编程思想，刚买的，正在看，希望看完对我的技... 了解Activity Dark_Crow : 你不得不读的书籍清单 qing_gee : @xx326664162:诚如朋友所说，即使书读完一遍也不一定能领会得了。上面列出这18本书，有一些... 文章搜索 文章存档 2015年12月 (15) 2015年11月 (11) 2015年10月 (14) 2015年09月 (23) 2015年08月 (6) 2015年07月 (8) 2015年06月 (5) 2015年05月 (10) 2015年04月 (12) 2015年03月 (4) 2015年02月 (2) 2015年01月 (9) 2014年12月 (9) 2014年11月 (10)

Recno:: 27
URL:: http://blog.csdn.net/raylee2007

ParseText::
raylee2007的专栏 - 博客频道 - CSDN.NET raylee2007的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 从头认识java-目录 第一章 对象 1.1 编程语言抽象过程以及java的基础特性 1.2 对象-服务提供者 1.3 隐藏具体实现 1.4 复用代码 1.4 复用代码 1.5 继承（1） 1.5 继承（2）... 2015-10-19 09:55 阅读 (2363) 评论 (5) [置顶] 零基础学python-目录 第一章 初识python 1.1 安装python 1.2 什么是idle 1.3 通过idle启动python 1.4 hello world... 2015-08-09 15:56 阅读 (2617) 评论 (13) 从头认识java-15.1 填充容器（2） 接着上一章节，我们继续介绍填充容器。这一章节我们结束另一种填充容器的方式：addAll例子：package com.ray.ch15; import java.util.ArrayList; import java.util.Arrays; import java.util.LinkedHashSet; public class Test { public static void main(... 2015-12-25 14:32 阅读 (99) 评论 (0) 从头认识java-15.1 填充容器（1） 这一章节我们来介绍一下填充容器。就像数组一样，Arrays.fill是填充方法，在容器里面也有。1.Collections.nCopies这个方法是生成某种类型多少个对象，然后我们可以把他放到容器的构造函数里面，填充这个容器。例子：package com.ray.ch15; import java.util.ArrayList; import java.util.Collections; imp... 2015-12-25 10:06 阅读 (253) 评论 (0) 从头认识java-14.4 Java提供的数组的实用功能（2） 接着上一章节，我们继续介绍Java提供的数组的实用功能。3.元素的对比Comparatorpackage com.ray.ch14; import java.util.Arrays; import java.util.Comparator; public class Test { public static void main(String[] args) { MyClass[] myC... 2015-12-24 22:35 阅读 (446) 评论 (0) 从头认识java-14.4 Java提供的数组的实用功能（1） 这一章节我们来讨论一下Java提供的数组的实用功能。1.复制我们下面来比较一下System.arraycopy和forpackage com.ray.ch14; import java.util.Arrays; public class Test { public static void main(String[] args) { int[] a = new int[10000000];... 2015-12-24 16:53 阅读 (501) 评论 (0) 从头认识java-14.3 多维数组 这一章节我们来讨论一下多维数组。1.例子：package com.ray.ch14; import java.util.Arrays; public class Test { public static void main(String[] args) { int[][] a = new int[2][2]; System.out.println(Arrays.deepToStrin... 2015-12-24 11:48 阅读 (611) 评论 (0) 从头认识java-14.2 进一步了解数组 这一章节我们来全面了解一下数组。1.数组在初始化之前，我们不能使用他的引用来做任何事情。package com.ray.ch14; public class Test { public static void main(String[] args) { int[] a; // System.out.println(a);//error,The local variable a... 2015-12-23 22:39 阅读 (797) 评论 (1) 从头认识java-14.1 再次对比数组与容器 这一章节我们再次深入的对比数组与容器。数组与容器主要集中在三个方面：效率、类型、基础类型。我们可以从三方面做出对比。1.效率这里的下来是指add和get 的速度下面以add为例：package com.ray.ch13; import java.util.ArrayList; public class Test { public static void main(String[] args)... 2015-12-23 15:01 阅读 (427) 评论 (0) 从头认识java-13.15 使用泛型时出现的问题（2）-实现参数化接口与重载 接着上一章节，我们这一章节讨论一下两个比较偏门的知识点：实现参数化接口与重载。主要笔者觉得这两个知识点比较有意思而已。1.实现参数化接口下面是不能编译的代码：package com.ray.ch13; interface Generator { } class MyGenerator implements Generator { } class MyGenerator2 ex... 2015-12-22 22:33 阅读 (675) 评论 (2) 从头认识java-13.15 使用泛型时出现的问题（1）-泛型不能使用基础类型 这一章节我们来讨论一下使用泛型时出现的问题。今天我们引入第一个问题：就是泛型不能使用基础类型。1.例子package com.ray.ch13; import java.util.ArrayList; public class Test { public static void main(String[] args) { // ArrayList list;//error ... 2015-12-22 22:19 阅读 (618) 评论 (1) 从头认识java-13.14 捕捉通配符替代的类型参数 这一章节我们继续关于通配符的话题，主要讨论怎样捕捉通配符替代的类型参数？例子：package com.ray.ch13; public class Test { public static void test(Holder holder) { T t = holder.get(); System.out.println(t.getClass().getSimpleName(... 2015-12-21 21:57 阅读 (522) 评论 (0) 从头认识java-13.13 无界通配符 这一章节我们来讨论一下无界通配符。1.怎样使用无界通配符？无界通配符是直接使用例子：package com.ray.ch13; import java.util.ArrayList; import java.util.List; public class Test { @SuppressWarnings("unused") private static List list... 2015-12-21 21:37 阅读 (504) 评论 (0) 从头认识java-13.12 超类通配符 这一章节我们来讨论一下超类通配符。1.什么是超类通配符在前一章节我们提到一种通配符，是使用来实现的，导致了后面的一系列问题，现在我们引入另一种通配符--超类通配符，它是使用来实现的。例子：package com.ray.ch13; import java.util.ArrayList; public class Test { public static void main(String[] ... 2015-12-21 11:49 阅读 (449) 评论 (0) 从头认识java-13.11 对比数组与泛型容器，观察类型擦除给泛型容器带来什么问题？ 这一章节我们继续类型擦除的话题，我们将通过对比数组与泛型容器，观察类型擦除给泛型容器带来什么问题？1.数组package com.ray.ch13; public class Test { public static void main(String[] args) { Fruit[] fruits = new Apple[5]; fruits[0] = new Apple(); ... 2015-12-21 09:25 阅读 (446) 评论 (1) 从头认识java-13.10 边界的作用 这一章节我们来讲述一下边界。之前的章节已经提到，在jvm层面，泛型的类型信息会被擦除，但是，为了可以在编译器能够更好的进行类型检测，我们引入了边界。例子package com.ray.ch11; public class Test { @SuppressWarnings({ "unchecked", "rawtypes" }) public static void main(String[... 2015-12-20 23:26 阅读 (558) 评论 (0) 从头认识java-13.9 隐式和显示的创建类型实例 对于上一章节擦除引起的问题与解决办法有读者提出过于简单，这里解释一下：因为笔者本身也遇不到相应的问题，只是凭空想像一些有可能的问题，基于水平有限，因此上一章节写的比较简单，欢迎广大读者踊跃提意见，我会尽量改进。回归到这一章节，这里我们将讨论隐式和显示的创建类型实例。1.隐式建类型实例我们上一章节提到下面有问题的代码：package com.ray.ch11; public class T... 2015-12-17 20:29 阅读 (887) 评论 (0) 从头认识java-13.8 类型擦除的问题与解决 这一章节我们来讨论一下类型擦除的问题与解决。1.类型擦除的问题就是对于泛型类型的new、转型、instanceof操作带来错误或者警告代码：package com.ray.ch11; public class Test { public void test(Object object){ // System.out.println(object instanceof T);//e... 2015-12-15 06:41 阅读 (809) 评论 (1) 从头认识java-13.7 什么时候使用泛型？ 这一章节我们来讨论一下什么时候使用泛型？答案：当你希望代码能够跨多个类型（不同的类型，不包含继承关系）工作的时候。1.当没有确切类型的时候下面是错误的代码：package com.ray.ch13; public class Test { private T obj; public Test(T t) { obj = t; } public void test() { //... 2015-12-14 16:59 阅读 (637) 评论 (3) 从头认识java-13.6 类型擦除（type erasure） 这一章节我们讨论一下类型擦除。1.什么是类型擦除？在java里面泛型其实是伪泛型，因为他都只是在编译器里面实现的，在jvm里面是没有泛型的概念。我们看下面的代码：package com.ray.ch11; import java.util.ArrayList; public class Test { public static void main(String[] args) {... 2015-12-13 22:52 阅读 (794) 评论 (0) 从头认识java-13.5 利用泛型构建复杂模型 这一章节我们来展示一下怎样利用泛型构建复杂模型？1.元组列表我们之前已经说过元组是一个复杂的模型，可以返回多对象。package com.ray.ch11; import java.util.ArrayList; public class Test { public ArrayList> test() { ArrayList> list = new ArrayList>(); for... 2015-12-13 20:56 阅读 (777) 评论 (0) 从头认识java-13.4 泛型方法的使用 这一章节我们来讨论一下泛型方法的使用。泛型除了可以作用在类、接口上面，还可以作用在方法上面。1.例子package com.ray.ch13; public class Test { public void test(T x) { System.out.println(x.getClass().getName()); } public static void main(String... 2015-12-11 16:34 阅读 (515) 评论 (0) 331条数据 共17页 1 2 3 4 5 ... 下一页 尾页 个人资料 raylee2007 访问： 181916次 积分： 5189 等级： 积分：5189 排名： 第2889名 原创： 327篇 转载： 1篇 译文： 2篇 评论： 115条 文章搜索 博客专栏 从头认识java 文章：125篇 阅读：91609 轻松python之设计模式 文章：1篇 阅读：490 轻松python之文件专题 文章：7篇 阅读：4472 轻松python-文本专题 文章：18篇 阅读：6429 数据结构与算法 文章：9篇 阅读：3377 java基础学习 文章：31篇 阅读：11575 轻松python 文章：155篇 阅读：72434 文章分类 JAVA基础 (159) GXT (1) Spring (1) 数据结构与算法 (9) 其他 (0) python (154) 项目 (1) 精通python设计模式 (1) 文章存档 2015年12月 (39) 2015年11月 (50) 2015年10月 (49) 2015年09月 (56) 2015年08月 (93) 2015年07月 (13) 2015年06月 (3) 2015年05月 (7) 2015年04月 (14) 2014年10月 (1) 2014年08月 (1) 2013年07月 (2) 2013年06月 (2) 2013年03月 (1) 阅读排行 零基础学python-目录 (2615) 从头认识java-目录 (2357) 从头认识java-7.4 实现多重接口 (1539) 从头认识java-7.3 接口怎样解耦？ (1414) 从头认识java-1.1 编程语言抽象过程以及java的基础特性 (1293) 从头认识java-1.2 对象-服务提供者 (1279) 从头认识java-8.11 为什么需要内部类？ (1266) ssh，spring 泛型注入，泛型dao和service的实现 (1177) 从头认识java-3.1 for each (1167) 从头认识java-2.3 自增自减与关系操作符 (1162) 评论排行 零基础学python-目录 (13) 从头认识java-6.7 初始化与类的加载 (12) 从头认识java-1.1 编程语言抽象过程以及java的基础特性 (6) java清理对象的时候“=null”与“gc”的比较 (5) 从头认识java-目录 (5) 从头认识java-6.6 final（1）-属性域 (5) 轻松python之文件专题-读取文件专题 (4) java基础入门-父类引用子类对象 (4) 从头认识java-4.5 对象的清理(finalize()) (4) 零基础学python-初识python与python的解释过程 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 从头认识java-目录 u013299671 : 好棒，支持作者！ 从头认识java-14.2 进一步了解数组 a1239761234 : 谢谢 从头认识java-13.15 使用泛型时出现的问题（2）-实现参数化接口与重载 sinat_23622505 : 第一个桥方法冲突第二个不符合重载都是由于泛型擦除引起的 _^_^_ 从头认识java-13.15 使用泛型时出现的问题（1）-泛型不能使用基础类型 u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 从头认识java-13.15 使用泛型时出现的问题（2）-实现参数化接口与重载 u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 从头认识java-1.2 对象-服务提供者 gwjsmgym : 好 从头认识java-13.11 对比数组与泛型容器，观察类型擦除给泛型容器带来什么问题？ Qiaofeng_cui : 好文章！赞一个！ 从头认识java-13.7 什么时候使用泛型？ cytzrs : 不错 从头认识java-13.7 什么时候使用泛型？ wangdan199112 : 底层需要用泛型，这样才能提高方法的复用！ 从头认识java-13.8 类型擦除的问题与解决 NoMasp : 有点简短呐

Recno:: 28
URL:: http://blog.csdn.net/sheismylife/article/category/1256795

ParseText::
KVM - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Ubuntu KVM 使用总结 前面写了一系列文章，现在在这里用一篇文章概括一下，方便查看。本文针对Ubuntu 13.10 server。宿主机的安装检查CPU是否支持虚拟化root@kvmhost:~# egrep '(vmx|svm)' --color=always /proc/cpuinfo flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca... 2014-04-10 10:13 阅读 (2213) 评论 (0) 删除/恢复virbr0 当删除KVM服务的时候，除了逆向执行安装kvm的命令外，还需要删除virbr0这个虚拟设备。这是个bridge设备，可以将网络流量转发给vm使用的虚拟网卡。删除的命令是：virsh net-destroy default virsh net-undefine default service libvirt-bin restart ifconfig然后不要忘记删除libvirt-bin服务apt-g... 2013-05-23 22:34 阅读 (2538) 评论 (0) KVM虚拟机克隆 每次重新创建实在是费功夫，因此克隆是个好主意。在Hyper-V中没有直接clone的菜单，需要export和import，还要修改名称文件之类的。反而在KVM中操作十分简单。假定有了一个vm1虚拟机，现在要克隆出vm2虚拟机。按照下列步骤执行：1.停止vm1virsh shutdown vm1 Domain vm1 is being shutdown root@dbkvm:~# virsh li... 2013-05-03 10:08 阅读 (6166) 评论 (0) KVM故障调试经验 本次在UBuntu12.04.2系统安装KVM，随后创建虚拟机，又出现了新的问题。现象：ping不通虚拟机，ssh登录不上，console方式登录不上, 虚拟机无法shutdown，貌似电源管理也没有安装成功。先来解决网络问题：还好可以通过virt-cat来检查虚拟机内部的文件。先关闭虚拟机virsh destroy vm1然后检查网卡设置文件：root@dbkvm:~# virt-cat -d... 2013-05-02 16:20 阅读 (2999) 评论 (0) KVM 虚拟机备份和还原之二 snapshot 假设已经安装了vm1虚拟机并运行之创建一个xml文件vm1_snapshot.xml,内容如下： vm1_snapshot Ubuntu 12.10 AMD64 server 现在运行下面的命令创建vm1的snapshot:virsh snapshot-create vm1 ./vm1_snapshot.xml Domain snapshot vm1_snapshot created... 2012-11-14 14:52 阅读 (3115) 评论 (0) KVM创建虚拟机后指定启动脚本 在vmbuilder命令中创建vm时，可以通过参数虚拟机第一次启动的时候执行的脚本文件。但是由于这个时候虚拟机网络可能还不通，必须要延迟一会儿，才能保证一些apt-get install命令能够顺利执行。下面的脚本是我常用的，贡献出来：boot.sh文件内容：# Set time zone... 2012-11-12 17:06 阅读 (2096) 评论 (0) KVM虚拟机关闭 shutdown命令可以用于优雅的关闭kvm虚拟机，但是为什么总是关不掉。比如想关掉vm2，就是不行。virsh shutdown vm2 因为virsh通过下面的命令关闭虚拟机QEMU/KVM shutdown这会导致向虚拟机发送一个ACPI的指令，而默认安装kvm虚拟机的时候，没有安装acpid程序，因此虚拟机没有处理改指令。解决方法是在虚拟机里面安装：apt-get install acpi... 2012-11-12 15:31 阅读 (3394) 评论 (0) KVM 虚拟机备份和还原之一 内存备份和还原 有了创建vm的自动化脚本，有了删除vm的自动化脚本，生活已经简单很多。但是在某个测试场景中，我们经常需要不断的将vm还原到某个起点，然后重新开始测试。每次都删除/创建vm仍然很慢。这个时候，可以使用save/restore方法。save/restore方法只备份和还原当前系统的内存状态，并不会备份磁盘文件。 因此耗时极短，但是使用场合有限，特别注意。virsh save --bypass-cach... 2012-11-08 10:32 阅读 (3180) 评论 (2) KVM 虚拟机删除 每次敲一堆命令，时间长了就想自动化了。下面的delete_vm.sh脚本需要root权限下运行。#!/bin/bash source ../common/tool.sh virsh destroy $1 virsh undefine $1 RemoveFolder "/var/lib/libvirt/images/$1/" RemoveFile "/etc/libvirt/qemu/$1"调... 2012-11-08 09:49 阅读 (4645) 评论 (0) Ubuntu12.10 server安装KVM的不同之处 因为Ubuntu12.10 刚发布，立刻试一下。这次安装KVM的时候，有点不同。就是安装Ubuntu server的时候，选中了virtual server。这样会导致ubuntu-virt-server和kvm-ipxe已经被在系统安装时装好。因此，进入系统后，只需要安装：apt-get install python-vm-builder之后并不需要退出重新登录。这个对自动化部署很有帮助，因此还... 2012-10-24 10:32 阅读 (3550) 评论 (2) UBuntu KVM管理 紧接上文。上文创建了3个VM及Ubuntu server。现在如何查看呢？输入下面的命令：virsh --connect qemu:///system查看方法：virsh # list --all Id Name State ---------------------------------- - vm1 shut off... 2012-10-16 17:28 阅读 (2997) 评论 (2) Ubuntu KVM Client OS创建 二 上一篇文章创建了第一个虚拟机及Ubuntu server后，在/etc/libvirt/qemu/目录下，会看到vm1.xml文件，内容如下：<!--... 2012-10-15 15:31 阅读 (2091) 评论 (0) Ubuntu KVM Client OS创建 一 前面的文章解决了网络问题后，才能继续下去：http://blog.csdn.net/sheismylife/article/details/8070072参考该文的向导：http://www.howtoforge.com/virtualization-with-kvm-on-ubuntu-12.04-lts进入要创建的虚拟机文件的目录：cd /var/lib/libvirt/images现在我打算... 2012-10-15 14:13 阅读 (2360) 评论 (0) Ubuntu KVM host 网络问题 接上一篇文章：http://blog.csdn.net/sheismylife/article/details/8010040上一篇我的文章完成后，会有一些奇怪的现象：1.其他机器ssh登录上host后，过一会儿就不能连接了，然后ssh无法登录，直到重新启动host机器的网络服务。(经查明，公司网络中和另一台机器IP冲突）2.host机器无法连外网3.路由表中缺少这一行：ip route list... 2012-10-14 16:52 阅读 (2671) 评论 (0) Ubuntu12.04安装kvm 为了在一台服务器上虚拟出多个Ubuntu server，用于集群。考虑了几个方案，Vmware因为价格被排除，VirtualBox不错，不过KVM由于是Linux内核层的，性能更好。优先考虑使用。首先在一台实验机器上安装Ubuntu 12.04 amd64 server。升级系统补丁以及内核。hostname是kvmhost. IP是10.112.18.177. 主板上已经打开了虚拟化功能。好。现... 2012-09-23 17:08 阅读 (13550) 评论 (0) 个人资料 sheismylife 访问： 3247675次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 29
URL:: http://blog.csdn.net/sheismylife/article/category/1312298

ParseText::
Clojure - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 clojure引入另一个clojure实现的Java类 说起来有点绕口，是这么回事。core.clj文件里面要使用一个Java类，这个Java类(MoveDailyAction)是由同一个项目的clojure代码编译生成的，clojure -> java class请参考之前的博客clojure实现java类现在需要将clojure生成的Java类的class文件放在指定的目录下，然后让core.clj能够引用到这个class文件。这就主要靠leini... 2015-11-19 00:19 阅读 (778) 评论 (0) clojure实现java类 为什么需要这么干？因为clojure可以调用java的类，但有时候这些java类需要你实现一个子类或者传递一个自定义的java对象作为参数，所以需要将clojure代码编译成java代码。还记得之前提过的:gen-class么，在(ns...)中，使用(:gen-class)，在(ns..)之外，应该用 (gen-class)下面是一个例子：(ns kafka2hdfs.MoveDailyActi... 2015-11-18 18:43 阅读 (587) 评论 (0) Leiningen 与 maven Leiningen是管理clojure工程的, 其实就是使用clojure管理clojure工程，project.clj是其主要配置文件，其基本原理是根据project.clj文件生成pom.xml，然后利用maven的强大功能进行项目管理。如何测试project.clj是否合理使用命令lein pom, 会根据当前目录下的project.clj文件生成pom.xml，然后通过检查pom.xml文... 2015-11-03 22:12 阅读 (755) 评论 (0) Clojure语言十六 clojure与java Clojure可以基于任何语言Clojure诞生之初，是基于Java的。但是任何语言都可以解析lisp并执行，所以Clojure可以基于任何语言，只要一个大拿愿意这么干。这不，Clojurescript基于JavaScript的已经出现了, 之后又引发了另一个项目的出现ClojureC。两个项目在github上的地址：https://github.com/clojure/clojurescript... 2015-10-30 15:05 阅读 (684) 评论 (1) Clojure语言十五 quote & unquote quote(quote ...) 或者用'，用来阻止list被求值比如：> (quote a) a > 'b bunquote~刚好相反，用来将quote的symbol被取消quote状态，恢复求值的功能> ~'a ~@411CF0 a > ~(quote a) ~@411CF0 aquote unquoited symbol如果用unquote定义了恢复了一个symbol的求值能力，需要将这个表... 2015-10-27 15:45 阅读 (630) 评论 (0) Clojure语言十四 常用宏 常用宏infix宏解析人的四则运算书写格式并执行(defmacro infix "Use this macro when you pine for the notation of your childhood" [infixed] (list (second infixed) (first infixed) (last infixed))) 这么用：(infix (1 + 1)) ; ... 2015-10-27 10:02 阅读 (560) 评论 (0) Clojure语言十三: 宏的基本概念 micro与function的区别特点是允许在Clojure evaluate你的list之前，你能够像处理函数一样的处理它, 但是不evaluate。如果你想把一个表达式作为参数传递给函数，并要求这个参数不求值，这是做不到的。比如下面的函数定义会报错：user=> (def ignore-last-operand2 [function-call] (butlast function-ca... 2015-10-18 21:49 阅读 (744) 评论 (0) clojure 1.7 安装 由于storm的普及，clojure重新回到了我的技术中，现在在ubuntu 15.04上安装clojure 1.7最新环境。下载并解压wget http://repo1.maven.org/maven2/org/clojure/clojure/1.7.0/clojure-1.7.0.zip unzip clojure-1.7.0.zip进入目录后，用下面的命令进入clojure shell, 做... 2015-10-14 11:26 阅读 (603) 评论 (0) 用Clojure编写REST service 七 启动时读取配置文件 有了前面的namespace模块化的基础，现在重构一下代码。像一般的web 应用，启动的时候读取配置文件，然后将配置信息保存在全局变量中。以后用到就读这个变量。现在在server.clj文件中修改如下：(ns my-website.server (:require [noir.server :as server]) (:use [clojure.tools.logging :only (i... 2013-01-03 21:45 阅读 (1970) 评论 (0) Clojure语言十二: namespace 当前namespace*ns* 指向的是当前namespace，通常是user. 不过如果在自己应用程序，比如我的my-website目录下运行lein repl,然后在运行*ns*，得到的当前namespace就不不是user,而是：my-website.server=> *ns* #创建namespace有几种方法，最简单的是用ns宏。下面创建了一个文件config.clj(ns my-web... 2013-01-03 18:07 阅读 (1566) 评论 (0) 用Clojure编写REST service 六 使用log4j 由于logback暂时不能用，所以这里先用log4j顶一下。project.clj文件如下：(defproject my-website "0.1.0" :description "example rest service" :dependencies [[org.clojure/clojure "1.4.0"]... 2013-01-02 19:55 阅读 (1675) 评论 (0) 用Clojure编写REST service 五 使用logback(有bug) 一个完整的web app当然需要写日志。这里我采用习惯的slf4j+logback。首先在my-website目录的project.clj文件中添加两个依赖：tools.logging&logback-classic(defproject my-website "0.1.0-SNAPSHOT" :description "FIXME: write this!"... 2013-01-02 18:58 阅读 (1705) 评论 (0) Clojure语言十一:map函数 map函数比较特别，首先看一个简单的功能：user=> (def f (fn [x] (+ 2 x))) #'user/f user=> (map f [2 4 7]) (4 6 9) 先定义了一个f函数，接受一个参数，然后返回+2后的结果。map接受两个参数，第一个是f函数，第二个是一个数组。用数组中的三个元素依次调用f函数，每次调用的结果加入到一个list中并返回。map的文档：-------... 2013-01-01 21:33 阅读 (3043) 评论 (1) Clojure语言十:fn object (fn..)可以用来创建匿名函数，比如：user=> (fn [x] (+ 2 x)) #接受一个参数x，然后加上2. 上面的调用使用fn定义了一个函数,但是并没有执行。如果要立即执行，可以加上括号和参数：user=> ((fn [x] (+ 2 x)) 5) 7 但是更多时候我们希望函数先定义，以后反复使用,可以结合def：user=> (def f (fn [x] (+ 2 x))) #'us... 2013-01-01 21:05 阅读 (1817) 评论 (0) 用Clojure编写REST service 四 读取配置文件 最好的配置文件写法是采用clj文件，下面先把前面的a.xml文件改成a.clj文件，内容如下：{:mongodb "localhost" :listen_port 7777 :login_timeout 200 :check_timeout 200}这里定义了一个map。注意,localhost是字符串，必须用双引号。这里用空格分开每个key/value组成的pair.在test.clj文件中添加... 2012-12-30 21:29 阅读 (1848) 评论 (0) 用Clojure编写REST service 三 返回JSON 前面的REST API还要继续改进，因为Ajax调用通常都需要JSON格式的响应，所以修改test.clj文件如下：(ns my-website.rest.test (:require [noir.response :as response]) (:use [noir.core :only [defpage]])) (defpage "/rest/:id" {:keys [id]} (r... 2012-12-29 21:09 阅读 (1725) 评论 (0) 用Clojure编写REST service 二 Noir创建Rest API 前面一节介绍了Noir如何非常方便的创建一个web app，但是我的实际一个项目的需求中只需要REST API开发，页面部分都交给了html和Javascript，并不需要Noir在后台渲染网页。同样无需重新启动程序，在src目录下创建rest目录，里面有一个test.clj文件：$ tree . ├── models ├── rest │   └── test.clj ├── server.cl... 2012-12-29 20:05 阅读 (2118) 评论 (0) 用Clojure编写REST service 一 Noir创建web app 写一个真正的互联网应用，才可以观察Clojure的威力。本文使用Noir框架，参考官方站点：http://www.webnoir.org/执行三行命令：lein new noir my-website cd my-website lein run也可以在lein run命令前运行lein deps命令。国内网络下载依赖比较痛苦，还好用了proxy，试了好多次，web应用的所有java依赖才下载完成... 2012-12-29 18:14 阅读 (2389) 评论 (0) Clojure语言九:for循环 宏for可以支持循环下面继续前面的xml的例子，演示如何用for遍历xml-seq返回的sequence.user=> (for [x r] (println "^" x)) (^ {:tag :service, :attrs nil, :content [{:tag :mongodb, :attrs nil, :content [{:tag :uri, :attrs nil, :content... 2012-12-28 18:28 阅读 (1914) 评论 (0) Clojure语言八:Sequence sequence定义sequence不是一般的list，实际上实现了ISeq接口，ISeq接口定义如下：package clojure.lang; /** * A persistent, functional, sequence interface * * ISeqs are immutable values, i.e. neither first(), nor rest() chang... 2012-12-28 12:38 阅读 (1533) 评论 (0) 34条数据 共2页 1 2 下一页 尾页 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 un

Recno:: 30
URL:: http://blog.csdn.net/sheismylife/article/category/1854427

ParseText::
Redmine - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 redmine 导出中文乱码 这是redmine的bug，必须在个人账户设置中将语言改成中文，才可以解决。顺便一个提示，修改下面的文件方法是无效的/home/redmine/redmine-2.5.1/lib/plugins/rfpdf/lib/fpdf/chinese.rb 网上建议这样改：i+=ascii ? 1 : 2 => i+=ascii ? 1 : 3这无法解决这个问题。... 2015-03-18 19:01 阅读 (1158) 评论 (0) redmine 自定义字段mysql表结构 redmine可以创建自定义字段，我经常用它来满足不同的管理需求，现在来解读一下，看看这些自定义字段是如何存在mysql表中的。表issues用来存放issue的标准字段。mysql> describe issues; +----------------------+--------------+------+-----+---------+----------------+ | Field... 2014-12-15 23:50 阅读 (1303) 评论 (0) redmine fastcgi经常崩溃的解决方案 终于找到了解决方法，在下面的文件中添加两行即可：/home/redmine/redmine-2.5.1/public/dispatch.fcgirequire 'rubygems' require 'fcgi'就这么简单。终于解决了困扰已久的crash问题。... 2014-05-12 22:34 阅读 (1515) 评论 (0) redmine 从production工作模式切换到development模式 有时候为了找到redmine或者plugin的错误，需要得到development.log文件。按照下面的步骤转换：在config/environment.rb文件第一行，修改为ENV['RAILS_ENV'] ||= 'development'database.yml文件中，development配置和production一样production: adapter: mysql2 dat... 2014-01-13 21:51 阅读 (2254) 评论 (0) Redmine安装todo list插件 todo list在日常工作中很重要。在Remine中，可以为自己创建一个私人项目，然后安装todo list插件，并运用到这个私人项目中。下面是安装：下载代码到plugins目录下：root@test:/usr/src/redmine-2.4.2/plugins# git clone https://github.com/AZielinski/Redmine-Todo-lists.git重命名目... 2014-01-13 21:21 阅读 (2889) 评论 (0) redmine卸载插件 昨天安装了remine todo list插件，但是品质不太好啊。造成project不能删除，issue不能update和删除。今天学了一个方法，卸载plugin在redmine-2.4.2目录下，用命令卸载，此时redmine服务仍在运行, 注意插件名称就是插件目录名称root@test:/usr/src/redmine-2.4.2# rake redmine:plugins:migrate N... 2014-01-13 20:57 阅读 (3370) 评论 (0) Ubuntu 12.04安装Redmine 2.4.2 Ubuntu 12.04安装Redmine 2.4.2... 2014-01-11 18:52 阅读 (5990) 评论 (0) GitLab6.1 使用Redmine 作为issue管理系统 首先修改配置文件gitlab.yml文件： issues_tracker: redmine: project_url: "http://redmine.yourcompany.com/projects/:issues_tracker_id" issues_url: "http://redmine.yourcompany.com/issues/:id"... 2013-10-22 14:17 阅读 (4022) 评论 (0) newlisp 监控redmine 刚装好的redmine会时不时crash，所以写了一个脚本去监控之，如果检查结果不是三行，那么说明进程crash，那就启动它。#!/usr/bin/newlisp (set 'r (exec "ps -def | grep 'dispatch'")) (set 'l (length r)) (if (= 3 l) (begin (println "redmine works f... 2013-07-25 16:45 阅读 (1797) 评论 (0) Redmine开启服务 写了一个启动Redmine的开机脚本，redmine文件在/etc/init.d/下#!/bin/sh ### BEGIN INIT INFO # Provides: Dean Chen # Required-Start: # Required-Stop: # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Sh... 2013-07-25 13:02 阅读 (2782) 评论 (0) Redmine email配置 很简单，先安装sendmailapt-get install sendmail然后在redmine目录的配置文件conf/configuration.yml中取消几行注释：# ==== Sendmail command # production: email_delivery: delivery_method: :sendmail基本就可以了。如果有防火墙，可以配置自己的smtp服务器... 2013-07-24 13:24 阅读 (2700) 评论 (3) Nginx和Redmine 紧接前文，我希望能够用FastCGI协议和Nginx交互，这样就能用在产品环境下。Redmine启用FastCGI文档不全，靠自己揣摩和Google得到的零散信息，得到如下配置方法：1. 安装需要的开发库apt-get install libfcgi-dev2. 在redmine目录下创建文件Gemfile.locale, 内容如下：gem "fcgi"3. 安装依赖，再次运行下面的命令：bund... 2013-07-24 13:02 阅读 (2377) 评论 (0) Ubuntu13.04 安装Redmine 先从GitLab说起GitLab自带的issue管理虽然在不断的改进，但是从功能上来看缺少很多东西，比如issue的排序没有，GitLab自动的将已经close的issue放在下面，open的放在上面。但是如果我想根据优先级做排序。GitLab其实都没有优先级的概念，你只能创建一些label来表示。高级查找也没有。对于一个小的开发团队，特别是没有专业的QA/Test engineers的团队，Gi... 2013-07-24 09:58 阅读 (2421) 评论 (0) 个人资料 sheismylife 访问： 3247675次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 31
URL:: http://blog.csdn.net/sheismylife/article/category/1917151

ParseText::
Hadoop - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 去除HDFS WARN util.NativeCodeLoader 经常遇到这个警告# hdfs dfs -ls /input 15/11/10 10:00:32 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable问题在哪里？有人说这是hadoop的预编译包是... 2015-11-10 10:09 阅读 (728) 评论 (0) HDFS用户权限管理 超级用户启动namenode服务的用户就是超级用户具体配置参考之前我的博客Ubuntu上使用Hadoop 2.x 一 hdfs超级用户创建和设置 CentOS 6.6 安装 HDFS 2.7.1 设计思想很多设计原子POSIX文件系统，可以参考之前的博客 Linux用户管理命令 文件和... 2015-11-08 10:34 阅读 (644) 评论 (0) HDFS 2.x 使用经验 本文会不断增加内容查看namnode状态web方式两个namenode的话，可以通过网页的方式查看http://10.149.11.152:50070/dfshealth.html#tab-overviewhttp://10.149.11.153:50070/dfshealth.html#tab-overview在两个页面的overview可以看到namenode的状态：active or sta... 2015-09-28 14:46 阅读 (572) 评论 (1) CentOS 6.6 安装 HDFS 2.7.1 本文尝试在CentOS上搭建10台HDFS集群，不会搭建YARN和Hive, 因为之后会采用Spark。先安装jdk 1.8, 此处不细说。下载首先下载hadoop binary包wget http://apache.mesi.com.ar/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz解压后放在/data/slot0/目录下，并建立软链接/data/... 2015-09-25 18:40 阅读 (1072) 评论 (2) 4年后Hadoop的再回首 居然无疑中搜到了几年前我讨论的帖子，造化弄人，如今我已经管理着321台服务器组成的hadoop集群。现在回顾一下这个讨论还是值得的：1. Hadoop的稳定性的确不错，比如task tracker经常出现失败，但是绝大多数会被重试后成功。2. Hadoop是离线计算框架，用它来做低延迟的实时性计算肯定是错误的，应该用Spark/Storm等来代替。老实说，慢的可以。绝对不能将其作为互联网应用的直接... 2015-01-27 00:32 阅读 (1641) 评论 (0) newlisp获取bash命令的退出状态 newlisp exec可以执行bash命令，但是返回的状态如何执行呢？特别是我需要监控hdfs dfs -test 返回的结果，经过一番摸索，找到了简单的答案：#!/usr/bin/newlisp (set 'x (exec "hdfs dfs -test -d /user/chenshu;echo $?")) (println "x: " x) (exit)输出结果：x: ("0")... 2014-10-27 22:32 阅读 (1108) 评论 (0) hdfs test 命令 有时候需要写一个脚本测试hdfs中的某个文件或者目录是否存在，比如当接收机发现磁盘分区剩余空间已经到了危险值的时候，需要首先测试一下是否日志已经存入HDFS目录，如果是，则可以删除接收机上的本地日志文件，避免磁盘满的事故。下面是hdfs2.0的test命令介绍：hdfs dfs -help-test -[defsz] : Answer various questions about , with... 2014-10-19 15:59 阅读 (1195) 评论 (0) MapReduce 中的两表 join 几种方案简介 文章写到简洁明快，很好懂。我急http://my.oschina.net/leejun2005/blog/95186... 2014-10-06 10:53 阅读 (1057) 评论 (0) MapReduce 编程 系列十二 用Hadoop Streaming技术集成newLISP脚本 本文环境和之前的Hadoop 1.x不同，是在Hadoop 2.x环境下测试。newLISP脚本，在stdin中读取数... 2014-10-04 21:13 阅读 (1396) 评论 (1) MapReduce 编程 系列十二 Reduce阶段内部细节和调节参数 Reduce计算分为若干阶段1. copy(或者叫shuffle)阶段和merge阶段并行之前Map产生的结果被存放在本地磁盘上，这时需要从reduce节点将数据从map节点复制过来。放得下进内存，比较大的则写到本地磁盘。同时，有两个线程对已经获得的内存中和磁盘上的数据进行merge操作。具体细节是：通过RPC调用询问task tracker已经完成的map task列表，shuffle（洗牌）是... 2014-10-04 13:50 阅读 (1151) 评论 (0) MapReduce 编程 系列十一 Map阶段内部细节和调节参数 MapOutputBuffer对于每一个Map，都有一个内存buffer用来缓存中间结果，这不仅可以缓存，而且还可以用来排序，被称为MapOutputBuffer, 设置这个buffer大小的配置是io.sort.mb默认值是100MB.一般当buffer被使用到一定比例，就会将Map的中间结果往磁盘上写，这个比例的配置是：io.sort.spill.percent默认值是80%或者0.8.在内存... 2014-10-03 23:02 阅读 (1212) 评论 (0) MapReduce 编程 系列十 使用HashPartitioner来调节Reducer的计算负载 example4演示了如何指定Reducer的数量，本节演示如何使用HashPartitioner将Mapper的输出按照key进行分组后交给Reducer来处理。合理的分组策略将使得每个Reducer获得的计算负载差距不大，从而整体reduce的性能更加均衡。Reducer的数量由HashPartitioner函数getPartition返回值来确定。public int getPartitio... 2014-10-03 15:29 阅读 (1670) 评论 (0) MapReduce 编程 系列九 Reducer数目 本篇介绍如何控制reduce的数目。前面观察结果文件，都会发现一般是以part-r-00000 形式出现多个文件，其实这个reducer的数目有关系，reducer数目多，结果文件数目就多。在初始化job的时候，是可以设置reducer的数目的。example4在example的基础上做了改动。修改了pom.xml，使得结束一个参数作为reducer的数目。修改了LogJob.java的代码，作为... 2014-10-03 14:21 阅读 (1152) 评论 (0) MapReduce 编程 系列八 根据输入路径产生输出路径和清除HDFS目录 有了前面的MultipleOutputs的使用经验，就可以将HDFS输入目录的路径解析出来，组成输出路径，这在业务上是十分常用的。这样其实是没有多文件名输出，仅仅是调用了MultipleOutputs的addNamedOutput方法一次，设置文件名为result.先看pom.xml， 现在参数只有一个输入目录了，输出目录会在该路径后面自动加上/output.<project xmlns="htt... 2014-10-02 23:04 阅读 (1108) 评论 (0) MapReduce 编程 系列七 MapReduce程序日志查看 首先，如果需要打印日志，不需要用log4j这些东西，直接用System.out.println即可，这些输出到stdout的日志信息可以在jobtracker站点最终找到。其次，如果在main函数启动的时候用System.out.println打印的日志，直接在控制台就可以看到。再其次，jobtracker站点很重要。http://your_name_node:50030/jobtracker.j... 2014-10-02 18:54 阅读 (1208) 评论 (0) MapReduce 编程 系列六 MultipleOutputs使用 在前面的例子中，输出文件名是默认的：_logs part-r-00001 part-r-00003 part-r-00005 part-r-00007 part-r-00009 part-r-00011 part-r-00013 _SUCCESS part-r-00000 part-r-00002 part-r-00004 part-r-00006 part-... 2014-10-02 18:21 阅读 (1144) 评论 (0) MapReduce 编程 系列五 MapReduce 主要过程梳理 前面4篇文章介绍了如何编写一个简单的日志提取程序，读取HDFS share/logs目录下的所有csv日志文件，然后提取数据后，最终输出到share/output目录下。本篇停留一下，梳理一下主要过程，然后提出新的改进目标。首先声明一下，所有的代码都是maven工程的，没有使用任何IDE。  这是我一贯的编程风格，用Emacs + JDEE开发。需要使用IDE的只需要学习如何在IDE中使用mave... 2014-09-27 20:59 阅读 (1131) 评论 (0) MapReduce 编程 系列四 MapReduce例子程序运行 MapReduce程序编译是可以在普通的Java环境下进行，现在来到真实的环境上运行。首先，将日志文件放到HDFS目录下$ hdfs dfs -put *.csv /user/chenshu/share/logs/ 14/09/27 17:03:22 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your... 2014-09-27 18:05 阅读 (1124) 评论 (0) MapReduce 编程 系列三 编写简单reducer Reduce代码就是做加和统计，package org.freebird.reducer; import java.io.IOException; import org.apache.hadoop.io.IntWritable; import org.apache.hadoop.mapreduce.Reducer.Context; import org.apache.hadoop.mapredu... 2014-09-26 00:27 阅读 (1221) 评论 (0) MapReduce 编程 系列二 编写简单mapper 现在想从日志中提取数据，日志文件如下：2014-05-10 13:36:40,140307000287,536dbacc4700aab274729cca,login 2014-05-10 13:37:46,140310000378,536dbae74700aab274729ccb,login 2014-05-10 13:39:20,140310000382,536dbb284700aab27472... 2014-09-25 23:44 阅读 (1387) 评论 (1) 35条数据 共2页 1 2 下一页 尾页 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript

Recno:: 32
URL:: http://blog.csdn.net/sheismylife/article/category/2186133

ParseText::
c++模板技术 - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 c++模板元编程七：类型判断的traits类 2 用于判断类型的traits类is_void类可以判断模板参数的类型，使用很简单，注意，也可以直接使用::value。cout ::type::value << endl; cout ::type::value << endl; 但是实现很有趣，特化居然可以用来继承不同的类。这里没有去找clang++实现代码，用boost代码代替吧。template struct is_void : publ... 2015-04-06 22:11 阅读 (749) 评论 (0) c++模板元编程六：integral_constant 类 1 integral_constant类这个类是所有traits类的基类，分别提供了以下功能：value_type 表示值的类型value表示值type 表示自己, 因此可以用::type::value来获取值true_type和false_type两个特化类用来表示bool值类型的traits，很多traits类都需要继承它们下面的代码分别来自C++11和Boost，略有差别：C++11包含va... 2015-04-06 18:23 阅读 (650) 评论 (0) c++模板元编程五：switch/case语句编译时运行 2.4 switch/case 替代现在模拟switch/case语句，不过也是在编译期运行。先看调用代码和输出结果// test case cout << "test case" << endl; Case::Run(); test case case 2 实现代码很简单，还是模板特化template class Case { public: static inline void Run()... 2015-04-05 20:55 阅读 (660) 评论 (0) c++模板元编程四：IF语句编译时运行 2.3 if 替代将if语句放在编译期执行，可以用模板特化的方式实现。下面是调用代码：// test if cout << "test if" << endl; If::Run(); 输出结果为：test if it's false 模板类的实现如下：template class If { public: static inline void Run() { cout << "it's... 2015-04-05 16:41 阅读 (708) 评论 (0) c++模板元编程三：循环展开 2.2 loop unrolling 循环展开前面enum一节介绍的是和template联合，引发编译器递归的奇妙作用。template本身无需enum配合也可以达到递归的效果。// test template recursive for loop unrolling cout << "test 2: template recursive for loop unrolling" << en... 2015-04-05 16:29 阅读 (711) 评论 (0) c++模板元编程二：用enum做数值计算 2.1 用enum做数值计算下面两篇文章都介绍了模板元编程，enum是其最重要的基本工具 http://www.codeproject.com/Articles/3743/A-gentle-introduction-to-Template-Metaprogramming https://www10.informatik.uni-erlangen.de/~pflaum/pflaum/ProSemin... 2015-04-05 16:26 阅读 (684) 评论 (0) c++模板元编程一：基本概念 1 基本概念1.1 meta program 元程序可以用meta program生成object program, 也可以object program作为数据看待，从而组装出更大的object program 元程序是处理程序的程序，如大家熟悉的编译器、解释器、类型检查器、定理证明器、程序生成器、转换系统和程序分析器等等1.2 object program 目标程序目标程序，又称为“目的程序”，... 2015-04-05 16:24 阅读 (618) 评论 (0) C++ 转换成 JSON 经常有朋友问我如何将C++对象转换成JSON格式字符串。我的回答通常是CppCMS中的json::value. 我也写过一篇文章介绍该技术。但是最近有些不同的想法。因为用到一个vector > 数据结构，json::value不支持这个模板特化。同时也发现json::value的设计思想是将所有的c++对象存储在std::map中，然后再导出为json字符串。但是在我开发的和看到的很多web se... 2012-09-08 17:15 阅读 (6943) 评论 (1) 模板实参推断 定义：从函数实参确定模板实参的类型和值的过程叫做模板实参推断　《C++ Primer 4th》举例 template//模板类型形参int compare(const Glorp& v1,const Glorp& v2)//函数形参{ if(v1 {  return -1; } if(v2 {  return 1; } return 0;}int _tmain(int argc,... 2006-08-20 21:12 阅读 (3040) 评论 (0) 个人资料 sheismylife 访问： 3247676次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 33
URL:: http://blog.csdn.net/sheismylife/article/category/2226001

ParseText::
Android - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 在Maven项目中使用Android Support Library 参考这篇博客，对于兼容性还是很有用的。在Maven项目中使用Android Support Library... 2014-11-29 22:00 阅读 (936) 评论 (0) 用命令行方式升级Android SDK 为什么用命令行？因为google站点国内很难访问，用Android SDK Manager下载很麻烦。但是我有美国的服务器，用命令行可以升级SDK，然后复制下来。1. 安装javaUbuntu 13.10 安装Oralce JDK2. 下载Android SDKwget http://dl.google.com/android/android-sdk_r23.0.2-linux.tgz 解压后，进... 2014-11-26 00:37 阅读 (2838) 评论 (1) Android apk file apk file 其实就是zip文件， 可以将其重命名为zip文件，然后用unzip命令解压。unzip example1.apk -d ./example_dir tree . ├── AndroidManifest.xml ├── classes.dex ├── META-INF │   ├── CERT.RSA │   ├── CERT.SF │   └── MANIFEST.MF ├──... 2014-05-03 11:35 阅读 (1497) 评论 (0) Failed to load libGL.so问题解决 Ubuntu 14.04下启动模拟设备Android 4.2.2的时候报错：failed to load libgl.so先用locate 命令定位libGL库， 然后添加一个链接即可：dean@dean-Aspire-V7-481G:~$ locate libGL /opt/android-sdk-linux/tools/lib/libGLES_CM_translator.so /opt/and... 2014-05-02 19:27 阅读 (2416) 评论 (0) Emacs用JDEE编写Android程序 前文介绍了如何用Maven构建Android工程，现在进一步介绍如何使用JDEE编写程序。Ubuntu 14.04 Android 使用Maven二 创建自己的Maven工程如何安装JDEE可以参考之前的文章：Emacs 24.3 配置JDEE首先要安装一个m2jdee的插件，能够根据maven的pom.xml中的配置生成jdee所需的prj.el文件。获取该项目：git clone git@gi... 2014-05-01 15:40 阅读 (1904) 评论 (0) Emacs 使用android模式 首先用package system安装android-mode, 然后编辑~/.emacs.d/init.el文件，添加下面几行：(require 'android-mode) (setq android-mode-sdk-dir "/opt/android-sdk-linux/")现在重新启动emacs，然后M-x 中运行命令android-start-emulator此时会提示输入Androi... 2014-05-01 08:55 阅读 (1715) 评论 (0) Ubuntu 14.04 Android 使用Maven二 创建自己的Maven工程 根据https://code.google.com/p/maven-android-plugin/wiki/GettingStarted 介绍，有两种方法可以创建Maven工程。第一种方法是用archetype， 但是我使用了之后，发现archetype产生的项目编译时有一个依赖找不到，不管了，先换其他方法。第二种方法就是使用android命令行创建项目，然后复制例子代码工程的pom文件并修改，U... 2014-04-30 14:22 阅读 (1758) 评论 (0) Ubuntu 14.04 Android 使用Maven一 使用例子工程 前文描述的是在SDK下用Ant开发， 本文在此基础上尝试用Maven开发。这里需要用到maven-android-plugin。本文主要参考官方文档： https://code.google.com/p/maven-android-plugin/wiki/GettingStarted首先从这里下载例子工程：https://code.google.com/p/maven-android-plugin... 2014-04-29 21:05 阅读 (2053) 评论 (1) Ubuntu 14.04 设置Android开发环境 本文只安装ndk，不安装什么IDE，因为我只需要命令行模式开发即可。首先安装openjdk 1.6，然后安装ant，这个不赘述。从这里下载NDK for Linux 64bit的版本: http://developer.android.com/tools/sdk/ndk/index.html下载后，解压到本地目录，比如/opt/目录下， 然后设置环境变量，添加三行到~/.bashrc文件expor... 2014-04-27 21:58 阅读 (4365) 评论 (5) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 34
URL:: http://blog.csdn.net/sheismylife/article/category/234882

ParseText::
c++语言 - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 centos 6.6 安装 gcc 4.9.1 不用编译，执行下面三步即可cd /etc/yum.repos.d wget http://linuxsoft.cern.ch/cern/scl/slc6-scl.repo yum -y --nogpgcheck install devtoolset-3-gcc devtoolset-3-gcc-c++... 2015-09-24 23:25 阅读 (857) 评论 (0) c++11 函数内部返回对象使用move语义的最佳实践 一句话，直接返回即可，不用任何变化。当启动了c++11选项后，通过函数返回代码没有发生任何变化，但是已经使用了move语义，而不需要之前的NRVO编译器优化技术。下面是stackoverflow上的一个讨论贴，比较有价值：246down voteacceptedFirst examplestd::vector return_vector(void) { std::vector tmp {1... 2015-04-12 21:28 阅读 (722) 评论 (0) clang++ 优化返回代码NRVO clang++会自动优化函数返回代码，无论是c++11标准还是之前的标准。下面是例子：注意，clang++ 3.5默认编译选项不是c++11 c++ --version Ubuntu clang version 3.5.0-4ubuntu2 (tags/RELEASE_350/final) (based on LLVM 3.5.0) Target: x86_64-pc-linux-gnu Thre... 2015-04-11 23:22 阅读 (683) 评论 (0) JSON中双引号的轮回 1. 如果JSON对象中有属性是包含双引号的，比如{"description": "25""}如果转换成字符串形式，将自动加上反斜线，变为"25\"", 然后传递给REST API，保存到MongoDB中。此时如果使用MongoDB的shell显示该数据，为"25\"", 正确。void string_to_json_string(std::string const& str, std::stri... 2014-03-03 16:45 阅读 (2771) 评论 (0) 用twitcurl C++库访问Twitter REST API 1.1 首先获得最新的代码：svn checkout http://twitcurl.googlecode.com/svn/trunk/ twitcurl-read-only进入twitcurl-read-only/libtwitcurls目录后，运行make编译如果找不到curl/curl.h文件，则安装curl的开发库sudo apt-get install libcurl4-openssl-devm... 2014-01-20 13:53 阅读 (2333) 评论 (0) 试用valgrind 今天，我试着用一下valgrind来分析我的c++程序。先下载最新版本wget http://valgrind.org/downloads/valgrind-3.9.0.tar.bz2解压tar jxvf valgrind-3.9.0.tar.bz2然后进入目录并编译安装cd valgrind-3.9.0 ./configure make make install安装运行时需要的库apt-get ... 2013-12-04 15:16 阅读 (1793) 评论 (0) 两个在线编写C++代码的网站 第一个支持的编程语言很多，首推http://ideone.com/第二个简单了点，不过可以通过email分享给朋友http://codepad.org/试一试，可以用这两个网站提高自己编写代码的能力，在没有那么多重量级IDE的环境下。... 2013-11-17 21:33 阅读 (2808) 评论 (0) Raphael hover事件使用 解决Raphael的hover参数传递的问题。... 2013-10-26 14:27 阅读 (2045) 评论 (0) c++程序在Ubuntu 13.10上链接mongodb报错 在最新的Ubuntu13.10上，用编译器clang3.4编译我原来的程序，出现错误：c++ -g /home/likewise-open/CHN/shu6889/.private/windtunnel/code/site/builder/object/site_response.cc.o /home/likewise-open/CHN/shu6889/.private/windtunnel/co... 2013-10-21 12:58 阅读 (3369) 评论 (0) MongoDB存储时间 MongoDB C++写入和读取时间... 2013-09-15 12:02 阅读 (2741) 评论 (0) Linux CPU 负载度量公式 一个top命令不就行了么？顶多再加一些管道什么的过滤一下。我一开始也是这么想得。其实还可以理解的更多。首先一个问题，是统计某个时间点的CPU负载，还是某个时间段的？为了画折线图报表，一般横坐标都是某个时间点，也就是希望能够统计某个时间点的CPU负载，但这是很难办得到的。比较容易的做法是通过两个时间点之间的CPU负载，也就是某个时间段。如果要做benchmark，就把时间段变得很小，1秒甚至更小。如... 2013-09-14 19:02 阅读 (2324) 评论 (0) c++11 enum class c++ 11的enum class... 2013-09-14 00:20 阅读 (5278) 评论 (0) Ubuntu上用premake编译GDAL premake编译GDAL... 2013-09-12 16:42 阅读 (1706) 评论 (0) premake 在64位Ubuntu系统下编译32位GCC程序 premake在64位Ubuntu编译gcc/clang 32位程序... 2013-09-09 17:14 阅读 (3632) 评论 (0) premake管理一个solution和多个project的目录树 前文premake基本配置详解只是介绍了基本的配置，一个solution包含一个project，且project没有自己的目录，生成的makefile也都在solution目录下。但是实际工作中，显然需要更多：1. 所有的project代码都应该放在自己的目录下2. premake生成的makefile需要专门放在build目录下，和cmake类似3. 最后编译出来的binary，应该放在outp... 2013-09-06 13:33 阅读 (2322) 评论 (0) premake基本配置详解 前文premake在Ubuntu和GCC环境下创建简单的C++工程中举了一个例子，虽然能work，但是并不是很了解。后来花了点时间看了lua的语法，自以为理解了，再回头来看，发现还是有些不懂。现在明白了，premake虽然基于lua，但是也有自己的一些语法。标准的lua语法在premake中是肯定可以用的。premake自己的语法要参考文档：http://industriousone.com/sc... 2013-09-05 14:26 阅读 (2194) 评论 (0) premake 使用clang替换gcc premake with clang... 2013-09-03 17:10 阅读 (2466) 评论 (1) premake在Ubuntu和GCC环境下创建简单的C++工程 由于premake基于lua脚本，为了方便编辑lua脚本，我在emacs24中利用package system安装了lua-mode。然后创建config.lua文件，填入下面这段，主要来自：http://industriousone.com/basic-script-- A solution contains projects, and defines the available configu... 2013-09-03 15:16 阅读 (2294) 评论 (1) premake Ubuntu下的安装 premake是个跨平台的编译工具，先看看在Ubuntu下怎么安装。首先下载，在/usr目录下：sudo wget -O premake-4.4-beta4-linux.tar.gz http://sourceforge.net/projects/premake/files/Premake/4.4/premake-4.4-beta4-linux.tar.gz/downloadtar zxvf pr... 2013-09-03 14:37 阅读 (1639) 评论 (0) 用NMAKE创建VS2012 C++工程三 自动编译所有的cpp文件 在step2的基础上，继续改进1. 需要检测如果所需目录不存在，能够自动创建之因为git commit会略过空目录，如果下次从别的机器上git clone这个项目的时候，bin, obj这些目录是不存在的。使用@if not exist判断，用mkdir 创建目录2. 需要一个clean pseudotarget用来删除不需要的目录，让项目还原到刚clone下来的状态使用@if exit判断，用r... 2013-08-28 11:27 阅读 (2131) 评论 (0) 96条数据 共5页 1 2 3 4 5 ... 下一页 尾页 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 35
URL:: http://blog.csdn.net/sheismylife/article/category/2414175

ParseText::
storm - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 storm 远程提交任务 远程提交任务还是十分必要的，如果有一个storm集群用于调试（有点奢侈，但是必要），可以从本地开发机器上直接提交topology. 在生产环境下，通常我们通过Jenkins编译代码，然后提交到storm集群，这也是远程提交的一种方式。这样，开发团队不会直接和storm线上环境打交道，保证了集群的安全性。基本原理是，通过运行本地的storm.jar和远程storm集群的nimbus通信，将任务（to... 2015-11-02 18:09 阅读 (800) 评论 (0) storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs 要说storm程序最常用的数据源，自然是kafka，storm通常用来进行各种实时统计，但是也会顺带将从kafka读取的数据顺带写入hdfs，根据我的经验，这几乎是必须的功能。所以本次程序就是实现读取kafka数据，然后写入hdfs。但是最大的不同是，这是clojure版本，而不是java版本。下面分别说明project配置project.clj文件包含了依赖项：(defproject kafka... 2015-10-30 22:49 阅读 (843) 评论 (1) storm社区相关网站和资料 storm官方网站站点地址：http://storm.apache.org/文档列表：http://storm.apache.org/doc-index.htmlstorm clojure相关clojure dsl用clojure测试topologystorm社区站点地址：http://storm.apache.org/community.html开发者邮箱组：dev@storm.apache.o... 2015-10-18 16:22 阅读 (731) 评论 (0) storm 开发系列二 Clojue版本 对于第一个简单的topology，现在用clojure实现一遍。正好可以对比一下。创建工程用lein app模板创建工程demo$ lein new app hello_storm_clj Generating a project called hello_storm_clj based on the 'app' template.注意，app是lein提供的模板名称，以下是所有模板Subtask... 2015-10-17 19:37 阅读 (747) 评论 (0) storm 开发系列一 第一个程序 本文将在本地开发环境创建一个storm程序，力求简单。首先用mvn创建一个简单的工程hello_stormmvn archetype:generate -DgroupId=org.csfreebird -DartifactId=hello_storm -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false编辑... 2015-10-13 22:38 阅读 (673) 评论 (0) Storm 术语与概念 storm里面有很多术语，这些概念需要清晰的理解，下面是个人的一点心得。2 topologystorm jobtopology一直运行，不会终止由spout和bolt组成DAG3 stream一堆tuple的并发分布式处理流一个topology中可以包含若干个streams4 component包含spout 或者 bolt5 spoutstream的源头reliable spout可以在处理失败... 2015-10-13 18:28 阅读 (492) 评论 (0) storm 开发环境搭建 文档资料storm提供了local mode(本地开发环境)，便于调试，现在试一下。参考官方文档没有那么复杂，本地开发调试只需要使用maven依赖storm库，就能够在本地进程中模拟运行你的storm topology程序。从github的例子开始获取github上的官方例子代码git clone git://github.com/apache/storm.git && cd storm/然后编译... 2015-10-13 18:24 阅读 (498) 评论 (0) storm集群使用经验 本文会不断完善，今天开个头slot数量配置slot就是worker, 就是worker machine上的可运行的进程数，每个进程监听一个端口号。整个集群的slot的总数 = 所有supervisor上的监听端口port的数目之和建议是CPU总核数 - 1 。在24核服务器上，port数目应该最大是23才对。下面是20个的配置如下：supervisor.slots.ports: -... 2015-09-30 10:28 阅读 (488) 评论 (3) storm 集群部署 前提条件安装了python 2.6.6和java 8创建帐号这个帐号是storm服务使用，将来也会成为HDFS的用户帐号之一。useradd dean创建公钥su - dean ssh-keygen -t rsa -P '' 下载并解压wget https://github.com/apache/storm/archive/v0.10.0-beta1.tar.gz tar zxvf v0.10.... 2015-09-29 11:27 阅读 (603) 评论 (1) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 36
URL:: http://blog.csdn.net/sheismylife/article/category/2905709

ParseText::
zookeeper - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 zookeeper 只能本地访问的问题解决方法 当完成了zookeeper配置，发现只能在本地访问，不能在其他机器上指定通过hostname访问访问，原因是在/etc/hosts里面有这样的配置127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 10-149-11-146原因是zookeeper监听hostname10-149-11-146... 2015-09-23 23:14 阅读 (673) 评论 (0) zookeeper shell终端使用 前面已经成功部署了zookeeper quorum, 现在来试用一下。在第四台机器上，同样下载解压zookeeper, 这次不需要部署，仅用自带的Java程序连接zookeeper服务, C程序也可以，不过要编译，具体参考src/c/README进入目录后执行命令连接/zkCli.sh -server zkc:2181键入help命令：help ZooKeeper -server host:por... 2015-03-03 12:53 阅读 (785) 评论 (0) zookeeper replicated模式 standalone适合开发，因为是单机，因此不能作为产品环境使用。... 2015-03-02 23:47 阅读 (724) 评论 (0) zookeeper standalone模式安装 首先需要安装jdk，参考之前的文章：Ubuntu 13.10-14.10 安装Oralce JDK然后下载最新稳定版本到/opt目录/opt$ wget http://mirrors.cnnic.cn/apache/zookeeper/stable/zookeeper-3.4.6.tar.gz解压目录：tar zxvf zookeeper-3.4.6.tar.gz 解压后的目录结构为：/opt/z... 2015-03-01 22:15 阅读 (744) 评论 (0) zookeeper应用场景 zookeeper采用了fast paxos算法，该算法比paxosa算法好的地方是解决了几个proposer交替发出提案，导致没有一个提案被批准的活锁问题。为什么需要zookeeper？我想有以下几个应用场景：1. 配置管理如果我们有很多服务程序需要有一些配置信息，可以保存在zookeeper的对应的znode中。zookeeper保证多个服务器同时对znode里面信息的修改是一致的。当然也可以... 2015-02-28 13:32 阅读 (1299) 评论 (0) Paxos算法介绍 Paxos算法是为了实现分布式环境中为保证数据的一致性而设计的，在一个分布式系统中，通过投票的方式来确定一个值（决议）。只不过这个步骤分为两步：准备阶段(prepare)和批准阶段(accept)。同时又分为若干角色，以下都可以兼任。proposer 信使acceptor 决策者learner 学习者（学习最终决策）准备阶段：一个proposer向多个acceptor发出提案，每个提案有一个数字编... 2015-02-28 00:42 阅读 (845) 评论 (0) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 37
URL:: http://blog.csdn.net/sheismylife/article/category/3080751

ParseText::
c++编译 - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Ubuntu 15.04 clang++ 3.6 编译boost 1.59/1.55 Ubuntu 15.04已经可以直接通过apt-get insall 安装clang 3.6, 并且预装的gcc版本是4.9.2。这些安装过程在这里介绍。首先下载boost源码wget -O boost.1.59.tar.bz2 http://sourceforge.net/projects/boost/files/latest/download?source=files解压tar jxvf ./... 2015-10-03 12:44 阅读 (1243) 评论 (0) newLISP C++编译示范工程cppwizard v1.2.0发布 项目代码在gitlab.com上git@gitlab.com:newlisp/cppwizard.git该项目包含了两个工程，一个是console，普通的C++ 11工程，另一个是cppcms_base，是基于cppcms的web工程。注意，默认配置的是clang编译器，cppcms库需要先安装。newLISP显然是需要事先安装的。目前仅支持linux系统。每个工程目录下都有一个builder目录... 2015-01-02 14:32 阅读 (814) 评论 (0) Ubuntu 13.10 安装GCC 4.8.2报错 参考前文安装GCC4.8, 始终报错:The following packages have unmet dependencies: gcc-4.8 : Depends: binutils (>= 2.23.90.20131017) but 2.23.52.20130913-0ubuntu1 is to be installed最后找到方法了:http://askubuntu.com/quest... 2014-04-07 00:57 阅读 (2018) 评论 (0) 用GCC或者Clang观察预处理后的C++代码 预处理的各种宏在C++中普遍使用，有时候宏的嵌套层次让人很难一下在看出真正的代码，有什么工具能帮忙么？GCC的-P -E 参数可以解决这个问题，下面的命令是一个例子，同样可以用在Clang中，因为Clang支持GCC所有参数。c++ -E -P -std=c++11 -Wall -DBOOST_LOG_DYN_LINK -c ./main.cc >> main.output特此记录，以后观察第三方... 2014-03-02 13:33 阅读 (2190) 评论 (0) gcc 或clang调试时No symbol "foo" in current context. 在gdb里面运行一个简单的函数，经常会看到No symbol ... in current context.原因是虽然是-g编译，但是有些默认优化会阻止执行函数。解决方法是加入选项：-gstabsqmake中如下配置：QMAKE_CXXFLAGS += -gstabs... 2014-01-17 14:39 阅读 (1959) 评论 (0) cppcms 1.0.4 clang 3.3 编译错误 错误信息：In file included from /usr/src/cppcms-1.0.4/cppcms_boost/cppcms_boost/interprocess/managed_external_buffer.hpp:21: /usr/src/cppcms-1.0.4/cppcms_boost/cppcms_boost/interprocess/detail/managed_memo... 2013-12-02 13:42 阅读 (1947) 评论 (0) Ubuntu 12.04 安装clang 3.3 首先是到这里下载预编译好的文件http://llvm.org/releases/download.html#3.0wget http://llvm.org/releases/3.3/clang+llvm-3.3-amd64-Ubuntu-12.04.2.tar.gz然后解压，进入目录，运行命令：cp -R * /usr/修改c++链接ln -s /usr/bin/clang++ /etc/alte... 2013-12-02 13:14 阅读 (5437) 评论 (1) 用clang3.4编译boost1.55 首先编译安装最新的boost 1.55库，# wget -O boost_1_55_0.tar.bz2 http://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fboost%2Ffiles%2Fboost%2... 2013-12-02 11:56 阅读 (3025) 评论 (0) Ubuntu 12.04 安装 clang3.2 执行下面的命令：sudo add-apt-repository ppa:georgekola/clang sudo apt-get update sudo apt-get install clang-3.2 clang-3.2-doc修改链接rm /etc/alternatives/c++ ln -s /usr/bin/clang++ /etc/alternatives/c++检查一下：c++ -... 2013-12-01 18:16 阅读 (2573) 评论 (0) C++程序作为Linux服务启动时出core的位置 首先，要确保生成core，需要运行命令ulimit -c unlimited这个在脚本中设置还是很简单的，比如在/etc/init.d/data_service脚本中：PROGRAM=/home/dist/tcp/data_service_d test -x $PROGRAM || exit 0 case "$1" in start) log_begin_msg "Starti... 2013-09-24 12:03 阅读 (1967) 评论 (0) 使用Linux静态库 查看静态库.a文件包含的内容用下面的命令解压： ar x libgdal.a然后就可以查看文件了：ls adler32.o cpl_recode.o dted_create.o gdalpamrasterband.o geo_write.o nitfimage.o tif_fax3sm.o... 2013-09-16 17:11 阅读 (1697) 评论 (0) Ubuntu 13.04 安装使用clang 其实很简单，就是用命令即可：apt-get install clang-3.2 clang-3.2-doc主要说明一点，/usr/bin/c++链接原来只想g++，现在被改变了。$ ls /usr/bin/c++ -alh lrwxrwxrwx 1 root root 21 8月 19 20:38 /usr/bin/c++ -> /etc/alternatives/c++ $ ls /etc/a... 2013-09-14 15:29 阅读 (6245) 评论 (4) -std=gnu++11 导致的问题 今天打算在自己新的C++工程中启用C++11, 到时候了，该全面升级了。编译器是GCC4.8.1, 查看官方文档：http://gcc.gnu.org/onlinedocs/gcc-4.8.1/libstdc++/manual/manual/using.html#manual.intro.using.flags看到可以使用的选项是-std=gnu++11,结果编译报错，都是：/usr/bin/..... 2013-09-13 20:57 阅读 (3161) 评论 (0) gcc中不同namespace中同名class冲突时 GCC编译模板的不靠谱报错信息... 2013-08-29 09:56 阅读 (1834) 评论 (0) 普通Windows控制台窗口运行nmake编译VC 我的GDAL编译都是在VS2012提供的prompt windows里面运行nmake完成的。但是如果想将编译自动化，放到Jenkins里面怎么办呢？首先没有VS2012的工程，也不想费力去生成一个，那是绕圈。其实只需要解决一个问题，为什么不能在普通的windows command prompt窗口运行nmake。那是因为nmke的路径没有加载环境变量里面，好吧，那就手动加到PATH中。继续，因为... 2013-08-20 15:41 阅读 (2139) 评论 (0) 如何判断windows程序是32还是64位 如果安装过VS2012的话，直接打开一个VS 2012提供的控制台窗口，比如VS2012 x64 Native Tools Command Prompt.用下面的命令查看程序的头部信息：gdal_1.8_rtc>dumpbin /HEADERS gdal18.dll Microsoft (R) COFF/PE Dumper Version 11.00.60610.1 Copyright (C) M... 2013-08-20 13:58 阅读 (2922) 评论 (1) 理解runtime system 最近需要编译不同平台的库，因此比以前只开发C++程序关注底层更多点。先来看看术语runtime system的解释。主要参考资料：http://en.wikipedia.org/wiki/Runtime_systemruntime system有时候就简称runtime, 但是runtime字面意义是运行的时候发生的事情，范围很广。所以我这里仍然用runtime system.无论什么计算机语言，... 2013-08-19 14:32 阅读 (1956) 评论 (0) 改进的newlisp编译脚本，只需要配置 前面有一篇Say bye to CMake and Makefile我开始用自己编写的newlisp脚本替代CMake，今天对前面的进行改进。改进部分是：1. newlisp armory模块的引入和初始化 部分可以重用2. 将头文件所在目录，cpp或者cc文件所在目录以及依赖库名称等 作为配置单独抽出来，可以根据不同的项目进行配置现在看改过后的代码：rebuild.lsp是主要执行脚本#!/us... 2013-08-17 21:55 阅读 (1430) 评论 (0) VS 2012 显示Link的参数 VC 通过Link将cl编译出来的.obj文件链接到一起。不过默认设置还是看不到究竟是怎么做的。需要如下设置：右键点击工程，选择Properties菜单，然后选择左边的Linker->General,然后看右边，将Suppress Startup Banner设置为No.现在重新编译工程，可以看到类似下面的信息：1>Link: 1> Microsoft (R) Incremental Linke... 2013-08-06 16:25 阅读 (1638) 评论 (0) 常用cl编译命令参数解释 cl命令参数解释... 2013-08-05 18:01 阅读 (2300) 评论 (0) 30条数据 共2页 1 2 下一页 尾页 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 38
URL:: http://blog.csdn.net/sheismylife/article/category/5859241

ParseText::
c++ 11 - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 基本原子操作 Table of Contents1. 处理器支持的一系列原子操作1.1. CAS(Compare And Swap/Set)1.1.1. 函数原型1.1.2. 实现逻辑1.1.3. C++11标准库1.2. Fetch And Add1.3. Test And Set1 处理器支持的一系列原子操作1.1 CAS(Compare And Swap/Set)详细内容参考 wiki, 下面是我的理解1... 2015-12-15 23:19 阅读 (528) 评论 (0) c++11 函数内部返回对象使用move语义的最佳实践 一句话，直接返回即可，不用任何变化。当启动了c++11选项后，通过函数返回代码没有发生任何变化，但是已经使用了move语义，而不需要之前的NRVO编译器优化技术。下面是stackoverflow上的一个讨论贴，比较有价值：246down voteacceptedFirst examplestd::vector return_vector(void) { std::vector tmp {1... 2015-04-12 21:28 阅读 (722) 评论 (0) c++11 enum class c++ 11的enum class... 2013-09-14 00:20 阅读 (5278) 评论 (0) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 39
URL:: http://blog.csdn.net/sheismylife/article/category/5892577

ParseText::
c++ network - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 C++网络通信库性能大比拼 C/C++网络通信库有不少，本次benchmark的目的是为了公平的评估它们的网络I/O性能，当然是作为REST server, 因此每个server都写了一些代码，好在不是特别复杂。这个测试经过了好几轮，本文给出了最终的结论。先上结论，大家都忙：）候选者：cppcms, boost asio, libevent, muduo和 nginx，nginx不是库，这里做测试使用它作为基准，毕竟很多人心... 2015-10-20 22:27 阅读 (1931) 评论 (1) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 40
URL:: http://blog.csdn.net/sheismylife/article/category/5937155

ParseText::
spark - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 spark-shell客户机设置 本文介绍spark集群客户机的设置安装程序spark集群是standalone集群在root帐号下，从spark集群的master上复制spark1.5.2的安装包到目录下，这样配置文件就已经复制过来，其实主要是zookeeper的配置。owner为root，group和other用户都是可以读和运行drwxr-xr-x 14 root root 4.0K Nov 16 11:48 spar... 2015-11-19 15:56 阅读 (595) 评论 (0) spark sql 创建dataframes Table of Contents1. spark sql2. SQLContext2.1. sql context是spark sql的所有功能入口点2.2. 通过spark context创建sql context2.3. hive context功能上多于sql context，未来sql context也会增加功能3. DataFrames3.1. 功能3.2. 创建DataFrames3... 2015-11-11 22:43 阅读 (893) 评论 (0) spark 通过 RDD 从HDFS文件加载JSON文件到sql表 RDD定义RDD全称是Resilient Distributed Dataset, 是spark的核心抽象层，通过它可以读取多种文件，这里演示如何读取hdfs文件。所有spark的工作都是发生在RDD上，比如创建新的RDD，转换已有的RDD，对现有的RDD计算求得结果。RDD在spark中是不可变的(immutable)对象集合，RDD可以被划分成多个分区，存放在不同的节点。创建RDD有两种方法，... 2015-11-10 23:39 阅读 (832) 评论 (0) Spark standalone集群安装 本文不会搞什么Yarn混搭Spark，只想建立一个纯粹的Spark环境，太多层东西搅和在一起，不靠谱。创建spark服务运行帐号# useradd smilesmile帐号就是spark服务的运行帐号。下载安装包在root帐号下，下载最新安装包，注意不是source，而是bin安装包，支持hadoop2.6以后的wget http://mirrors.cnnic.cn/apache/spark/s... 2015-11-08 22:52 阅读 (1210) 评论 (0) 个人资料 sheismylife 访问： 3247667次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 41
URL:: http://blog.csdn.net/sheismylife/article/category/5978481

ParseText::
数据分析理论与实践 - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 数据分析的道与术 Table of Contents1. 数据分析的道与术1.1. 道1.2. 术2. "智能大数据SMART准则"的总章-制定智能战略2.1. 制定智能战略2.1.1. 困境从来就存在2.1.2. 大公司与小公司2.1.3. 无论企业大小，建立智能业务要从战略开始2.1.4. 从战略目的出发，只生产所需数据2.1.5. SMART战略模板1 数据分析的道与术1.1 道指的是发挥数据价值的整体逻辑思... 2015-11-24 21:46 阅读 (778) 评论 (1) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 42
URL:: http://blog.csdn.net/sheismylife/article/category/6022323

ParseText::
thrift - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 用C++编写thrift第一个例子 Table of Contents1. 创建thrift文件2. 生成C++代码3. 编写C++客户端代码4. 例子项目4.1. 项目目录4.2. 编译服务端4.3. 编译客户端4.4. 运行1 创建thrift文件thrift文件非常简单,一个WorkerManager提供了一个ping方法,让客户端通过RPC方式远程调用,模拟icmp协议的ping,看看服务端是否正常.# worker.thr... 2015-12-15 18:19 阅读 (513) 评论 (0) ubuntu thrift 0.9.3编译安装 Table of Contents1. 下载thrift源代码2. 编译并安装3. 运行测试程序4. 安装1 下载thrift源代码git clone https://git-wip-us.apache.org/repos/asf/thrift.git thrift git checkout 0.9.3 2 编译并安装安装依赖apt-get install automake apt-get ins... 2015-12-14 13:42 阅读 (514) 评论 (0) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 43
URL:: http://blog.csdn.net/sheismylife/article/category/732542

ParseText::
田金龙太极拳法 - Dean Chen的专栏 - 博客频道 - CSDN.NET Dean Chen的专栏 乐视大数据部招聘C++/Java工程师(chenshu@letv.com) 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 前后摆的空 今天和同事练习的时候又有进步。基于一个思考，如果用前后摆就是想将人放倒，其实就是两个步骤：1. 悬腰续劲，同时空对方2. 发劲因此空手训练时双手先做放在对方胸口的准备姿势，然后悬腰，发放。前后两个动作衔接很快。有人训练时能体会到进步。同事双手环抱在胸前，自然站立，前后脚略分开。我双手自然挂在对方身上，所谓挂，是因为松肩坠肘。这样就自然产生一点点的下坠的力道作用于对方身上。是的，就这么一点点就够了。... 2013-11-20 00:06 阅读 (2895) 评论 (2) 太极拳透劲的原理推测 在太极拳世界里，我观察到几个现象：1. 央视解密陈氏太极拳节目中，张志俊（陈氏十一代传人），用测力仪测试，他的力量是几个测试者中最弱的。但是当和比他身强力壮的人面对面互击胸口一拳时，难受的都是对方。对主持人胸口一拳，主持人肚子疼。2. 田金龙老师对穿戴护具的学生一记力量不重的击打，就让对方非常难受。这说明透劲是一种能够渗入物体内部的力量，一旦进入人体，引起内脏器官的震荡，相当的难受。打中头部，直接... 2013-11-13 22:38 阅读 (3383) 评论 (9) 前后摆发力 今天前后摆的发劲终于腿上能够发出力了。居然是平时协调性最差的右腿先发上了劲。准备动作，不需要做完整的前后摆动，直接两脚前后分开，身体处在中间位置，不需要太精确。1.注意右腿在后，右脚前脚掌着地，稍微外旋点，使得大脚趾后面撑着地面2.悬腰，弓背，蓄劲在腰，手臂和腿部发送。发力动作：1和2最重要。1. 胯部往下落，带动整个身体迅速往下夯。注意绝不是弯腿带动身体下落，这个动作就是上下摆的夯。可以略带前下... 2013-11-12 20:57 阅读 (1980) 评论 (1) 空劲的方法与运用 http://www.taijiclub.net/thread-1257-1-2.html在谈及太极劲时，田老师还讲述了空劲的方法与运用问题：空是空间，空劲是获得空间的内收之劲。空劲如同收缩的球，从大球到小球的过程中产生了一个空间，充分利用这个空间可以为引化与发放创造有利的条件。以球为喻是为了强调收劲的完整性，这样可以使全身的配合更加协调、动作更加干净。在松随中增加一个空劲，可以使对方产生一个落空... 2013-10-20 19:19 阅读 (1764) 评论 (0) 太极拳的动作结构剖析 http://www.taijiclub.net/thread-1537-1-1.html对于太极拳的动作结构，田老师作了如下剖析：仔细剖析一下太极拳的动作结构，可以发现太极拳有两种基本的动作方式：摇转与摆动。摇转如推磨、摇马达，摇转中练出了转动力与牵动力，对抗中可以有效地引化对方的攻击力；摆动如钟摆、如抖绳，摆动中练出了惯性的冲击力与弹性的爆发力，对抗中可以获得强大的攻击力。在发放过程中，摇的前... 2013-10-20 19:07 阅读 (1364) 评论 (0) 引进落空的解释 转载自：http://www.taijiclub.net/thread-1238-1-2.html田老师说，发放过程由四个环节构成，即：一个发放过程看似一个动作，其实是由四个环节构成，其中任何环节上出了问题，都会造成发放过程的失败，因此，在发放技巧上发放过程就包含四个连续的步骤。从接手开始，分别经过引化、进逼、落空、发放。引化：引开对方的攻击力点与力线。进逼：贴近对方，用力量或气势逼迫对方在被动条... 2013-10-20 18:32 阅读 (1343) 评论 (0) 对前后摆发力的讨论 段时间终于工作不太忙了，开始琢磨太极，可惜的是田老师已经离开扬州了，以后回家乡没法当面询问。先声明本人不是高手，这里只代表我个人琢磨的观点。之所以拿出来是为了和大家讨论，欢迎发表评论，道理总是越说越明白。本人是软件工程师，对于文言文能看的懂，但是对于用文言文解释太极拳的做法不大赞同，因为这些看上去很美的词藻，其实不利于知识在初学者之间的传播，增加了很多误解，曲解的机会。当然内行的人可以用这个来互相... 2013-10-20 10:01 阅读 (1852) 评论 (3) 10分钟学会松腰 回顾了自己学松腰的过程，发现只要做到几点，初学者很容易学会。前几天做了一个实验，叫我的一个同事学松腰，10分钟学会。首先是画了一个简易图，说明正常站立时脊椎的位置，后面的命门是内凹的。松腰的主要目的就是突出命门。然后我告诉我同事，就像跳舞一样，把胯骨向前上方翻起，这样自然就会做到敛臀（就是屁股上的肌肉收紧），命门也就突出来了。最后演示了一下，让他摸着我的腰。果然10分钟他就学会了。不过同事是个聪明... 2013-10-20 10:00 阅读 (2354) 评论 (2) 周而复始四正手 回忆一下田老师教的四正手，简单说来由四个动作组成：掤，捋，挤，按。说起来很顺口，但是连起来顺序应该是：掤，捋，按，挤。比如两个人甲和乙对练,完成一个完整的四正手共分八步：1. 甲掤手，乙随2. 甲捋手，乙随3.乙挤，用挤破捋，甲随4.甲按，用沉按破乙的挤，乙化5.乙掤手，甲随6.乙捋手，甲随7.甲挤，用挤破捋，乙随8.乙按，用按破挤，甲随。所以八步骤甲乙双方都各自完成了一个四正手。单人练习时要以双... 2013-01-10 14:08 阅读 (1908) 评论 (0) 太极拳“引进落空”的学理研究 太极拳“引进落空”的学理研究田金龙(上海体育学院研究生部，上海 200438)摘要：通过对太极劲与外力运动规律的探索，揭示太极拳“功手”与“病手”差异之根源，进一步分析其“轻重沉浮"的外部特征，从内外两个层次展开了“引进落空”之技的学理研究。关键词：太极拳；太极劲；外力；功手；病手；引进落空中图分类号：G852.11 文献标识码：A 文章编号：1008—1909（2000）01—0005—04Th... 2013-01-06 23:46 阅读 (1963) 评论 (0) 太极拳诞生前的创造历程 太极拳诞生前的创造历程田金龙[1]（扬州大学体育学院，扬州 225002）摘要：在太极拳诞生前中国武术各个历史阶段的思想文化与武术实践背景下，探讨太极拳创造过程的历史轨迹，及其相应的技术形态。即本能技术的激情型武术——直接技术的简单型武术——变化技术的升华型武术——闪电战技术的精神修炼型武术——控制技术的整体型武术关键词：太极文化；武术；技术中图分类号：G852.11    文献标识码：A   文... 2013-01-03 18:22 阅读 (1384) 评论 (2) 太极拳“根”的技术之研究 太极拳“根”的技术之研究田金龙（扬州大学体育学院，扬州,225002，0514-7312722；1963，男；副教授，博士）摘要：采用力学原理，并与太极拳演练技术紧密结合，对太极拳“根”的技术进行分析，探讨了“根”与其他要素的相互关系。关键词：太极拳；运动生物力学；根Researches into the technique of the “Root” of Taiji QuanTian Jinl... 2013-01-01 16:14 阅读 (2118) 评论 (2) 左右摆练习的一点感悟 先声明，这个感悟没有和田老师确认过。只是自己突然想到的。也许不正确，欢迎批评。一直寻找左右摆中的空的那个点和发放的结合时机。究竟空在哪里？假定双脚开立，身体重心落在两脚中间，身体挺直。现在1.身体向左微转2.此时松腰，曲膝，形成左侧身体的空。注意，动作幅度很小。3.两个手臂自然也开始向左翻转。4.由于2的松空，左腿和身体就像被压扁的弹簧，蓄劲阶段自然完成。发放就很简单了，左腿蹬直，腰向右转，手臂向... 2012-12-31 00:20 阅读 (1765) 评论 (0) 搂膝拗步 准备姿势 右弓步，左掌向前推出，于胸平，右掌掌心向下按在右腿边。 分为八个动作1-2.松腿，松手松腰，沉身，用空劲让对方起跟（实战技巧就在于此） 3-4 转脚，搂手重心后移，右脚外撇45度。腰松。腰挺起，上左脚，收在右脚附近。左手向右搂手，右手向后打开。 5-6 松腿 出脚松腰，右腿弯曲，左脚往前迈一步，右手到耳朵，左手往左搂手（... 2010-09-18 21:10 阅读 (1947) 评论 (0) 如封似闭2的实战运用 预备姿势，双手握住对方的双手，对方直立，并且不做松腰以便配合 1.松腰，沉跨，双手外旋，打开对方的双手，右手略微往后一点此时对方应感觉腰背部紧张 2.起身，直腰，拔背，双手继续打开，并且外旋对方应该觉脚跟拔起，站立不稳 3.沉胯，手保持不变 4.胸靠... 2010-09-18 21:08 阅读 (1753) 评论 (0) 单鞭的发劲练习 单鞭单鞭的发劲练习弓步，手掌撑住对方的胸口，先用僵劲顶住对方。沉身之后，后腿脚跟开始连续轻踩，重心开始前移，上身略微前倾。这是一个持续的发力过程，要做到快速轻微。腿部的发力，带动身体，力量传递到手，形成共振。对方的身体感受一种电转式的力量进来。这个过程可以重复多次，每次都要还原后在进行。当一波力量到最后的时候，突然撤去力量，对方会情不自禁的往前冲。... 2010-09-12 15:13 阅读 (2189) 评论 (1) 田金龙老师讲解杨式太极拳的起势 今天带老婆一起去报名扬州大学田金龙老师的太极拳学习班。挺有意思，把今天所学做个笔记。 太极拳的起势用来做什么？ 打人的。：）起势包含了上下摆。 上下摆分为四个步骤1）松a.膝盖微微往外分开，膝盖微微弯曲b.命门突出，指的是：松腰和翻胯和敛臀：翻胯这个动作如果练过爵士舞的人应该很容易，有点像迈克尔.杰克逊跳霹雳舞时胯部向前顶起的动作。做到了翻胯，就自然能够敛臀。松腰就是命门后突。这点初练者是比较大的... 2010-09-11 14:22 阅读 (8106) 评论 (1) 个人资料 sheismylife 访问： 3247677次 积分： 43541 等级： 积分：43541 排名： 第46名 原创： 1080篇 转载： 21篇 译文： 1篇 评论： 1074条 文章搜索 文章分类 田金龙太极拳法 (17) 数据分析理论与实践 (1) spark (4) storm (9) Clojure (34) thrift (2) Hadoop (35) zookeeper (6) Android (9) KVM (15) Redmine (13) c++ network (1) c++ 11 (3) c++语言 (96) c++模板技术 (9) c++编译 (30) c++ boost asio (17) c++ cppcms (17) c++ boost bind (19) c++ qt (21) c++ boost库 (6) c++ boost log (12) c++ boost smart pointer (5) c++ boost graph (0) c++ ace (7) c++ com (17) c++ wtl (10) c++ windows sdk (1) MongoDB (40) MongoDB JavaScript (4) MongoDB Sharding (4) Linux (63) Linux Disk (7) Linux wine (3) Linux Network (24) Linux 用户 (2) Scrum (17) 过程管理 (12) Emacs (37) Git&GitLab (64) c++ 14 (0) Web前端 (35) Emacs C++ (5) Emacs Org (15) Emacs Clojure (1) Emacs JDEE (6) Emacs Browser (7) Emacs Email (9) Emacs Muse (3) Emacs ELisp (15) protocol buffer (4) Monitor (15) 字符与编码 (10) 数据结构和算法 (12) HTTP (2) bash (22) Maven (22) Design Pattern (5) 图形图像 (18) Nginx (24) windows commands (1) 正则表达式 (3) Java (73) StarTeam (1) 3D (6) lua (5) cmake (6) Database (3) Ruby (3) 乒乓球 (1) dotNet (8) MySQL (3) 游戏编程 (2) MacBook (2) JSF (16) 杂谈 (3) Ubuntu (10) newLISP与人工智能 (7) newLISP 系统管理 (23) newLISP语法 (26) newLISP注释 (1) newLISP web开发 (6) newLISP FOOP (4) newLISP 大数据 (9) newLISP安装 (4) newLISP 网络通信 (5) newLISP 数字类型 (2) newLISP 正则表达式 (4) newLISP实用技巧 (9) newLISP文件处理 (5) newLISP list处理 (9) newLISP 进程管理 (1) newLISP时间日期 (5) newLISP C++ builder (2) Jenkins (26) kafka (4) sqoop (5) HBase (1) tableau (2) D语言编程 (6) 阅读排行 IDispatch接口原理与应用 (30583) git checkout之二 切换到分支和文件覆盖 (30134) Ubuntu 11.10 server 安装Git 服务器 (23594) 三年后再反思我的" Java Web项目管理得失谈" (21267) MongoDB Java 连接池的注意事项 (20258) git checkout之一 HEAD基本和detached 状态 (19881) Nginx的日志 (19601) JSP总结之六：创建第一个简单的JSP页面 (18720) Singleton之C++部分一 (16815) Windows安装Git客户端工具 (16151) 评论排行 回想那些年我抛弃的技术 (149) Singleton之C++部分一 (54) 三年后再反思我的" Java Web项目管理得失谈" (37) IDispatch接口原理与应用 (26) 最佳程序设计探索之一:需求驱动编写自顶向下的代码 (25) GitLab迁移 (22) SAFEARRAY使用实例 (19) Java HashMap 分析之三:放入元素 (17) git checkout之二 切换到分支和文件覆盖 (16) GitLab升级到5.1注意事项 (16) 最新评论 田金龙老师讲解杨式太极拳的起势 u011521468 : 夯劲的力量之源是来之翻胯，练习中我发现胯回落带不动身体下沉和前后摆的发力，应该注意哪里？ 前后摆发力 u011521468 : 初学，前后摆蹬腿的时候总是把身体等的往上去了，总也发不出前后这个劲，应该注意什么？ 数据分析的道与术 u010924878 : 总结的很棒，学习了 C++网络通信库性能大比拼 wingfiring : 博主能秀一下测试代码吗？ Clojure语言十六 clojure与java u010786678 : 谢谢小伙伴的分享，学习了 storm 开发系列三 Clojue编写程序读取kafka数据并写入到hdfs u010786678 : 谢谢小伙伴的分享，学习了 newlisp url 编码 wangdan199112 : 。。。。。 newlisp url 编码 dl_dl_ : @sheismylife:好可惜，好不容易碰到一个用 newlisp 的人……谢谢回复！我自己再想办... newlisp url 编码 sheismylife : @dl_dl_:windows? 我没有windows，真的没有，实在帮不了你。 newlisp url 编码 dl_dl_ : 您好，请教下 unicode 问题。(import "user32.dll" "MessageBox... 算法专家朋友的博客 GIS/ATL Server/JavaScript 清如许的博客 CSS/Android/Java/Linux 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 44
URL:: http://blog.csdn.net/sheismylife/rss/list

ParseText::


Recno:: 45
URL:: http://blog.csdn.net/system/experts.html

ParseText::
系统运维博客专家 - 博客频道 - CSDN.NET 首页 博客专栏 博乐推荐 博客专家 热门文章 排行榜 我的博客 帮助 订阅 全部分类 移动开发 Web前端 架构设计 编程语言 互联网 数据库 系统运维 云计算 研发管理 特约专家 行业名家 名誉专家 荣誉专家 杨中科 刘建文 刘锋 齐飞 陈伟东 段宝立 牟勇 尧庆宇 胡传照 沈东良 更多 按上周发表原创(翻译)文章数量排序 系统运维专家 龚德辉 赵金强 来敬礼 康占英 张佩 王达 王燊 徐鹏 赵亚 王以山 熊宸 徐勇 闫明 冯国成 周卫 张浩 张同浩 李林 慕晓燕 黄成 夏侯佐鑫 显示全部专家 最新文章 赶紧加入微软的官方论坛DTCC吧，小伙伴们！！！ 好消息，微软Dynamics产品组的伙伴们推出了自己的论坛 -- DTCC，对于中国的从业人员来说是巨大的利好消息呀，我们又多了一种渠道去发出我们的声音。目前Dynamics产品的设计理念几乎都来自与海外，国内的声音很难传到产品组，希望以后，大家可以在DTCC里面多发发声，多吐吐槽，让产品组也意识到我们中国用户的需求和用户体验，这样Dynamics 产品在中国才更有竞争力。加入DTCC后，能获得最... ghostbear 4小时前 阅读(202) 评论(0) [易飞]进销存统计表 -- ============================================= -- Author: -- Create date: -- @SQJ:开始期间 @EQJ：结束期间 @PH：品号 @CK：仓库 @F:数量为0不显示，1：不显示 -- Description: -... david_520042 昨天 15:13 阅读(527) 评论(0) [易飞]包材Forcast四周滚动需求 【背景】整理整顿， 仓库最大的库容占用在于包装材料， 特别是纸箱，托盘，泡沫片，包装管等，价值不高， 但占用面积比较大。 【解决方案】 1. 此类材料， 不走LRP请购即不在合同评审时下请购单。 2. 补货将按库存补货点补货，补货点库存， 初步将设定为3天平均用 量。物控一，三，五定期跑补货报表。 3. 采购按补货请购单的数量通知进货。即我们的采购订单就是供应商... 报表 需求 david_520042 前天 10:15 阅读(423) 评论(2) 老OpenGL程序如何更新到新OpenGL（版本3.1及以上的Core Profile）OpenGL: Transition to Core Profile Introduction IntroductionSignificant groups of OpenGL features were marked as deprecated when the 3.2 spec was published in December 2009, resulting in two different OpenGL profiles: The Core Profile, which contain... opengl 新OpenGL Core-Profi smstong 前天 09:39 阅读(67) 评论(0) Trubleshooting：Shapefile 乱码与字符截断问题 Shapefile是上个世纪90年代的数据格式，但是由于它开放易用至今仍然倍受欢迎，最近与shapefile编码相关的问题此起彼伏连绵不绝，整理下几个高频问题共享之。为什么我的shapefile在ArcGIS 10.3中打开乱码？原因这个问题的根本原因就是读取文件使用的编码类型和文件实际存储的编码类型不一致。Shapefile文件的头文件（dBase Header）中，一般会包含shapefile使... 乱码 编码 arcgis shapefile 截断 kikitaMoon 4天前 10:51 阅读(1028) 评论(0) Systemd启动图形界面过程 1 启动命令systemctl isolate graphical.target2 启动过程：文件：/etc/systemd/system/graphical.target 来自：systemd包 内容：[Unit] Description=Graphical Interface Documentation=man:systemd.special(7) Requires=multi-us... systemd lightdm smstong 5天前 20:50 阅读(573) 评论(0) 如何扩展/删除swap分区 背景：         由于安装Oracle 的时候，swap太小只划分了4G，后期发现交换分区太小，不满足使用，于是进行了swap分区的扩容过程：        swap分区的扩展很简单，但是需要root用户权限.[root@localhost ~]# dd if=/dev/zero of=/swap bs=1024M count=2 记录了2+0 的读入 记录了2+0 的写出 21474836... ctthunagchneg 6天前 02:32 阅读(94) 评论(0) Linux 中交换空间 （swap）应该分多大才好？ 前一段时间，我们机房中一台Linux服务器运行缓慢，系统服务出现间歇性停止响应，让我过去处理一下这一问题，登录到服务器之后，发现此服务器的物理内存是16G，而最初装机的时候，系统管理人员却只分配了4G的虚拟内存。查看内存的使用状况，物理内存并没有完全耗尽，但虚拟内存已经耗尽，整个系统CPU负载和磁盘IO都非常高。        知道了问题所在是由于交换分区不足导致，那么解决方法就是：将虚拟内存通过... ctthunagchneg 6天前 02:12 阅读(85) 评论(0) Linux SWAP 交换分区配置说明 一．SWAP 说明1.1 SWAP 概述        当系统的物理内存不够用的时候，就需要将物理内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap空间中，等到那些程序要运行时，再从Swap中恢复保存的数据到内存中。这样，系统总是在物理内存不够时，才进行Swap交换。        这个是SWAP 交换分... ctthunagchneg 6天前 01:55 阅读(91) 评论(0) Linux中的SWAP交换分区 大多数 Linux 在系统安装时都会提醒并建议你划分一个 SWAP 交换分区，如果你是从 Windows 切换到 Linux 的新用户，兴许对这个 SWAP 会感到十分疑惑。        SWAP 交换分区到底是干什么用的呢？我们是否真的需要划一个 SWAP 分区呢？答案是：视情况而定！SWAP 分区在一些情况下可以提升 Linux 操作系统性能，但在某些情况下又会成为系统运行的瓶颈，下面我们就... ctthunagchneg 6天前 01:37 阅读(74) 评论(0) 16条数据 共2页 1 2 下一页 尾页

Recno:: 46
URL:: http://blog.csdn.net/testcs_dn/article/details/50274651

ParseText::
Could not find gem 'sqlite3 (>= 0) x64-mingw32' in any of the gem sources listed in your Gemfile - 无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Could not find gem 'sqlite3 (>= 0) x64-mingw32' in any of the gem sources listed in your Gemfile 标签： ruby rails sqlite3 gem 2015-12-12 14:27 1117人阅读 评论 (0) 收藏 举报 分类： Redis （8） 作者同类文章 X Ruby （6） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Could not find gem 'sqlite3 (>= 0) x64-mingw32' in any of the gem sources listed in your Gemfile or available on this machine.   Run `bundle install` to install missing gems.  在  windows下搭建Ruby Rails Web开发环境  时遇到这个问题， 出现此问题的原因是： 没有安装sqlite3 安装sqlite3 执行命令：gem install sqlite3-ruby [plain]   view plain copy C:\ruby>gem install sqlite3-ruby   Fetching: sqlite3-1.3.11-x64-mingw32.gem (100%)   Successfully installed sqlite3-1.3.11-x64-mingw32   Fetching: sqlite3-ruby-1.3.3.gem (100%)      #######################################################      Hello! The sqlite3-ruby gem has changed it's name to just sqlite3.  Rather than   installing `sqlite3-ruby`, you should install `sqlite3`.  Please update your   dependencies accordingly.      Thanks from the Ruby sqlite3 team!      <3 <3 <3 <3      #######################################################      Successfully installed sqlite3-ruby-1.3.3   Parsing documentation for sqlite3-1.3.11-x64-mingw32   Installing ri documentation for sqlite3-1.3.11-x64-mingw32   Parsing documentation for sqlite3-ruby-1.3.3   Installing ri documentation for sqlite3-ruby-1.3.3   Done installing documentation for sqlite3, sqlite3-ruby after 1 seconds   2 gems installed   安装过程中可能会出现以下问题： Could not find gem 'sqlite3 (>= 0) x64-mingw32' in any of the gem sources listed in your Gemfile or available on this machine. Run `bundle install` to install missing gems. " port 443 (https://api.rubygems.org/quick/Marshal.4.8/sqlite3-ruby-1.3.3.gemspec.rz) 这可能是由于网络的原因，多试几次就好了。 上一篇 Ruby Rails入门——windows下搭建Ruby Rails Web开发环境 下一篇 Could not find gem 'sass-rails (~> 5.0) x64-mingw32' in any of the gem sources listed in your Gemfil 顶 1 踩 0 我的同类文章 Redis （8） Ruby （6） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 testcs_dn 访问： 1858774次 积分： 22271 等级： 积分：22271 排名： 第165名 原创： 466篇 转载： 169篇 译文： 7篇 评论： 512条 文章搜索 博客专栏 JAVA学习实践及问题记录 文章：98篇 阅读：390501 VC学习实践及问题记录 文章：33篇 阅读：89083 Markdown 文章：15篇 阅读：27803 NoSQL入门与提高 文章：0篇 阅读：0 CentOS服务器配置管理 文章：25篇 阅读：118455 MySQL图文进阶 文章：18篇 阅读：89044 C#软件开发实例 文章：44篇 阅读：147398 文章分类 VC (79) C# (88) JAVA (132) jquery (20) InstallShield (3) php (9) Android (1) sock5 (2) JavaScript (25) HTML5 (6) IIS (6) VS2010 (9) ASP.NET (4) Python (1) 数据库 (21) MySQL (24) CentOS (55) 操作系统 (20) Database (4) css (1) linux (14) 动态共享库 (2) gcc (3) gdb (1) ThinkPHP (5) 浏览器 (9) 调试 (6) 系统安全 (3) 其它 (29) C语言 (2) 开源协议 (2) 直播 (2) Maven (21) Redis (9) Nginx (5) FFmpeg (2) Hadoop (3) 逆向分析 (1) visio (1) mybatis (5) VB.NET (1) 同步机制 (2) 系统架构 (4) Eclipse (33) R语言 (2) Markdown (14) Tomcat (10) SVN (8) 活动 (9) 书摘 (2) WindowsAPI (2) UI设计 (1) UE设计 (2) Proguard (15) spring (2) 成功励志 (1) powerdesigner (1) 养生保健 (2) 数据结构 (1) 编程语言 (2) 星星点灯 (1) 程序猿/缘 (2) asp (3) 云服务器 (2) go语言入门 (4) Bluemix (3) Ruby (7) rails (2) 文章存档 2015年12月 (15) 2015年11月 (12) 2015年10月 (12) 2015年09月 (14) 2015年08月 (13) 2015年07月 (14) 2015年06月 (20) 2015年05月 (58) 2015年04月 (25) 2015年03月 (31) 2015年02月 (16) 2015年01月 (33) 2014年12月 (31) 2014年11月 (20) 2014年10月 (24) 2014年09月 (23) 2014年08月 (21) 2014年07月 (20) 2014年06月 (14) 2014年05月 (36) 2014年04月 (14) 2014年03月 (14) 2014年02月 (7) 2014年01月 (6) 2013年12月 (15) 2013年08月 (3) 2013年07月 (2) 2013年06月 (9) 2013年05月 (6) 2013年04月 (7) 2013年03月 (32) 2013年02月 (3) 2012年10月 (8) 2012年09月 (7) 2012年08月 (22) 2012年07月 (2) 2012年06月 (30) 2012年05月 (4) 阅读排行 Uncaught SyntaxError: Unexpected token ILLEGAL (56336) MICRO SIM卡(SIM小卡)尺寸图及剪卡图解 (55486) Uncaught SyntaxError: Unexpected token ) (51563) HTTP错误 404.17 - Not Found" IIS 7.5 请求的内容似乎是脚本，因而将无法由静态文件处理程序来处理 (43344) xxx cannot be resolved to a type 错误解决方法 (33234) The superclass "javax.servlet.http.HttpServlet" was not found on the

Recno:: 47
URL:: http://blog.csdn.net/testcs_dn/article/details/50280347

ParseText::
Java中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 - 无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Java中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 标签： Bluemix 云平台 IBM java web service 2015-12-13 08:24 702人阅读 评论 (0) 收藏 举报 分类： JAVA （131） 作者同类文章 X Bluemix （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 做为一个程序员可能在学习技术，了解行业新动态，解决问题时经常需要阅读英文的内容；而像我这样的英文小白就只能借助翻译工具才能理解个大概；不禁经常感慨，英文对学习计算机相关知识太重要了！最近发现IBM的云平台Blumemix，并且提供语言翻译的服务，感觉不错，就拿来研究学习一下；这里就分享一下我的研究学习过程，如何使用Java语言调用REST API打造自己的在线翻译工具，并演示如何把它发布到云平台上， 让每个人都可以通过网络访问使用它。 应用效果展示 您可以通过点击效果图片的链接访问它。 构建一个类似的应用程序的前提条件 一个 Bluemix 帐户，您还没有？ 点击 这里注册 ，已经有，点击 这里登录 ； 对 HTML（ 超文本标记语言 ）的基本了解； 对 CSS （层叠样式表） 的基本了解 ； 对JavaScript（一种直译式脚本语言） 的基本了解； 对Java（ 一种可以撰写跨平台应用程序的面向对象的程序设计语言 ） 的基本了解 ； apache-tomcat-8用于本地调试运行Java Web； eclipse-jee-luna-SR2-win32-x86_64 开发工具； Maven 3.3 项目依赖管理及打包工具； Java SE Development Kit（JDK）  Java 语言的软件开发工具包； 我提供了所有必要代码，但对这些技术的基本了解有助于您理解有关的细节。 步骤 1. 创建您的 Java 应用程序 1、在  Bluemix  用户界面中，转至“ 仪表板 ”。 2、单击 创建应用程序 。 3、单击  Web ，然后按照指导经验来选择入门模板，指定名称以及选择编码方式。 输入应用程序名称 应用程序名称是唯一的，接下来要通过它做为二级域名来访问你的应用！ 点击完成之后，需要等待一会儿，然后可以看到下图的界面 这时就可以访问你刚刚创建的应用了。如下图： 步骤 2. 添加语言翻译服务 可以通过单击  Bluemix  用户界面中应用程序“ 概述 ”上的 添加服务或 API ，将服务添加到应用程序中。也可以使用 cf 命令行界面。请参阅 处理应用程序的可用选项 。 获取服务信息 进入自己的应用程序》概述页面，找到已经添加的服务，点击“显示凭证”，可以查看服务的具体信息： 在浏览器中访问服务URL如下图： 步骤 3. 准备开发环境 Eclipes：我使用的是解压版的eclipse-jee-luna-SR2-win32-x86_64.zip，直接解压到一个目录 下就可以了； 初次 运行需要指定一个工作目录； JDK：参考： Windows 7 x64环境下JDK8安装过程 Tomcat：也是解压就可以了； Maven：Eclipse中自带的； 步骤 4.编写代码 1、下载初始Hello World示例代码 进入您的应用程序，点击左侧的开始编码，在右侧点击“下载起动器代码”。 2、导入项目 将下载的示例代码解压到一个目录，不要解压到Eclipse的工作空间！ 在Eclipse的项目浏览器视图上单击鼠标右键，选择导入： 选择要导入的项目类型： 选择项目文件位置： 导入成功后如下图： 3、编写代码 index.html就是我们看到的首页的内容； 示例还提供了一个Servlet例子； 了解了一些，相信我就不需要再多说了，上代码！ 前台主要AJAX代码：调用后台的翻译Servlet，实现用户交互 //通过AJAX调用后台翻译程序 function doExecTrans(){ var txt = $("#InputText").val(); if (txt == ""){ alert("请输入要翻译的文本！"); return; } $("#ProgressDiv").show(); $.ajax({ type: "GET", url: "TransServlet", dataType:"json", data: {"txt":txt}, success: function(data){ $("#ProgressDiv").hide(); console.log(data); if (data.error){ alert(data.error); }else{ $("#OutputText").text(data.text); } }, error: function(data){ console.log(data);ssss alert( "Error Msg: " + data ); $("#ProgressDiv").hide(); } }); } 后台主要代码：TransServlet，与翻译服务Web Service交互 package wasdev.sample.servlet; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.net.Authenticator; import java.net.URL; import javax.net.ssl.HttpsURLConnection; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; /** * powered by: testcs_dn * Blog: http://blog.csdn.net/testcs_dn * Create time: 2015/12/12 */ /** * Servlet implementation class TransServlet */ @WebServlet("/TransServlet") public class TransServlet extends HttpServlet { private static final long serialVersionUID = 1L; /** * 处理前台AJAX的GET请求 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse * response) */ @Override protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { response.setContentType("text/html"); response.setCharacterEncoding("utf-8"); //获取AJAX提交的需要翻译的文本 String txt = request.getParameter("txt"); if (txt == null || txt.length() == 0) { response.getWriter().print("{\"error\":\"请输入要翻译的文本！\"}"); return; } //翻译服务的URL String servicesUrl = "https://gateway.watsonplatform.net/language-translation/api/v2/translate?source=en&target=es&text=" + txt; String errMsg = null; String result = ""; BufferedReader in = null; try { URL realUrl = new URL(servicesUrl); //认证信息对象，用于包含访问翻译服务的用户名和密码 Authenticator auth = new MyAuthenticator("c9819718-4660-441c-9df7-07398950ea44", "qUvrJPSdPgOx"); Authenticator.setDefault(auth); // 打开和URL之间的连接 HttpsURLConnection connection = (HttpsURLConnection)realUrl.openConnection(); connection.setDoInput(true); connection.setDoOutput(true);//允许连接提交信息 connection.setRequestMethod("GET"); // 建立实际的连接 connection.connect(); // 定义 BufferedReader输入流来读取URL的响应 in = new BufferedReader(new InputStreamReader( connection.getInputStream())); String line; while ((line = in.readLine()) != null) { result += line; } } catch (Exception e) { errMsg = e.getMessage(); } // 使用finally块来关闭输入流 finally { try { if (in != null) { in.close(); } } catch (Exception e2) { errMsg = e2.getMessage(); } } if (errMsg != null){ response.getWriter().print("{\"error\":\"" + errMsg + "\"}"); }else{ response.getWriter().print("{\"text\":\"" + result + "\"}"); } } } 认证信息对象：MyAuthenticator.java package wasdev.sample.servlet; import java.net.Authenticator; import java.net.PasswordAuthentication; /** * powered by: testcs_dn * Blog: http://blog.csdn.net/testcs_dn * Create time: 2015/12/12 * * 认证信息对象 */ public class MyAuthenticator extends Authenticator{ String _userName=null; char[] _password=null; public MyAuthenticator(){ } public MyAuthenticator(String username, String password) { this._userName = username; this._password = password.toCharArray(); } protected PasswordAuthentication getPasswordAuthentication(){ return new PasswordAuthentication(_userName, _password); } } 步骤 5. 本地编译运行访问 编译运行 访问 在浏览器中访问，查看效果，打开浏览器，输入： http://localhost:8080/JavaHelloWorldApp/ 步骤 6. 上传应用程序 注意：上传应用之前首先要对应用进行打包！ 打包步骤： 登录到  Bluemix™  后，可以使用  cf push  命令来上传应用程序。 开始之前，您必须： 1、安装 Cloud Foundry 命令行界面。 请根据自己使用的操作系统下载对应的版本；我使用的是Windows 7 64位操作系统， 下载 Binaries 版本的不需要安装， 直接解压到Windows目录就可以了 。 以下执行的命令你可以通过访问 https://www.ng.bluemix.net/docs/#starters/upload_app.html#upload_app__push 查看属于自己的命令； 2、连接到  Bluemix 。 打开命令提示符窗口：开始》运行，输入“cmd”，回车 执行：cf api https://api.ng.bluemix.net，如下图： 3、登录到  Bluemix 。 注意，这里要换成对应你自己账户的命令！ cf login -u ivu4e@qq.com -o ivu4e@qq.com -s ivu4e 4、发出  cf push  命令时， cf  命令行界面将提供使用 buildpack 来构建并运行应用程序的  Bluemix  环境的工作目录。 从应用程序目录中，输入带有应用程序名称的  cf push  命令。在  Bluemix  环境中，应用程序名称必须是唯一的。 后面的"-m 512m"是修改应用程序内存配额的，可以不带这个参数，如下图： 注意：执行cf push前将命令行当前目录切换到您刚刚创建的应用目录，例如我刚刚创建的 C:\javaProject\javatrans， cf push 后面的goinfo要替换为您在Bluemix上创建的应用名称。 提示：  使用  cf push  命令时， cf  命令行界面会将当前目录中的所有文件和目录复制到  Bluemix 。确保应用程序目录中只包含必需的文件。 cf push  命令上传应用程序并将其部署到  Bluemix 。有关  cf push  的更多信息，请参阅  cf 命令 。有关 buildpack 的信息，请参阅 使用社区 buildpack 。 如果更改了应用程序，可以通过再次输入  cf push  命令来上传这些更改。   cf  命令行界面会使用您先前的选项以及您对提示的响应来通过新的代码段更新应用程序的任何运行中实例。 提示：  您还可以从  Bluemix DevOps Services  上传或部署应用程序。请参阅 在 Node.js 中使用 Web IDE 开发 Bluemix  应用程序 。 步骤 7. 做个小小的测试 通过仪表板进入您刚刚创建的应用页面，点击左侧的开始编码，右侧顶部会显示：您的应用程序正在运行。 http://javatrans.mybluemix.net/ 点击后面的链接访问刚刚发布的应用。 结束语 通过IBM的Bluemix云平台，我们可以轻松的将自己的应用共享到网络上； 创建Web应用之后会自动获得一个用来访问应用的二级域名； 通过应用程序概述中的应用程序运行状况，可以方便的查看和管理应用运行状态； 这里通过一个小例子展示如何将自己的应用发布到IBM的Bluemix云平台上， 如何与 IBM云平台上 提供的语言翻译服务交互。 如果您有更好的应用或想法，试试通过 IBM的Bluemix云平台共享出来吧。 上一篇 Windows 7 x64环境下JDK8安装过程 下一篇 HttpServlet cannot be resolved to a type 顶 2 踩 0 我的同类文章 JAVA （131） Bluemix （2） http://blog.csdn.net

Recno:: 48
URL:: http://blog.csdn.net/testcs_dn/article/details/50286073

ParseText::
HttpServlet cannot be resolved to a type - 无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 HttpServlet cannot be resolved to a type 标签： HttpServlet cannot resolved type java 2015-12-13 20:52 1036人阅读 评论 (0) 收藏 举报 分类： JAVA （131） 作者同类文章 X Eclipse （32） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Description Resource Path Location Type HttpServlet cannot be resolved to a type SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 15 Java Problem HttpServletRequest cannot be resolved to a type SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 22 Java Problem HttpServletResponse cannot be resolved to a type SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 22 Java Problem ServletException cannot be resolved to a type SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 22 Java Problem The import javax.servlet cannot be resolved SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 5 Java Problem The import javax.servlet cannot be resolved SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 6 Java Problem The import javax.servlet cannot be resolved SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 7 Java Problem The import javax.servlet cannot be resolved SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 8 Java Problem The import javax.servlet cannot be resolved SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 9 Java Problem WebServlet cannot be resolved to a type SimpleServlet.java /JavaHelloWorldApp/src/main/java/wasdev/sample/servlet line 14 Java Problem 在文章 Java中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具  中从IBM Bluemix上下载的Java示例代码，导入到Eclipse之后，出现以上错误信息！ 错误原因： Eclipse是刚刚安装的，还没有配置服务器运行环境！ 解决办法： 1、首先要安装一下Tomcat； 通常是下载一个zip压缩包，解压一下就可以了； 2、Eclipse中点击Window菜单，选择Preferences 3、在左侧展开Server，选择Runtime Environment，右侧点击Add按钮 4、在弹出的窗口中选择你的Tomcat版本 5、点击“Browse”按钮选择Tomcat的安装位置，选择合适的JRE版本，点击Finish按钮完成。 通过上面的步骤，上面的错误都全部解决了，如果你的项目还显示 有错误，就需要考虑其它原因了。 可以参考： xxx cannot be resolved to a type 错误解决方法 上一篇 Java中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 下一篇 Ruby On Rails中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 顶 2 踩 1 我的同类文章 JAVA （131） Eclipse （32） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 testcs_dn 访问： 1858744次 积分： 22270 等级： 积分：22270 排名： 第165名 原创： 466篇 转载： 169篇 译文： 7篇 评论： 512条 文章搜索 博客专栏 JAVA学习实践及问题记录 文章：98篇 阅读：390501 VC学习实践及问题记录 文章：33篇 阅读：89083 Markdown 文章：15篇 阅读：27803 NoSQL入门与提高 文章：0篇 阅读：0 CentOS服务器配置管理 文章：25篇 阅读：118455 MySQL图文进阶 文章：18篇 阅读：89044 C#软件开发实例 文章：44篇 阅读：147398 文章分类 VC (79) C# (88) JAVA (132) jquery (20) InstallShield (3) php (9) Android (1) sock5 (2) JavaScript (25) HTML5 (6) IIS (6) VS2010 (9) ASP.NET (4) Python (1) 数据库 (21) MySQL (24) CentOS (55) 操作系统 (20) Database (4) css (1) linux (14) 动态共享库 (2) gcc (3) gdb (1) ThinkPHP (5) 浏览器 (9) 调试 (6) 系统安全 (3) 其它 (29) C语言 (2) 开源协议 (2) 直播 (2) Maven (21) Redis (9) Nginx (5) FFmpeg (2) Hadoop (3) 逆向分析 (1) visio (1) mybatis (5) VB.NET (1) 同步机制 (2) 系统架构 (4) Eclipse (33) R语言 (2) Markdown (14) Tomcat (10) SVN (8) 活动 (9) 书摘 (2) WindowsAPI (2) UI设计 (1) UE设计 (2) Proguard (15) spring (2) 成功励志 (1) powerdesigner (1) 养生保健 (2) 数据结构 (1) 编程语言 (2) 星星点灯 (1) 程序猿/缘 (2) asp (3) 云服务器 (2) go语言入门 (4) Bluemix (3) Ruby (7) rails (2) 文章存档 2015年12月 (15) 2015年11月 (12) 2015年10月 (12) 2015年09月 (14) 2015年08月 (13) 2015年07月 (14) 2015年06月 (20) 2015年05月 (58) 2015年04月 (25) 2015年03月 (31) 2015年02月 (16) 2015年01月 (33) 2014年12月 (31) 2014年11月 (20) 2014年10月 (24) 2014年09月 (23) 2014年08月 (21) 2014年07月 (20) 2014年06月 (14) 2014年05月 (36) 2014年04月 (14) 2014年03月 (14) 2014年02月 (7) 2014年01月 (6) 2013年12月 (15) 2013年08月 (3) 2013年07月 (2) 2013年06月 (9) 2013年05月 (6) 2013年04月 (7) 2013年03月 (32) 2013年02月 (3) 2012年10月 (8) 2012年09月 (7) 2012年08月 (22) 2012年07月 (2) 2012年06月 (30) 2012年05月 (4) 阅读排行 Uncaught SyntaxError: Unexpected token ILLEGAL (56336) MICRO SIM卡(SIM小卡)尺寸图及剪卡图解 (55486) Uncaught SyntaxError: Unexpected token ) (51563) HTTP错误 404.17 - Not Found" IIS 7.5 请求的内容似乎是脚本，因而将无法由静态文件处理程序来处理 (43344) xxx cannot be resolved to a type 错误解决方法 (33234) The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path (27780) HTML5使用 JavaScript File API 实现文件上传 (27251) js如何判断一个对象{}是否为空对象，没有任何属性 (26210) A child container failed during start (20944) ThinkPHP学习（二）理清ThinkPHP的目录结构及访问规则，创建第一个控制器 (19957) 评论排行 CSDN-markdown编辑器语法——字体、字号与颜色 (35) 你曾后悔进入 IT 行业吗？ (25) xxx cannot be resolved to a type 错误解决方法 (19) 欢迎使用CSDN-markdown编辑器 (15) HTTP错误 404.17 - Not Found" IIS 7.5 请求的内容似乎是脚本，因而将无法由静态文件处理程序来处理 (12) A child container failed during start (12) 《Visual c++2013入门经典（第7版）》上机练习：为 Win32 控制台应用程序创建项目 (11) The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path (11) C语言中函数参数为什么是由右往左入栈的？ (10) VC Windows API应用之GetDesktopWindow ——获得桌面所有窗口句柄的方法 (9) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 Your Ruby version is 2.2.3, but your Gemfile specified 2.2.2 u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ C#软件开发实例.私人订制自己的屏幕截图工具（十）在截图中包含鼠标指针形状 qigeminghaofan : 大神，可以把完整的代码放出来吗？好像没有截图信息栏、编辑工具栏这些功能 欢迎使用CSDN-markdown编辑器 scufzk2008 : 代码块那地方很丑，不知道楼主怎么优化下？ A child container failed during start testcs_dn : @plok741:谢谢补充！ A child container failed during start plok741 : 遇到相同的问题，是由于tomcat的版本的问题导致的。用tomcat8之后，可以成功启动应用。或者使... Notepad++输入模式之修改模式、插入模式 testcs_dn : @zxbdlv:欢迎来踩！ Notepad++输入模式之修改模式、插入模式 zxbdlv : 谢谢分享！ Ruby On Rails中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 testcs_dn : @mengdonghui123456:欢迎来踩！ Could not publish to the server. java.lang.NullPointerException testcs_dn : @liutong123987:恩恩 Could not publish to the server. java.lang.NullPointerException liutong123987 : 今天刚好碰到，用解决方法的第一种可以解决 友情链接 computer99999999的专栏 陌路缘

Recno:: 49
URL:: http://blog.csdn.net/testcs_dn/article/details/50309653

ParseText::
Ruby On Rails中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 - 无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Ruby On Rails中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具 标签： ruby ruby on rails REST API Bluemix IBM 2015-12-15 08:10 977人阅读 评论 (2) 收藏 举报 分类： Ruby （6） 作者同类文章 X Bluemix （2） 作者同类文章 X Redis （8） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 做为一个程序员可能在学习技术，了解行业新动态，解决问题时经常需要阅读英文的内容；而像我这样的英文小白就只能借助翻译工具才能理解个大概；不禁经常感慨，英文对学习计算机相关知识太重要了！最近发现IBM的云平台Blumemix，并且提供语言翻译的服务，感觉不错，就拿来研究学习一下；这里就分享一下我的研究学习过程，如何使用Ruby On Rails调用REST API打造自己的在线翻译工具，并演示如何把它发布到云平台上， 让每个人都可以通过网络访问使用它。 应用效果展示 您可以通过点击效果图片的链接访问它。 构建一个类似的应用程序的前提条件 一个 Bluemix 帐户，您还没有？ 点击 这里注册 ，已经有，点击 这里登录 ； 对 HTML（ 超文本标记语言 ）的基本了解； 对CSS （层叠样式表）的基本了解； 对JavaScript（一种直译式脚本语言）的基本了解； 对Ruby 语言的基本了解； 对Ruby On Rails 的 基本了解； 我提供了所有必要代码，但对这些技术的基本了解有助于您理解有关的细节。 步骤 1. 创建您的 Ruby 应用程序 1、在  Bluemix  用户界面中，转至“ 仪表板 ”。 2、单击 创建应用程序 。 3、单击  Web ，然后按照指导经验来选择入门模板，指定名称以及选择编码方式。 输入应用程序名称 应用程序名称是唯一的，接下来要通过它做为二级域名来访问你的应用！ 点击完成之后，需要等待一会儿，然后可以看到下图的界面 这时就可以访问你刚刚创建的应用了。如下图： 步骤 2. 添加语言翻译服务 可以通过单击  Bluemix  用户界面中应用程序“ 概述 ”上的 添加服务或 API ，将服务添加到应用程序中。也可以使用 cf 命令行界面。请参阅 处理应用程序的可用选项 。 获取服务信息 进入自己的应用程序》概述页面，找到已经添加的服务，点击“显示凭证”，可以查看服务的具体信息： 在浏览器中访问服务URL如下图： 步骤 3. 准备开发环境 有关开发环境搭建的细节，请参考下面的文章： Ruby Rails入门——windows下搭建Ruby Rails Web开发环境 步骤 4.编写代码 1、下载初始Hello World示例代码 进入您的应用程序，点击左侧的开始编码，在右侧点击“下载起动器代码”。 2、使其在本地运行 1、将下载的示例代码解压到一个目录，打开命令行窗口，切换到这个目录下 2、执行命令：bundle install 期间可能会提示：Your Ruby version is 2.2.3, but your Gemfile specified 2.2.2 因为我安装的版本比示例代码的版本高，直接去 Gemfile 中把版本改为：2.2.3就可以了； 3、执行命令：rails server 4、在浏览器中访问：http://localhost:3000/ 3、编写代码 前台主要AJAX代码：调用后台的翻译Servlet，实现用户交互 //通过AJAX调用后台翻译程序 function doExecTrans(){ var txt = $("#InputText").val(); if (txt == ""){ alert("请输入要翻译的文本！"); return; } $("#ProgressDiv").show(); $.ajax({ type: "GET", url: "trans", dataType:"json", data: {"txt":txt}, success: function(data){ $("#ProgressDiv").hide(); console.log(data); if (data.error){ alert(data.error); }else{ $("#OutputText").text(data.text); } }, error: function(data){ console.log(data);ssss alert( "Error Msg: " + data ); $("#ProgressDiv").hide(); } }); } 后台主要代码：trans_controller.rb，与翻译服务Web Service交互 require 'json' require "net/http" require "open-uri" require "uri" # Controller and action definition for uri trans/index # See routing configuration in config/routes.rb class TransController < ApplicationController def index @result = nil; @txt = params[:txt]; if (@txt == nil || @txt.empty?) then @result = "{\"error\":\"请输入要翻译的文本！\"}"; else auth = "c9819718-4660-441c-9df7-07398950ea44:qUvrJPSdPgOx"; surl = "https://" + auth + "@gateway.watsonplatform.net/language-translation/api/v2/translate?source=en&target=es&text=" + @txt; uri = URI.parse(surl); begin #开始 http = Net::HTTP.new(uri.host, uri.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Get.new(uri.request_uri) request.basic_auth "c9819718-4660-441c-9df7-07398950ea44", "qUvrJPSdPgOx" response = http.request(request) @result = "{\"text\":\"#{response.body}\"}"; rescue @result = "{\"error\":\"#{$!}！\"}"; end end end end 对应的视图文件index.html.erb的代码： <%= raw @result %> 很简单，只有一句，可是暗藏玄机；你可以把 raw 移除试试！ 修改routes.rb文件 RailsStarter::Application.routes.draw do # The priority is based upon order of creation: # first created -> highest priority. # Sample of regular route: # match 'products/:id' => 'catalog#view' # Keep in mind you can assign values other than :controller and :action # Sample of named route: # match 'products/:id/purchase' => 'catalog#purchase', :as => :purchase # This route can be invoked with purchase_url(:id => product.id) get ':controller(/:action(/:id))' root :to => 'say#hello' match '/trans', :to=>'trans#index' 添加一行：match '/trans', :to=>'trans#index' 步骤 5. 本地运行访问 运行 执行命令：rails server 访问 在浏览器中访问，查看效果，打开浏览器，输入： http://localhost:3000/

Recno:: 50
URL:: http://blog.csdn.net/testcs_dn/article/details/50317239

ParseText::
org.xml.sax.SAXParseException 文档根元素 "mapper" 必须匹配 DOCTYPE 根 "configuration" - 无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 org.xml.sax.SAXParseException 文档根元素 "mapper" 必须匹配 DOCTYPE 根 "configuration" 标签： spring mapper mybatis dtd DOCTYPE 2015-12-15 16:24 717人阅读 评论 (0) 收藏 举报 分类： JAVA （131） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 org.springframework.beans.factory.BeanCreationException: Error creating bean with name ‘sqlSessionFactory’ defined in file [D:\apache-tomcat-8.0.22\webapps\xinghe-platform-web\WEB-INF\classes\spring\applicationContext-dao.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: ‘URL [jar:file:/D:/apache-tomcat-8.0.22/webapps/xinghe-platform-web/WEB-INF/lib/xinghe-base-0.0.1-SNAPSHOT.jar!/com/xinghe/edu/auth/model/mapper/AuthChildrenGroupMapper.xml]’; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance. Cause: org.xml.sax.SAXParseException; lineNumber: 3; columnNumber: 39; 文档根元素 “mapper” 必须匹配 DOCTYPE 根 “configuration”。 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1566) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory 1. g e t O b j e c t ( A b s t r a c t B e a n F a c t o r y . j a v a : 303 ) a t o r g . s p r i n g f r a m e w o r k . b e a n s . f a c t o r y . s u p p o r t . D e f a u l t S i n g l e t o n B e a n R e g i s t r y . g e t S i n g l e t o n ( D e f a u l t S i n g l e t o n B e a n R e g i s t r y . j a v a : 230 ) a t o r g . s p r i n g f r a m e w o r k . b e a n s . f a c t o r y . s u p p o r t . A b s t r a c t B e a n F a c t o r y . d o G e t B e a n ( A b s t r a c t B e a n F a c t o r y . j a v a : 299 ) a t o r g . s p r i n g f r a m e w o r k . b e a n s . f a c t o r y . s u p p o r t . A b s t r a c t B e a n F a c t o r y . g e t B e a n ( A b s t r a c t B e a n F a c t o r y . j a v a : 194 ) a t o r g . s p r i n g f r a m e w o r k . b e a n s . f a c t o r y . s u p p o r t . D e f a u l t L i s t a b l e B e a n F a c t o r y . p r e I n s t a n t i a t e S i n g l e t o n s ( D e f a u l t L i s t a b l e B e a n F a c t o r y . j a v a : 743 ) a t o r g . s p r i n g f r a m e w o r k . c o n t e x t . s u p p o r t

Recno:: 51
URL:: http://blog.csdn.net/testcs_dn/article/details/50382197

ParseText::
Your Ruby version is 2.2.3, but your Gemfile specified 2.2.2 - 无知人生，记录点滴 - 博客频道 - CSDN.NET 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海…… 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Your Ruby version is 2.2.3, but your Gemfile specified 2.2.2 标签： ruby rails Bluemix gem Gemfile 2015-12-22 21:07 532人阅读 评论 (1) 收藏 举报 分类： Ruby （6） 作者同类文章 X rails （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在文章  Ruby On Rails中REST API使用示例——基于云平台+云服务打造自己的在线翻译工具  中，从Bluemix上下载的初始Hello World示例代码在本地环境下运行调试时提示：Your Ruby version is 2.2.3, but your Gemfile specified 2.2.2 我本地Ruby安装的是2.2.3版本，而从Bluemix上下载的示例是2.2.2版本，所以出现此问题 怎么解决呢？ 我的解决方法是直接修改Gemfile文件中的ruby版本号，如下图：

Recno:: 52
URL:: http://blog.csdn.net/testcs_dn/rss/list

ParseText::


Recno:: 53
URL:: http://blog.csdn.net/u010850027/article/details/50319845

ParseText::
浅谈如何带领好一个团队 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 浅谈如何带领好一个团队 标签： 博客 成长 2015-12-16 08:03 834人阅读 评论 (16) 收藏 举报 分类： --------【SSH】 （2） 作者同类文章 X ● java之恋 （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        实习回来之后，小编接手了一个新的项目，市委组织部考核项目，听着有没有很高大上，因为这个项目是给国家机关做的，跟他们打交道，小编的心情只能用两个字来形容，呵呵，但是没有关系，这么难缠的客户，小编都能处理的游刃有余，以后还有啥，老师特别关爱小编，让小编担任这次项目的负责人，说实话，感觉自己还没有被别人带过做项目，怎么一转眼之间，小编就要开始带别人了呢？万一把人家带坑里了，怎么办？后来想想，坑越多越好，这样的我们才能成长的更加美丽坚强。第一次当负责人，感觉自己就像是一个无头苍蝇，不知道该怎么做？也不知道该做些什么？特别感谢盖盖，在小编最不知所措的时候，加入到小编的团队，帮助、指导小编，让小编慢慢步入正轨。        一个团队最重要的是氛围，一个向上，充满斗志的氛围是非常重要的，好的氛围远远比一个人艰难困苦挣扎坚持重要，大家可以设想，一个大家争先恐后去战斗的团队和一个士气低迷牢骚满天下的团队，哪个团队里的个人更容易胜利，那么作为一个团队的带头人，如何创造出好的氛围来呢，？当负责人也有将近一个月的时间了，这一个月以来，小编成长了很多，也收获了很多，今天这篇博客，小编就来和小伙伴们分享一下，如何带领好一个团队，不足之处，还请小伙伴多多指教。                  初次见面，南四楼小会议室，hi~hello~        还记得第一次和小编的组员进行会面的时候，有一种丑媳妇总要见公婆的赶脚，那家伙，全是帅哥，顿时赶脚，小编艳福不浅，咳咳咳。初次见面，需要进行熟悉，这个熟悉的过程就是一个互相认识的过程，作为项目经理要了解每个组员的性格、特长和工作方式，并且还要注意大家之间有无个性冲突的问题，防患于未然。 人员确定并且熟悉之后，作为项目经理小编需要做的就是要告诉各位从今以后都在这个项目组里工作，希望小伙伴们能够同心协力，精诚合作，小伙伴们要保持一个团结的心态，要让每一个人明白，项目成败和每一个人都有关系，责任是大家的，荣誉也是大家的，所以适当的鼓励还是很有必要的。         作为组长，最重要的就是要公正、善于兼顾各方利益，平衡各方关系，充分尊重并切实关心团队中的每一位成员，自己要多学习、多努力、多付出、作出好榜样；让组员心甘情愿的跟着你`(*∩_∩*)′，死心塌地，从盘古开天走到海枯石烂，鼓舞组员，促进团队合作，培养团队精神，提高领导能力，心胸开阔，宰相肚里能撑船，人与人是不同的，性格也有不尽相同，德有高下，能有专攻，所以最好发挥组员各自的优点，让她们做她们乐意做的事情，就会做的好也会大大提高效率。                  晨会，你说我说大家说        大家互相熟悉认识了之后，就需要把项目的内容拿出来讨论，包括项目的背景，目标，难度，目前可用的资源等等，要求大家统统发言，根据每个人的经验和观点的不同对项目进行分析，要让每个人对这个项目有一个比较全面的了解，而不要直接到了第三步骤工作分配，这里，作为项目经理，很容易犯的错误就在于根据自己对项目情况的了解给项目成员安排工作，而且要求他对工作的认识和你对工作的认识是一致的，但是这是不现实的，因为项目组成员和你之间对醒目信息的了解是不对称的，所以只有项目组成员对项目了解的越清楚，越能够全面的去看待自己的工作，看到自己的工作对于上游和下游的影响，才能更好的处理自己的工作任务。在项目的基本情况和意义明确以后，需要进行项目工作分配的分解和分配，以及责任分配的问题，这些将会在以后的文章中进行详细的描述。这个步骤要根据前面了解到的每个人的特长以及项目工作本身的情况进行分配，尽量能够量力分配，并且大家最好不要有异议，如果有的话也要提前说出来。以前小编安排工作的时候，总是分配到每个具体的人，后来小编改变战略，把工作安排好，开晨会的时候，大家自己领取工作，这个时候，各位小伙伴就会根据自己的实际情况和自身的能力来领取任务。                       凡事预则立，不预则废        古语常云，凡事预则立，不预则废，一件事情成败很大程度取决于开始的计划，团队领导人一定要重视计划，考虑的细节越多你做这件事成功的希望也越大，做事情的时候要控制好节奏，要做到收放自如。做事情的时候尽量要配置一个人检查这件事情的过程和进度。这样犯错的纪律会小很多，特别是一些低级错误。考核总结的重要性我就不多说了，如果我们都能做到颜回的“不二过”，我想我们的业绩提升也就水到渠成了，其实我也是站着说话不腰疼，因为执行不力，成效还不是很明显，也正因为如此，小编才意识到她的重要性，才下决心坚决执行和改正。比如有几次开会的时候，有某个小伙伴好几天不出活儿，总是找各种借口，当时也没有特别在意，后来盖盖说，作为组长，你应该主动找他们，了解他们，看看他们是在哪儿遇到问题了，有什么困难，果然，找过之后才发现，js不会写。忽然发现，作为组长，必须还得懂心理学才行，知道组员都在想什么，帮助她们排忧解难。                 沟通--人与人之间的桥梁        在一个团队之内，沟通绝不是单向的，必须是一种双向互动的形式。因为，只有团队成员与团队高层之间保有无障碍的通话渠道，这个团队才是健全的，才能够真正地携手共进。 如果一个团队的沟通和互动是正确的、健康而有效的，那么就能够使这一群人的力量完全结合，从而产生相加、相乘的效果，迅速推进团队工作。 最迅速、最方便、最直接、最尊重人性的团队沟通方式，就是利用电子邮件系统。电子邮件系统为内部员工和上下级的交流提供了最大的方便，确保了相互间意见的及时交流，对消除相互间的隔阂十分有利，能够最大限度的统一整个团队的步调，共同前进。 如果一个团队陷入沟通不良的困境时，应该采取不同以往的沟通方式进行改善。比如沟通效率过低，就应考虑设立针对沟通的部门；如沟通欠缺建设性，就应该反省团队内部教育是否滞后不前。 一个成功的团队必须是充分沟通的团队。在上下级之间，如果只有命令，没有交流，必然导致领导者的独裁和团队成员积极性的丧失；在同事之间，如果彼此鼓励隔阂，也只能导致人际关系的僵硬和冷漠。 糟糕的团队沟通就象宇宙的“黑洞”一样，会将团队成员的能量和热情吞噬殆尽。与之相反，顺畅的团队沟通则有如温暖人心的艳阳，为团队成员提供源源不断的能量，帮助他们高效地完成工作。                  授人以鱼？授人以渔？渔之以渔？        老师常说，授人以鱼，不如授人以渔，授人以渔不如渔之以渔，一个团队的管理者，要做的不仅仅是帮助团队成员完成工作，更重要的是要教会团队成员如何独立完成工作。 有时结果并不能反映出成功与失败，团队的成员们更注重的是一个过程，注重他们在这个过程中学会了什么，得到了什么、做出了什么。只有在工作过程中达到完美的配合和协作才是团队工作的真正意义所在。 团队领导肩负着让队员得到学习和成长的重任。“授人以鱼”只是解决了他一时的低层次的需求，却不可能帮助他从根本上摆脱被动，他难免要等待外界的馈赠或者施舍；“授人以渔”则使成员有了求知的能力，这样才能在今后的工作中掌握主动权，作为一个平等、独立的团队成员立足于团队之中。 帮助手下完成任务，不如教会手下如何去完成任务。 团队合作需要学习，而学习更需要团队合作，如果一个团队中，为了发展而形成一种激烈竞争的局面，不但不会促进团队成员的大力学习，还会阻碍学习的进程，使成员之间互相明争暗斗 而各自为政。这样就难以发展成一个学习型组织，要成为学习型组织，先决条件是必须有和谐的内部气愤，组织内的成员才能共享知识。                    小编寄语： 这篇博客，小编主要和小伙伴们分享了自己带团队这段期间自己的内心独白，初次当组长，让小编学会了所有的困难都不是问题，因为小编有你们，无论此时是被需求困扰，还是在为业务逻辑痛苦，我们都可以走过去，只要相信，就可以很幸福`(*∩_∩*)′！ 上一篇 SSH网上商城---需求分析+表关系分析 下一篇 SSH网上商城---使用ajax完成用户名是否存在异步校验 顶 2 踩 0 我的同类文章 --------【SSH】 （2） ● java之恋 （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397324次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 54
URL:: http://blog.csdn.net/u012613903/article/details/50370173

ParseText::
mybatis自己学习的一些总结 - 萝卜地里的兔子的博客 - 博客频道 - CSDN.NET 萝卜地里的兔子的博客 追求卓越，那么成功自然来到身边 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 mybatis自己学习的一些总结 标签： mybatis spring 2015-12-22 14:28 2198人阅读 评论 (3) 收藏 举报 分类： ORM框架 版权声明：本文为博主原创文章，未经博主允许不得转载。 以前一直在使用spring的JDBCTEMPLATE和hibernate做项目；两个都还不错，spring的jdbctemplate用起来比较麻烦，虽然很简单。而hibernate呢，用起来很好用，很方便，但是很多规矩，规则还有方法到现在都还是入门阶段。所以我就学习了一下mybatis来充实一下自己。 mybatis的学习（我也只是入门），我参考了这个博客地址---- 大神的总结 ，通过对他的博客的一些学习，我做了一些自己的总结，所以下面的一些内容都是自己在学习的时候的一些东西，也是参考着大神的博客来做的。当然做了一些错误的修改和自己理解的实现。 mybatis实战教程(mybatis in action)之一：开发环境搭建 1.关于数据库表的创建，参见大神的博文，这里就不再多说； 2.在user_src下的Configuration.xml内容解读： <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd"> <configuration> <!--这里给我们要使用的数据实体类设置一个在mybatis中使用的别名，以后在mybatis中直接使用他们的别名来映射到对应的实体对象中 --> <typeAliases> <typeAlias alias="User" type="com.mpc.mybaits.model.User" /> <typeAlias alias="Article" type="com.mpc.mybaits.model.Article" /> </typeAliases> <!-- 指定mybatis中使用的数据库环境，默认使用development，其中development使用的是JDBC来链接数据库，数据库是mysql --> <environments default="development"> <environment id="development"> <transactionManager type="JDBC" /> <dataSource type="POOLED"> <property name="driver" value="com.mysql.jdbc.Driver" /> <property name="url" value="jdbc:mysql://127.0.0.1:3306/mybaits" /> <property name="username" value="root" /> <property name="password" value="root" /> </dataSource> </environment> </environments> <!--这里使用mapper来指定相应的实体类的处理方法，（这些mapper就是处理数据的增删改查方法的xml集合，在这里面你可以写任何的查询方法 ，在这些xml中我们可以使用typeAliases中申明的对象来包装我们的查询结果，传入查询参数）， 这写mapper都是可以写任意的查询方法的，（任意的表，任意的查询语句）但是在开发中我们为每一个类指定一个mapper文件，这样是为了方便管理和项目的开发 ；总之就是一点：mapper和typeAliases是没有任何对应关系的，只是为了开发方便才会有什么Usermapper、Articlemapper这些分类 --> <mappers> <mapper resource="com/mpc/mybaits/model/User.xml" /> </mappers> </configuration> 3.具体User类的实现参照大神的博文，我这里就不献丑了。只说一句：这个类是用在typeAliases那里的； 4.和User类在同一个包下的User.xml，这个User.xml是用在mappers中的，它的作用是提供数据库增删改查的方法。 <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- 这里我们要通过xml来进行数据库的操作，所以我饿美女给这个mapper指定一个唯一的空间名称， --> <mapper namespace="com.mpc.mybaits.model.UserMapper"> <!-- 这里定一个select方法，从user表中查找指定id的数据，然后用 resultType="User" User类来进行包装 --> <!-- id是这个方法的唯一标识，通过id来调用这个方法，parameterType是传入的参数的类型，这里是整形。通过#{xxx}来获得传入的参数--> <select id="selectUserByID" parameterType="int" resultType="User"> select * from `user` where id = #{id} </select> </mapper> 5.建立测试类 package com.mpc.test; import java.io.Reader; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import org.junit.Assert; import org.junit.Test; import com.mpc.mybaits.model.User; public class Test1 { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static {// 在一个static块中处理我们的相关初始化操作，这里做的操作是用Configuration.xml中的配置信息来初始化一个mybatis使用的sqlSessionFactory try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } @Test public void test() { SqlSession session = sqlSessionFactory.openSession();// 获得session Assert.assertNotNull(session);// 断言session不为空 try { // 通过session来调用com.mpc.mybaits.model.UserMapper.selectUserByID方法，传入的参数是1 // 其中com.mpc.mybaits.model.UserMapper是我们的mapper的命名空间。selectUserByID是方法的id User user = (User) session.selectOne( "com.mpc.mybaits.model.UserMapper.selectUserByID", 1); Assert.assertNotNull(user);// 断言user不为空 Assert.assertEquals( "User(id=1, userName=summer, userAge=100, userAddress=shanghai,pudong)", user.toString());// 对user内容的断言 } finally { session.close();// 最后要关闭session } } // public static void main(String[] args) { // SqlSession session = sqlSessionFactory.openSession(); // try { // User user = (User) session.selectOne( // "com.mpc.mybaits.model.UserMapper.selectUserByID", 1); // System.out.println(user.toString()); // } finally { // session.close(); // } // } } 测试结果： mybatis实战教程(mybatis in action)之二：以接口的方式编程 使用接口编程的方式可以提高我们在方法中使用mybatis的效率，减少很多不必要错误，让我们不用总是查来查去，思来想去。。 1.在inter包中定义我们的接口 package com.mpc.mybaits.inter; import java.util.List; import java.util.Map; import org.apache.ibatis.annotations.Param; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; import com.mpc.mybaits.utils.PageInfo; /** * @author Administrator * */ public interface IUserOperation { /** * 方法的名称必须与User。xml中的 select 的id 对应（<select id="selectUserByID"） * * @param id * @return */ public User selectUserByID(int id); } 2.修改user.xml <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- 我们改用接口的编程方式了，那么命名空间就要修改，指向我们的接口 --> <mapper namespace="ccom.mpc.mybaits.inter.IUserOperation"> <!-- 这里定一个select方法，从user表中查找指定id的数据，然后用 resultType="User" User类来进行包装 --> <!-- id是这个方法的唯一标识，通过id来调用这个方法，parameterType是传入的参数的类型，这里是整形。通过#{xxx}来获得传入的参数--> <select id="selectUserByID" parameterType="int" resultType="User"> select * from `user` where id = #{id} </select> </mapper> 3.测试方法 package com.mpc.test; import java.io.Reader; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import org.junit.Test; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.User; public class Test2 { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static { try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } @Test public void test() { new Test1(); SqlSession session = sqlSessionFactory.openSession(); try { IUserOperation iUserOperation = session .getMapper(IUserOperation.class);//通过session来获得IUserOperation的实例对象 User user = iUserOperation.selectUserByID(1);//直接调用接口中 的方法就可以了 System.out.println(user.toString()); } finally { session.close(); } } } 测试结果： mybatis实战教程(mybatis in action)之三:实现数据的增删改查 *用list来返回多个查询结果，要使用list来返回多个查询结果，那么我们要定义自己的resultMap； 在User.xml中加入自己定义的resultMap； <!-- 为了返回list 类型而定义的returnMap --> <resultMap type="User" id="resultListUser"> <id column="id" property="id" /> <result column="userName" property="userName" /> <result column="userAge" property="userAge" /> <result column="userAddress" property="userAddress" /> </resultMap> 这是大神的博文中提到的，但是根据我自己的实践···这里完全没有必要使用resultMap，使用resultType就可以达到目的，所以我在user.xml中使用如下语句也是可以的： <select id="selectUsers" parameterType="string" resultType="User"> select * from user where userName like #{userName} </select> 当然按照大神的博文中记载的方式也是可以的--》在User.xml中加入新的查询语句； <!-- 返回list 的select 语句，注意 resultMap 的值是指向前面定义好的 --> <select id="selectUsers" parameterType="string" resultMap="resultListUser"> select * from user where userName like #{userName} </select> 个人理解，resultMap就是我们自己定义的一种返回结果的包装，在从表中查处数据口，MyBatis把所有的查询结果都放在一个map中，都是用key-value的形式存放的，如果指定的是resultType，那么Mybatis会为我们进行封装，指定的为resultMap的话，Mabatis会按照resultMap定义的格式来进行封装而已-----------； 在IUserOperation接口中加入resulListUser这个id对应的接口方法---- public List<User> selectUsers(String userName); 测试方法： package com.mpc.test; import java.io.Reader; import java.util.List; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import org.junit.Test; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.User; public class Test2 { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static { try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } @Test public void test() { new Test1(); SqlSession session = sqlSessionFactory.openSession(); try { IUserOperation iUserOperation = session .getMapper(IUserOperation.class);// 通过session来获得IUserOperation的实例对象 List<User> list = iUserOperation.selectUsers("%"); for (int i = 0; i < list.size(); i++) { System.out.println(list.get(i).toString()); } } finally { session.close(); } } } 测试结果： *使用mybatis来增加数据 在User.xml中添加如下代码： <!--执行增加操作的SQL语句。id和parameterType 分别与IUserOperation接口中的addUser方法的名字和 参数类型一致。以#{name}的形式引用Student参数 的name属性，MyBatis将使用反射读取Student参数 的此属性。#{name}中name大小写敏感。引用其他 的gender等属性与此一致。seGeneratedKeys设置 为"true"表明要MyBatis获取由数据库自动生成的主 键；keyProperty="id"指定把获取到的主键值注入 到Student的id属性 --> <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id"> insert into user(userName,userAge,userAddress) values(#{userName},#{userAge},#{userAddress}) </insert> 在IUserOperation接口中加入addUser这个id所对应的接口方法public void addUser(User user); Mybatis在接受到user对象以后，会把user的属性都封装到一个map中，key是user的属性名，value就是user的属性值了。所在通过#｛属性名｝在user.xml中就能取得传入的user的属性值。 测试方法： package com.mpc.test; import java.io.Reader; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.User; public class Test3 { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static { try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } public static void main(String[] args) { User user = new User(); user.setUserAddress("人民广场123"); user.setUserName("飞鸟123"); user.setUserAge("80123"); SqlSession session = sqlSessionFactory.openSession(); try { IUserOperation iUserOperation = session .getMapper(IUserOperation.class); iUserOperation.addUser(user); session.commit();// 必须的，不然的话是保存不到数据库中的 System.out.println("添加了用户，当前用户的id为" + user.getId()); } finally { session.close(); } } } 测试结果： *使用mybatis来更新数据 在User.xml中添加如下代码 <update id="updateUser" parameterType="User"> update user set userName=#{userName},userAge=#{userAge},userAddress=#{userAddress} where id=#{id} </update> 在IUserOperation中添加对应的接口方法 public void updateUser(User user); 测试方法 package com.mpc.test; import java.io.Reader; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.User; public class Test4 { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static { try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } public static void main(String[] args) { SqlSession session = sqlSessionFactory.openSession(); try { IUserOperation iUserOperation = session .getMapper(IUserOperation.class); User user = iUserOperation.selectUserByID(6); user.setUserAddress("太平天国"); iUserOperation.updateUser(user); session.commit();// 必须的，不然的话是保存不到数据库中的 System.out.println("更新了用户，当前用户的id为" + user.getId()); } finally { session.close(); } } } 测试结果 *mybatis删除数据 在User.xml中添加如下代码 <delete id="deleteUser" parameterType="int"> delete from user where id=#{id} </delete> 在IUserOperaiton中添加对应的接口方法： public void deleteUser(int id); 测试方法： package com.mpc.test; import java.io.Reader; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.User; public class TestDelete { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static { try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } public static void main(String[] args) { SqlSession session = sqlSessionFactory.openSession(); try { IUserOperation iUserOperation = session .getMapper(IUserOperation.class); User user = iUserOperation.selectUserByID(4); iUserOperation.deleteUser(6); session.commit();// 必须的，不然的话是保存不到数据库中的 System.out.println("删除了用户，当前用户的id为" + user.getId()); } finally { session.close(); } } } mybatis实战教程(mybatis in action)之四:实现关联数据的查询 1.article表和实体的创建参加大神的博文，这里我就不写了。 2.在User.xml中添加如下代码 <!-- User 联合文章进行查询 方法之一的配置 (多对一的方式) --> <resultMap id="resultUserArticleList" type="Article"> <id property="id" column="aid" /> <result property="title" column="title" /> <result property="content" column="content" /> <association property="user" javaType="User"> <id property="id" column="id" /> <result property="userName" column="userName" /> <result property="userAddress" column="userAddress" /> <result property="userAge" column="userAge" /> </association> <!-- <association property="user" javaType="User" resultMap="resultListUser" /> --> </resultMap> 这里要使用到resultMap，因为我们的数据库中的表结构和我们自己定义的类的字段是不对应的，通过联合查询以后，mybatis并不知道要用怎样的映射关系来专配，所以我们在这里自己定义。 在User.xml中加入查询代码 <select id="getUserArticles" parameterType="int" resultMap="resultUserArticleList"> select user.id,user.userName,user.userAddress,user.userAge,article.id aid,article.title,article.content from user,article where user.id=article.userid and user.id=#{id} </select> 3.在IUserOperation中加入相应的接口方法 public List<Article> getUserArticles(int userid); 4.测试方法 package com.mpc.test; import java.io.Reader; import java.util.List; import lombok.Getter; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; public class Test5 { private static @Getter SqlSessionFactory sqlSessionFactory; private static Reader reader; static { try { reader = Resources.getResourceAsReader("Configuration.xml"); sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader); } catch (Exception e) { e.printStackTrace(); } } public static void main(String[] args) { SqlSession session = sqlSessionFactory.openSession(); try { IUserOperation iUserOperation = session .getMapper(IUserOperation.class); List<Article> articles = iUserOperation.getUserArticles(1); System.out.println(articles.size()); for (Article article : articles) { System.out.println(article.getUser().toString()); System.out.println(article.getTitle() + ":" + article.getContent() + ":作者是:" + article.getUser().getUserName() + ":地址:" + article.getUser().getUserAddress()); } } finally { session.close(); } } } 5.测试结果 也可以在已经定义好user的resultMap的情况下，在association处直接使用 <association property="user" javaType="User" resultMap="resultListUser" /> 来做关联查询，这个大神博文中有，我就不做解释了。 mybatis实战教程(mybatis in action)之五:与spring3集成 mybatis实战教程(mybatis in action)之六:与Spring MVC 的集成 mybatis SqlSessionDaoSupport的使用 在大神的博文中，这三个是分开写的，这里我就整合到一起了，使用spring，一般也会用springmvc。然后SqlSessionDaoSupport这个的话，我觉得没必要去在乎，可以直接实现dao就可以了，具体实现如下： 具体的项目结构如下图所示： 1.修改web.xml来进行spring和pringmvc的配置： <?xml version="1.0" encoding="UTF-8"?> <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0"> <!-- log4j配置文件 --> <context-param> <param-name>log4jConfigLocation</param-name> <param-value>classpath:/config/log4j.properties</param-value> </context-param> <!-- Spring的log4j监听器 --> <listener> <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> </listener> <!--配置参数 和具体项目没有关系 在容器初始化项目还没有启动执行--> <context-param> <param-name>contextConfigLocation</param-name> <param-value> classpath:/config/*.xml </param-value> </context-param> <!-- 维护ioc --> <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> </listener> <!-- 可以使用RequestContextHolder.currentRequestAttributes() 获取到请求的attr --> <listener> <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class> </listener> <!-- 前端核心分发器 --> <servlet> <servlet-name>dispatcher</servlet-name> <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--业务控制器配置文件 --> <init-param> <param-name>contextConfigLocation</param-name> <param-value>classpath:/config/spring-mvc-servlet.xml</param-value> </init-param> <load-on-startup>2</load-on-startup> </servlet> <servlet-mapping> <servlet-name>dispatcher</servlet-name> <!-- <url-pattern>*.do</url-pattern> --> <!-- 配置为/ 不带文件后缀，会造成其它静态文件(js，css等)不能访问。如配为*.do，则不影响静态文件的访问 --> <url-pattern>/</url-pattern> </servlet-mapping> <!-- pushlet 推送 <servlet> <servlet-name>pushlet</servlet-name> <servlet-class> nl.justobjects.pushlet.servlet.Pushlet </servlet-class> <load-on-startup>3</load-on-startup> </servlet> <servlet-mapping> <servlet-name>pushlet</servlet-name> <url-pattern>/pushlet.srv</url-pattern> </servlet-mapping> --> <!-- 字符集 过滤器 --> <filter> <filter-name>CharacterEncodingFilter</filter-name> <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> <init-param> <param-name>encoding</param-name> <param-value>UTF-8</param-value> </init-param> <init-param> <param-name>forceEncoding</param-name> <param-value>true</param-value> </init-param> </filter> <filter-mapping> <filter-name>CharacterEncodingFilter</filter-name> <url-pattern>/*</url-pattern> </filter-mapping> <session-config> <session-timeout>30</session-timeout> </session-config> <error-page> <error-code>500</error-code> <location>/500.html</location> </error-page> <error-page> <error-code>404</error-code> <location>/404.html</location> </error-page> </web-app> 2.配置config包下的applicationContext.xml的内容，这个xml文件包含了所有关于spring的配置。 <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation=" http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" default-lazy-init="false"> <!-- 加载properties文件到spring中，方便在spring中使用 --> <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> <property name="locations"> <list> <value>classpath:/config/jdbc.properties</value> </list> </property> </bean> <!-- 使用jdbc来链接数据库，创建数据源 --> <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> <property name="driverClassName" value="${connection.driverClassName}" /> <property name="url" value="${connection.url}" /> <property name="username" value="${connection.username}" /> <property name="password" value="${connection.password}" /> <property name="maxActive" value="${connection.maxActive}" /> <property name="maxIdle" value="${connection.maxIdle}" /> <property name="minIdle" value="${connection.minIdle}" /> <property name="removeAbandoned" value="${connection.removeAbandoned}" /> <property name="removeAbandonedTimeout" value="${connection.removeAbandonedTimeout}" /> <property name="logAbandoned" value="${connection.logAbandoned}" /> <property name="defaultAutoCommit" value="${connection.defaultAutoCommit}" /> <property name="defaultReadOnly" value="${connection.defaultReadOnly}" /> </bean> <!--配置事务管理器 --> <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> <property name="dataSource" ref="dataSource" /> </bean> <!-- 这里我在原来博文的基础上加入了spring的aop事务管理 --> <aop:config> <!-- 设置pointCut表示哪些方法要加入事务处理 --> <!-- 以下的事务是声明在DAO中，但是通常都会在Service来处理多个业务对象逻辑的关系，注入删除，更新等，此时如果在执行了一个步骤之后抛出异常 就会导致数据不完整，所以事务不应该在DAO层处理，而应该在service，这也就是Spring所提供的一个非常方便的工具，声明式事务 --> <aop:pointcut id="txPointcut" expression="execution(* com.mpc.*.service..*.*(..))" /> <!-- 通过advisor来确定具体要加入事务控制的方法 --> <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" /> </aop:config> <!-- 配置哪些方法要加入事务控制 --> <tx:advice id="txAdvice" transaction-manager="transactionManager"> <tx:attributes> <tx:method name="get*" propagation="REQUIRED" read-only="true" /> <tx:method name="count*" propagation="REQUIRED" read-only="true" /> <tx:method name="find*" propagation="REQUIRED" read-only="true" /> <tx:method name="list*" propagation="REQUIRED" read-only="true" /> <tx:method name="*" propagation="REQUIRED" read-only="true" /> <!-- 一下方法都是可能设计修改的方法，无法设置为只读 --> <tx:method name="add*" propagation="REQUIRED" /> <tx:method name="create*" propagation="REQUIRED" /> <tx:method name="insert*" propagation="REQUIRED" /> <tx:method name="merge*" propagation="REQUIRED" /> <tx:method name="del*" propagation="REQUIRED" /> <tx:method name="remove*" propagation="REQUIRED" /> <tx:method name="put*" propagation="REQUIRED" /> <tx:method name="update*" propagation="REQUIRED" /> <tx:method name="save*" propagation="REQUIRED" /> <!-- 这个hhh是我测试在aop事务和mybatis配合的时候，事务是否生效 --> <tx:method name="hhh*" propagation="REQUIRED" /> </tx:attributes> </tx:advice> <!-- 下面是mybatis的相关配置，这些都需要导入jar包，mybaits-spring.jar，这个在我参考的博文中有，我就不多说了 --> <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> <!--dataSource属性指定要用到的连接池 --> <property name="dataSource" ref="dataSource" /> <!--configLocation属性指定mybatis的核心配置文件 --> <property name="configLocation" value="classpath:/config/Configuration.xml" /> <!-- 这里指定了我们的User.xml这类规定数据库操作的xml文件的位置，在项目中独立把他们放到了一个mapper包下 --> <property name="mapperLocations" value="classpath*:com/mpc/mybaits/mapper/*.xml" /> </bean> <!-- 这个就是用接口变成的方式中，指定从哪里扫描我们的接口，托管到spring中管理，这样在spring的service或dao中就可以使用了 --> <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property name="basePackage" value="com.mpc.mybaits.inter" /> </bean> <!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> sqlSessionFactory属性指定要用到的SqlSessionFactory实例 <property name="sqlSessionFactory" ref="sqlSessionFactory" /> mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象 <property name="mapperInterface" value="com.mpc.mybaits.inter.IUserOperation" /> </bean> --> <context:component-scan base-package="com.mpc.mybaits"> <!-- 注意在这里扫描的时候不要扫描controller，因为在这里装载了controller的话 controller获得的service和dao就是没有事务的--> <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> <!-- secuirty模块需要 --> <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" /> </context:component-scan> </beans> 3.配置config下的spring-mvc-servlet.xml，这xml文件是用来配置springmvc的，主要包括视图的解析以及相关请求的配置 <?xml version="1.0" encoding="UTF-8"?> <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation=" http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd" default-lazy-init="false"> <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> <!-- 默认的视图解析器 --> <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3"> <!-- 如果使用freemaker 或者velocity 需要更改viewClass --> <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> <property name="contentType" value="text/html" /> <property name="prefix" value="/WEB-INF/view/" /> <property name="suffix" value=".jsp" /> </bean> <!-- 开启controller注解支持 --> <!-- 注：如果base-package=com.mpc 则注解事务不起作用 TODO 读源码 --> <context:component-scan base-package="com.mpc.mybaits" use-default-filters="false"> <!-- 在这里扫描controller，controller就能获得有事务的service和dao --> <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" /> <!-- security 模块需要 --> <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" /> </context:component-scan> <!-- 开启注解 --> <mvc:annotation-driven /> <!-- 在配置为/的时候，静态文件的访问会有问题，配置了这个以后，就不会有问题了 --> <mvc:default-servlet-handler /> </beans> 4.config下的Configuration.xml，这个就是我们的mybatis的核心配置文件，是session的配置信息，由于很多功能托管给了spring，所以变的很瘦小 <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd"> <configuration> <typeAliases> <typeAlias alias="User" type="com.mpc.mybaits.model.User" /> <typeAlias alias="Article" type="com.mpc.mybaits.model.Article" /> </typeAliases> <!-- 数据源的相关配置已经托管给了spring --> <!-- <environments default="development"> <environment id="development"> <transactionManager type="JDBC" /> <dataSource type="POOLED"> <property name="driver" value="com.mysql.jdbc.Driver" /> <property name="url" value="jdbc:mysql://127.0.0.1:3306/mybaits" /> <property name="username" value="root" /> <property name="password" value="root" /> </dataSource> </environment> </environments> --> <!-- mappers的配置托管给了spring --> <!-- <mappers> <mapper resource="com/mpc/mybaits/model/User.xml" /> </mappers> --> </configuration> 5.DAO层的实现 package com.mpc.mybaits.dao; import java.util.List; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; public interface UserDAO { public List<Article> getUserArticles(int userid); public User hhhh(User user); } package com.mpc.mybaits.dao.impl; import java.util.List; import javax.annotation.Resource; import org.springframework.stereotype.Repository; import com.mpc.mybaits.dao.UserDAO; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; //规定这个是dao层的组件 @Repository public class UserDaoImpl implements UserDAO { // 注入我们在inter中实现的接口 @Resource private IUserOperation iUserOperation; @Override public List<Article> getUserArticles(int userid) { // 通过在dao中直接使用我们在inter中实现的接口就可以在遵循spring的规范来使用mybaits了 return iUserOperation.getUserArticles(userid); } @Override public User hhhh(User user) { iUserOperation.addUser(user); return user; } } 6.service层的实现 package com.mpc.mybaits.service; import java.util.List; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; public interface UserService { public List<Article> getUserArticles(int userid); public User hhhh(User user); } package com.mpc.mybaits.service.impl; import java.util.List; import javax.annotation.Resource; import org.springframework.stereotype.Service; import com.mpc.mybaits.dao.UserDAO; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; import com.mpc.mybaits.service.UserService; @Service public class UserServiceImpl implements UserService { @Resource private UserDAO userDao; @Override public List<Article> getUserArticles(int userid) { return userDao.getUserArticles(userid); } @Override public User hhhh(User user) { // TODO Auto-generated method stub return userDao.hhhh(user); } } 7.controller层的实现 package com.mpc.mybaits.controller; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map; import javax.annotation.Resource; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.ResponseBody; import com.mpc.mybaits.inter.IUserOperation; import com.mpc.mybaits.model.Article; import com.mpc.mybaits.model.User; import com.mpc.mybaits.service.UserService; import com.mpc.mybaits.utils.PageInfo; /** * @author Administrator * */ @Controller @RequestMapping("/article") public class UserController { @Resource UserService userService; @RequestMapping("/listspring") @ResponseBody public List<Article> listallSpring(HttpServletRequest request, HttpServletResponse response) { List<Article> articles = userService.getUserArticles(1); return articles; }} 8.启动项目，测试结果： mybatis实战教程(mybatis in action)之七:实现mybatis分页 1.按照我参考的博文的相关内容给util包中添加PageInfo、PagePlugin、ReflectHelper这三个类以后，就给代码中添加了分页插件。 2.在user.xml中添加如下代码 <!-- 分页查询测试 --> <select id="selectArticleListPage" resultMap="resultUserArticleList"> select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article where user.id=article.userid and user.id=#{userid} </select> 3.给inter包的接口中添加相应的方法 public List<Article> selectArticleListPage(@Param("page") PageInfo page, @Param("userid") int userid); 4.在Configuration.xml中添加插件 <plugins> <plugin interceptor="com.mpc.mybaits.utils.PagePlugin"> <property name="dialect" value="mysql" /> <property name="pageSqlId" value=".*ListPage.*" /> </plugin> </plugins> 这样所有包含ListPage的mapper中的方法都会执行分页动作。 5.在controller中添加如下方法测试 @RequestMapping("/listpage") public @ResponseBody List<Article> listpage(HttpServletRequest request, HttpServletResponse response) { int currentPage = (request.getParameter("page") == null || Integer .parseInt(request.getParameter("page")) <= 0) ? 1 : Integer .parseInt(request.getParameter("page")); int pageSize = 2; int currentResult = (currentPage - 1) * pageSize; System.out.println(request.getRequestURI()); System.out.println(request.getQueryString()); PageInfo info = new PageInfo(); info.setShowCount(pageSize); info.setCurrentResult(currentResult); List<Article> list = userMapper.selectArticleListPage(info, 1); System.out.println(info); int totalCount = info.getTotalResult(); int lastPage = 0; if (totalCount % pageSize == 0) { lastPage = totalCount / pageSize; } else { lastPage = 1 + totalCount / pageSize; } if (currentPage >= lastPage) { currentPage = lastPage; } String pageStr = ""; // pageStr = String.format( // "<a href=\"%s\">上一页</a> <a href=\"%s\">下一页</a>", // request.getRequestURI() + "?page=" + (currentPage - 1), // request.getRequestURI() + "?page=" + (currentPage + 1)); // // ModelAndView mav = new ModelAndView("list"); // mav.addObject("articles", list); // mav.addObject("pageStr", pageStr); // return mav; return list; } 6.测试结果 我规定的是一页显示两条，查询结果如下： 确实是两条，而我的数据库中有3条数据的。 mybatis实战教程(mybatis in action)之八:mybatis 动态sql语句（这部分貌似和分页一样··没有自己的一些感觉，只是在照猫画虎的学习一些语法来完成动态语句，参照的博客原文中介绍的都很详细了，这里我只是想记录一下自己足迹，不爱的同学可以跳过这一段） 1.mybatis if语句处理 在User.xml中添加如下代码，用来测试if语句 <select id="selectUsersInCondition" parameterType="User" resultMap="resultListUser"> select * from user where <if test="userAge !=null"> userAge=#{userAge} </if> <!-- 自己修改修改··因为如果传入的userAge是null的话，语句就变成了 and userAddress=xxxx，所以多了些判断，往后才知道·原来这种不靠谱的情况有其他解决方式 --> <if test="userAddress !=null and userAge!=null"> and userAddress=#{userAddress} </if> <if test="userAddress !=null and userAge==null"> userAddress=#{userAddress} </if> </select> 在IUserOperation中添加相应的接口方法 public List<User> selectUsersInCondition(User user); 在controller中添加测试方法 /** * @return 测试if动态查询 */ @RequestMapping("/listusercon") @ResponseBody public List<User> listUserCon() { User user = new User(); // user.setUserAge("100"); user.setUserAddress("shanghai,pudong"); return userMapper.selectUsersInCondition(user); } 测试结果 2.choose (when,otherwize)只走其中一条路 在User.xml中添加如下代码 <select id="dynamicChooseTest" parameterType="User" resultMap="resultListUser"> select * from user where <choose> <when test="userAddress != null"> userAddress=#{userAddress} </when> <when test="userAge != null"> userAge = #{userAge} </when> <otherwise> id=1 </otherwise> </choose> </select> 当传如的user对象的userAddress不为空就根据userAddress查询，userAge不为空就根据userAge查询，otherwise在所有的when都不满足的时候生效。但是永远只能选一个。 在IUserOperation中添加如下语句 public List<User> dynamicChooseTest(User user); 测试方法 @RequestMapping("/listuserwhere") @ResponseBody public List<User> listUserWhere() { User user = new User(); // user.setUserAge("100"); // user.setUserAddress("shanghai,pudong"); return userMapper.dynamicChooseTest(user); } 测试结果 可以看到的是在userAge,userAddress都为空的情况下，根据id=1来查询的 3.trim (对包含的内容加上 prefix,或者 suffix 等，前缀，后缀) trim的作用就是可以为<trim></trim>标签所包含的内容加上一个前缀或者后缀，并且可以指定这个前缀或者后缀覆盖住指定的字符串。 在User.xml中添加如下代码 <select id="dynamicTrimTest" parameterType="User" resultMap="resultListUser"> select * from user <trim prefix="where" prefixOverrides="and |or"> <if test="userAge != null"> and userAge = #{userAge} </if> <if test="userAddress != null"> and userAddress = #{userAddress} </if> </trim> </select> 这样写的话，就算是userAge不是空的，那么出现在where后面的也是 userAge=xxx不是and userAge=xxx； 在IUserOperation中添加对应的接口方法； public List<User> dynamicTrimTest(User user); 测试方法 @RequestMapping("/listusertrim") @ResponseBody public List<User> listUserTrim() { User user = new User(); // user.setUserAge("110"); user.setUserAddress("shanghai,pudong"); return userMapper.dynamicTrimTest(user); } 测试结果 可以看到，并没有报sql语句错误，trim是成功的。 4. where (主要是用来简化sql语句中where条件判断的，能智�

Recno:: 55
URL:: http://blog.csdn.net/wangshubo1989/article/category/5590483

ParseText::
WPF - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Introduction to WPF Templates（WPF模板简介） Introduction（简介） Windows Presentation Foundation allows the developer to completely change the look and feel of the controls. This is accomplished by using Control Templates. It means you can render y... 2015-08-29 20:56 阅读 (218) 评论 (0) 通过一个WPF实例进一步理解委托和事件 在前写过“浅谈C#中的委托”和“浅谈C#中的事件”两篇博客，内容有些抽象，似乎难以说明委托和事件的关系。 今天通过一个小程序来进一步说明二者的使用及联系。 首先新建一个WPF应用程序，取名TestDelegateAndEvent。 在.xmal中加入四个按钮，并添加Window_Loaded事件。 代码如下：<Window x:Class="TestDelegateAndEvent.Main... 2015-08-26 16:39 阅读 (252) 评论 (0) MVVM设计模式基础知识--NotificationObject类（Prism框架） 在博客“MVVM设计模式基础知识–INotifyPropertyChanged接口”一文中，已经谈到了INotifyPropertyChanged接口。 今天我们来谈一下NotificationObject类。设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设... 2015-08-26 09:32 阅读 (1265) 评论 (1) MVVM设计模式基础知识--INotifyPropertyChanged接口 在.NET平台上，数据绑定是一项令人十分愉快的技术。利用数据绑定能减少代码，简化控制逻辑。 通常，可以将某个对象的一个属性绑定到一个可视化的控件上，当属性值改变时，控件上的显示数据也随之发生变化。要实现这一功能，只需要为自定义对象实现 INotifyPropertyChanged 接口即可。此接口中定义了 PropertyChanged 事件，我们只需在属性值改变时触发该事件即可.INotifyP... 2015-08-21 15:30 阅读 (263) 评论 (1) MVVM设计模式基础知识--ICommand接口 命令是 Windows Presentation Foundation (WPF) 中的输入机制，它提供的输入处理比设备输入具有更高的语义级别。 命令有若干用途： 第一个用途是将语义以及调用命令的对象与执行命令的逻辑分离开来。这使得多个完全不同的源可以调用相同的命令逻辑，并使得可以针对不同的目标对命令逻辑进行自定义。 例如，在许多应用程序中都能找到的编辑操作 “复制”、 “剪切”和 “粘贴”都... 2015-08-21 14:27 阅读 (284) 评论 (0) WPF-MVVM-Demo MVVM The model-view-viewmodel is a typically WPF pattern. It consists of a view that gets all the user input and forwards it to the viewmodel, typically by using commands. The view actively pulls the... 2015-08-21 08:29 阅读 (249) 评论 (0) C#模拟PrtScn实现截屏 有了之前的基础知识了解，现在开始实现PrtScn和Alt+PrtScn。首先新建一个WPF应用程序，命名为PrintscreenAndAltPrintScreen导入keybd_event方法： 需要为DllImport添加using System.Runtime.InteropServices;[DllImport("user32.dll")] static extern void keybd_... 2015-08-20 15:07 阅读 (275) 评论 (0) WPF中WebBrowser的使用方法及分析 基础知识WebBrowser类 承载并在HTML文档间导航。在WPF托管代码和HTML脚本间启用互操作性。 WebBrowser.Navigate方法(Uri) 异步导航到位于指定Uri处的文档。 命名空间：System.Windows.Controls 程序集:PresentationFramework(在PresentationFramework.dll中) 语法：public vo... 2015-08-07 15:51 阅读 (300) 评论 (0) MFC调用WPF函数 很多情况下WPF调用MFC中的函数，但是也许会有特俗的情况，即MFC调用WPF中的函数。... 2015-08-06 15:32 阅读 (254) 评论 (0) WPF(C#)中Bitmap与BitmapImage相互转换 WPF的Image控件中需要添加source，有时候需要从Bitmap转到BitmapImage；有时候需要从Image控件中提出图像，又需要从BitmapSource转Bitmap.... 2015-08-05 14:10 阅读 (302) 评论 (0) WPF 操作二维码（二） 上一篇文章中讲述了使用C#生成二维码的操作，接下来进一步添加功能。 1. 将生成的二维码保存成本地图片 该操作的关键是如何读取Image控件中资源，并保存到本地。 1.1 创建一个BitmapSource的对象，表示具有特定大小和分辨率的单个不变的像素集。 1.2 创建一个BitmapEncoder的对象，将BitmapFram对象的集合编码为图像流。 1.3... 2015-07-31 13:28 阅读 (203) 评论 (0) WPF 创建二维码 1.在http://zxingnet.codeplex.com/站点上下载ZXing .Net的第三方库 2.新建一个WPF工程 3.引入zxing.dll 4.添加引用空间 using ZXing.Common; using ZXing; using ZXing.QrCode; 4.添加引用System.Drawing 5.添加引用空间 us... 2015-07-30 16:44 阅读 (237) 评论 (0) WPF使用DynamicDataDisplay.dll显示CPU及内存使用曲线 DynamicDataDisplay.dll是一个添加动态数据到您的Silverlight或WPF应用程序交互的可视化控件。它允许创建线图，气泡图，热图和其他复杂的二维图，这是非常常见的科学软件。 DynamicDataDisplay sample charts: 下载地址如下： http://dynamicdatadisplay.codeplex.com/ 首先创建一个W... 2015-07-14 11:24 阅读 (623) 评论 (0) XAML中特殊字符 题目：创建一个包含文本的按钮 错误的XAML如下：   正确的XAML如下： &lt;Click Me&gt;       在XAML中使用实体引用来代替那些特殊字符，实体引用时XAML解析器能够正确解释的特定字符编码，如下列出了可能选用的字符实体。                 特殊字符                 字符实体      ... 2015-07-08 14:17 阅读 (235) 评论 (0) WPF图片浏览器（显示大图、小图等） 1.概述                 最近利用WPF做了一个图片浏览器，能够将文件夹中的所有图片以小图的形式显示，并将选中的图片以512*512大小显示。显示大图当然用的是WPF自带的Image控件，而显示小图则需要将所有的图片放入ListBox控件中，ListBox里的每一个Item为Image控件。为了方便显示多张小图，在ListBox控件外加入了ScrollViewer控件，以便可以... 2015-07-07 08:51 阅读 (417) 评论 (1) 19条数据 共2页 1 2 下一页 尾页 个人资料 wangshubo1989 访问： 127094次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 56
URL:: http://blog.csdn.net/wangshubo1989/article/category/5591039

ParseText::
MFC - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 VS2010中关于char[]转换成LPCWSTR的问题 在写Win32应用程序时候，你可能遭遇到如下错误 : error C2664: ‘LoadImageW’ : cannot convert parameter 2 from ‘char [20]’ to ‘LPCWSTR’“char [20]”转换为“LPCWSTR”一、问题的原因：VS2010默认采用宽字符UNICODE编码方式，定义了Unicode，因此相关的字符串必须为unicode字符串，而... 2015-09-01 14:24 阅读 (254) 评论 (0) 线程临界区相关结构体和函数 单进程的线程可以使用临界资源对象来解决同步互斥问题,该对象不能保证哪个线程能够获得到临界资源对象，因而该系统能公平的对待每一个线程。 每个进程中访问临界资源的那段代码称为临界区（Critical Section）（临界资源是一次仅允许一个进程使用的共享资源）。每次只准许一个进程进入临界区，进入后不允许其他进程进入。不论是硬件临界资源，还是软件临界资源，多个进程必须互斥地对它进行访问。... 2015-08-19 09:37 阅读 (273) 评论 (0) 线程中CreateEvent和SetEvent和ReSetEvent及WaitForSingleObject的用法 概述 首先介绍CreateEvent是创建windows事件的意思，作用主要用在判断线程退出，程锁定方面. CreateEvent：创建或打开一个命名的或无名的事件对象. EVENT有两种状态：发信号，不发信号。 SetEvent/ResetEvent分别将EVENT置为这两种状态分别是发信号与不发信号。 WaitForSingleObject()等待，直到参数所指定的OBJECT成为... 2015-08-18 14:08 阅读 (186) 评论 (0) VC++串口通信基础知识 在Win32下，可以使用两种编程方式实现串口通信，其一是使用ActiveX控件（ActiveX是Microsoft对于一系列策略性面向对象程序技术和工具的称呼，其中主要的技术是组件对象模型（COM）），这种方法程序简单，但欠灵活。其二是调用Windows的API函数，这种方法可以清楚地掌握串口通信的机制，并且自由灵活。 　　本文我们只介绍API串口通信部分。 　　串口的操作可以有两种操作方式：同... 2015-08-18 10:26 阅读 (293) 评论 (1) 串口之WaitForSingleObjec、WaitForMultipleObjects函数详解 WaitForSingleObject 函数 等待函数可使线程自愿进入等待状态，直到一个特定的内核对象变为已通知状态为止。 DWORD WaitForSingleObject( HANDLE hObject,      DWORD dwMilliseconds ); 第一个参数hObject标识一个能够支持被通知/未通知的内核对象（前面列出的任何一种... 2015-08-18 10:23 阅读 (143) 评论 (0) 串口之ReadFile、WriteFile函数详解 BOOL ReadFile( 　　HANDLE hFile, //文件的句柄 　　LPVOID lpBuffer, //用于保存读入数据的一个缓冲区 　　DWORD nNumberOfBytesToRead, //要读入的字符数 　　LPDWORD lpNumberOfBytesRead, //指向实际读取字节数的指针 　　LPOVERLAPPED lpOverl... 2015-08-18 10:17 阅读 (307) 评论 (0) 串口之SetUpComm、PurgeComm函数详解 SetupComm 该函数初始化一个指定的通信设备的通信参数。 BOOL SetupComm（ HANDLE hFile， DWORD dwInQueue， DWORD dwOutQueue ）; 参数 hFile [IN]通讯设备句柄。 CreateFile函数返回此句柄。 dwInQueue [in]指定推荐的大小，以字节... 2015-08-18 09:35 阅读 (235) 评论 (0) 串口之GetCommTimeouts、SetCommTimeouts函数详解 Windows系统利用此函数获取特定的通讯设备读写时的超时参数设定，GetCommTimeouts函数声明如下： BOOL GetCommTimeouts( HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts ); GetCommTimeouts函数的第一个参数hFile是由CreateFile函数返回指向已打开串行口的句柄。第二个... 2015-08-18 09:28 阅读 (194) 评论 (0) 串口之GetCommState、SetCommState函数详解 GetCommState 读取串口设置(波特率,校验,停止位,数据位等). 函数声明： BOOL GetCommState( HANDLE hFile, LPDCB lpDCB ); GetCommState函数的第一个参数hFile是由CreateFile函数返回指向已打开串行口的句柄。第二个参数指向设备控制块DCB。如果函数调用成功，则返回值为非0；若函数调... 2015-08-18 09:23 阅读 (186) 评论 (0) 串口之OVERLAPPED结构体详解 typedef struct _OVERLAPPED {  　　DWORD Internal;  　　DWORD InternalHigh;  　　DWORD Offset;  　　DWORD OffsetHigh;  　HANDLE hEvent; } OVERLAPPED Internal: 预留给操作系统使用。它指定一个独立于系统的状态,当GetOverlappedResul... 2015-08-18 09:18 阅读 (164) 评论 (0) 串口之COMMTIMEOUTS结构体详解 COMMTIMEOUTS主要用于串口超时参数设置。COMMTIMEOUTS结构如下：  typedef struct _COMMTIMEOUTS {  DWORD ReadIntervalTimeout;  DWORD ReadTotalTimeoutMultiplier;  DWORD ReadTotalTimeoutConstant;  DWORD WriteTotalTimeo... 2015-08-18 09:14 阅读 (268) 评论 (0) 串口之DCB结构体详解 DCB结构详细说明：  typedef struct _DCB { DWORD DCBlength; DWORD BaudRate; DWORD fBinary: 1; DWORD fParity: 1; DWORD fOutxCtsFlow:1; DWORD fOutxDsrFlow:1; DWORD fDtrControl:2; DWORD... 2015-08-18 09:03 阅读 (184) 评论 (0) 串口之CreateFile 函数详解 HANDLE CreateFile( LPCTSTR lpFileName, //指向文件名的指针 DWORD dwDesiredAccess, //访问模式（写/读） DWORD dwShareMode, //共享模式 LPSECURITY_ATTRIBUTES lpSecurityAttributes, //指向安全属性的指针 DWORD dwCreationDi... 2015-08-18 08:40 阅读 (280) 评论 (0) MFC调用WPF函数 很多情况下WPF调用MFC中的函数，但是也许会有特俗的情况，即MFC调用WPF中的函数。... 2015-08-06 15:32 阅读 (254) 评论 (0) 浅谈MFC中BitBlt与StretchDIBits的区别 一、基础知识1.BitBlt BitBlt 用于从原设备中复制位图到目标设备，语法格式如下： BOOL BitBlt( HDC hdcDest, // handle to destination DC int nXDest, // 目标矩形区域的左上角x轴坐标点。 int nYDest, // 目标矩形区域的左上角y轴坐标点。 int nWidth, // 在目标设备中绘制位图的宽度。... 2015-08-06 13:14 阅读 (266) 评论 (0) 17条数据 共2页 1 2 下一页 尾页 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 57
URL:: http://blog.csdn.net/wangshubo1989/article/category/5603823

ParseText::
C++ - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 实战c++中的智能指针unique_ptr系列-- std::unique_ptr的构造(尽量使用C++14中的std::make_unique，而不是new) 上篇博客算是unique_ptr的一个开篇，就是简单说说为何要使用unique_ptr，与传统指针相比，智能指针的优势而已。现在就从构造开始说起！看看这些构造方法：default (1) constexpr unique_ptr() noexcept;from null pointer (2) constexpr unique_ptr (nullptr_t) noexcept : uniqu... 2015-12-24 23:59 阅读 (508) 评论 (0) 实战c++中的智能指针unique_ptr系列-- 使用std::unique_ptr代替new operator(错误：‘unique_ptr’ is not a member of ‘std’) 写了很多篇关于vector的博客，其实vector很便捷，也很简单。但是很多易错的问题都是vector中的元素为智能指针所引起的。所以决定开始写一写关于智能指针的故事，尤其是unique_ptr指针的故事。这是个开始，就让我们使用std::unique_ptr代替new operator吧！还是用程序说话：#include int main() { while (true... 2015-12-24 22:05 阅读 (485) 评论 (0) 实战c++中的vector系列--再谈vector的insert()方法(都是make_move_iterator惹的祸) 之前说过了关于vector的insert()方法，把vector B的元素插入到vector A中，vector A中的结果我们可想而知，但是vector B中的元素还会如何？看看之前写过的程序：#include #include int main () { std::vector myvector (3,100); std::vector... 2015-12-24 21:33 阅读 (578) 评论 (0) 实战c++中的vector系列--对vector<自定义类>使用std::find 和 std::find_if 算法 之前博客讲了一些关于std::find和std::find_ if的一些用法，但是没有讲述对于vector中存储的是自定义的类，那么怎么样使用std::find和std::find_if进行查找呢？先定义一个类：class Item { private: std::string m_ItemId; int m_Price; int m_Count; public:... 2015-12-23 21:19 阅读 (721) 评论 (0) 实战c++中的vector系列--使用sort算法对vector<unique_ptr<string>>进行排序(sort函数“应输入 2 个参数，却提供了 3 个) 之前博客写了对vector使用sort算法进行的排序，之前也写到过vector<unique_ptr>的一些处理方法。今天就写一下对vector<unique_ptr>使用sort算法进行排序。#include #include #include #include #include<memory... 2015-12-23 20:16 阅读 (609) 评论 (0) 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) 使用vector容器，即避免不了进行查找，所以今天就罗列一些stl的find算法应用于vector中。find() Returns an iterator to the first element in the range [first,last) that compares equal to val. If no such element is found, the function retur... 2015-12-22 23:33 阅读 (725) 评论 (1) 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) 写了挺多关于vector的操作了，正好工作中遇到对vector进行排序的问题，这里就讨论一下。直接使用sort算法，那就先了解一下：template void sort (RandomAccessIterator first, RandomAccessIterator last); template <class RandomAccess... 2015-12-22 21:13 阅读 (557) 评论 (1) 实战c++中的vector系列--vector的遍历(stl算法、vector迭代器(不要在循环中判断不等于end())、operator[]) 遍历一个vector容器有很多种方法，使用起来也是仁者见仁。通过索引遍历：for (i = 0; i<v.size(); i++) { cout << v[i] << " "; }迭代器遍历：for (vInt::const_iterator iter = v.begin(); iter != v.end();iter++) { cout << *iter << " "; }算法遍历... 2015-12-21 22:01 阅读 (554) 评论 (0) 实战c++中的vector系列--vector的一些异常 今天就写一写vector的一些异常，可以捕捉的异常。out_of_range 相当于数组的越界了。vector会自动增大容量，但是如果索引超出了当前的size，就会引发异常。#include #include using namespace std; int main() { vectorv(4); std::cout << v[0]... 2015-12-21 20:43 阅读 (523) 评论 (0) 实战c++中的vector系列--正确释放vector的内存(clear(), swap(), shrink_to_fit()) 关于vector已经写的差不多了，似乎要接近尾声了，从初始化到如何添加元素再到copy元素都有所涉及，是时候谈一谈内存的释放了。是的，对于数据量很小的vector，完全没必要自己进行主动的释放，因为那样对程序的效率几乎没有影响。但是当vector中存入大量的数据后，并且都数据进行了一些操作，比如删除后，如果我们能积极主动的去释放内存，那么是非常明智的。写到这里，应该明确了size和capacity的... 2015-12-19 21:18 阅读 (790) 评论 (0) 实战c++中的vector系列--C++11对vector成员函数的扩展(cbegin()、cend()、crbegin()、crend()、emplace()、data()) 前面提到的emplace_back就是C++11所增加的内容。所以这篇博客就是想罗列一下C++11对vector容器的扩充。std::vector::cbegin和std::vector::cend 这两个方法是与std::vector::begin和std::vector::end相对应的，从字面就能看出来，多了一个’c’，顾名思义就是const的意思。 所以： std::vector::c... 2015-12-19 18:07 阅读 (798) 评论 (0) 实战c++中的vector系列--emplace_back造成的引用失效 上篇将了对于struct或是class为何emplace_back要优越于push_back，但是还有一些细节没有提及。今天就谈一谈emplace_back造成的引用失效。直接撸代码了：#include #include #include using namespace std;int main() { vector ive... 2015-12-19 13:32 阅读 (517) 评论 (0) 实战c++中的vector系列--知道emplace_back为何优于push_back吗？ 上一篇博客说道vector中放入struct，我们先构造一个struct对象，再push_back。那段代码中，之所以不能使用emplace_back，就是因为我们定义的struct没有显示的构造函数。emplace和解？ 放列的意思。这次我们不把struct当做vector的元素了，我们把一个class当做vector的元素，写下代码：#include #include <... 2015-12-19 10:51 阅读 (571) 评论 (0) 实战c++中的vector系列--creating vector of local structure、vector of structs initialization 之前一直没有使用过vector，现在就写一个简短的代码： #include #include int main() { struct st { int a; }; std::vector v; v.resize(4); for (std::vector::size_type i = 0; i <... 2015-12-19 00:52 阅读 (639) 评论 (0) 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> 之前博客讲到 vector可以使用insert方法，将一个vector copy到另一个vector的后面。之前的博客也讲到过，如果vector容器内部放的是unique_ptr是需要进行所有权转移的。现在就来八一八如何vector<unique_ptr<>> insert to vector<unique_ptr<>>如果常规的vector，我们就可以这么使用insert：// insertin... 2015-12-17 23:05 阅读 (830) 评论 (1) 148条数据 共10页 1 2 3 4 5 ... 下一页 尾页 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 58
URL:: http://blog.csdn.net/wangshubo1989/article/category/5633599

ParseText::
C# - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 浅析C#中const与readonly的区别 在文章《浅析C++中的const（比#define的优势）》中简要分析了const关键字的作用，以及较#define的优势。C#中同样具有关键字const。但是c#中还有一个关键字叫readonly，很多人容易搞混二者的区别，我也不例外。按照国际惯例，首先看一下MSDN中如何描述的：Constants are immutable values which are known at compile t... 2015-09-15 08:54 阅读 (424) 评论 (2) C#实现远程开机（局域网测试通过） 首先介绍相关知识。 UDP协议 UDP 是User Datagram Protocol的简称， 中文名是用户数据报协议，是OSI（Open System Interconnection，开放式系统互联） 参考模型中一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。 下面是UDP与TCP的一些区别： **A)**UDP是无连接的。相比于TCP协议，UDP协议在传送数据... 2015-09-08 10:31 阅读 (168) 评论 (0) 浅析C#中的索引器 索引器允许类或结构的实例按照与数组相同的方式进行索引。索引器类似于属性，不同之处在于它们的访问器采用参数。 索引器概述 索引器使得对象可按照与数组相似的方法进行索引。 get 访问器返回值。set 访问器分配值。 this 关键字用于定义索引器。 value 关键字用于定义由 set 索引器分配的值。 索引器不必根据整数值进行索引，由您决定如何定义特定的查找机制。 索引器可被重载。... 2015-09-07 08:46 阅读 (167) 评论 (0) 浅析C#中抽象类和接口的区别 文章《浅析C#中接口的重要性》中讲述了如何声明和使用接口。但是C#具有abstract关键字形成的抽象类，那么二者我们该如何选择呢！C#允许把类和函数声明为abstract。抽象类不能实例化，而抽象函数也不能直接实现，必须在非抽象的派生类中重写。显然，抽象函数本身是虚拟的，但是不能提供virtual关键字。如果类包含了抽象函数，则该类也是抽象的，必须声明为抽象。定义抽象类：public abstra... 2015-09-01 09:00 阅读 (454) 评论 (0) 浅析C#中接口的重要性 C#中有了接口这一概念。我觉得接口就像是C++中的抽象基类。 接口可以理解为是一种约定，使得实现这个接口的类或是结构在形式上保持一致。声明接口： 语法和声明抽象类完全相同。 　　public interface IBankAccount { void PayIn(decimal amount); bool Withdraw(decimal amount); decima... 2015-09-01 08:53 阅读 (196) 评论 (0) C#调用微软自带的计算器、记事本等软件 基础知识介绍：Process类 提供对本地和远程进程的访问并使您能够启动和停止本地系统进程 命名空间：System.Diagnostics 程序集：System(在System.dll中) 语法：public class Process : ComponentProcess.Start方法（ProcessStartInfo） 启动由包含进程启动信息（例如，要启动的进程的文件名）的参数指定的... 2015-08-28 15:45 阅读 (569) 评论 (0) 浅析C#(WPF)中的Application类 Application类 封装WFP应用程序。 命名空间：System.Windows 语法：public class Application : DispatcherObject, IQueryAmbient 可以看到Application继承了DispatcherObject类和IQueryAmbient接口。首先看一下DispatcherObject类 DispatcherObjec... 2015-08-28 10:24 阅读 (320) 评论 (0) 通过一个WPF实例进一步理解委托和事件 在前写过“浅谈C#中的委托”和“浅谈C#中的事件”两篇博客，内容有些抽象，似乎难以说明委托和事件的关系。 今天通过一个小程序来进一步说明二者的使用及联系。 首先新建一个WPF应用程序，取名TestDelegateAndEvent。 在.xmal中加入四个按钮，并添加Window_Loaded事件。 代码如下：<Window x:Class="TestDelegateAndEvent.Main... 2015-08-26 16:39 阅读 (252) 评论 (0) C# 中动态调用C++动态链接 之前的文章中讲述过从DLL中导出变量，其中包括了静态加载和动态加载。C#调用C++动态链接库同样分为静态加载和动态加载。fellen的博客“WPF中使用MFC动态链接库（dll）函数”中讲述的是如何C#静态加载DLL，即需要将C++代码编译生成的Dll放在C#程序的Bin目录下，并在引入函数的位置加入[DllImport(“xxx.dll”)] 。由于Dll路径的限制，使用的不是很方便，C#中我们经... 2015-08-26 11:23 阅读 (347) 评论 (0) 浅析C#中的事件 讲过了委托，不得不讲事件。 事件基于委托，为委托提供了一种发布/订阅机制。 在发生其他类或对象关注的事情时，类或对象可通过事件通知它们。发送（或引发）事件的类称为“发行者”，接收（或处理）事件的类称为“订户”。 在典型的 C# Windows 窗体或 Web 应用程序中，可订阅由控件（如按钮和列表框）引发的事件。可使用 Visual C# 集成开发环境 (IDE) 来浏览控件发布的事件，选择要处理... 2015-08-26 09:27 阅读 (275) 评论 (0) 浅析C#中的Lambda表达式 上文中用了一点篇幅讲述了匿名方法的使用。自从C#3.0开始，就可以使用一种新语法把视线代码赋予委托，即Lambda表达式。只要有委托参数类型的地方，就可以使用Lambda表达式。上文中使用匿名方法的例子可以改为使用Lambda表达式。语法： Lambda表达式的定义方式为：“([参数列表]) => 表达式”。运算符“=>”是一种与赋值运算“=”具有相同优先级的右结合运算符，在英语里读作：“goes... 2015-08-25 11:54 阅读 (277) 评论 (1) 浅析C#中的Func<>委托 Func委托 封装一个不具有参数但是却返回TResult参数指定的类型值的方法。 语法： public delegate TResult Func() Func委托 封装一个具有一个参数并返回 TResult 参数指定的类型值的方法。 语法 public delegate TRe... 2015-08-25 11:42 阅读 (278) 评论 (1) 浅析C#中的委托 委托是寻址方法的.NET版本。在C++中，函数指针只不过是一个指向内存位置的指针，它不是类型安全的。而.NET委托完全不同，委托是安全类型的类，它定义了返回类型和参数的类型。 当把方法传递给其他方法时，需要使用委托。C#中使用一个类时，分两个阶段。首先需要定义这个类，即告诉编译器这个类由什么组成的。然后，实例化一个对象（除非只使用静态方法）。对于委托也是类似，也需要两个步骤。首先必须定义要使用的委... 2015-08-25 10:10 阅读 (436) 评论 (1) Events and Delegates(事件和委托) Introduction One of the most interesting concepts in C# is Event-Driven approach. Though it is a simple technique, this article is here for beginners and those who are struggling to understand the eve... 2015-08-22 17:08 阅读 (247) 评论 (1) C#中的属性（get、set、value） C#语言在面向对象设计和编程中对数据安全提出了严格的要求，其中一个重要的原则就是数据封装。根据这一原则，C#程序设计中要求开发人员对特定类的数据字段尽量不以公有方式提供给外界。因此在类内部多数字段的访问权限被限定为private或是public，而这些字段与外界的交流经常采用属性来进行。属性使类能够以一种公开的方法获取和设置值，同时隐藏实现或验证代码。属性是这样的成员：它们提供灵活的机制来读取、编写... 2015-08-21 12:44 阅读 (248) 评论 (0) 36条数据 共3页 1 2 3 下一页 尾页 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 59
URL:: http://blog.csdn.net/wangshubo1989/article/category/5796585

ParseText::
DuiLib - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 解决方案--duilib中禁止一个窗口双击最大化 用duilib开发了一个窗口，比如是登录窗口，那么这个窗口的窗口的双击最大化就毫无意义，甚至带来灾难，我们就要明确禁止这样的行为。我们应该明确，一个窗口创建的时候就赋予了它一些属性，那我们就首先看看如何创建窗口的，即Create函数。例如，你定义了一个窗口类叫LogInWnd，你会在需要的时候这用进行创建一个窗口：LogInWnd login_wnd; login_wnd.Create(nullpt... 2015-10-28 21:50 阅读 (235) 评论 (1) 解决方案--duilib中edit获得鼠标焦点后右边框被覆盖 用duilib做了一个登录框，用户名的输入使用的是edit控件。XML中是这样写的：<Edit name="subdomain_edit" tipvalue="输入用户名" tipvaluecolor="#FF989898" nativetextcolor="#FF000000" nativebkcolor="#FFFFFFFF" bordersize="1" width="160" height=... 2015-10-27 20:36 阅读 (198) 评论 (0) DuiLib响应按钮事件 配置方法以及需要重写的函数已经在在《初识DuiLib界面库》中已经介绍。 今天需要在之前代码的基础上加入相应Enter按钮的事件，并弹出messagebox按钮。 响应事件在Notify函数中进行处理。#include "UIlib.h" using namespace DuiLib; # pragma comment(lib, "DuiLib_d.lib") # pragma comment(... 2015-09-08 16:42 阅读 (202) 评论 (2) 初识Duilib界面库 国内首个开源 的directui 界面库，开放，共享，惠众，共赢，遵循bsd协议，可以免费用于商业项目，目前支持Windows 32 、Window CE、Mobile等平台。Duilib 是一款强大的界面开发工具，可以将用户界面和处理逻辑彻底分离，极大地提高用户界面的开发效率。提供所见即所得的开发工具UIDesigner。使用DirectUI后将使得我们的设计人员彻底解 放，不会受到开发的束缚，可... 2015-09-02 16:42 阅读 (197) 评论 (0) 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 60
URL:: http://blog.csdn.net/wangshubo1989/article/category/5799227

ParseText::
windows编程 - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Windows程序设计--文本输出(二) 今天要详细讲解一下TEXTOUT，它是显示文本最重要的GDI函数。CSDN是这样描述的： The TextOut function writes a character string at the specified location, using the currently selected font, background color, and text color.我们看看他的原型：BOOL... 2015-11-01 22:07 阅读 (355) 评论 (3) windows程序托盘图标以及消息提示--示例程序 之前两个博客介绍一些基本姿势，都是msdn上的，今天就介绍一下如何使用吧。为了简单起见，还是创建一个MFC based on dialog 功能吧。1创建托盘图标，封装了成一个函数：NOTIFYICONDATA m_nid; bool SetupTrayIcon(HWND m_hWnd) { m_nid.cbSize=sizeof(NOTIFYICONDATA);// 结构大小 m_... 2015-10-31 14:56 阅读 (218) 评论 (1) windows程序托盘图标以及消息提示--基本知识（Shell_NotifyIcon） 之前说了NOTIFYICONDATA结构体的一些内容，下面继续。Shell_NotifyIcon函数，向任务栏的状态栏发送一个消息。原型如下：BOOL Shell_NotifyIcon(DWORD dwMessage,PNOTIFYICONDATA lpdata)参数简要说明： dwMessage为输入参数，传递发送的消息，表明要执行的操作。 可选的值如下： NIM_ADD 向托盘区域添加一... 2015-10-31 14:26 阅读 (269) 评论 (1) windows程序托盘图标以及消息提示--基本知识（NOTIFYICONDATA） 首先介绍一下基本知识： NOTIFYICONDATA结构体，语法如下：typedef struct _NOTIFYICONDATA { DWORD cbSize; HWND hWnd; UINT uID; UINT uFlags; UINT uCallbackMessage; HICON hIcon; TCHAR szTip[64]; DWORD dwState; DWORD dwStateMas... 2015-10-31 14:17 阅读 (155) 评论 (0) 详解VMware Workstation 12 安装虚拟机 一、背景作为一个windows客户端开发人员，不得不面对的就是windows版本兼容问题。比如说为了使开发的客户端兼容XP，需要在VS编译器中的平台工具集选择“Visual Studio 2015-Windows xp(v140_xp)”等。为了方便开发人员自己测试，在自己的电脑上运行多个系统就ok了。虚拟化巨头VMware发布了VMware Workstation 12 ，能很好的贴合win10的... 2015-10-30 22:49 阅读 (186) 评论 (1) 谷歌C++编程规范补充--windows编程规范 之前博客《谷歌C++编程规范笔记》整理了一些关于C++ Style方面的东西，看的是中文版本的。但是今天翻阅英文版本的，在最后，发现了 Google C++ Style 关于windows的。Windows programmers have developed their own set of coding conventions, mainly derived from the conventio... 2015-10-27 22:03 阅读 (230) 评论 (1) 解决方案--gloox源码编译错误 在博客《解决方案–VS2015编译的程序在其他机器上缺少msvcp120.dll》中，讲诉了一些问题，和解决方案，最后又遇到了gloox编译错误的问题？问题如下：1>------ Build started: Project: gloox-1.0, Configuration: Release Win32 ------ Creating library C:\Install\gloox-1.0.1... 2015-10-26 21:20 阅读 (191) 评论 (0) 解决方案--VS2015编译的程序在其他机器上缺少msvcp120.dll 今天分享一个自己在开发过程中遇到的困难。用VS2015开发了一个windows客户端（win32项目），在自己的机器上运行很流畅。当你得意的把releas版本进行打包，并进行发布后，问题来了？很多人反馈运行时缺少msvcp140.dll，甚至有人在XP系统上完全不能用。那么首先看看是如何解决的： 在工程上打开属性，选择C/C++，选择代码生成，把运行库改为“多线程（/MT）”。重新编译即可。 但... 2015-10-26 20:54 阅读 (334) 评论 (0) Windows程序设计--文本输出(一) 绘制和重绘 之前就写过，windows是一个消息驱动的系统，有两种方式把各种事件通知给应用程序：1是把消息放在应用程序的消息队列中；2是向适当的窗口过程直接发送消息。 这里主要讨论的是WM_PAINT消息 ，以下任何一个事件发送，窗口过程都会收到一条WM_PAINT消息： 1用户移动一个窗口，导致原来被遮盖的部分窗口暴露出来； 2用户调整了窗口的大小； 3程序调用ScrollWindow或... 2015-10-21 23:10 阅读 (197) 评论 (0) Windows程序设计--窗口与消息 进行Windows程序设计时，其实就是在进行一种面向对象的编程。在面向对象中，对象是代码和数据的组合，一个窗口也是一个对象。在用户眼中，窗口是屏幕上的对象，并可借助键盘或鼠标直接与之进行交互。用户对窗口的输入以“消息”的形式传递给窗口，而窗口也借助消息来与其他窗口进行通信。窗口创建看似容易，调用CreateWindow函数即可。但是在创建窗口之前，需要注册一个窗口类。而窗口类又确定了处理窗口消息的窗... 2015-09-09 14:43 阅读 (181) 评论 (1) Windows程序设计--起步 第一个windows程序： 首先建立一个win32 application。对于二者的区别可以参见博客《Hey,别搞错了Win32项目和Win32控制台程序》main函数我们都很熟悉，而且许多程序员更加倾向于main函数也应该有个明确的返回值。 windows程序的winmain函数与main函数有相同的组成部分，即include语句、程序入口、函数调用、以及return语句。#include<... 2015-09-08 14:03 阅读 (219) 评论 (2) 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 61
URL:: http://blog.csdn.net/wangshubo1989/article/category/5892633

ParseText::
非技术 - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 你曾后悔进入 IT 行业吗？ 转自：http://www.zhihu.com/question/24306436 著作权归作者所有。在知乎看了一个帖子：你曾后悔进入 IT 行业吗？今天转一些那些让你无怨无悔干IT的原因：1. 能养家糊口：这个必须要放在第一位的来说，那就是干IT能养活自己。在中国，如果单看工资收入，金融和IT绝对是排在前几位的行业。IT行业相对其他传统行业来说，工资水平还是处于较高的水平，更别说你幸运的投身到一... 2015-11-20 23:25 阅读 (769) 评论 (1) 提交中的骂声：哪种编程语言最遭骂？ 正如任何程序员会告诉你的，编程会让你骂骂咧咧。但你知道么，写 C++ 程序，会比写 PHP 或 Python 程序所遭到的骂声更多。开发人员安德鲁·沃斯（Andrew Vos）在找一个周末项目，于是决定在 GitHub 上抓取100百万条提交信息（commit），并扫描其中的脏话。他把脏话限于乔治·卡林的七大脏词，而后根据编程语言种类统计结果。为确保编程语言的流行程度不影响统计结果，沃斯对每种编程语... 2015-11-12 22:22 阅读 (334) 评论 (1) 苹果vs谷歌：与微软的战争教会了苹果什么 新书《缠斗：苹果与谷歌(微博)如何开战并掀起一场革命》的内容指出，苹果和谷歌的移动平台同时共存，只不过是历史偏离正轨的结果。文章指出，平台之间的战争总是带有一种倾向，那就是赢家通吃，而输家则一无所获。正如30年前苹果与微软之间的战争以后者胜出为结局一样，苹果与谷歌之间平台大战的收场也终将是不死不休。而对时下都如日中天的这两家科技巨头而言，在这场大战中出现失误将带来“生命不能承受之痛”。全文： 现已... 2015-11-11 00:26 阅读 (219) 评论 (2) Google Interview Questions: Software Engineer 1Why are manhole covers round?2What is the difference between a mutex and a semaphore? Which one would you use to protect access to an increment operation?3A man pushed his car to a hotel and lost hi... 2015-11-02 23:27 阅读 (146) 评论 (0) 微信为何先推出mac版本而后推出windows版本 在今年2月份，微信推出过Mac客户端，事隔10个月后，终于在Windows端也开始测试客户端了。 　　 　　从产品使用体验上看，Windows版微信客户端与年初推出的Mac版客户端差不多，都只有最基本的聊天功能，朋友圈、微信支付等功能还是只能在手机端使用。 　　 　　同时，在一些新的小功能上，比如向手机发送消息确认登陆等方面，Windows版微信保持了与Mac版同步。 　　 　　10个月... 2015-10-29 22:44 阅读 (218) 评论 (1) C\C++编译器的未来.我们还需要C++么? 文章出处： http://my.oschina.net/sw23120/blog/119584在未来我们还需要纯C++开发模式么?随着C++11的诞生,C++已经越来越臃肿,从03的时候就觉得C++实在是太复杂了。以一个合格C++程序员的标准来简单的来说3-5年略有小成,5-8年才可以说自己是个合格的C++程序员,10年以上才敢到处和别人说自己精通C++,不至于被某人用个很bt的问题问倒。C++程... 2015-10-26 21:33 阅读 (2181) 评论 (2) 微软VS苹果 桌面操作系统的终极一战 文章出处：http://digi.tech.qq.com/a/20150723/010837.htm[摘要]今年的桌面操作系统大战，很有可能是这两家巨头厂商对于抢夺用户的桌面设备的终极一战。 7月29日这一天，微软将在全球同步推送最新的桌面操作系统Windows 10，在经历了“就那样”的Windows 8与8.1之后，Windows 10似乎又一次作为这家软件巨头的救命稻草被推上了历史的舞台。与... 2015-10-24 21:50 阅读 (411) 评论 (3) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） 我从业到现在已经十年多了，这个问题是我从业五到七八年时最苦恼的话题。当时觉得这个世界太不友好了，互联网这个行业全是年轻人，30岁以上就压力非常大，我缓解这种压力的方式就是每个周末必须得去做一些我认为比较有意义的事。说到底是因为内心有恐慌，担心有一天会失业，如果失业了一定要给自己找一个后路或者给自己备一技之长，不会因为被互联网淘汰之后收入就锐减。一、职业焦虑的表层分析 为什么会有这样的焦虑？先做一个... 2015-10-20 22:17 阅读 (2486) 评论 (9) 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 62
URL:: http://blog.csdn.net/wangshubo1989/article/category/6004479

ParseText::
libcef - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 一起学libcef--一个应用libcef的简单例子（windows程序） 之前博客《一起学libcef–搭建自己的libcef运行环境（Win32程序，错误C2220解决方案）》讲述了如何在win32程序中搭建libcef的环境，今天就通过一个简单的例子，在windows程序中使用libcef。现在再重新写一下如何搞？直接在源代码上搞起！ 1 打开源码cefclient解决方案 2 确保cefclient例子可以完美运行 3 在cefclient中，除了util.h... 2015-12-06 23:01 阅读 (822) 评论 (0) 一起学libcef--libcef的基本类和方法介绍（如何产生一个你自己的浏览器） 现在还是在win32项目的基础上，对libcef进行简单的剖析。注意是针对WinMain函数中libcef的类以及方法的介绍。首先上一段代码：#include #include "cefsimple/simple_app.h"// Entry point function for all processes. int APIENTRY WinMain(HINSTANCE hI... 2015-12-05 21:45 阅读 (1051) 评论 (0) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） 现在就来讲讲如何在自己的win32程序中搭建libcef运行环境。首先就是建一个空的win32项目，例如名字为TestLibCef。1. cefsimple目录（注意是拷贝文件夹）拷贝到新工程下并包含在项目中（注意，是TestLibCef\TestLibCef文件夹下）2. 并在TestLibCef\TestLibCef文件夹下，新建一个dll文件夹 源码把Debug目录下的文件全部拷贝到该文件夹... 2015-12-04 22:10 阅读 (1015) 评论 (4) 一起学libcef--源码文件介绍(VS2015运行DEMO) 昨天的博客《一起学libcef–开篇(下载、CMake的使用)》讲诉如何下载CEF，并如何得到对应vs版本的解决方案。今天就展示一下，得到的工程文件夹中文件的作用。include – 这个文件夹里面放CEF客户应用程序所需的头文件 libcef – 此文件夹存放CEF的静态库 libcef_dll – 此文件夹CEF的动态拉链库 tests – 此文件夹存放测试的例子 cef... 2015-12-04 20:57 阅读 (804) 评论 (0) 一起学libcef--开篇(下载、CMake的使用) 微信、qq等很多windows客户端都用到了libcef.dll，从现在开始准备学习学习。1.什么是libcef Chromium嵌入式框架对于嵌入chromium浏览器的其他应用程序来说是一个简单的框架。。其遵循建立于2008年Marshall Greenblatt 的BSD许可协议。基于Google Chromium工程。不像Chromium工程本身，主要集中开发Google Chrome应用... 2015-12-03 22:08 阅读 (945) 评论 (0) 个人资料 wangshubo1989 访问： 127094次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 63
URL:: http://blog.csdn.net/wangshubo1989/article/month/2015/09

ParseText::
2015年09月存档 - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 吐血整理C++11新特性 本文整理一些C++11的新特性，欢迎补充。auto关键字 在C++11之前，auto关键字用来指定存储期。在新标准中，它的功能变为类型推断。auto现在成了一个类型的占位符，通知编译器去根据初始化代码推断所声明变量的真实类型。各种作用域内声明变量都可以用到它。例如，名空间中，程序块中，或是for循环的初始化语句中。auto i = 42; // i is an int auto l... 2015-09-16 10:12 阅读 (378) 评论 (2) 宁以const引用传递代替按值传递（内置类型除外） 《浅析C++中的引用（&）》中讲述了引用的作用。缺省的情况下C++是按值传递的，这可能付出昂贵的代价（费时）。 看看下面的代码吧：class Person { public: Person(); virtual ~Person(); ... private: std::string name; std::string adddress; }; clas... 2015-09-16 09:21 阅读 (199) 评论 (1) 通过一个C++类复习一些技术 生活在希望中的人,没有音乐照样跳舞！虽然CSDN取消了博客发到首页功能，但是博客还会继续。孤芳自赏，自我分享。下面我将通过一段代码来回顾一下C++中的类，其中包括的知识点都会进行注释讲解。 首先声明类 string.h文件，先上代码。#ifndef STRING_H_ #define STRING_H_ #include using std::ostream; using s... 2015-09-16 08:42 阅读 (247) 评论 (2) 疯了！通过返回值进行函数重载 重载函数是函数的一种特殊情况，为方便使用，C++允许在同一范围中声明几个功能类似的同名函数，但是这些同名函数的形式参数（指参数的个数、类型或者顺序）必须不同，也就是说用同一个运算符完成不同的运算功能。这就是重载函数。重载函数常用来实现功能类似而所处理的数据类型不同的问题。重载不关心函数的返回值类型double calculate(double); float calculate(double);以上... 2015-09-15 11:37 阅读 (194) 评论 (1) 浅析C++中的static(一些补充) 博客《浅析C++中的static》中讲述了一些关于static的用法，但是不够详细。现在进行一些补充。1.static变量不能声明为mutable class X { public: mutable static int fx1;//错误 void inc1() { } }; int X::fx1=1;2.局部类内不能有sta... 2015-09-15 09:33 阅读 (211) 评论 (1) 浅析C#中const与readonly的区别 在文章《浅析C++中的const（比#define的优势）》中简要分析了const关键字的作用，以及较#define的优势。C#中同样具有关键字const。但是c#中还有一个关键字叫readonly，很多人容易搞混二者的区别，我也不例外。按照国际惯例，首先看一下MSDN中如何描述的：Constants are immutable values which are known at compile t... 2015-09-15 08:54 阅读 (424) 评论 (2) Simple Tips on C++(对于C++的一些建议) Introduction（简介） For being a powerful object-oriented programming language, C++ is used almost everywhere including graphics and games section. （C++作为一个强有力的面向对象语言，应用于包括图形、游戏等所有领域中。）Complex features l... 2015-09-15 00:05 阅读 (175) 评论 (0) 浅析C++中的引用（&） 引用是C++引入的新语言特性，是C++常用的一个重要内容之一，正确、灵活地使用引用，可以使程序简洁、高效。我在工作中发现，许多人使用它仅仅是想当然，在某些微妙的场合，很容易出错，究其原由，大多因为没有搞清本源。故在本篇中我将对引用进行详细讨论，希望对大家更好地理解和使用引用起到抛砖引玉的作用。一、引用简介 引用就是某一变量（目标）的一个别名，对引用的操作与对变量直接操作完全一样。 引用的声明方法... 2015-09-10 13:53 阅读 (293) 评论 (0) 浅析C++中的static static关键字大家都很熟悉，即所谓的静态。看下msdn是如何描述static的： When modifying a variable, the static keyword specifies that the variable has static duration (it is allocated when the program begins and deallocated when t... 2015-09-10 10:31 阅读 (168) 评论 (1) 浅析C++中的智能指针 《More Effective C++》条款28中这样写道： 所谓smart pointers，是“看起来、用起来、感觉起来都像内建指针，但提供更多机能”的一种对象。 智能指针是行为类似于指针的类的对象。为什么需要智能指针呢？ 首先看如下代码：void remodel(std::string & str) { std::string *ps = new std::string(str)... 2015-09-10 08:33 阅读 (233) 评论 (1) Windows程序设计--窗口与消息 进行Windows程序设计时，其实就是在进行一种面向对象的编程。在面向对象中，对象是代码和数据的组合，一个窗口也是一个对象。在用户眼中，窗口是屏幕上的对象，并可借助键盘或鼠标直接与之进行交互。用户对窗口的输入以“消息”的形式传递给窗口，而窗口也借助消息来与其他窗口进行通信。窗口创建看似容易，调用CreateWindow函数即可。但是在创建窗口之前，需要注册一个窗口类。而窗口类又确定了处理窗口消息的窗... 2015-09-09 14:43 阅读 (181) 评论 (1) 浅谈C++--绝不在构造和析构函数中调用virtual函数 C++规定了虚函数的行为，但将实现方法留给了编译器作者。编译器处理虚函数的方法是：给每个对象添加一个隐藏成员。隐藏成员中保存了一个指向函数地址数组的指针，这种数组成为虚函数表。这篇博客我们不是试图详细说明虚函数的工作原理。但是我们也应该知道，使用虚函数，在内存和执行速度方面有一定的成本： 每个对象都将增大、增大量为存储地址的空间； 对于每个类，编译器都创建一个虚函数地址表； 对于每个函数调用，... 2015-09-09 08:58 阅读 (184) 评论 (1) 你所不知道的事儿--#ifndef #endif不能防止编译器将文件包含两次 我们知道，在一个文件中只能将同一个头文件包含一次。记住这个规则很容易，但是很可能在不知情的情况下将头文件包含多次。 因此， 在定义头文件的时候，我们常常这样写：#ifndef A_H_ #define A_H_ ... #endif编译器首次遇到该文件时，名称A_H_没有定义，这种情况下编译器将查看#ifndef和#endif之间的内容。如果在同一个文件中遇到其他包含a.h的代码时，编译器将知道... 2015-09-09 08:54 阅读 (342) 评论 (2) DuiLib响应按钮事件 配置方法以及需要重写的函数已经在在《初识DuiLib界面库》中已经介绍。 今天需要在之前代码的基础上加入相应Enter按钮的事件，并弹出messagebox按钮。 响应事件在Notify函数中进行处理。#include "UIlib.h" using namespace DuiLib; # pragma comment(lib, "DuiLib_d.lib") # pragma comment(... 2015-09-08 16:42 阅读 (202) 评论 (2) Windows程序设计--起步 第一个windows程序： 首先建立一个win32 application。对于二者的区别可以参见博客《Hey,别搞错了Win32项目和Win32控制台程序》main函数我们都很熟悉，而且许多程序员更加倾向于main函数也应该有个明确的返回值。 windows程序的winmain函数与main函数有相同的组成部分，即include语句、程序入口、函数调用、以及return语句。#include<... 2015-09-08 14:03 阅读 (219) 评论 (2) 26条数据 共2页 1 2 下一页 尾页 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 64
URL:: http://blog.csdn.net/wangshubo1989/article/month/2015/10

ParseText::
2015年10月存档 - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 windows程序托盘图标以及消息提示--示例程序 之前两个博客介绍一些基本姿势，都是msdn上的，今天就介绍一下如何使用吧。为了简单起见，还是创建一个MFC based on dialog 功能吧。1创建托盘图标，封装了成一个函数：NOTIFYICONDATA m_nid; bool SetupTrayIcon(HWND m_hWnd) { m_nid.cbSize=sizeof(NOTIFYICONDATA);// 结构大小 m_... 2015-10-31 14:56 阅读 (218) 评论 (1) windows程序托盘图标以及消息提示--基本知识（Shell_NotifyIcon） 之前说了NOTIFYICONDATA结构体的一些内容，下面继续。Shell_NotifyIcon函数，向任务栏的状态栏发送一个消息。原型如下：BOOL Shell_NotifyIcon(DWORD dwMessage,PNOTIFYICONDATA lpdata)参数简要说明： dwMessage为输入参数，传递发送的消息，表明要执行的操作。 可选的值如下： NIM_ADD 向托盘区域添加一... 2015-10-31 14:26 阅读 (269) 评论 (1) windows程序托盘图标以及消息提示--基本知识（NOTIFYICONDATA） 首先介绍一下基本知识： NOTIFYICONDATA结构体，语法如下：typedef struct _NOTIFYICONDATA { DWORD cbSize; HWND hWnd; UINT uID; UINT uFlags; UINT uCallbackMessage; HICON hIcon; TCHAR szTip[64]; DWORD dwState; DWORD dwStateMas... 2015-10-31 14:17 阅读 (155) 评论 (0) 详解VMware Workstation 12 安装虚拟机 一、背景作为一个windows客户端开发人员，不得不面对的就是windows版本兼容问题。比如说为了使开发的客户端兼容XP，需要在VS编译器中的平台工具集选择“Visual Studio 2015-Windows xp(v140_xp)”等。为了方便开发人员自己测试，在自己的电脑上运行多个系统就ok了。虚拟化巨头VMware发布了VMware Workstation 12 ，能很好的贴合win10的... 2015-10-30 22:49 阅读 (186) 评论 (1) 微信为何先推出mac版本而后推出windows版本 在今年2月份，微信推出过Mac客户端，事隔10个月后，终于在Windows端也开始测试客户端了。 　　 　　从产品使用体验上看，Windows版微信客户端与年初推出的Mac版客户端差不多，都只有最基本的聊天功能，朋友圈、微信支付等功能还是只能在手机端使用。 　　 　　同时，在一些新的小功能上，比如向手机发送消息确认登陆等方面，Windows版微信保持了与Mac版同步。 　　 　　10个月... 2015-10-29 22:44 阅读 (218) 评论 (1) 解决方案--duilib中禁止一个窗口双击最大化 用duilib开发了一个窗口，比如是登录窗口，那么这个窗口的窗口的双击最大化就毫无意义，甚至带来灾难，我们就要明确禁止这样的行为。我们应该明确，一个窗口创建的时候就赋予了它一些属性，那我们就首先看看如何创建窗口的，即Create函数。例如，你定义了一个窗口类叫LogInWnd，你会在需要的时候这用进行创建一个窗口：LogInWnd login_wnd; login_wnd.Create(nullpt... 2015-10-28 21:50 阅读 (235) 评论 (1) 谷歌C++编程规范补充--windows编程规范 之前博客《谷歌C++编程规范笔记》整理了一些关于C++ Style方面的东西，看的是中文版本的。但是今天翻阅英文版本的，在最后，发现了 Google C++ Style 关于windows的。Windows programmers have developed their own set of coding conventions, mainly derived from the conventio... 2015-10-27 22:03 阅读 (230) 评论 (1) 解决方案--duilib中edit获得鼠标焦点后右边框被覆盖 用duilib做了一个登录框，用户名的输入使用的是edit控件。XML中是这样写的：<Edit name="subdomain_edit" tipvalue="输入用户名" tipvaluecolor="#FF989898" nativetextcolor="#FF000000" nativebkcolor="#FFFFFFFF" bordersize="1" width="160" height=... 2015-10-27 20:36 阅读 (198) 评论 (0) C\C++编译器的未来.我们还需要C++么? 文章出处： http://my.oschina.net/sw23120/blog/119584在未来我们还需要纯C++开发模式么?随着C++11的诞生,C++已经越来越臃肿,从03的时候就觉得C++实在是太复杂了。以一个合格C++程序员的标准来简单的来说3-5年略有小成,5-8年才可以说自己是个合格的C++程序员,10年以上才敢到处和别人说自己精通C++,不至于被某人用个很bt的问题问倒。C++程... 2015-10-26 21:33 阅读 (2181) 评论 (2) 解决方案--gloox源码编译错误 在博客《解决方案–VS2015编译的程序在其他机器上缺少msvcp120.dll》中，讲诉了一些问题，和解决方案，最后又遇到了gloox编译错误的问题？问题如下：1>------ Build started: Project: gloox-1.0, Configuration: Release Win32 ------ Creating library C:\Install\gloox-1.0.1... 2015-10-26 21:20 阅读 (191) 评论 (0) 解决方案--VS2015编译的程序在其他机器上缺少msvcp120.dll 今天分享一个自己在开发过程中遇到的困难。用VS2015开发了一个windows客户端（win32项目），在自己的机器上运行很流畅。当你得意的把releas版本进行打包，并进行发布后，问题来了？很多人反馈运行时缺少msvcp140.dll，甚至有人在XP系统上完全不能用。那么首先看看是如何解决的： 在工程上打开属性，选择C/C++，选择代码生成，把运行库改为“多线程（/MT）”。重新编译即可。 但... 2015-10-26 20:54 阅读 (334) 评论 (0) 微软VS苹果 桌面操作系统的终极一战 文章出处：http://digi.tech.qq.com/a/20150723/010837.htm[摘要]今年的桌面操作系统大战，很有可能是这两家巨头厂商对于抢夺用户的桌面设备的终极一战。 7月29日这一天，微软将在全球同步推送最新的桌面操作系统Windows 10，在经历了“就那样”的Windows 8与8.1之后，Windows 10似乎又一次作为这家软件巨头的救命稻草被推上了历史的舞台。与... 2015-10-24 21:50 阅读 (411) 评论 (3) 你所不知道的事儿--C++中delete指针后最好赋值为NULL 我们都知道，在C++中，用new声明的指针变量，都要delete。除非你完完全全使用智能指针，而不用担心内存泄露的问题。如果你是来自C Sharp阵营，那么也许你习惯于托管代码带来的好处，垃圾内存回收机制。但是C++中，需要手动进行释放，谁分配谁释放。首先，我要强调的一点就是delete是释放指针指向的内存，而并不是指针本身所占有的内存。 慢慢品味这句话。我们试图写下如下的代码：#include<i... 2015-10-23 23:00 阅读 (1530) 评论 (1) 浅析windows程序中的_T和L 不知道你是不是和我一样，被各种的字符集所困扰。ANSI还是Unicode，单字节还是双字节等等。在写windows程序的时候，你肯定遇到过定义个字符串，你很多时候都会这样写：static LPCTSTR kCloseBtnId = _T("close_btn");同样，也许你看过别人这么写：std::wstring url = L"http://blog.csdn.net/wangshubo1989... 2015-10-22 21:41 阅读 (579) 评论 (1) Windows程序设计--文本输出(一) 绘制和重绘 之前就写过，windows是一个消息驱动的系统，有两种方式把各种事件通知给应用程序：1是把消息放在应用程序的消息队列中；2是向适当的窗口过程直接发送消息。 这里主要讨论的是WM_PAINT消息 ，以下任何一个事件发送，窗口过程都会收到一条WM_PAINT消息： 1用户移动一个窗口，导致原来被遮盖的部分窗口暴露出来； 2用户调整了窗口的大小； 3程序调用ScrollWindow或... 2015-10-21 23:10 阅读 (197) 评论 (0) 36条数据 共3页 1 2 3 下一页 尾页 个人资料 wangshubo1989 访问： 127094次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 65
URL:: http://blog.csdn.net/wangshubo1989/article/month/2015/11

ParseText::
2015年11月存档 - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 没有躲过的坑--vector使用erase后迭代器变成野指针 vector上镜率非常高，但是最近又被他fuck了一下。使用的就是vector的erase方法。erase–return value 首先需要明确一下vector的两种erase：C++98中是这样的：iterator erase (iterator position); iterator erase (iterator first, iterator last)C++11是这样的：iterat... 2015-11-30 23:38 阅读 (818) 评论 (0) 没有躲过的坑--没有及时break出for循环 break这个词都不陌生，最常用到的就是在switch语句中。如果在switch的case后面忘写了break，就会顺序执行到下一个case的对应的语句。我说的这种情况只是对于C++，对于C Sharp如果忘记了break，编译器是会报错的。仔细想想，好像自己还真没有用过break在其他地方。导致自己又掉入了一个大坑中。比如使用一个for循环查找数组中所要的元素中your_find对应的索引：int... 2015-11-30 21:19 阅读 (828) 评论 (1) 没有躲过的坑--使用太多的全局变量 最近在工程中为了达到目的，使用了很多全局变量，导致程序运行效率降低。在程序运行时，根据需要到内存中相应的存储单元中调用，如果一个变量在程序中频繁使用，例如循环变量，那么，系统就必须多次访问内存中的该单元，影响程序的执行效率。因此，C\C++语言还定义了一种变量，不是保存在内存上，而是直接存储在CPU中的寄存器中，这种变量称为寄存器变量。总觉得有些太low，就Google了一番。首先我们清楚，有个叫寄... 2015-11-30 20:54 阅读 (659) 评论 (1) 没有躲过的坑--new一个指针数组、以及创建动态二维数组 实际工作中，有一个类A，现在需要使用多个A对象的指针，这是时候，首先想到的就是指针数组。———————————————————————————————————————————— 指针数组与数组指针 首先，指针数组和数组指针有何区别是老生常谈的东西： 看中文不方便，看看英文描述：指针数组：array of pointers，即用于存储指针的数组，也就是数组元素都是指针 数组指针：a point... 2015-11-26 22:19 阅读 (700) 评论 (0) 没有躲过的坑--使用using namespace std的坏习惯 使用命名空间的目的是对标识符的名称进行本地化，以避免命名冲突。在C++中，变量、函数和类都是大量存在的。如果没有命名空间，这些变量、函数、类的名称将都存在于全局命名空间中，会导致很多冲突。比如，如果我们在自己的程序中定义了一个函数toupper()，这将重写标准库中的toupper()函 数，这是因为这两个函数都是位于全局命名空间中的。命名冲突还会发生在一个程序中使用两个或者更多的第三方库的情况中。... 2015-11-26 21:20 阅读 (600) 评论 (0) 没有躲过的坑--map查找结果处理 通过键-值的方法进行搜索，可以使用map，极大的提高了速度。下面代码就是使用map的find查找，通过键，找出对应的值。map string_int_map; //对string_int_map进行初始化 map::iterator iter_string_int; string substring_to... 2015-11-25 22:53 阅读 (625) 评论 (1) 没有躲过的坑--有if就要有else(一定成对) 我们都很擅长流程控制，能写出很好很复杂的if语句。但是有时过于兴奋，更多的是过于自信而只写了if，而没有写else。这是一个争论不休的话题，很多人，很多大师都认为有的情况下可以不写else，只写if。支持 if 和 else 成对出现的人认为：不怕一万 就怕万一认为 if 和 else 没必要成对出现的人认为：不便于理解，太多没用的东西。我之前觉得也必须非要这样成对，但是今天在工程中遇到了问题。就是... 2015-11-25 21:18 阅读 (565) 评论 (0) 没有躲过的坑--类中的静态成员变量（static or const static） 工作中是这样的，A类中有一个成员变量x，最开始声明为私有：class A{ private: int x; };现在需要在另一个cpp中使用这个x，所以要把它变为共有并且静态：class A{ public: static int x; };由此可见： 静态数据成员和普通数据成员一样遵从public,protected,private访问规则。 此时，编译，我们会得到一个错误，原... 2015-11-24 21:28 阅读 (724) 评论 (0) 没有躲过的坑--捕获窗口之外的鼠标消息(钩子还是？？) 做一个发送表情的对话框，类似微信和QQ一样的，点击表情按钮，弹出表情框，鼠标点击表情框外时，这个表情框被kill。说白了 就是在这个窗口上获得窗口外面的鼠标消息。Google百度了一番，很多人说道使用钩子，才能获得窗口外面的click事件，这也未免太小题大做了吧。还好发现了一个简简单单的函数： SetCapture(*this); 函数功能：该函数在属于当前线程的指定窗口里设置鼠标捕获。一旦窗口... 2015-11-23 22:50 阅读 (1038) 评论 (2) 没有躲过的坑--正则表达式截取字符串 工程中，需要从字符串中匹配出以:开头，并以:结束的字符串。Google还是百度，很多C++的正则表达式都是通过st::tr1或boost库中使用的，但是我们仅仅用一个小小的功能，就用一个库不是很好的办法。对的，之前我的博客已经介绍了C++11的新特性-正则表达式。所以可以不使用其他的库，来完成任务：std::vector all_sub_string = {}; std::strin... 2015-11-23 22:06 阅读 (14349) 评论 (2) 没有躲过的坑--map的初始化（插入数据） 最近工作中需要使用map，进行查询。首先简单介绍一点map，也许是教科书里讲授最少的STL知识吧。但是在实际工作中map挺重要的，用于查找很方便快捷，尤其是以键和值的形式存在的！1、头文件#include2、map的功能自动建立Key － value的对应。key 和 value可以是任意你需要的类型。 根据key值快速查找记录，查找的复杂度基本是Log(N)，如果有1000个记录，最... 2015-11-23 21:21 阅读 (1140) 评论 (1) 没有躲过的坑--意想不到的除数为零 工程中有这样一个需求，需要获得一张图片的width和height，然后等比例的显示这张图片。首先是获得得到一张图片的路径，然后计算出他的width和height，然后计算：int resize_width = 160; int resize_height = 160; if (image_width > image_height) { resize_width = 160; resi... 2015-11-22 22:23 阅读 (792) 评论 (0) 没有躲过的坑--成对使用new和delete时要采取相同的形式 new创建类对象与不new区别：new创建类对象需要指针接收，一处初始化，多处使用 new创建类对象使用完需delete销毁 new创建对象直接使用堆空间，而局部不用new定义类对象则使用栈空间 new对象指针用途广泛，比如作为函数返回值、函数参数等而且每个学习C++编程的人都知道成对的使用new和delete，也也就是new申请的内存用delete释放，new []申请的内存由delete... 2015-11-22 22:02 阅读 (725) 评论 (1) 没有躲过的坑--程序中的变量未初始化 变量未初始化是C++编程中最为常见和易犯的错误之一。但是对于全局变量，我们可以不进行初始化，这个变量会默认的用零进行初始化，但是这通常不是一个好的习惯。我们今天先不探讨全局变量还是静态全局变量。那么对于一个全部变量来说，初始化为零和不初始化（编译器替我们初始化为零）又有什么区别吗？全局变量和局部变量初始化与不初始化的区别 即int x 和 int x=0的区别。int x =0; 跟 int x;... 2015-11-21 14:44 阅读 (234) 评论 (2) 没有躲过的坑--重载赋值运算符的自我赋值 C++中有个很重要的事情，就是对于类重载赋值运算符，而达到我们想要的结果。 先看看这几行代码：//Window 是一个类 Window w; w = w; // 再傻的人也不会这么干 w[i] = w[j]; // 这个情况偶尔会发生作为一个优秀的工程师，就要考虑到任何可能的情况。看一段更加完整的代码：class ScrollBar {};class Window {... 2015-11-21 12:26 阅读 (568) 评论 (1) 49条数据 共4页 1 2 3 4 下一页 尾页 个人资料 wangshubo1989 访问： 127087次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 66
URL:: http://blog.csdn.net/wangshubo1989/article/month/2015/12

ParseText::
2015年12月存档 - wangshubo1989的博客 - 博客频道 - CSDN.NET wangshubo1989的博客 勿在浮沙筑高台 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 实战c++中的智能指针unique_ptr系列-- std::unique_ptr的构造(尽量使用C++14中的std::make_unique，而不是new) 上篇博客算是unique_ptr的一个开篇，就是简单说说为何要使用unique_ptr，与传统指针相比，智能指针的优势而已。现在就从构造开始说起！看看这些构造方法：default (1) constexpr unique_ptr() noexcept;from null pointer (2) constexpr unique_ptr (nullptr_t) noexcept : uniqu... 2015-12-24 23:59 阅读 (508) 评论 (0) 实战c++中的智能指针unique_ptr系列-- 使用std::unique_ptr代替new operator(错误：‘unique_ptr’ is not a member of ‘std’) 写了很多篇关于vector的博客，其实vector很便捷，也很简单。但是很多易错的问题都是vector中的元素为智能指针所引起的。所以决定开始写一写关于智能指针的故事，尤其是unique_ptr指针的故事。这是个开始，就让我们使用std::unique_ptr代替new operator吧！还是用程序说话：#include int main() { while (true... 2015-12-24 22:05 阅读 (485) 评论 (0) 实战c++中的vector系列--再谈vector的insert()方法(都是make_move_iterator惹的祸) 之前说过了关于vector的insert()方法，把vector B的元素插入到vector A中，vector A中的结果我们可想而知，但是vector B中的元素还会如何？看看之前写过的程序：#include #include int main () { std::vector myvector (3,100); std::vector... 2015-12-24 21:33 阅读 (578) 评论 (0) 实战c++中的vector系列--对vector<自定义类>使用std::find 和 std::find_if 算法 之前博客讲了一些关于std::find和std::find_ if的一些用法，但是没有讲述对于vector中存储的是自定义的类，那么怎么样使用std::find和std::find_if进行查找呢？先定义一个类：class Item { private: std::string m_ItemId; int m_Price; int m_Count; public:... 2015-12-23 21:19 阅读 (721) 评论 (0) 实战c++中的vector系列--使用sort算法对vector<unique_ptr<string>>进行排序(sort函数“应输入 2 个参数，却提供了 3 个) 之前博客写了对vector使用sort算法进行的排序，之前也写到过vector<unique_ptr>的一些处理方法。今天就写一下对vector<unique_ptr>使用sort算法进行排序。#include #include #include #include #include<memory... 2015-12-23 20:16 阅读 (609) 评论 (0) 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) 使用vector容器，即避免不了进行查找，所以今天就罗列一些stl的find算法应用于vector中。find() Returns an iterator to the first element in the range [first,last) that compares equal to val. If no such element is found, the function retur... 2015-12-22 23:33 阅读 (725) 评论 (1) 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) 写了挺多关于vector的操作了，正好工作中遇到对vector进行排序的问题，这里就讨论一下。直接使用sort算法，那就先了解一下：template void sort (RandomAccessIterator first, RandomAccessIterator last); template <class RandomAccess... 2015-12-22 21:13 阅读 (557) 评论 (1) 实战c++中的vector系列--vector的遍历(stl算法、vector迭代器(不要在循环中判断不等于end())、operator[]) 遍历一个vector容器有很多种方法，使用起来也是仁者见仁。通过索引遍历：for (i = 0; i<v.size(); i++) { cout << v[i] << " "; }迭代器遍历：for (vInt::const_iterator iter = v.begin(); iter != v.end();iter++) { cout << *iter << " "; }算法遍历... 2015-12-21 22:01 阅读 (554) 评论 (0) 实战c++中的vector系列--vector的一些异常 今天就写一写vector的一些异常，可以捕捉的异常。out_of_range 相当于数组的越界了。vector会自动增大容量，但是如果索引超出了当前的size，就会引发异常。#include #include using namespace std; int main() { vectorv(4); std::cout << v[0]... 2015-12-21 20:43 阅读 (523) 评论 (0) 实战c++中的vector系列--正确释放vector的内存(clear(), swap(), shrink_to_fit()) 关于vector已经写的差不多了，似乎要接近尾声了，从初始化到如何添加元素再到copy元素都有所涉及，是时候谈一谈内存的释放了。是的，对于数据量很小的vector，完全没必要自己进行主动的释放，因为那样对程序的效率几乎没有影响。但是当vector中存入大量的数据后，并且都数据进行了一些操作，比如删除后，如果我们能积极主动的去释放内存，那么是非常明智的。写到这里，应该明确了size和capacity的... 2015-12-19 21:18 阅读 (790) 评论 (0) 实战c++中的vector系列--C++11对vector成员函数的扩展(cbegin()、cend()、crbegin()、crend()、emplace()、data()) 前面提到的emplace_back就是C++11所增加的内容。所以这篇博客就是想罗列一下C++11对vector容器的扩充。std::vector::cbegin和std::vector::cend 这两个方法是与std::vector::begin和std::vector::end相对应的，从字面就能看出来，多了一个’c’，顾名思义就是const的意思。 所以： std::vector::c... 2015-12-19 18:07 阅读 (798) 评论 (0) 实战c++中的vector系列--emplace_back造成的引用失效 上篇将了对于struct或是class为何emplace_back要优越于push_back，但是还有一些细节没有提及。今天就谈一谈emplace_back造成的引用失效。直接撸代码了：#include #include #include using namespace std;int main() { vector ive... 2015-12-19 13:32 阅读 (517) 评论 (0) 实战c++中的vector系列--知道emplace_back为何优于push_back吗？ 上一篇博客说道vector中放入struct，我们先构造一个struct对象，再push_back。那段代码中，之所以不能使用emplace_back，就是因为我们定义的struct没有显示的构造函数。emplace和解？ 放列的意思。这次我们不把struct当做vector的元素了，我们把一个class当做vector的元素，写下代码：#include #include <... 2015-12-19 10:51 阅读 (571) 评论 (0) 实战c++中的vector系列--creating vector of local structure、vector of structs initialization 之前一直没有使用过vector，现在就写一个简短的代码： #include #include int main() { struct st { int a; }; std::vector v; v.resize(4); for (std::vector::size_type i = 0; i <... 2015-12-19 00:52 阅读 (639) 评论 (0) 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> 之前博客讲到 vector可以使用insert方法，将一个vector copy到另一个vector的后面。之前的博客也讲到过，如果vector容器内部放的是unique_ptr是需要进行所有权转移的。现在就来八一八如何vector<unique_ptr<>> insert to vector<unique_ptr<>>如果常规的vector，我们就可以这么使用insert：// insertin... 2015-12-17 23:05 阅读 (830) 评论 (1) 49条数据 共4页 1 2 3 4 下一页 尾页 个人资料 wangshubo1989 访问： 127095次 积分： 3664 等级： 积分：3664 排名： 第4994名 原创： 212篇 转载： 14篇 译文： 6篇 评论： 153条 文章搜索 博客专栏 实战c++中的vector系列 文章：22篇 阅读：14137 实战c++中的string系列 文章：15篇 阅读：14121 一起学libcef 文章：5篇 阅读：4637 那些年躲过的坑儿 文章：33篇 阅读：37229 浅析C++11新特性 文章：19篇 阅读：12645 C++你所不知道的事儿 文章：4篇 阅读：4206 文章分类 WPF (20) MFC (17) C++ (147) C# (36) DuiLib (4) windows编程 (11) 非技术 (8) libcef (5) 文章存档 2015年12月 (49) 2015年11月 (49) 2015年10月 (36) 2015年09月 (26) 2015年08月 (45) 2015年07月 (22) 2015年06月 (5) 阅读排行 没有躲过的坑--正则表达式截取字符串 (14349) 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (2485) C\C++编译器的未来.我们还需要C++么? (2168) 浅析C++中的初始化列表（区别赋值和初始化） (1749) 你所不知道的事儿--C++中delete指针后最好赋值为NULL (1529) C++11新特性之 std::array container (1512) 没有躲过的坑--std::string初始化、最快速判断字符串为空 (1466) 没有躲过的坑--指针（内存泄露） (1382) 没有躲过的坑--头文件相互包含（Compiler error C2653: not a class or namespace name） (1266) MVVM设计模式基础知识--NotificationObject类（Prism框架） (1265) 评论排行 为何我工作十年，内心仍无比恐慌（腾讯产品总监曹菲） (9) C++11新特性之 CALLBACKS (5) 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） (4) 没有躲过的坑--智能指针陷阱 (4) C++11新特性之 default and delete specifiers (4) C++11新特性之 std::future and std::async (4) 开始使用C++11的几个理由 (4) C++11新特性之 std::array container (3) 微软VS苹果 桌面操作系统的终极一战 (3) 没有躲过的坑--指针（内存泄露） (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 C\C++编译器的未来.我们还需要C++么? cosmart : Delphi可以做到跨平台了吧 实战c++中的vector系列--使用sort算法对vector进行排序(对vector<string>排序、使用稳定的排序std::stable_sort()) u010850027 : 没什么值得畏惧，你唯一需要担心的是，你配不上自己的梦想，也辜负了曾经的苦难。 实战c++中的vector系列--vector应用之STL的find、find_if、find_end、find_first_of、find_if_not(C++11) u010850027 : 感谢楼主的分享，学习了`(*∩_∩*)′ 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : @wangshubo1989:好像找到原因了，我用的是64位的cef源码，博主的是32位吧，我换回3... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） wangshubo1989 : @sinat_27399773:留邮箱 把我的win32的libcef项目发给你 vs2015的 我... 一起学libcef--搭建自己的libcef运行环境（Win32程序，错误C2220解决方案） sinat_27399773 : 我按你的步骤发现源文件的includ头都报错，然后修改路径后下面的代码还是有错，找不到错误的地方，有... 实战c++中的vector系列--vector<unique_ptr<>>赋值给vector<unique_ptr<>> chenyd9027 : 学习了 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） wangshubo1989 : @zouzhipeng1717:每一次erase()，删除元素后面的元素依次向前移动一个位置，所以这... 实战c++中的vector系列--可怕的迭代器失效（vector重新申请内存） wangyaninglm : 受益匪浅，学习了，这个之前用vector 的迭代器时候确实很少注意到 实战c++中的vector系列--可怕的迭代器失效之二（删除vector中元素） zouzhipeng1717 : 在擦除容器的时候，并不会改变vector的容量，那么自然就不会造成容器的重新加载，那么，为何迭代器会...

Recno:: 67
URL:: http://blog.csdn.net/wtjandjay

ParseText::
MrJ为你转身 - 博客频道 - CSDN.NET MrJ为你转身 只有不怕死的人才配活着 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 博主太懒了，还没有写文章~ 个人资料 wtjandjay 访问： 300次 积分： 103 等级： 积分：103 排名： 千里之外 原创： 0篇 转载： 0篇 译文： 0篇 评论： 0条 文章搜索 文章分类 Android_基础 (0) Android项目 (0) JAVA (0) SDK相关 (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 68
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/49820901

ParseText::
我的大学之路---《大学之路》读后感 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 我的大学之路---《大学之路》读后感 2015-11-13 17:26 1381人阅读 评论 (4) 收藏 举报 分类： 经典书籍读后感 （25） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近，我阅读了吴军老师的新作《大学之路》。在这套书中，作者以女儿选大学为“契机”，系统性地研究了欧美的许多世界级顶尖大学，并亲自陪同女儿走访了一些知名院校。一如既往地，作者以流畅的文笔、优美的语言，将牛津大学、剑桥大学、宾夕法尼亚大学、哥伦比亚大学、哈佛大学、麻省理工学院、加州理工学院、普林斯顿大学、耶鲁大学、斯坦福大学、杜克大学、华盛顿大学(圣路易斯)、卫斯理学院等世界一流大学的校园及周边环境、建筑风格、学科特色、申请条件等展现在了读者的面前。不管是在校学生，还是初出茅庐的职场新手，抑或是工作多年的职场老手，均能从此书中获得在漫长学习道路上的一些启发。 吴军老师认为，一所好的大学应该扮演四个角色。首先，他是培养人才的地方，将那些有潜力有志向的年轻人培养成对社会有所贡献的人；第二，它是一个研究中心，引领世界科技的发展，而且会对一个国家、一个地区产生积极正面的影响；第三，它是一个新思想、新文化的发源地，能推动社会的进步；第四，它是年轻人的家，是他们度过人生最好时光的地方。 读完此书之后，我不禁回想起了自己的大学四年的时光。。。。。。 我大学的专业为通信工程，整个专业一共有130个学生(后来报到的时候，有一个人没有来，因此实际上最开始的就读人数只有129个)，按照每个学生的姓氏的第一个字母进行升序排列来编排学号，我的学号是126号。学校将我们分为两个班，前65号为通信一班，剩下的为通信二班(很明显，我是通信二班的)。 接下来，大学的学习生活正式开始了。在大一的时候，我们学习的主要课程包括：《高等数学》、《线性代数》、《大学物理》、《电路原理》、《C语言程序设计》、《大学英语》等。由于没有学长学姐的指路，老师除了上课之外几乎总处于“消失”状态，加之在进入大学之前除了认真读书不会别的，因此我在大一这一年的生活可以看作是高中生活的延续。每天早早地起床去晨跑(学校规定，大一新生必须参加晨跑，且有最少次数限定)，然后吃完早饭去上课。在没有课的时候，我就会去图书馆或找一个教室安安静静地看书和学习。 高中的上课地点固定在一个教室，但大学却不一样，要看课表上面安排在哪里就到哪里去上课，所以，经常是这门课刚上完，大家就要匆匆忙忙地跑到另外一座教学楼的某个教室去上课。最开始上课的时候，我总是很早就到教室里面去占位置，担心坐不到前排而影响了听课的效果。一段时间之后才发现，我这样做根本没有必要，因为大部分同学都会选择靠后的位置，仿佛是离老师越远越好。我当时就在想，前面位置的听课效果明显要好些，为什么大家不想去坐呢？这个原因我至今未想明白。 基于“三点一线”的生活模式，大一这一年过得非常的快。两个学期的总评成绩也发布了，我位列专业第一名，其中高数上下册都得了满分，C语言课程得了99分。我也因此获得了我校的“三好学生”一等奖学金。对于这个成绩，很多同学都感到非常的惊讶，纷纷跑来问我是怎么学的。实际上，我的学习方法非常的简单，甚至有点“笨”。 学习高数的方法是这样的：在上课之前，我先把课上要学习的内容预习一遍，将没有看明白的地方勾划出来；在课堂上，我跟着老师的节奏走(当然是坐在前排)，对于之前勾划过的地方，我会打起200%的精神重点关注；在课下，除了完成老师布置的作业之外，我将教材后面的习题一个不落地做了出来，并将解题步骤写到了纸质的笔记本上。对于某些自己想不到解题方法的难题，我会记录下来，等上课的时候去问老师。很多人都认为在大学里面，要学好一门课程，需要很多的参考书，其实这没有必要，将一本书学透就已经足够了。 C语言的学习方法与高数的学习方法有所不同，C语言是一门实践性很强的课程，需要不停地上机练习。当时，限于条件限制，我没有自己的电脑，只有在上机课上我才有练手和调试程序的机会。为了利用好上机课的“宝贵”时间，我是作好了“充分”的准备。我将自己在课下编写的程序写到纸上，上课的时候便带过去。等将老师布置的任务完成之后，我便开始做自己的事情了。这样一堂课下来，比起那些毫无意识和准备的同学来说，我要多调试好几个程序，这样长期下来，差别就比较的明显了。有时，我觉得，很多人都想要寻找一些学习的技巧，以为这样可以省时省力，但我觉得一些原始的、古老的学习方法(如预习、做笔记、多练习、勤动手等)反而会达到更好的学习效果。 大二学年的课程非常的多，其中涉及到了一些很重要的专业基础课程，如：《模拟电子技术》、《数字电子技术》、《信号与系统》等。很多同学都觉得这些课程非常的难，找不到好的学习方法。对于我来说，因为大一的时候将数学基础打牢了，同时做到了课前预习、课上认真听讲、课下总结练习，所以学起来也还是比较的轻松。 在大二下的时候，我买了人生中的第一台笔记本电脑。每天上完课，我便用电脑来阅读老师的课件、编写程序和文档。即使有了电脑，图书馆和自习室也还是我常去的地方。 还有一件重要的事情发生在大二这一年，那就是我参加了“2007年全国大学生英语竞赛”，并获得了C类(非英语专业本科类)的二等奖，是我们专业唯一一位获奖的。对于英语的学习，从进入大学以来，我一直没有松懈过。在大一的时候，我看到很多人早上在学校的草坪上面读英语，于是自己也坚持每天早上抽半个到一个小时的时间去读英语，这个习惯一直坚持到大四毕业。为了考英语四六级，我还专门订阅了一份英语周报，并将上面的每篇文章都阅读了好几遍，同时将上面的每道练习题都做了。也正因为当时的学习密度较大，我在大一下学期就通过了全国英语四级考试，在大二上学期就通过了全国英语六级考试。 大二这一年也就这样匆匆地过去了，我继续蝉联本专业的第一名，又一次获得了我校的“三好学生”一等奖学金。 大三这一年，大家明显要比前两年忙了很多。很多同学都开始为毕业作打算了，有出去实习的、有考各种证的、有到处咨询准备考研的、有狂看书准备参加补考的，当然还是有整天浑浑噩噩混日子的。大三上学期的课程是大学四年最多且最难的，包括：《计算机网络》、《通信原理》、《数字信号处理》、《数据结构》、《微机原理》等。为了把这些课程学好，我几乎每天都是晚上12点左右才睡觉，早上六点多钟就起床了。除了上课之外，其他时候要不在实验室，要不在图书馆，要不就在电脑前面。现在回想起来，那个时候生活虽然是苦了点，但还是学到了不少东西。 也许是为了方便大家考研，大三下的课程就少了很多。那个时候，在校园的任意一个角落，都可以看到有关考研的东西。包括墙上贴的、学生手里拿的，甚至每个人口中所谈论的，几乎都与考研有关。考研似乎成了改变学生命运的不二法宝。 在学习之余，我也去听了一些有关考研的讲座，对于要不要考研有一个大致的认识。我分析了一下自身的实际情况，首先，我个人喜欢研究一些有一定深度的东西，对于研究有热情；其次，我比较“坐得住”，也就是科学研究里面的“耐得住寂寞”；再次，只要我能够考上公费的研究生，也不会花费家里的钱。此外，整个考研的过程也能够很好地锻炼一个人的性情，至少能够成为若干年之后的一个“美好回忆”。我将自己准备考研的想法给家人说了，他们也没有说什么(其实他们也不懂)，只是说让我自己看着办吧。因此，我也加入了“考研大军”，从大三下学期开始就专心复习考研。 和其他很多人一开始就报各种辅导班、买各种复习资料不同，我制定的复习计划分“三步走”：第一步，将基础再打牢，也就是将考研涉及到的基础课程(如高数、线性代数、专业相关课程等)重新温习一遍，争取做到对各种基本概念非常熟悉；第二步，为每个考研科目买一到两本经典的复习教材，慢慢啃，反复阅读，力争将书中的所有知识点吃透；第三步，到考研的冲刺阶段，适当参加几个短期的培训，了解最新的考研动态，做到对考研这场“大战役”心中有数。 在大三下学期，学校还发生了一件“载入史册”的大事，那就是被评为国家的“211”工程大学，是海南省的唯一一所国家级重点大学。至此之后，海南大学在中国的很多地方的录取分数线从二本变成了一本。为在校的想要考研的学生带来的最大好处之一便是学校具备了保研的资格。 在学校被评为“211”工程大学之前，如果一个学生想要读研，那么途径只有一条，那就是参考国家组织的统一考试。而被评为“211”工程大学之后(也就是我们大三下半学年)，学校第一次拿到了保研的名额，全校一共有120人。这样，本科前三年成绩靠前的学生就有了免试读研的可能。 经过班主任老师的推荐及自己的些许努力，我最终成功保研到了南邮，并在那里度过了三年的美好的时光。在大学毕业的时候，我还被授予了“优秀毕业生”的称号。 相比《大学之路》里面那些名校，我的大学之路“单调”了很多： 首先，我将自己的大部分精力都投入到了专业课的学习上，没有参加任何一个学生社团，过的是近乎于“苦行僧”似的生活。而欧美大部分名校都强调学生课外活动的重要性，耶鲁大学的学生甚至有一半的时间花在了课外活动上。 其次，我几乎都是按照自己的意愿在学习，身边缺乏一些良师益友的指导(或许是我没有认真去发掘)。大部分顶级名校都很关心学生的成长，里面的老师也会通过不同的方式来对学生的学习进行指导。 再次，我学习的功利性比较强(我发现身边的大部分学生都是这样的)，学好某一门课程的目的就是为了得高分，然后获取奖学金，根本没有考虑这门课有什么实际的用处。很多课程等考试完了，也就再也不会去碰了。到现在，我发现大学里面的课程，有95%以上都和我现在的工作不相关。 最后，在学校里面，我虽然一直在努力学习，但头脑中没有一个未来的发展蓝图，没有对未来进行详细的规划。本着“走一步，算一步”的原则，我“跌跌撞撞”地走到了现在，也不可避免地在学习的道路上走了一些弯路。 输在起点并不可怕，学习不是百米冲刺，而是马拉松；学习是一辈子的事情。只要我们坚持不懈，时常更新我们的知识库，那么，我们一定是那个笑到最后的人。 《大学之路》，一本可以为大家带来启发的好书，推荐给大家阅读。 上一篇 部分博客中的代码已放到了GitHub上，欢迎大家下载阅读！ 下一篇 “多线程”简介及其C代码实现框架 顶 1 踩 0 我的同类文章 经典书籍读后感 （25） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574072次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 69
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/49870093

ParseText::
“多线程”简介及其C代码实现框架 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 “多线程”简介及其C代码实现框架 2015-11-16 18:42 1354人阅读 评论 (0) 收藏 举报 分类： 编程 （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在一些计算机专业相关的书籍中，大家经常听说“多线程”这个概念。那么什么是“多线程”？什么时候使用“多线程”？在程序设计中使用“多线程”有什么好处呢？很多刚入职的程序员也对“多线程”感到非常的好奇，认为它很“高大上”。本文对“多线程”进行了简单的介绍，并给出了其C代码的实现框架。 “单线程”程序 要想理解“多线程”，那么就要先从“单线程”说起。 大家都知道工厂“流水线”作业，里面的工序是一环扣一环的，只有前面的一道工序完成之后，才能够启动下一道工序。这其实和“单线程”的原理非常的相似。 在“单线程”里面，程序的功能是顺序执行的，只有前面的流程都成功执行，后面的流程才能够被执行到。例如，要实现一个话单文件生成、上传和删除的程序，使用“单线程”程序来完成，那么其流程如图1所示。 图1 “单线程”程序 “多线程”程序 大家也许注意到了，图1中的生成文件、上传文件和删除文件的流程其实可以独立开来。也就是说，这三个流程是互不影响的。这样也就诞生了“多线程”的概念。 “多线程”，顾名思义，就是多个“单线程”，每个线程独立地完成相关的功能。如图1所示的程序，如果用“多线程”来实现，那么其流程如图2所示。 图2 “多线程”程序 从图2可以看出，当程序启动之后，线程1、线程2和线程3是同时运行的。线程1仅用于生成话单文件，线程2仅用于上传话单文件，线程3仅用于删除过期的话单文件。这样一来，任何一个线程执行成功与否对另外两个线程都没有影响，真正地实现了程序的“并行”。 “多线程”的优点 “多线程”在大型软件程序中有着很广泛的应用，其优点如下： 第一，将原来在一个大流程中实现的功能放到了多个小流程中，程序更加的简洁和易于阅读。 第二，将不同的功能放到不同的线程中，提高了程序的执行效率。 第三，“多线程”使得程序的模块化更强，有利于追踪程序执行过程和排查问题。 “多线程”的C代码框架 / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 版权所有 (C)2015, Zhou Zhaoxiong。 * * 文件名称：ThreadCreate.c * 文件标识：无 * 内容摘要：演示多线程的创建 * 其它说明：无 * 当前版本：V1.0 * 作 者：Zhou Zhaoxiong * 完成日期：20151029 * ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** / #include <stdio.h> #include <stdlib.h> #include <pthread.h> // 重定义数据类型 typedef signed int INT32; typedef unsigned int UINT32; // 宏定义 #define THREAD_NUM 5 // 线程个数 // 函数声明 void ScanTask(void *pParam); void ProcessTask(void *pParam); / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：主函数 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------------------- * 20151029 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ INT32 main() { pthread_t MultiHandle = 0; // 多线程句柄 pthread_t SingleHandle = 0; // 单线程句柄 UINT32 iLoopFlag = 0; INT32 iRetVal = 0; // 创建线程函数的返回值 // 循环创建线程 for (iLoopFlag = 0; iLoopFlag < THREAD_NUM; iLoopFlag ++) { iRetVal = pthread_create(&MultiHandle, NULL, (void * (*)(void *))(&ScanTask), (void *)iLoopFlag); if (0 != iRetVal) { printf("Create ScanTask %d failed!\n", iLoopFlag); return -1; } } // 单独创建线程 iRetVal = pthread_create(&SingleHandle, NULL, (void * (*)(void *))(&ProcessTask), NULL); if (0 != iRetVal) { printf("Create ProcessTask failed!\n"); return -1; } return 0; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 扫描线程 * 输入参数： pParam-线程编号 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ---------------------------------------------------------------------- * 20151029 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **/ void ScanTask(void *pParam) { UINT32 iThreadNo = 0; // 线程编号 iThreadNo = (UINT32)pParam; // 获取线程编号 printf("Now, into ScanTask[%d].\n", iThreadNo); // 打印包含线程编号的消息 // 进行后续操作 } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 处理线程 * 输入参数： 无 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ---------------------------------------------------------------------- * 20151029 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **/ void ProcessTask(void *pParam) { printf("Now, into ProcessTask.\n"); // 进行后续操作 } 说明 ： 第一，本程序利用pthread_create函数来创建线程，该函数的原型是： int pthread_create(pthread_t tidp,const pthread_attr_t *attr,(void )( start_rtn)(void ),void *arg); 第一个参数为指向线程标识符的指针，在本程序中为MultiHandle和SingleHandle。 第二个参数用来设置线程属性。 第三个参数是线程运行函数的起始地址，在本程序中即为函数名。 第四个参数是运行函数的参数，当同时创建多个功能相同的线程时，该参数表示线程编号。 第二，在Linux下，该程序的编译命令为：gcc -g -o ThreadCreate ThreadCreate.c –lpthread。注意，最后的“–lpthread”是不能省略的，否则程序编译不通过。因为pthread并非Linux系统的默认库，而要在Linux中将其作为一个库来使用，就需要加上“-lpthread”或“-pthread”以显式链接该库。 第三，在程序的多线程中，建议不要同时对同一个全局变量进行加、减等操作。如果确实需要这样做，要注意在关键代码处使用加锁操作。 总结 随着软件功能的增强，随之而来的就是程序复杂度的提升，这也使得程序从“单线程”到“多线程”的转变成为必然。 “多线程”和“单线程”分别对应“并行”和“串行”，是软件开发人员必须要掌握的一种程序设计的方法。设计合理的“多线程”程序不仅逻辑清晰、易于阅读，而且程序的执行效率高，对于软件产品效率和质量的提升具有很重要的意义。 最后，推荐大家阅读一篇文章《进程与线程的一个简单解释》( http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html )，本文以图形的方式展示了进程与线程的区别，及有关操作系统的其它概念，值得一读。 原文链接： http://www.daxixiong.com/?/article/12 本文中的代码已提交到GitHub上，请见： https://github.com/zhouzxi/ThreadCreate 上一篇 我的大学之路---《大学之路》读后感 下一篇 毕业典礼—一个程序员的成长史(4) 顶 1 踩 1 我的同类文章 编程 （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574066次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 70
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/49925771

ParseText::
毕业典礼—一个程序员的成长史(4) - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 毕业典礼—一个程序员的成长史(4) 2015-11-19 12:06 722人阅读 评论 (0) 收藏 举报 分类： 一个程序员的成长史 （4） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 今天就要举行毕业典礼了，每个人的脸上都洋溢着甜美的笑容。是啊，三年之前选择读研的人，哪个不是为了今天呢？哪个不是为了想要拿到这张文凭呢？ 代是雄他们宿舍的人很早就起来了，因为昨天已经约好了今天要一起去照毕业照。研究生三年下来，同宿舍的人之间已经结下了深厚的友谊。代是雄他们宿舍室友五人，来自五个不同的地方。代是雄本人来自重庆，前面提到的小郭和小林同学分别来自四川和福建，另外两位室友小许和小李同学分别来自江苏常州和南京。小许同学算是他们五人中最时尚的了，在代是雄还不知道苹果为何物时，小许同学便用上了iPhone和iPad。每到夜深人静的时候，大家都已经进入了梦想，可小许同学还在用iPad看着韩剧，那种滋味好不惬意！ 在本科阶段，大家可以参加很多社团活动，可以参加一些社会实践，因此交际面还是很广的。而到了研究生阶段，一来时间短(只有三年)，二来每个人要么搞科研，要么实习，几乎每天都过得忙忙碌碌的，因此交际范围仅限于同一个实验室的同学和同一个宿舍的室友。这也导致很多人在毕业之后，连一个班上有哪些同学都不知道。如果你在学校里面交到了对你真心以待的朋友，请一定要珍惜。 毕业典礼是下午举行，代是雄他们便利用上午的时间到校园里面去拍照。他们身上穿的硕士服是以班级的名义在外面的服装店里面去租的，每个人还为此交了100元钱的押金。每到毕业季，这些硕士服便会租给不同的人穿，久而久之，衣服上面散发着种种奇怪的味道，穿在身上相当的不舒服。“管他呢，反正只穿今天一天”，几乎每个人都是这么想的。 代是雄之前在某知名企业实习过，在他们宿舍还算是“有钱人”，他用实习工资买了一个索尼牌的数码相机，正好在今天派上了用场。虽然是工科男，代是雄还是挺喜欢到处走的，每当到了一个新的地方，他便用照相机留下了一些美好的瞬间。在未来的某个时候，照片上的人事物景也会成为一个人的最美好的回忆。 代是雄他们选好地方，摆好pos之后，便请旁边的人帮他们拍照。他们也不要求照片拍得有多么的好，只要清晰就行。在拍照的时候，看着曾经生活了三年的校园，代是雄感慨万千。当自己每天都匆忙地行走在校园中的时候，他不曾觉得这一草一木，一树一景有多么的好看，或许当时自己根本都没有留意自己身边的环境。而此时此刻，当他抱着不同的心态来审视自己的周边时，他觉得自己的校园是那么的好，里面还有很多自己不知道的东西，每一个东西都值得自己去了解，去认识。 拍完了宿舍照，代是雄便邀请几个同师门的同学来合影。说来也奇怪，虽然几乎每天都要在实验室里面见面，但代是雄似乎对里面的每一个人都不是很了解。大家在一起的时候，也就是讨论一下学习方面的事情，在其他地方见面的时间都比较的少了。这就像在单位里面的同事一样，上班的时候，大家为了一份共同的事业而聚在一起。下班之后，大家各回各家，别人家发生了天大的事情，自己也不一定会知道。都说大学就是一个“小社会”，这一点都没错。从这里也可以看出，小伙伴之间的友情是多么的弥足珍贵啊！ 下午两点，毕业典礼正式开始了。本次毕业典礼是在学校的小礼堂举行的。为大家颁发学位的导师是学校的校长和副校长，他们身穿着导师服，看上去很专业、很有学问的样子。首先，校长为毕业生致辞，他勉励大家要不断进取，要为社会做贡献，同时不要忘了回报母校。听完校长的讲话，代是雄总结了一下，本科毕业时校长的讲话和本次讲话差不多，感觉都有固定的程序在里面：首先祝贺大家顺利毕业，然后描绘一下未来的图景及学校毕业生所取得的优异成绩，最后鼓励大家要勇于开创自己的事业。代是雄向周围望了一下，几乎没人在听校长讲话，大家要么在低头看手机，要么在悄悄地讲话，这让他想到了在教室里面上课时的情景。 校长讲话完毕，下一个环节就是毕业生分批上台接受导师的“点拨”，并领取毕业证和学位证。所谓的“点拨”，就是将硕士帽上的吊带从一边捋到另一边。看到这个情景，代是雄又心生感慨了，很多学生在校三年，老师都不曾“点拨”过他们，而在领证的时候来个“点拨”，是不是有点晚了呢？ 终于轮到代是雄上台了，为他发证的是一位刚被评上院士的副校长。在进行了例行操作之后，副校长面带笑容地问他工作找的是哪里。代是雄没想到自己有机会这么近距离地和院士握手，更没想到院士会主动和自己说话。他便吞吞吐吐地说道自己找的是某公司的一个程序员岗位。院士点头说不错。后来问了其他同学才知道，上台领证的每个人都会被问到同样的问题。 就这样，毕业典礼在一片欢声笑语和导师们对学生的殷切的祝福中结束了。这也为三年的研究生生涯画上了一个圆满的句号。未来的路在哪里呢？未来的路会怎样呢？代是雄也不知道。他唯一知道的是在离校之前，他还有很多事情要做。 原文链接： http://www.daxixiong.com/?/article/5 上一篇 “多线程”简介及其C代码实现框架 下一篇 C语言多线程中变量累加问题的分析 顶 1 踩 0 我的同类文章 一个程序员的成长史 （4） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574075次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 71
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/49962429

ParseText::
C语言多线程中变量累加问题的分析 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 C语言多线程中变量累加问题的分析 2015-11-21 10:26 555人阅读 评论 (0) 收藏 举报 分类： 软件项目实践中的C语言一瞥 （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 问题：请问下面程序中，main函数打印出的g_iTestInteger变量的值是多少？ / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 版权所有 (C)2015, Zhou Zhaoxiong。 * * 文件名称：MultipleThread_1.c * 文件标识：无 * 内容摘要：多线程中的变量值问题 * 其它说明：无 * 当前版本：V1.0 * 作 者：Zhou Zhaoxiong * 完成日期：20151117 * ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** / #include <stdio.h> #include <stdlib.h> #include <pthread.h> // 重定义数据类型 typedef signed int INT32; typedef unsigned int UINT32; // 宏定义 #define THREAD_NUM 100 // 线程个数 // 全局变量 UINT32 g_iTestInteger = 0; // 函数声明 void ProcessTask(void *pParam); / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：主函数 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------------------- * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ INT32 main() { pthread_t MultiHandle = 0; // 多线程句柄 pthread_t SingleHandle = 0; // 单线程句柄 UINT32 iLoopFlag = 0; INT32 iRetVal = 0; // 创建线程函数的返回值 // 循环创建线程 for (iLoopFlag = 0; iLoopFlag < THREAD_NUM; iLoopFlag ++) { iRetVal = pthread_create(&MultiHandle, NULL, (void * (*)(void *))(&ProcessTask), (void *)iLoopFlag); if (0 != iRetVal) { printf("Create ProcessTask %d failed!\n", iLoopFlag); return -1; } } // 打印全局变量的值 printf("In main, TestInteger = %d\n", g_iTestInteger); return 0; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 处理线程 * 输入参数： pParam-线程编号 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ---------------------------------------------------------------------- * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **/ void ProcessTask(void *pParam) { g_iTestInteger ++; } 以上程序的功能比较简单，就是创建100个相同的线程，在线程中对g_iTestInteger的值进行累加，然后在main函数中打印g_iTestInteger的值。 看到这个程序，大家可能会说g_iTestInteger变量的值应该是100，因为每个线程都对g_iTestInteger加了1次。好吧，我们先运行程序，看下打印出来的结果是多少。 我们将程序上传到Linux机器上，然后执行如下操作： ~/zhouzhaoxiong/zzx/MultipleThread> gcc -g -o MultipleThread MultipleThread_1.c -lpthread ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 99 ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 99 ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 99 ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 98 ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 99 出乎大多数人的意料，g_iTestInteger变量的值不但不是100，而且不是固定的值。在这里，我只是运行了五次程序，大家可以多运行几次，看结果会不会是100。 那么，为什么结果不是100呢？为了查找原因，我们在“g_iTestInteger ++;”代码之后将g_iTestInteger变量的值打印出来，如下代码所示： / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 版权所有 (C)2015, Zhou Zhaoxiong。 * * 文件名称：MultipleThread_2.c * 文件标识：无 * 内容摘要：多线程中的变量值问题 * 其它说明：无 * 当前版本：V1.0 * 作 者：Zhou Zhaoxiong * 完成日期：20151117 * ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** / #include <stdio.h> #include <stdlib.h> #include <pthread.h> // 重定义数据类型 typedef signed int INT32; typedef unsigned int UINT32; // 宏定义 #define THREAD_NUM 100 // 线程个数 // 全局变量 UINT32 g_iTestInteger = 0; // 函数声明 void ProcessTask(void *pParam); / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：主函数 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------------------- * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ INT32 main() { pthread_t MultiHandle = 0; // 多线程句柄 pthread_t SingleHandle = 0; // 单线程句柄 UINT32 iLoopFlag = 0; INT32 iRetVal = 0; // 创建线程函数的返回值 // 循环创建线程 for (iLoopFlag = 0; iLoopFlag < THREAD_NUM; iLoopFlag ++) { iRetVal = pthread_create(&MultiHandle, NULL, (void * (*)(void *))(&ProcessTask), (void *)iLoopFlag); if (0 != iRetVal) { printf("Create ProcessTask %d failed!\n", iLoopFlag); return -1; } } // 打印全局变量的值 printf("In main, TestInteger = %d\n", g_iTestInteger); return 0; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 处理线程 * 输入参数： pParam-线程编号 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ---------------------------------------------------------------------- * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **/ void ProcessTask(void *pParam) { g_iTestInteger ++; printf("TestInteger = %d\n", g_iTestInteger); } 重新上传程序，编译并执行，如下： TestInteger = 1 TestInteger = 3 TestInteger = 2 TestInteger = 4 TestInteger = 5 TestInteger = 6 TestInteger = 26 TestInteger = 7 TestInteger = 8 TestInteger = 9 TestInteger = 10 TestInteger = 11 TestInteger = 12 TestInteger = 13 TestInteger = 27 TestInteger = 15 TestInteger = 16 TestInteger = 17 TestInteger = 18 TestInteger = 19 TestInteger = 20 TestInteger = 21 TestInteger = 22 TestInteger = 23 TestInteger = 24 TestInteger = 25 TestInteger = 14 TestInteger = 28 TestInteger = 29 TestInteger = 30 TestInteger = 31 TestInteger = 32 TestInteger = 33 TestInteger = 34 TestInteger = 35 TestInteger = 36 TestInteger = 37 TestInteger = 38 TestInteger = 39 TestInteger = 40 TestInteger = 41 TestInteger = 42 TestInteger = 43 TestInteger = 44 TestInteger = 45 TestInteger = 49 TestInteger = 47 TestInteger = 48 TestInteger = 46 TestInteger = 50 TestInteger = 54 TestInteger = 55 TestInteger = 56 TestInteger = 57 TestInteger = 52 TestInteger = 53 TestInteger = 58 TestInteger = 59 TestInteger = 60 TestInteger = 61 TestInteger = 62 TestInteger = 63 TestInteger = 51 TestInteger = 64 TestInteger = 65 TestInteger = 66 TestInteger = 67 TestInteger = 68 TestInteger = 69 TestInteger = 70 TestInteger = 71 TestInteger = 72 TestInteger = 73 TestInteger = 100 TestInteger = 75 TestInteger = 76 TestInteger = 77 TestInteger = 78 TestInteger = 79 TestInteger = 80 TestInteger = 81 TestInteger = 82 TestInteger = 83 TestInteger = 84 TestInteger = 85 TestInteger = 86 TestInteger = 87 TestInteger = 88 TestInteger = 89 TestInteger = 90 TestInteger = 91 TestInteger = 92 TestInteger = 93 TestInteger = 94 TestInteger = 95 TestInteger = 96 TestInteger = 97 TestInteger = 98 In main, TestInteger = 98 TestInteger = 99 TestInteger = 74 可以看到，g_iTestInteger变量的值并不是顺序增加的。由此可以看出，这100个线程的执行时间有先后之分，如果按照1~100为它们编号的话，并不一定说10号线程要在9号线程之后执行。除此之外，在main函数中打印g_iTestInteger变量值的时候，也许还有线程在执行(从程序输出结果来看，确实如此)，因此打印出的值不是100，而是小于100的一个数。我们可以猜想，g_iTestInteger的值的范围是[1, 100]。 为了等线程执行完成之后再打印g_iTestInteger的值，我们可以在线程创建完成之后让程序休眠一段时间，然后再打印变量值。如下代码所示： / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 版权所有 (C)2015, Zhou Zhaoxiong。 * * 文件名称：MultipleThread_3.c * 文件标识：无 * 内容摘要：多线程中的变量值问题 * 其它说明：无 * 当前版本：V1.0 * 作 者：Zhou Zhaoxiong * 完成日期：20151117 * ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** / #include <stdio.h> #include <stdlib.h> #include <pthread.h> // 重定义数据类型 typedef signed int INT32; typedef unsigned int UINT32; // 宏定义 #define THREAD_NUM 100 // 线程个数 // 全局变量 UINT32 g_iTestInteger = 0; // 函数声明 void ProcessTask(void *pParam); void Sleep(UINT32 iCountMs); / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：主函数 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------------------- * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ INT32 main() { pthread_t MultiHandle = 0; // 多线程句柄 pthread_t SingleHandle = 0; // 单线程句柄 UINT32 iLoopFlag = 0; INT32 iRetVal = 0; // 创建线程函数的返回值 // 循环创建线程 for (iLoopFlag = 0; iLoopFlag < THREAD_NUM; iLoopFlag ++) { iRetVal = pthread_create(&MultiHandle, NULL, (void * (*)(void *))(&ProcessTask), (void *)iLoopFlag); if (0 != iRetVal) { printf("Create ProcessTask %d failed!\n", iLoopFlag); return -1; } } Sleep(1000); // 休息1s // 打印全局变量的值 printf("In main, TestInteger = %d\n", g_iTestInteger); return 0; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 处理线程 * 输入参数： pParam-线程编号 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ---------------------------------------------------------------------- * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **/ void ProcessTask(void *pParam) { g_iTestInteger ++; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 程序休眠 * 输入参数： iCountMs-休眠时间(单位:ms) * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------------------ * 20151117 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *** / void Sleep(UINT32 iCountMs) { struct timeval t_timeout = {0}; if (iCountMs < 1000) { t_timeout.tv_sec = 0; t_timeout.tv_usec = iCountMs * 1000; } else { t_timeout.tv_sec = iCountMs / 1000; t_timeout.tv_usec = (iCountMs % 1000) * 1000; } select(0, NULL, NULL, NULL, &t_timeout); // 调用select函数阻塞程序 } 重新上传程序，编译并执行，如下： ~/zhouzhaoxiong/zzx/MultipleThread> gcc -g -o MultipleThread MultipleThread_3.c -lpthread ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 100 ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 100 ~/zhouzhaoxiong/zzx/MultipleThread> MultipleThread In main, TestInteger = 100 可以看到，程序运行了多次，g_iTestInteger的值始终是100。看来，“心急吃不得热豆腐”，我们要等所有线程都全部执行完成之后，再来打印变量值。 通过以上分析，我们可以得出以下结论： 第一，在多线程程序中，尽量不要同时对同一个全局变量执行加减等操作，这样执行之后的结果很有可能不是我们想要的。 第二，多线程不是万能的，创建多线程的初衷，是要并行地执行很多互不关联或关联度很小的操作。如果某些操作有很强的耦合关系(如本例中的对g_iTestInteger变量加1)，那么放到一个单线程里面顺序执行更好。 本文中的程序已经放到了GitHub上，欢迎下载阅读： https://github.com/zhouzxi/MultipleThread 原文链接： http://www.daxixiong.com/?/article/15 上一篇 毕业典礼—一个程序员的成长史(4) 下一篇 “增长黑客”与LBS 顶 2 踩 0 我的同类文章 软件项目实践中的C语言一瞥 （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574080次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行

Recno:: 72
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50016749

ParseText::
“增长黑客”与LBS - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 “增长黑客”与LBS 2015-11-24 18:25 762人阅读 评论 (0) 收藏 举报 分类： 经典书籍读后感 （25） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 最近，CSDN在举行免费试读活动( http://blog.csdn.net/blogdevteam/article/details/49758609 )，本次“主角”是《增长黑客：创业公司的用户与收入增长秘籍》。乍看起来，“增长黑客”这个概念有点高大上。本书的“内容简介”给出了“增长黑客”的定义，它是介于技术和市场之间的新型团队角色，主要依靠技术和数据的力量来达成各种营销目标，而非传统意义上靠砸钱来获取用户的市场推广角色。看来，这里的“黑客”和我们通常理解的黑客不一样，它更多的是偏重于市场推广，也就是营销。 在试读样章中，作者介绍了“增长黑客”的起源，并介绍了LinkedIn、Airbnb、37Signals、EA、ZAGG、HubSpot、OkDork、百姓网、Tinder、Skype、Wi-Fi万能钥匙、星巴克、Foursquare、Waze、Duolingo、Quora、豌豆荚等国内外企业、网站或应用为了获取用户所采用的一些简单、有趣的方法。《孙子兵法》曰“凡战者，以正合，以奇胜”，“增长黑客”正是采用一些比较奇妙的方法来获得用户的喜爱和支持。 在试读样章中，出现了LBS的概念，如Foursquare、Waze便是两款基于LBS的很成功的应用。由于之前我参与过《信息通信技术百科全书》的编写( http://blog.csdn.net/zhouzhaoxiong1227/article/details/45245743 )，对LBS有一定的了解，因此这里想重点对LBS进行一些介绍。 喜欢到室外去跑步的朋友想必都知道有一款叫做“咕咚运动”的手机客户端软件，它可以将跑步所经过的路线、所花的时间等显示出来，每跑一千米还会有语音提示，真的是非常人性化。“咕咚运动”其实就是位置签到服务的一种，它让我们的运动更加有趣。 类似“咕咚运动”这样的位置签到服务为什么会发展起来呢？原因有三个：第一，随着移动互联网的普及，用户可随时随地接入互联网；第二，智能手机的普及，使得用智能手机等移动终端上网的人越来越多；第三，用户使用智能手机等移动终端上网习惯的培养及形成。 位置签到服务，是基于位置的服务(Location Based Service, LBS)的一种。我们先来看一下什么是基于位置的服务。基于位置的服务是通过电信运营商的无线通信网络或外部定位方式来获取移动终端用户的位置信息，在地理信息系统平台的支持下，为用户提供相应服务的一种增值业务。基于位置服务的三要素是定位、平台和服务。 位置签到服务以用户签到(即用户位置定位)为核心，探索基于签到的增值服务。目前，它呈现出三种发展方向，如图1所示。 图1 位置签到服务的三个发展方向 要做好位置签到服务，还需要从如图2所示的方向上不断创新。 图2 位置签到服务的创新方向 位置签到服务已深入到我们的日常生活的方方面面。例如，某移动互联网公司推出了一款生活服务软件，可以根据用户所处的位置来查看周边的餐馆、超市、电影院及交通路线等。此外，该软件还会定期为用户推送一些优惠信息，并能够为用户提供合理化的消费建议。这就是位置签到服务的典型应用。 随着移动互联网的进一步发展，位置签到服务必将与我们的日常生活联系得更加紧密，并为我们带来更多的惊喜，让我们拭目以待。 看了我的这篇文章，如果大家对“增长黑客”感兴趣，欢迎阅读《增长黑客：创业公司的用户与收入增长秘籍》一书。 上一篇 C语言多线程中变量累加问题的分析 下一篇 租房&考驾照—一个程序员的成长史(5) 顶 2 踩 0 我的同类文章 经典书籍读后感 （25） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574082次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 73
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50052161

ParseText::
租房&考驾照—一个程序员的成长史(5) - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 租房&考驾照—一个程序员的成长史(5) 2015-11-26 10:11 841人阅读 评论 (1) 收藏 举报 分类： 一个程序员的成长史 （4） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 毕业典礼举行完之后，学校也发了文件，要求毕业生在四月底之前必须要离校。听说自己四月底之前会被“赶走”，代是雄心里还是比较的着急，他还有两件重要的事情要办，一是将自己之前租的房子转租出去，二是将驾照拿到手。 实际上，学校这么快让人走让很多还没找到住处的学生的处境相当的尴尬。由于到了毕业季，公司周围的很多房子早就被租出去了，因此很多没来得及下手的学生要等很长时间才能找到合适的房子可租。 举个例子来说，国内某两大通信公司H公司和Z公司每年招进去的新员工的数量少则数千人，多达上万人，几乎每个人都要租房子，而大家都想住在离公司比较近的地方，这样上下班也比较的方便。这样一来，“近水楼台先得月”，这两大公司附近的出租房很是抢手，很多在过完年之前就已经被租出去了。 由于之前并不知道要回重庆工作，代是雄和室友小郭及另外一个同学在过完年之后便在Z公司的附近租了一套三室一厅的房子。那个时候，为了找到合适的住处，代是雄将需求发到了网上，不久之后便有不少的房产中介打电话给他，向他推荐了很多房源。对于毕业生来说，如果没有熟人的推荐，那么比较靠谱的找房子的方法便是通过中介联系了，不过这样会被收取一定数额(通常是一个月租金)的中介费。跑了好几天之后，代是雄他们终于看上了一套比较旧的，但是离Z公司很近(步行只需要几分钟)的房子，经过讨价还价之后，最后他们以2300元钱租了下来。 代是雄和另外一位同学都是签约的Z公司，这样他们可以步行上班，而小郭同学在H公司上班，需要坐车过去。好在就在他们的楼下就有公交车站。综合考虑之前，他们觉得这套房子还是很不错的。 但是，重庆研发中心的“盛情邀请”让代是雄最终决定回家乡工作了，那么之前租的房子便要退掉，或者是转租给别人。退掉是不可能的，因为小郭和另外一位同学还要住在里面的，只有考虑转租了。考虑到地理上的优势(离Z公司比较近)，代是雄觉得转租出去应该不算难，便拜托一位在Z公司上班的师兄将转租信息发到了公司的内网上。果然，在将信息发布出去的当天，代是雄便接到了好几个电话。但是，很多人在看了这个房子之后，都觉得有点旧了，要求代是雄降低价格。代是雄当然不会同意，毕竟自己也才刚走出校园，也还需要用钱。不管是什么原因要转租房子，除非自己特别需要钱，都尽量不要“亏本”转租。 终于，有一位在Z公司工作了将近7年的员工看上了他的这套房子，也对代是雄提出的价格没有异议，他们很快成交了，代是雄也松了一口气。其实，价格是一方面，最主要的还是看租房子的几个人是否合得来，如果大家住在一起其乐融融的，那当然好；但如果大家每天都生活在不愉快中，三天两头扯皮，会有度日如年的感觉。本来大家每天工作都已经很累了，如果回家之后还要看别人的脸色，那么谁都受不了。这也是说，选对室友是非常重要的。 处理好了房子的事情之后，代是雄也收到了Z公司寄出来的改签证明。他立即将这个证明拿给了辅导员倪老师。看到代是雄拿了一张纸走过来，倪老师以为他要毁约(因为她见得太多了)，便说：“我都给大家说过很多次了，不要随便毁约，至少要到公司干了几年之后再考虑跳槽。”“辅导员，你误会了，我不是来毁约的，我是来办改签的。”代是雄说完，便将改签证明递了过去。辅导员这才知道代是雄的来意，便不好意思地说到：“真对不起，这几天来我这里办事的人，几乎都是来办毁约的，我都形成条件反射了。”确实，对于很多找工作比较容易的学校来说，那里面的学生一般都能同时拿个好几个offer，这样看到哪家的待遇好，就会把之前签的合同毁掉。某些公司为了防止学生毁约，规定如果学生单方提出了要毁约，要额外交几千到上万不等的毁约金。但很多学生毕竟并不了解哪些工作更适合自己，单从薪酬上来评判几份工作的优劣，这样出现毁约的情况也是很正常的了。还有的学生的想法是先拿到一个offer再说，等签了约之后再继续找，如果找到了更好的，那么就将之前那个毁掉了。具体到每个人，情况也是相当复杂的，有的人是因为找到了更好的工作(主要是工资更高)而毁约，有的人是因为想要回老家工作而毁约，有的人是因为进一步深造而毁约。 办完了改签，代是雄在校的最后一个任务便是继续学车，并且要在离校之前将驾照拿到手。说起考驾照这事，代是雄其实也是随波逐流。在他上本科的时候，周围就有很多同学在考驾照。在当时，代是雄觉得这些同学做的事情没啥意义，未来什么时候能够开上车，还不一定呢。到了研究生阶段，周围考驾照的人就更多了。很多人没有把心思放在科研上，却一窝蜂地去考驾照。那些同学给出的理由很简单：工作之后，很少有时间来考驾照，而掌握驾驶的技能对每个上班族来说是必需的。 在研三的那个寒假，代是雄写完了论文，签了工作，正在思考接下来要做什么，同宿舍的小郭同学便建议他们一起去考驾照。代是雄想了一下，对于程序员来说，工作是相当忙碌的，加班加点更是家常便饭。未来说不定某个时候要买车，那个时候再来考驾照就相当的累了，倒不如趁现在有时间去把驾照拿到手。 就这样，代是雄和小郭同学在2011年的11月份到学校外面的驾校去报了名，并在放寒假回家之前通过了理论考试。寒假回来，他们便正式开始学习了。由于时间比较充裕，他们按照驾校的安排去学习，因此进度非常的快。在毕业典礼之前，他们已经完成了科目二的考试，后面还剩下两个科目。 决定回重庆工作之后，代是雄最担心的事情便是自己能否在离校之前把驾照拿到手。在将改签证明交给辅导员之后，代是雄便联系了驾校的教练。他把自己的情况给教练说了，并希望能够尽快参加训练以便完成考试。 就在联系了教练的第二天，代是雄便接到了驾校的电话，叫他去参加科目三的训练。在接下来的两个星期，代是雄几乎每天都早出晚归，心中最大的愿望就是尽快拿到驾照。“功夫不负有心人”，在2012年的青年节，代是雄拿到了期盼已久的驾照，为自己的研究生生涯画上了一个很圆很圆的句号！ 在2012年的5月8日，代是雄踏上了回重庆的火车，离开了他学习和生活了三年的城市。那么，在火车上，他想的是什么呢？对于这几年的“功过得失”，他是如何看的呢？ 原文链接： http://www.daxixiong.com/?/article/18 上一篇 “增长黑客”与LBS 下一篇 查找栈的增长方向的分析及C代码实现 顶 3 踩 1 我的同类文章 一个程序员的成长史 （4） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574076次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 74
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50147865

ParseText::
查找栈的增长方向的分析及C代码实现 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 查找栈的增长方向的分析及C代码实现 标签： 栈 数据结构 c语言 2015-12-02 14:31 642人阅读 评论 (5) 收藏 举报 分类： 编程 （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 对于栈这种数据结构，大家应该不会陌生，它是一种后进先出的数据结构。在一般的计算机系统中，栈存在着两种存放数据的方式，一种是向上增长的，一种是向下增长的，如图1所示。 图1 栈的两种增长方向 在图1的(a)中，栈是向上增长的，即数据A对应的地址小于数据B对应的地址；在图1的(b)中，栈是向下增长的，即数据A对应的地址大于数据B对应的地址。 那么，我们怎样来查看(最好用程序)自己所使用的系统中的栈的增长方向到底属于哪一种呢？(注：这是我偶然在网上看到的一个问题。) 我们知道，作为一种常用的数据结构，栈主要用于存放程序中的局部变量和函数的输入参数。那么，我们就可以设计一个程序，在程序中通过比较某一个局部变量的前后两次的地址值来判断栈的增长方向。利用这个想法编写出来的程序如下所示： / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 版权所有 (C)2015, Zhou Zhaoxiong。 * * 文件名称：FindStackDirection.c * 文件标识：无 * 内容摘要：查看栈的增长方向 * 其它说明：无 * 当前版本：V1.0 * 作 者：Zhou Zhaoxiong * 完成日期：20151202 * ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** / #include <stdio.h> // 重定义数据类型 typedef unsigned char UINT8; typedef signed int INT32; // 函数声明 void FindStackDirection(void); / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：主函数 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * --------------------------------------------------------------- * 20151202 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ INT32 main() { FindStackDirection(); return 0; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：查找栈增长方向 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * --------------------------------------------------------------- * 20151202 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ void FindStackDirection(void) { UINT8 iStackAddr = 0; // 用于获取栈地址 static UINT8 *pStackAddr = NULL; // 用于存放第一个iStackAddr的地址 if (pStackAddr == NULL) // 第一次进入 { pStackAddr = &iStackAddr; // 保存iStackAddr的地址 FindStackDirection(); // 递归 } else // 第二次进入 { if (&iStackAddr > pStackAddr) // 第二次iStackDirection的地址大于第一次iStackDirection, 那么说明栈增长方向是向上的 { printf("Stack grows up!\n"); } else if (&iStackAddr < pStackAddr) // 第二次iStackDirection的地址小于第一次iStackDirection, 那么说明栈增长方向是向下的 { printf("Stack grows down!\n"); } else { printf("Bad stack!\n"); } } } 我们可以看到，函数FindStackDirection中出现了递归调用，即首次进入该函数的时候，将iStackAddr变量(局部变量)的地址值赋给pStackAddr，第二次进入该函数的时候，用新的iStackAddr变量的地址值与第一次进入该函数时iStackAddr变量的地址值相比较，如果前者大于后者，那么说明栈增长方向是向上的，否则，说明栈增长方向是向下的。 将以上代码上传到Linux机器上，使用“gcc -g -o FindStackDirection FindStackDirection.c”命令对程序进行编译之后，运行“FindStackDirection”命令，结果如下： Stack grows down! 即我所使用的系统中的栈的增长方向是向下的。大家也可以将以上代码在自己的系统中运行一下，看看结果是什么。 在大部分人(包括我)的印象中，栈的增长方向只有一种，那就是向上(如图1中的(a))，但程序运行出来的结果与我们预期的恰恰相反。从这点也可以看出，计算机系统在设计上的精妙与复杂，里面有很多东西都值得我们细细研究的。 原文中的代码已提到了GitHub上，欢迎下载阅读： https://github.com/zhouzxi/FindStackDirection 上一篇 租房&考驾照—一个程序员的成长史(5) 下一篇 ORACLE调用接口(OCI)简介及重要函数流程介绍 顶 2 踩 1 我的同类文章 编程 （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574071次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 75
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50209481

ParseText::
ORACLE调用接口(OCI)简介及重要函数流程介绍 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 ORACLE调用接口(OCI)简介及重要函数流程介绍 2015-12-07 18:45 965人阅读 评论 (0) 收藏 举报 分类： 软件项目实践中的SQL语言一瞥 （22） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 【文章摘要】 对于实现用户开销户的程序来说，与数据库进行交互是必不可少的。为了实现用户数据的存放、读取、删除等操作，我们需要频繁地访问数据库，这就对数据库的访问模式提出了较高的要求。ORACLE数据库具有系统可移植性好、使用方便、功能强等特点，因此在实际的软件开发项目中使用得非常的广泛。为了方便C语言程序操作ORACLE中的数据，ORACLE调用接口(OCI)应运而生。 本文首先简单介绍了OCI的基本情况，然后对OCI中两个重要的程序流程进行了一定的介绍。希望大家通过此文，能够对OCI有一个大致的了解。 一、OCI简介 在通常的情况下，大家是通过在客户端(如PLSQL Developer)中输入SQL语句来对数据库中的数据进行操作的。那么，如果我们想在C程序中实现对数据库的操作，该如何处理呢？ORACLE数据库提供了一个第三代程序设计语言的接口，用户可以通过C语言来编程访问数据库。 OCI(Oracle Call Interface)就是为了实现高级语言访问数据库而提供的接口，它允许开发者使用高级语言来编写程序，并通过该接口来访问数据库。 简而言之，OCI是由一组应用程序开发接口(API)组成的，ORACLE提供API的方式是提供一组库。在这组库中，包含了一系列的函数调用，如连接数据库、调用SQL等。 利用OCI，C程序访问ORACLE数据库的模式如图1所示。 图1 C程序访问ORACLE数据库的模式 二、OCI中常用函数简介 OCI提供了一组完备的功能集合，可以实现创建数据库连接、关闭数据库连接、执行SQL语句或存储过程、获取SQL语句或存储过程的执行结果、获取数据库空间大小等功能。 常用函数及其功能如表1所示(注：不同版本的OCI文件中的函数名可能会不一样，但功能都是一致的)： 表1 OCI常用函数及其功能 三、OCI中重要函数流程介绍 为了让大家了解OCI的流程，我们对OCI中两个重要的函数流程进行分析。如果大家想要对OCI进行深入的理解，请阅读OCI源码。 1 CreateDb流程 图2 CreateDb流程 有关CreateDb流程，要注意在初始化数据库连接之前，需要对程序进行加锁处理，待结果集创建成功之后，再解锁。 2.ExecuteSql流程 图3 ExecuteSql流程 有关ExecuteSql流程，要注意在执行完SQL语句之后，要释放本次的数据库连接。 四、总结 OCI作为C程序访问ORACLE数据库的桥梁，为大家操作数据库提供了很大的方便，这也算是ORACLE公司对软件设计的一大贡献了。对于开发应用软件的程序员来说，做到会调用OCI提供的API也就足够了。但是，如果大家想对OCI有比较深入的了解，还是要阅读其源码，这里提供一个源码下载的链接： http://download.csdn.net/detail/will___/4051884 。 上一篇 查找栈的增长方向的分析及C代码实现 下一篇 去除源文件中的重复行的程序流程及其C代码实现 顶 1 踩 0 我的同类文章 软件项目实践中的SQL语言一瞥 （22） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574067次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 76
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50247335

ParseText::
去除源文件中的重复行的程序流程及其C代码实现 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 去除源文件中的重复行的程序流程及其C代码实现 2015-12-10 11:25 751人阅读 评论 (2) 收藏 举报 分类： 软件项目实践中的C语言一瞥 （54） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 (本人正在参加2015博客之星评选，诚邀你来投票，谢谢： http://vote.blog.csdn.net/blogstar2015/candidate?username=zhouzxi ) 一、需求描述 要求对一个包含若干行记录且某几条记录相同的文件(源文件)实现去重操作，并将去重之后的记录写入到另外一个文件(目的文件)中。也即最后生成的文件中没有内容相同的两行记录。如果源文件中两条记录之间有空行，则在目的文件中一并将其去掉。 两条记录相同的标准是： 1) 字符个数及内容完全相同。 2) 去除空格及回车换行符之后的内容完全相同。 示例： 源文件样例： ABCD EFGH abcd AB CD abcd 12345 对应的目的文件样例： ABCD EFGH abcd 12345 二、程序总体流程 为了实现去重操作，我们考虑使用链表数据结构。先将源文件中的记录内容逐条读取，与链表中已经存在的记录内容相比较，如果没有与之相同的，则将该条记录加入链表。当源文件中的所有记录内容都读取完成之后，再将链表中的记录内容写入到目的文件中。 程序的总体流程如图1所示。 图1 程序的总体流程 三、重要程序流程及数据结构介绍 1.存放记录内容的链表 本程序使用链表来存放从源文件中读取到的每条记录，该链表的结构如下： typedef struct T_FileInfoStruct { UINT8 szContentLine[ 256 ]; struct T_FileInfoStruct *pNext; } T_FileInfo; 2.判断某条记录是否已存在于链表的函数 每当读取到一条记录，就要判断该条记录是否已经存在于链表中了(第一条记录除外)。判断操作非常的简单，只需要遍历整个链表就可以了。该操作由IsInList函数实现，其具体代码如下： UINT32 IsInList(T_FileInfo * ptContentListHead, UINT8 * pszContentLine) { T_FileInfo * pTmpInfo = ptContentListHead; if (ptContentListHead == NULL || pszContentLine == NULL ) { printf( "IsInList: input parameter(s) is NULL!\n" ); return 0 ; } while (pTmpInfo != NULL ) { if (strncmp(pszContentLine, pTmpInfo -> szContentLine, strlen(pszContentLine)) == 0 ) // 存在于链表中 { return 1 ; } pTmpInfo = pTmpInfo -> pNext; } if (pTmpInfo == NULL ) // 不存在于链表中 { return 0 ; } } 3.去除记录的回车换行符、去除记录中的空格的函数 RmNewLine函数用于去除记录的回车换行符，RemoveSpaceInStr函数用于去除记录中的空格。这两个函数的程序代码请见附录。 四、程序编译及执行结果 将RemoveRepeatLine.c(详细的代码请见附录)程序上传到Linux机器上，使用gcc -g -o RemoveRepeatLine RemoveRepeatLine.c命令对其编译，生成RemoveRepeatLine。 在本程序中，我们使用的源文件为TestFile.txt，位于当前用户的zhouzhaoxiong/zzx/RemoveRepeatLine/TestFile目录下；生成的目的文件为ResultFile.txt，与源文件位于相同的目录之下。 本人使用的源文件TestFile.txt的内容为： ABCD EFGH AB CD 1243565 dfbfdj dgbsjn 1234 n dsaghhn zvb vc awsswgh EFGH zvb 1234 n fedhh EFG H 运行RemoveRepeatLine命令之后，生成结果文件ResultFile.txt，其内容为： ABCD EFGH 1243565 dfbfdj dgbsjn 1234n dsaghhn zvb vc awsswgh fedhh 可见，程序满足了需求，去除了重复的行，同时将多余的空行也去掉了。 五、总结 关于本程序，有如下几点说明： 第一，链表这种数据结构在实际的软件开发项目中应用得非常的广泛，大家一定要熟练掌握其用法，特别是如何向链表中插入数据、如何遍历整个链表、如何清空链表等。 第二，写文件函数WriteToFile中，在“strncpy(szContentBuf, ptContentListHead->szContentLine, strlen(ptContentListHead->szContentLine));”语句之前，一定要加上“memset(szContentBuf, 0x00, sizeof(szContentBuf));”语句，否则写入文件中的内容可能不是我们想要的。大家也可以在自己的机器上试试，看加与不加“memset(szContentBuf, 0x00, sizeof(szContentBuf));”语句，生成的结果文件有何区别。 第三，在有关话单生成及处理的程序中，对源话单文件进行去重操作是大家必须考虑的问题。本文中的程序为相关项目的开发人员提供了参考。 附：完整的程序代码 / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 版权所有 (C)2015, Zhou Zhaoxiong。 * * 文件名称：RemoveRepeatLine.c * 文件标识：无 * 内容摘要：去除源文件中的重复行 * 其它说明：无 * 当前版本：V1.0 * 作 者：Zhou Zhaoxiong * 完成日期：20151209 * ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** / #include <stdio.h> #include <stdlib.h> #include <string.h> // 数据类型重定义 typedef unsigned char UINT8; typedef signed int INT32; typedef unsigned int UINT32; // 存放文件每行内容的链表 typedef struct T_FileInfoStruct { UINT8 szContentLine[256]; struct T_FileInfoStruct *pNext; } T_FileInfo; // 函数声明 void RemRepLineAndWriResFile(UINT8 *pszTestFile); void RmNewLine(UINT8 *pInStr); UINT32 IsInList(T_FileInfo *ptContentListHead, UINT8 * pszContentLine); void WriteToFile(T_FileInfo *ptContentListHead); void ClearList(T_FileInfo *ptContentListHead); void RemoveSpaceInStr(UINT8 *pszStr, UINT32 iStrLen); / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：主函数 * 输入参数：无 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * --------------------------------------------------------------- * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ INT32 main() { UINT8 szTestFile[128] = {0}; // 拼装配置文件路径 snprintf(szTestFile, sizeof(szTestFile)-1, "%s/zhouzhaoxiong/zzx/RemoveRepeatLine/TestFile/TestFile.txt", getenv("HOME")); RemRepLineAndWriResFile(szTestFile); // 调用函数完成去重及写文件的操作 return 0; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：去除源文件中的重复行, 并将去重之后的内容写入结果文件中 * 输入参数：pszTestFile-带路径的测试文件名 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * --------------------------------------------------------------- * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ void RemRepLineAndWriResFile(UINT8 *pszTestFile) { UINT8 szContentLine[256] = {0}; UINT32 iLineLen = 0; UINT32 iRetVal = 0; FILE *fp = NULL; T_FileInfo *ptContentListHead = NULL; T_FileInfo *ptContentListTail = NULL; T_FileInfo *ptCurrentContent = NULL; if (pszTestFile == NULL) { printf("RemRepLineAndWriResFile: pszTestFile is NULL!\n"); return; } printf("RemRepLineAndWriResFile: now, begin to process file %s\n", pszTestFile); if ((fp = fopen(pszTestFile, "r")) == NULL) { printf("RemRepLineAndWriResFile: open file %s failed!\n", pszTestFile); return; } else { ptContentListHead = NULL; ptContentListTail = NULL; while (feof(fp) == 0 && ferror(fp) == 0) { memset(szContentLine, 0x00, sizeof(szContentLine)); if (fgets(szContentLine, sizeof(szContentLine), fp) == NULL) // 从源文件中读取一行内容 { printf("RemRepLineAndWriResFile: get line null, break.\n"); break; } else { printf("RemRepLineAndWriResFile: get content line: %s\n", szContentLine); } RmNewLine(szContentLine); // 去掉字符串后面的回车换行符 RemoveSpaceInStr(szContentLine, strlen(szContentLine)); // 去掉字符串中的空格 iLineLen = strlen(szContentLine); if (iLineLen == 0) // 如果该行的有效长度为0, 则继续读取下一行 { printf("RemRepLineAndWriResFile: the length of line is 0, continue to read the next content line.\n"); continue; } if (ptContentListHead != NULL) // 判断当前行是否已经存在了 { iRetVal = IsInList(ptContentListHead, szContentLine); if (iRetVal == 1) // 已经存在 { printf("RemRepLineAndWriResFile: this content line has already existed.\n"); continue; } } // 将当前行加入链表中 ptCurrentContent = (T_FileInfo *)malloc(sizeof(T_FileInfo)); if (ptCurrentContent == NULL) { printf("RemRepLineAndWriResFile: exec malloc failed, memory may be not enough.\n"); return; } memcpy(ptCurrentContent->szContentLine, szContentLine, strlen(szContentLine)); if (ptContentListHead == NULL) // 链表为空时作为链表头 { ptContentListHead = ptCurrentContent; ptContentListTail = ptCurrentContent; } else { if (ptContentListTail != NULL) // 插入链表尾部 { ptContentListTail->pNext = ptCurrentContent; ptContentListTail = ptCurrentContent; } } } // 源文件使用完毕 fclose(fp); fp = NULL; } // 将去重之后的结果写入文件中 WriteToFile(ptContentListHead); // 清空链表 ClearList(ptContentListHead); ptContentListHead = NULL; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：去掉字符串后面的回车换行符 * 输入参数：pInStr-输入字符串 * 输出参数：无 * 返 回 值：无 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * --------------------------------------------------------------- * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ void RmNewLine(UINT8 *pInStr) { UINT32 iStrLen = 0; if (pInStr == NULL) { printf("RmNewLine: pInStr is NULL!\n"); return; } iStrLen = strlen(pInStr); while (iStrLen > 0) { if (pInStr[iStrLen-1] == '\n' || pInStr[iStrLen-1] == '\r') { pInStr[iStrLen-1] = '\0'; } else { break; } iStrLen --; } } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述：判断某行内容是否已经存在于链表中了 * 输入参数：pInStr-输入字符串 * 输出参数：无 * 返 回 值：1-存在 0-不存在 * 其它说明：无 * 修改日期 版本号 修改人 修改内容 * --------------------------------------------------------------- * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ UINT32 IsInList(T_FileInfo *ptContentListHead, UINT8 * pszContentLine) { T_FileInfo *pTmpInfo = ptContentListHead; if (ptContentListHead == NULL || pszContentLine == NULL) { printf("IsInList: input parameter(s) is NULL!\n"); return 0; } while (pTmpInfo != NULL) { if (strncmp(pszContentLine, pTmpInfo->szContentLine, strlen(pszContentLine)) == 0) // 存在于链表中 { return 1; } pTmpInfo = pTmpInfo->pNext; } if (pTmpInfo == NULL) // 不存在于链表中 { return 0; } } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 把内容写到文件中 * 输入参数： ptContentListHead-文件记录链表 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ---------------------------------------------------------------------- * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **/ void WriteToFile(T_FileInfo *ptContentListHead) { FILE *fp = NULL; UINT8 szLocalFile[500] = {0}; UINT8 szContentBuf[256] = {0}; if (ptContentListHead == NULL) { printf("WriteToFile: input parameter is NULL!\n"); return; } snprintf(szLocalFile, sizeof(szLocalFile)-1, "%s/zhouzhaoxiong/zzx/RemoveRepeatLine/TestFile/ResultFile.txt", getenv("HOME")); fp = fopen(szLocalFile, "a+"); if (fp == NULL) { printf("WriteToFile: open local file failed, file=%s\n", szLocalFile); return; } while (ptContentListHead != NULL) { memset(szContentBuf, 0x00, sizeof(szContentBuf)); strncpy(szContentBuf, ptContentListHead->szContentLine, strlen(ptContentListHead->szContentLine)); printf("WriteToFile: LocalFile=%s, ContentBuf=%s\n", szLocalFile, szContentBuf); fputs(szContentBuf, fp); fputs("\r\n", fp); // 加上回车换行符 fflush(fp); ptContentListHead = ptContentListHead->pNext; } fclose(fp); fp = NULL; return; } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 清除链表 * 输入参数： ptContentListHead-链表指针 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------ * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ void ClearList(T_FileInfo *ptContentListHead) { T_FileInfo *ptContentList = NULL; T_FileInfo *pTmpData = NULL; if (ptContentListHead == NULL) { printf("ClearList: input parameter is NULL!\n"); return; } ptContentList = ptContentListHead; while (ptContentList != NULL) { pTmpData = ptContentList; ptContentList = ptContentList->pNext; free(pTmpData); } } / ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** * 功能描述： 清除字符串中的空格 * 输入参数： pszStr-输入的字符串 iStrLen-最大长度 * 输出参数： 无 * 返 回 值： 无 * 其它说明： 无 * 修改日期 版本号 修改人 修改内容 * ------------------------------------------------------ * 20151209 V1.0 Zhou Zhaoxiong 创建 ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */ void RemoveSpaceInStr(UINT8 *pszStr, UINT32 iStrLen) { UINT8 szResult[256] = {0}; UINT8 szBuf[256] = {0}; UINT32 iLoopFlagSrc = 0; UINT32 iLoopFlagDst = 0; if (pszStr == NULL) { return; } memcpy(szBuf, pszStr, iStrLen); for (iLoopFlagSrc = 0; iLoopFlagSrc < strlen(szBuf); iLoopFlagSrc ++) { if (szBuf[iLoopFlagSrc] != ' ') { szResult[iLoopFlagDst] = szBuf[iLoopFlagSrc]; iLoopFlagDst ++; } } szResult[iLoopFlagDst+1] = 0; memcpy(pszStr, szResult, iStrLen); return; } (本文中的程序已提交到了GitHub上，欢迎下载阅读： https://github.com/zhouzxi/RemoveRepeatLine ) 上一篇 ORACLE调用接口(OCI)简介及重要函数流程介绍 下一篇 读取配置文件的shell脚本实现 顶 4 踩 0 我的同类文章 软件项目实践中的C语言一瞥 （54） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574077次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55)

Recno:: 77
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50273543

ParseText::
读取配置文件的shell脚本实现 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 读取配置文件的shell脚本实现 标签： shell 2015-12-12 11:13 967人阅读 评论 (1) 收藏 举报 分类： 编程 （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 (本人正在参加2015博客之星评选，诚邀你来投票，谢谢： http://vote.blog.csdn.net/blogstar2015/candidate?username=zhouzxi ) 最近，在从事开发工作的过程中，遇到了一个需求：用shell脚本实现对配置文件的读取，并将读取到的配置项写入到新的文件中。 为了完成该需求，我们考虑使用awk命令，该命令把文件中的内容逐行的读入，按照特定的规则对每行记录进行处理。 例如，我们要从文件Config.ini(位于当前用户的etc目录下)中获取各个配置项的值，并将之写入到NetworkInfo.txt文件中。其中，Config.ini文件的内容如下： [network] ; ip of database ip= 10.10 . 10.10 ; port of database port= 9999 我们编写如下的shell脚本GetDatabaseConfig.sh： #!/bin/ksh CFG_FILE= $HOME /etc/Config.ini IP=` awk '$1~/\[.*/{_cdr_par_=0}\ $0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\ $0~/^[\011 ]*ip *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\ ' ${CFG_FILE} ` PORT=` awk '$1~/\[.*/{_cdr_par_=0}\ $0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\ $0~/^[\011 ]*port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\ ' ${CFG_FILE} ` main () { echo "ip =" $IP echo "port =" $PORT echo "[network]" >> NetworkInfo.txt echo "ip= $IP " >> NetworkInfo.txt echo "port= $PORT " >> NetworkInfo.txt echo "finish !!!!!!!!!!!" } ## Execute main function main $* 将该脚本上传到Linux机器上，并使用“chmod 777 GetDatabaseConfig.sh”修改该脚本的权限，然后运行“./GetDatabaseConfig.sh”命令，结果如下： ip = 10.10 . 10.10 port = 9999 finish ! ! ! ! ! ! ! ! ! ! ! 同时，可以看到在当前目录下生成了NetworkInfo.txt文件，其内容为： [network] ip= 10.10 . 10.10 port= 9999 本文中的shell脚本已提交到GitHub上，欢迎下载阅读： https://github.com/zhouzxi/GetDatabaseConfig 参考资料： 1. http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html 2. http://www.cnblogs.com/repository/archive/2011/05/13/2045927.html 上一篇 去除源文件中的重复行的程序流程及其C代码实现 下一篇 《C程序员从校园到职场》勘误 顶 2 踩 1 我的同类文章 编程 （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574081次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 78
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50293089

ParseText::
《C程序员从校园到职场》勘误 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 《C程序员从校园到职场》勘误 2015-12-14 12:12 625人阅读 评论 (3) 收藏 举报 分类： 杂谈 （113） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 (本人正在参加2015博客之星评选，诚邀你来投票，谢谢： http://vote.blog.csdn.net/blogstar2015/candidate?username=zhouzxi ) 自从《C程序员从校园到职场》一书上市以来，受到了大家的欢迎，很多读者通过各种途径向我反馈了读书心得，在此表示感谢。但“金无赤足，人无完人”，书中的内容也存在一些纰漏。本文用于持续收集目前发现的本书的一些问题，也希望大家将对本书的一些意见或改进建议及时告知我。 本书的勘误如下： 1.P5，图1.4的内容不完整，需要替换为下图： 2.P100，程序中的“iLoopFlag”变量未用，可以删除，即将“UINT32 iLoopFlag = 0;”及该行后面的注释删除掉。 3.P149，“if (hDbConn == NULL)”行上面有一条很长的虚线，要删除掉。 4.P179，“如图11.6所示，该流程涉及两个存储过程。。。”中，将“如图11.6所示”修改为“从图11.6中可以看出”。 上一篇 读取配置文件的shell脚本实现 下一篇 《黑客与画家》阅读笔记 顶 2 踩 0 我的同类文章 杂谈 （113） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574071次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 79
URL:: http://blog.csdn.net/zhouzhaoxiong1227/article/details/50319579

ParseText::
《黑客与画家》阅读笔记 - 周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 《黑客与画家》阅读笔记 标签： 阅读 2015-12-15 19:22 446人阅读 评论 (2) 收藏 举报 分类： 经典书籍读后感 （25） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 (本人正在参加2015博客之星评选，诚邀你来投票，谢谢： http://vote.blog.csdn.net/blogstar2015/candidate?username=zhouzxi ) (今天看了池建强老师的文章《 再读黑客与画家（一） 》，想到自己之前也写过有关这本书的文章，遂贴出来，各位看官慢慢品尝！) 在很多人的印象中，黑客是一群非常神秘的、编程技术非常高超的人，他们可以随心所欲地操纵计算机、盗取别人电脑上面的资料。而画家无非是一群以画画为生或对画画有着很浓厚的兴趣的人。那么，黑客与画家有什么关联呢？这两者是否能够相提并论呢？《黑客与画家》一书为我们带来了答案。 该书的作者是被誉为“硅谷创业之父”的Paul Graham，他与朋友在1995年开发了世界上第一个互联网应用软件Viaweb，并于1998年以4900万美元的价格卖给了Yahoo!。他将自己的思考写成一系列文章，于2004年结集为《黑客与画家》一书出版。 本书一共有15章，内容涉及编程、软件、创业、财富、设计、研究等。全书观点新奇而犀利，文笔流畅，逻辑清晰，可供IT及相关行业的从业人员和爱好者细细阅读。 阅读完全书之后，作者的以下几个观点给我留下了深刻的印象： 第一，程序写出来是给人看的，附带能在机器上运行。 之前，我在CSDN的“畅言”栏目上发表过一篇文章《首先为人编写程序，其次才是计算机》( http://www.csdn.net/article/2014-08-14/2821193 )，文中提到“只有易读、易维护的软件代码才具有生命力”。我的想法与作者的观点类似。也就是说，我们编写程序的时候，要遵从项目组约定好的编程规范，不能想怎么写就怎么写。我们写出来的程序，要让别人能够很快读懂，这样也有利于软件版本的演进及维护。 第二，正确的合作方法是将项目分割成严格定义的模块，每一个模块由一个人明确负责。 在一般的研发项目(包括本人所在的项目)中，都是按照这种方法来分配任务的。先将一个大的系统分成很多个小的子系统(子系统也许还会再分成更小的子系统)，再将子系统分割成功能较为独立的模块，将每个模块分发给不同的开发人员来完成。在遇到问题的时候，直接找对应模块的开发人员就可以了。这种方法可以确保每一个模块都有人负责，且大家的任务不会重叠，同时也有利于模块的集成。 第三，大多数优秀的设计关注用户，并且以用户为中心。 在互联网时代(甚至是移动互联网时代)，大部分的软件产品都是因用户的需求而生，都是以用户为中心进行设计和开发的。用户有上网购物的欲望，于是淘宝和京东便起来了；用户有随时随地聊天的必要，于是微信和陌陌便产生了；用户有偶尔表现自己的想法，于是微博也崛起了。在未来，只有关注用户，为用户解决实际问题的产品才会具有生命力。 《黑客与画家》一书字字珠玑，处处闪烁着智慧的光芒。如果你关注IT行业、关注未来、关注创业、关注财富，那么你一定能够从这本书中受益。 附：《黑客与画家》经典语句 第1章 为什么书呆子不受欢迎 1.“书呆子”的目标具有两重性。他们毫无疑问想让自己受欢迎，但是他们更愿意让自己聪明。 2.真实世界的特点是，它极其庞大。如果总体足够大，即使是人数最少的少数派，只要聚集在一起，也能产生可观的力量。 3.几乎在任何团体中都存在等级关系。 第2章 黑客与画家 1.黑客的最高境界是创造规格。 2.容易实施的考核总是首先被采用。 3.编程语言是用来帮助思考程序的，而不是用来表达你已经想好的程序。 4.应该定期地从头开始，而不要长年累月地在一个项目上不断工作，并且试图把所有的最新想法都以修订版的形式包括进去。 5.不要太早决定一个程序应该怎么做。 6.坚持一丝不苟，就能取得优秀的成果。 7.正确的合作方法是将项目分割成严格定义的模块，每一个模块由一个人明确负责。 8.从他人的角度思考问题正是成功的奥秘所在。 9.程序写出来是给人看的，附带能在机器上运行。 第3章 不能说的话 1.一个好的科学家，并不仅仅是避开传统观点，还要努力打破传统观点。 2.自由思考比畅所欲言更重要。 第4章 良好的坏习惯 1.很自负的人必须培养出敏锐的感觉，及时发现周围情势的变化，知道怎样才能脱身。 第5章 另一条路 1.如果互联网软件能够击败桌面软件，一定是赢在更方便这一优势上。 2.互联网软件带来的最大变化之一，就是软件发布方式的改变。 3.实现某个构思，会带来更多的构思。 4.管理企业做到两点：做出用户喜欢的产品，保证开支小于收入。 第6章 如何创造财富 1.创造有价值的东西就是创造财富。 2.公司一切行为的目的都是盈利，从而生存下去。 3.要致富，需要两样东西：可测量性和可放大性。 4.创造人们需要的东西，也就是创造财富。 5.只要懂得藏富于民，国家就会变得强大。 第7章 关注贫富分化 1.财富与金钱是两个概念。 2.一旦通过创造财富而使致富成为可能，社会从整体上就会快速地变得更富有。 3.技术无法使其变得更便宜的唯一东西，就是品牌。 第8章 防止垃圾邮件的一种方法 1.在所有对抗垃圾邮件的方法之中，我认为单独来看，“贝叶斯过滤”是最有效的工具。 第9章 设计者的品味 1.好设计是简单的设计。 2.好设计是永不过时的设计。 3.好设计是解决主要问题的设计。 4.好设计是启发性的设计。 5.好设计通常是有点趣味性的设计。 6.好设计是艰苦的设计。 7.好设计是看似容易的设计。 8.好设计是对称的设计。 9.好设计是模仿大自然的设计。 10.好设计是一种再设计。 11.好设计是能够复制的设计。 12.好设计常常是奇特的设计。 13.好设计是成批出现的。 14.好设计常常是大胆的设计。 第10章 编程语言解析 1.编译器处理的高级语言代码又叫做源码，它经过翻译以后产生的机器码就叫做目标码。 第11章 一百年后的编程语言 1.一种语言的内核设计得越小、越干净，它的生命力就越顽强。 2.新语言更多地以开源项目的形式出现。 第12章 拒绝平庸 1.编程语言的特点之一就是它会使得大多数使用它的人满足于现状，不想改用其它语言。 第13章 书呆子的复仇 1.语言的编程能力越强大，写出来的程序就越短。 2.代码的数量很重要，因为开发一个程序所耗费的时间主要取决于程序的长度。 第14章 梦寐以求的编程语言 1.简洁性最重要的方面就是要使得语言更抽象。 2.开发大型程序的一个方法就是从一次性程序开始，然后不断地改进。 3.任何措施，只要能让“再设计”周而复始地进行下去，就都是可取的。 第15章 设计与研究 1.大多数优秀的设计关注用户，并且以用户为中心。 2.士气是设计的关键因素。 原文链接： http://www.zhouzhaoxiong.com/425.html 上一篇 《C程序员从校园到职场》勘误 下一篇 展示C代码覆盖率的gcovr工具简介及相关命令使用示例 顶 3 踩 0 我的同类文章 经典书籍读后感 （25） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574067次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 80
URL:: http://blog.csdn.net/zhouzxi/article/list/2

ParseText::
周兆熊的专栏 - 博客频道 - CSDN.NET 周兆熊的专栏 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 “大师兄”社区(http://www.daxixiong.com/)欢迎你！！！ 对“大师兄”社区进行了介绍，欢迎大家的加入！... 2015-10-12 18:50 阅读 (526) 评论 (0) 用gdb分析core文件及常见gdb命令操作示例 本文以一个实际的程序为例，介绍了用gdb分析core文件的方法和步骤，同时演示了常见gdb命令的操作方法。... 2015-10-08 19:09 阅读 (732) 评论 (0) 一个并不“艰难”的决定—一个程序员的成长史(3) 《一个程序员的成长史》系列第三篇。... 2015-09-28 09:01 阅读 (777) 评论 (3) 一个神秘的电话—一个程序员的成长史(2) 《一个程序员的成长史》系列第二篇。... 2015-09-23 15:15 阅读 (820) 评论 (9) 目的文件已不在原目录，程序还会继续执行写文件操作吗？ C语言中的写文件操作是通过文件句柄来向对应的文件中写入内容的，如果程序有访问文件句柄的权限，那么不管文件放在哪个目录下，都能够成功写入。在写文件的过程中，如果将文件删除，或者是放到了程序无权访问的目录下，那么程序也不会报错，而是继续执行。因此，对于需要写文件的软件来说，一定要确保相关目录下的文件不会被误移动或误删除。... 2015-09-17 17:36 阅读 (976) 评论 (3) 主人公的出场—一个程序员的成长史(1) 大家好，从今天起，我的微信公众号(zhouzxi)会连续推送《窗内窗外—一个程序员的成长史》系列。本系列以我本人从学校到职场的经历为原型，同时结合了我对软件开发工作、程序员的学习和生活的认识和感悟，欢迎大家阅读。你的点赞和支持是我写作的动力。下面是本系列的第一篇文章，让我们跟随主人公代是雄的脚步一起去体验程序员生活吧！... 2015-09-15 18:39 阅读 (832) 评论 (2) SOAP协议和基于SOAP的开发流程详述 简单对象访问协议(SOAP)是交换数据的一种协议规范，是一种轻量的、简单的、基于XML的协议，它被设计成在WEB上交换结构化的和固化的信息。 在实际的软件开发项目中，SOAP大多用于处理用户数据，也即实现开户、销户、改户和查户等功能。 本文根据作者实际从事过的基于SOAP的项目开发，对SOAP协议和基于SOAP的开发流程进行了详细的介绍。希望大家通过此文，能够对基于SOAP协议的开发有一个全面的了解。... 2015-09-10 18:45 阅读 (2216) 评论 (2) 《打造Facebook》读书笔记之Facebook的产品开发流程 作为一家引领时代创新潮流的公司，Facebook的诸多经验值得广大IT公司学习和借鉴。就像李开复老师所说的：“无论中国是否能出一个Facebook或扎克伯格，我都相信理解Facebook，并从王淮的亲身经历学习，对于中国的创业者、工程师、学生都会有莫大的帮助。”... 2015-09-06 16:19 阅读 (1079) 评论 (0) 写文件时字段对齐和填充的C代码实现 在实际的软件开发项目中，经常会遇到需要转换某些文件中的字段格式的问题。例如，在生成的话单文件中，要求某些字段的长度固定，如果目前该字段的长度不足，则不足的位数用某些特殊的字符来填充(并可能会对填充的位置有要求)。之所以要求字段格式固定，是为了方便对文件的自动处理，因为很多软件是按照一定的规则对文件进行处理的。本文示例了对字段进行填充的方法。... 2015-09-01 19:24 阅读 (956) 评论 (3) [置顶] 《C程序员从校园到职场》带领大家从校园走向职场 七夕节刚过，就有好消息传来：本人新书《C程序员从校园到职场》正式出版并在各大电商平台上发售了！ 下面，让我们一起来欣赏一下纸质书的“风采”吧。 本书目录第1章 概述 1.1 C语言的发展历史 1.2 C语言的主要特点 1.3 常用工具软件 1.4 小结 第2章 学校到职场 2.1 认清自身不足 2.2 破除错误观念 2.3 工... 2015-08-25 10:31 阅读 (10861) 评论 (52) HDFS简介及用C语言访问HDFS接口操作实践 本文结合作者本人及同事对HDFS的学习和实践的理解，首先介绍HDFS的特点和重要SHELL命令(hadoop和hdfs命令)的使用，接着介绍HDFS提供的C访问接口LIB HDFS及其跟普通文件系统的C API的异同，然后介绍如何利用LIB HDFS接口实现简单的HDFS客户端并列举相关应用实例，最后针对编写HDFS客户端中遇到的问题进行描述和分析。... 2015-08-12 17:40 阅读 (2696) 评论 (2) HBase学习总结(5)：HBase表设计 HBase学习总结第五篇... 2015-08-03 19:10 阅读 (482) 评论 (3) 让优秀的文章脱颖而出---极客头条使用体验 最近，CSDN在推广“极客头条”。作为CSDN的一位老用户，我也想表达一下自己对于“极客头条”的看法。文章中的所有观点不一定都对，大家可以参考。... 2015-07-30 14:56 阅读 (550) 评论 (6) Linux下两种删除过期文件的方法详述 在实际的C软件开发项目中，不同的软件会在不同的目录中生成文件，由于磁盘的存储空间有限，开发人员不得不考虑对目录下的过期文件进行删除。一般说来，有两种删除过期文件的方法，一种是在C程序中实现，一种是利用crontab实现。本文对这两种方法的具体实现进行详细的介绍。... 2015-07-29 11:25 阅读 (1853) 评论 (8) C语言主要做哪些方面的开发---一个来自“IT技术学习”微信群的问题及答复 最近，在“IT技术学习”微信群中，有同学问了这样一个问题：C语言主要做哪些方面的开发？在这篇文章中，我想结合自身的经验，对这个问题进行下解答。... 2015-07-27 10:16 阅读 (914) 评论 (0) 374条数据 共25页 首页 上一页 1 2 3 4 5 ... 下一页 尾页 我的微信 与本人单独交流~~ 个人资料 zhouzxi 访问： 574067次 积分： 12297 等级： 积分：12297 排名： 第552名 原创： 359篇 转载： 7篇 译文： 8篇 评论： 1204条 《C程序员从校园到职场》 京东    china-pub    亚马逊    当当网 试读章节    豆瓣 《信息通信技术百科全书》 京东商城    china-pub 博客专栏 一个程序员的成长史 文章：5篇 阅读：3991 IT读者问答 文章：30篇 阅读：31888 软件项目实践中的C语言一瞥 文章：41篇 阅读：62912 我的微博 友情链接 周兆熊的独立博客 周兆熊的微博 周兆熊的GitHub 文章搜索 文章分类 编程 (41) 操作系统 (14) 杂谈 (114) 电子技术 (1) 算法 (4) 行业预测 (5) 设计模式 (5) 软件工程 (3) 计算机网络 (12) 软件项目实践中的C语言一瞥 (55) 经典书籍读后感 (26) 软件研发项目工作总结 (35) 答读者问 (32) 软件项目实践中的SQL语言一瞥 (23) 一个程序员的成长史 (5) 文章存档 2015年12月 (8) 2015年11月 (7) 2015年10月 (2) 2015年09月 (7) 2015年08月 (3) 2015年07月 (14) 2015年06月 (15) 2015年05月 (14) 2015年04月 (12) 2015年03月 (16) 2015年02月 (1) 2014年11月 (5) 2014年10月 (13) 2014年09月 (11) 2014年08月 (17) 2014年07月 (19) 2014年06月 (14) 2014年05月 (14) 2014年04月 (13) 2014年03月 (11) 2014年02月 (2) 2014年01月 (3) 2013年12月 (2) 2013年11月 (1) 2013年10月 (2) 2013年05月 (1) 2013年04月 (2) 2013年03月 (5) 2013年02月 (1) 2013年01月 (5) 2012年12月 (2) 2012年11月 (1) 2012年10月 (3) 2012年09月 (2) 2012年08月 (4) 2012年07月 (5) 2012年06月 (2) 2012年05月 (8) 2012年04月 (18) 2012年03月 (16) 2012年02月 (17) 2012年01月 (7) 2011年12月 (9) 2011年11月 (15) 2011年10月 (25) 阅读排行 《C程序员从校园到职场》带领大家从校园走向职场 (10839) 再见，南邮！别了，南京！ (8062) 读《桥—巴拉克•奥巴马的人生及其崛起》有感 (7395) 学习习惯浅谈(二) (7294) 两年开发工作总结及未来展望 (7120) 软件开发模式 (5909) 我在南邮的三年—保研生涯 (5666) 蚂蚁与蚱蜢(The Ant and the Grasshopper) (5311) 我在南邮的三年—研二生活 (4728) 我在南邮的三年—研三生活 (4471) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 评论排行 两年开发工作总结及未来展望 (68) 《C程序员从校园到职场》带领大家从校园走向职场 (52) 一个女程序员的故事 (47) 答读者问(8)：有关Java学习的相关问题 (44) 再见，南邮！别了，南京！ (33) 学习习惯浅谈(二) (32) 我与京东的那些事儿 (26) 我在南邮的三年—总结篇 (24) 写博客的那些事儿 (19) 我在南邮的三年—保研生涯 (18) 最新评论 《C程序员从校园到职场》勘误 zhouzxi : 谢谢，请多多支持！ 《C程序员从校园到职场》勘误 zjy15203167987 : 又有了一些收获，多谢分享 《黑客与画家》阅读笔记 zhouzxi : 谢谢。 《C程序员从校园到职场》勘误 ikkmme28206 : 支持一个！ 《黑客与画家》阅读笔记 ikkmme28206 : 支持一个！ 查找栈的增长方向的分析及C代码实现 u013312497 : @zhouzxi:谢谢! 查找栈的增长方向的分析及C代码实现 zhouzxi : 手动写的。 查找栈的增长方向的分析及C代码实现 u013312497 : /*************************************************... 读取配置文件的shell脚本实现 qq_33329066 : 不错，学习了 去除源文件中的重复行的程序流程及其C代码实现 zhouzxi : 这个要看数据量及数据内容，对于一般的小文件，链表已经够用了。

Recno:: 81
URL:: http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js

ParseText::


Recno:: 82
URL:: http://img.blog.csdn.net/20151123180504192

ParseText::


Recno:: 83
URL:: http://img.blog.csdn.net/20151123180513864

ParseText::


Recno:: 84
URL:: http://img.blog.csdn.net/20151123180526536

ParseText::


Recno:: 85
URL:: http://img.blog.csdn.net/20151123180526599

ParseText::


Recno:: 86
URL:: http://img.blog.csdn.net/20151123180555458

ParseText::


Recno:: 87
URL:: http://img.blog.csdn.net/20151206230531514

ParseText::


Recno:: 88
URL:: http://img.blog.csdn.net/20151212003019533

ParseText::


Recno:: 89
URL:: http://img.blog.csdn.net/20151212003341987

ParseText::


Recno:: 90
URL:: http://img.blog.csdn.net/20151216205004634

ParseText::


Recno:: 91
URL:: http://img.blog.csdn.net/20151218142434175

ParseText::


Recno:: 92
URL:: http://my.csdn.net/testcs_dn

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 62 关注 931 粉丝 微wx笑 计算机软件 | 开发组长/高级工程师/技术专家 | 北京-海淀区 | 男 无知人生，记录点滴 不积硅步，无以至千里；不积小流，无以成江海……遇到问题，解决问题 记录方案，方便于日后；分享方案，方便于大家…… V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 62 人 被关注： 931 人

Recno:: 93
URL:: http://my.csdn.net/zhouzxi

ParseText::
我的CSDN 首页 技术问答 JOB 个人主页 消息中心 我的C币 发私信 关注 6 关注 1173 粉丝 周兆熊 计算机软件 | 软件开发工程师 | 中国 | 南京邮电大学计算机应用技术专业硕士，2012年校级优秀硕士学位论文获得者，《C程序员从校园到职场》作者，《信息通信技术百科全书》编者之一。 V1 博客 V1 下载 V1 论坛 V1 CODE V1 高校 C币 0 勋章 发表的博客 发布的帖子 贡献的资源 详细资料 最新动态 熟悉的领域 专业技能 教育经历 工作经历 联系方式 电子邮箱： 手机号码： QQ号码： 微信号： 我的全部动态 显示更多 对Ta感兴趣的人 最近一周被访问了 次 Ta的关系 关注： 6 人 被关注： 1173 人

Recno:: 94
URL:: http://static.blog.csdn.net/scripts/cnick.js

ParseText::
var __hasProp={}.hasOwnProperty;!function(a){var b,c,d,e;d=this,b=d.jQuery,c={},a(d,c,b),void 0===d.csdn&&(d.csdn=c);for(e in c)__hasProp.call(c,e)&&(d[e]=d.csdn[e]=c[e])}(function(a,b,c){var d,e,f,g,h;if(!(a.CNick instanceof Function&&a.cnick instanceof Function&&(null!=(h=a.csdn)?h.cnick:void 0)instanceof Function))return void 0===String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),g={},e=function(b,c){var d,e;return arguments.length>1?(g[b]=c,null!=(d=a.localStorage)?d["cnick_"+b]=+new Date+","+c:void 0):null!=b?g[b]||function(a){var b,c,d,e;if(null!=a)return d=a.split(","),b=d[0],c=d[1],0<(e=new Date-new Date(parseInt(b,10)))&&1728e5>e?c:void 0}(null!=(e=a.localStorage)?e["cnick_"+b]:void 0):void 0},b.cnick=f=function(b,d,f){var g,h,i,j,k,l,m,n,o,p;for(null==b&&(b="a.user_name"),null==d&&(d=a.document),null==f&&(f=!1),h=c(b,d).filter(function(){return f||null==c(this).data("orig_username")}).data("orig_username",""),k={},o=0,p=h.length;p>o;o++)g=h[o],m=g.innerHTML.trim(),null!=(l=e(m))?c(g).data("orig_username",m).text(l):(j=k.hasOwnProperty(m)?k[m]:k[m]=[],j.push(g));for(n=function(){var a;a=[];for(i in k)__hasProp.call(k,i)&&a.push(i);return a}();n.length>0;)c.getJSON("https://passport.csdn.net/get/nick?callback=?",{users:n.splice(0,100).join()},function(a){var b,d,f,g,h;if(d=a.status,b=a.data,d&&b)for(f=0,g=b.length;g>f;f++)h=b[f],m=h.u,i=h.n,"null"===i&&(i=m),c(k[m]).data("orig_username",m).text(function(a,b){return i||b}),e(m,i)})},c(function(){return f()}),a.CNick=d=function(){function a(a){this.selector=a}return a.prototype.showNickname=function(){return f(this.selector)},a}()});

Recno:: 95
URL:: http://www.jfinal.com/

ParseText::
JFinal 官方网站 登录 注册          首页                    手册                     捐助                     关于           JFinal 极速开发 JFinal 是基于 Java 语言的极速 WEB + ORM 框架，其核心设计目标是开发迅速、代码量少、学习简单、功能强大、轻量级、易扩展、Restful。 在拥有Java语言所有优势的同时再拥有ruby、python、php等动态语言的开发效率！为您节约更多时间，去陪恋人、家人和朋友 :) JFinal有如下主要特点： MVC架构，设计精巧，使用简单 遵循COC原则，零配置，无xml 独创Db + Record模式，灵活便利 ActiveRecord支持，使数据库开发极致快速 自动加载修改后的java文件，开发过程中无需重启web server AOP支持，拦截器配置灵活，功能强大 Plugin体系结构，扩展性强 多视图支持，支持FreeMarker、JSP、Velocity 强大的Validator后端校验功能 功能齐全，拥有struts2的绝大部分功能 体积小仅248K，且无第三方依赖 我要捐助 文件名 描述 大小 日期 下载 操作 jfinal-2.0-manual.pdf JFinal 手册 1.39 MB 2015-06-18 22087 下载 jfinal-2.0-all.zip JFinal 2.0 all 17.1 MB 2015-06-18 16972 下载 jfinal-2.0_demo.zip JFinal demo 5.84 MB 2015-06-18 11424 下载 jfinal-2.0_demo_for_jsp.zip JFinal demo for jsp 5.37 MB 2015-06-18 8000 下载 jfinal-2.0-changelog.txt JFinal changelog 4 KB 2015-06-18 3412 下载 jfinal-weixin-1.5-bin-with-src.jar JFinal weixin 1.5 215 K 2015-11-12 1673 下载 Q群 222478625 微信 京ICP备10217229号-2 OSC网址
