
Recno:: 0
URL:: http://blog.csdn.net/david_520042/article/details/7876928

ParseText::
Ext.Net 1.x_Ext.Net.GridPanel 模拟CS实现主从表操作 - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] Ext.Net 1.x_Ext.Net.GridPanel 模拟CS实现主从表操作 标签： server header border layout ext 2012-08-17 13:10 2181人阅读 评论 (0) 收藏 举报 分类： 前端设计 Ext.Net （116） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 HTML:测试 <%@ Control Language="C#" AutoEventWireup="true" CodeBehind="TaskCheck.ascx.cs" Inherits="Subcontract.Web.AttendanceInfo.Controls.TaskCheck" %> <ext:Store runat="server" ID="AtttendabceItemStore"> <Reader> <ext:JsonReader IDProperty="BaseValueID"> <Fields> <ext:RecordField Name="BaseValueID" /> <ext:RecordField Name="BaseName" /> <ext:RecordField Name="BaseDetail" /> </Fields> </ext:JsonReader> </Reader> </ext:Store> <script type="text/javascript"> //保存选择的考勤项分数 var AtttendanceItem_Select = function (item) { var val = item.store.getById(item.value).data.BaseDetail; TaskCheck1_hidScore.setValue(val); } //验证 var isValid = function () { setAllowBlank(false); return TaskCheck1_FormPanel4.isValid(); } //设置验证状态 var setAllowBlank = function (flag) { TaskCheck1_AtttendanceItem.allowBlank = flag; TaskCheck1_AttendanceNumber.allowBlank = flag; } //添加新数据 var btnAdd_Click = function (buttom) { if (isValid()) { //取消验证，保存整个页面的时候不能验证 setAllowBlank(true); var store = TaskCheck1_grid.getStore(); //修改时先移除需要修改的行 if (buttom.getText() == '完成修改') { store.removeAt(TaskCheck1_hidIndex.getValue()); } //如grid里面已经有当前选择的专业则不能添加 var flag = new Array(); var Records = store.getRange(); //获取grid中所有的行 for (var i = 0; i < Records.length; i++) { if (Records[i].data.AtttendanceItemID == TaskCheck1_AtttendanceItem.getValue()) { flag[i] = false; } else { flag[i] = true; } } if (flag.indexOf(false) == -1) { var TopicRecord = Ext.data.Record.create([ { name: 'AtttendanceItem', type: 'string' }, { name: 'AtttendanceItemID', type: 'string' }, { name: 'AttendanceNumber', type: 'string' }, { name: 'Score', type: 'string' } ]); var myNewRecord = new TopicRecord({ AtttendanceItem: TaskCheck1_AtttendanceItem.getText(), AtttendanceItemID: TaskCheck1_AtttendanceItem.getValue(), AttendanceNumber: TaskCheck1_AttendanceNumber.getValue(), Score: getScore(TaskCheck1_AtttendanceItem.getValue(), TaskCheck1_AttendanceNumber.getValue()) }); store.add(myNewRecord); //向Store中添加一行数据 //清空数据 TaskCheck1_AtttendanceItem.reset(); TaskCheck1_AttendanceNumber.reset(); buttom.setText('添加'); } else { Ext.MessageBox.show({ title: '提示', msg: '不能添加重复的出勤项！', icon: Ext.MessageBox.WARNING, buttons: Ext.MessageBox.OK, fn: function () { TaskCheck1_AtttendanceItem.reset(); } }); } } } //计算分数 var getScore = function (id, num) { var DiseaseLevelID = TaskCheck1_hidDiseaseLevelID.getValue(); var PersonalLeaveID = TaskCheck1_hidPersonalLeaveID.getValue(); if (id == DiseaseLevelID) { return (num - 5) < 0 ? 0 : (num - 5) * TaskCheck1_hidScore.getValue(); } else if (id == PersonalLeaveID) { return (num - 10) < 0 ? 0 : (num - 10) * TaskCheck1_hidScore.getValue(); } else { return num * TaskCheck1_hidScore.getValue(); } } var grid_Command = function (cmd, record, rowIndex) { if (cmd === 'update') { //改变按钮text TaskCheck1_btnAdd.setText('完成修改'); //保存rowindex TaskCheck1_hidIndex.setValue(rowIndex); //重新选中combox TaskCheck1_AtttendanceItem.setValue(record.data.AtttendanceItemID); TaskCheck1_AttendanceNumber.setValue(record.data.AttendanceNumber); var obj = TaskCheck1_AtttendabceItemStore.getById(record.data.AtttendanceItemID); TaskCheck1_hidScore.setValue(obj.data.BaseDetail); } if (cmd == "delete") { if (TaskCheck1_btnAdd.getText() == '完成修改') { Ext.MessageBox.show({ title: '提示', msg: '修改时不能删除数据！请先完成修改。', icon: Ext.MessageBox.WARNING, buttons: Ext.MessageBox.OK }); } else { Ext.MessageBox.confirm("提示", "确定要删除吗？", function (e) { if (e == "yes") { record.store.remove(record); } }); } } } var btnSaveClick = function () { //设置不验证 setAllowBlank(true); if (TaskCheck1_btnAdd.getText() == '完成修改') { Ext.MessageBox.show({ title: '提示', msg: '考勤信息未完成修改！请先完成修改。', icon: Ext.MessageBox.WARNING, buttons: Ext.MessageBox.OK }); return false; } if (!TaskCheck1_FormPanel1.isValid()) { return false; } else { return true; } } var PreToolbar = function (grid, toolbar, rowIndex, record) { var firstButton = toolbar.items.get(0); var secButton = toolbar.items.get(1); if (TaskCheck1_hidIsReadOnly.getValue() == "1") { firstButton.setVisible(false); secButton.setVisible(false); } }; </script> <ext:FormPanel ID="FormPanel1" runat="server" Header="false" Border="true" Padding="0" AnchorHorizontal="100%" AnchorVertical="100%" Width="960" Layout="FormLayout"> <Items> <ext:FormPanel ID="FormPanel3" runat="server" Header="false" Border="true" Padding="0" Width="960" Layout="FormLayout" AnchorHorizontal="100%"> <Items> <ext:Panel ID="Panel5" runat="server" Header="false" Padding="0" Border="false" Layout="ColumnLayout" Height="32" AnchorHorizontal="100%"> <Items> <ext:Panel ID="Panel1" runat="server" Header="false" Border="false" ColumnWidth=".3" Layout="FormLayout"> <Items> </Items> </ext:Panel> <ext:Panel ID="Panel2" runat="server" Header="false" Padding="8" Border="false" Layout="FormLayout" ColumnWidth=".5"> <Items> <ext:Label runat="server" ID="Title" Text="出勤工单" StyleSpec="font-size: 18px; font-weight: bold;"> </ext:Label> </Items> </ext:Panel> </Items> </ext:Panel> <ext:Panel ID="Panel6" runat="server" Border="false" Header="false" Padding="4" Layout="ColumnLayout" Height="34"> <Items> <ext:Panel ID="Panel7" runat="server" Border="false" Header="false" ColumnWidth=".76"> <Items> <ext:DisplayField ID="DisplayField4" runat="server" Text=" "> </ext:DisplayField> </Items> </ext:Panel> <ext:Panel ID="Panel8" runat="server" Border="false" Header="false" ColumnWidth=".2" LabelWidth="60"> <Items> <ext:DisplayField runat="server" ID="TaskCode" FieldLabel="工单编号" Width="190"> </ext:DisplayField> </Items> </ext:Panel> </Items> </ext:Panel> </Items> </ext:FormPanel> <ext:FormPanel ID="FormPanel2" runat="server" Header="false" Border="true" Padding="4" Width="960" Layout="FormLayout" AnchorHorizontal="100%" LabelWidth="120"> <Items> <ext:Panel ID="Panel3" runat="server" Border="false" Header="false" Layout="ColumnLayout" LabelWidth="80" Height="25"> <Items> <ext:Panel ID="Panel9" runat="server" Header="false" Border="false" Layout="FormLayout" ColumnWidth=".3"> <Items> <ext:DisplayField runat="server" ID="TaskStartDate" FieldLabel="工单启动时间"> </ext:DisplayField> </Items> </ext:Panel> <ext:Panel ID="Panel4" runat="server" Header="false" Border="false" Layout="FormLayout" ColumnWidth=".7"> <Items> <ext:DisplayField runat="server" ID="PartyUser" FieldLabel="工单当事人"> </ext:DisplayField> </Items> </ext:Panel> </Items> </ext:Panel> </Items> </ext:FormPanel> <ext:FormPanel ID="FormPanel4" runat="server" Header="false" Border="false" Padding="0" Width="960" Layout="FormLayout" AnchorHorizontal="100%" AutoHeight="true"> <Items> <ext:Panel ID="Panel10" runat="server" Border="true" Header="false" Layout="FormLayout" AutoHeight="true" AnchorHorizontal="100%" AnchorVertical="100%" LabelWidth="70" Padding="4"> <Items> <ext:Panel ID="Panel14" runat="server" Header="false" Border="false" Layout="ColumnLayout" Height="26"> <Items> <ext:Panel ID="Panel15" runat="server" Header="false" Border="false" Layout="FormLayout" LabelWidth="50" ColumnWidth=".3"> <Items> <ext:ComboBox runat="server" ID="AtttendanceItem" DisplayField="BaseName" StoreID="AtttendabceItemStore" FieldLabel="考勤项" ValueField="BaseValueID" EmptyText="请选择考勤项" Editable="false"> <Listeners> <Select Fn="AtttendanceItem_Select" /> <Change Fn="AtttendanceItem_Select" /> </Listeners> </ext:ComboBox> </Items> </ext:Panel> <ext:Panel ID="Panel16" runat="server" Header="false" Border="false" Layout="FormLayout" ColumnWidth=".4"> <Items> <ext:NumberField runat="server" ID="AttendanceNumber" FieldLabel="考核数量" AllowDecimals="false"> </ext:NumberField> </Items> </ext:Panel> <ext:Panel ID="Panel18" runat="server" Header="false" Border="false" Layout="FormLayout" ColumnWidth=".3"> <Items> <ext:Button runat="server" ID="btnAdd" Text="添加" Icon="Disk" StandOut="true" IconCls="aa"> <Listeners> <Click Fn="btnAdd_Click" /> </Listeners> </ext:Button> </Items> </ext:Panel> </Items> </ext:Panel> <ext:GridPanel ID="grid" runat="server" Header="false" Border="true" Margins="5 5 5 5" AutoExpandColumn="toolbar" AnchorHorizontal="98%" Height="150" Icon="UserSuit" TrackMouseOver="true" StripeRows="true" Selectable="true" Shadow="Sides"> <Store> <ext:Store runat="server" ID="DataStore" OnRefreshData="DataStore_Refresh" DirtyWarningText="您有未提交的更改。确定要重新加载数据？" DirtyWarningTitle="提示"> <Reader> <ext:JsonReader IDProperty="DetailsID"> <Fields> <ext:RecordField Name="AtttendanceItem" /> <ext:RecordField Name="DetailsID" /> <ext:RecordField Name="AtttendanceItemID" /> <ext:RecordField Name="AttendanceNumber" /> <ext:RecordField Name="Score" /> </Fields> </ext:JsonReader> </Reader> </ext:Store> </Store> <Listeners> <Command Fn="grid_Command" /> </Listeners> <ColumnModel ID="ColumnModel1" runat="server"> <Columns> <ext:RowNumbererColumn /> <ext:Column Header="考勤项" DataIndex="AtttendanceItem" Width="250"> </ext:Column> <ext:Column Header="考核数量" DataIndex="AttendanceNumber"> </ext:Column> <ext:Column Header="考核扣分" DataIndex="Score"> </ext:Column> <ext:CommandColumn ColumnID="toolbar"> <PrepareToolbar Fn="PreToolbar" /> <Commands> <ext:GridCommand CommandName="update" Icon="PageEdit" Text="修改"> </ext:GridCommand> <ext:GridCommand CommandName="delete" Icon="Delete" Text="删除"> </ext:GridCommand> </Commands> </ext:CommandColumn> </Columns> </ColumnModel> <LoadMask ShowMask="true" /> <SelectionModel> <ext:RowSelectionModel ID="RowSelectionModel1" runat="server" /> </SelectionModel> </ext:GridPanel> </Items> </ext:Panel> </Items> </ext:FormPanel> <ext:FormPanel ID="FormPanel5" runat="server" Header="false" Border="false" Padding="0" Width="960" Layout="FormLayout" AnchorHorizontal="100%" AutoHeight="true"> <Items> <ext:Panel ID="Panel19" runat="server" Border="true" Header="false" Layout="FormLayout" AutoHeight="true" AnchorHorizontal="100%" AnchorVertical="100%" LabelWidth="100" Padding="4"> <Items> <ext:DisplayField runat="server" ID="dfAttendanceDesc" FieldLabel="出勤情况描述" Hidden="true" AnchorHorizontal="98%"> </ext:DisplayField> <ext:TextArea runat="server" ID="AttendanceDesc" FieldLabel="出勤情况描述" MaxLength="4000" AnchorHorizontal="98%" Height="100"> </ext:TextArea> </Items> </ext:Panel> </Items> </ext:FormPanel> <ext:FormPanel ID="formSign" runat="server" Header="false" Border="true" Padding="4" Width="960" Layout="ColumnLayout" Height="32" AnchorHorizontal="100%"> <Items> <ext:Panel ID="Panel20" runat="server" Border="false" Header="false" Layout="FormLayout" Padding="4" ColumnWidth=".3"> <Items> </Items> </ext:Panel> <ext:Panel ID="Panel21" runat="server" Border="false" Header="false" Layout="ColumnLayout" ColumnWidth=".4" LabelWidth="90"> <Items> <ext:DisplayField runat="server" ID="lblSign" FieldLabel="工单评价人签字" Hidden="true" /> <ext:Image ID="imgSign" runat="server" FieldLabel="工单评价人签字" AlternateText="签字确认" ImageUrl="../Content/nosign.GIF"> <Listeners> <Click Handler="#{winSign}.show();" /> </Listeners> </ext:Image> </Items> </ext:Panel> <ext:Panel ID="Panel24" runat="server" Border="false" Header="false" Layout="ColumnLayout" ColumnWidth=".3" LabelWidth="35"> <Items> <ext:DisplayField runat="server" ID="SignTime" Width="170" FieldLabel="时间" /> </Items> </ext:Panel> </Items> </ext:FormPanel> <ext:FormPanel ID="formSave" runat="server" Header="false" Border="true" Padding="0" Width="960" Layout="ColumnLayout" Height="32" AnchorHorizontal="100%"> <Items> <ext:Panel ID="Panel25" runat="server" Border="false" Header="false" Layout="FormLayout" Padding="4" ColumnWidth=".70"> <Items> </Items> </ext:Panel> <ext:Panel ID="Panel17" runat="server" Border="false" Header="false" Layout="FormLayout" Padding="4" ColumnWidth=".3" LabelWidth="35"> <Items> <ext:Button ID="btnSave" runat="server" StandOut="true" Text="提交" Icon="Disk"> <DirectEvents> <Click OnEvent="btnSave_Click" Failure="Ext.MessageBox.alert('提示', '数据提交失败');" Before="return btnSaveClick();"> <Confirmation ConfirmRequest="true" Message="确定要提交数据吗?" Title="提示" /> <EventMask ShowMask="true" Msg="数据提交中..." /> <ExtraParams> <ext:Parameter Name="grid" Value="Ext.encode(#{grid}.getRowsValues({selectedOnly : false}))" Mode="Raw" /> </ExtraParams> </Click> </DirectEvents> </ext:Button> </Items> </ext:Panel> </Items> </ext:FormPanel> </Items> </ext:FormPanel> <ext:Hidden runat="server" ID="hidSign"> </ext:Hidden> <ext:Hidden runat="server" ID="hidSerialNumber"> </ext:Hidden> <ext:Hidden runat="server" ID="hidTaskID"> </ext:Hidden> <ext:Hidden runat="server" ID="hidIndex"> </ext:Hidden> <ext:Hidden runat="server" ID="hidScore"> </ext:Hidden> <!--病假id--> <ext:Hidden runat="server" ID="hidDiseaseLevelID"> </ext:Hidden> <!--事假id--> <ext:Hidden runat="server" ID="hidPersonalLeaveID"> </ext:Hidden> <ext:Hidden runat="server" ID="hidIsReadOnly"> </ext:Hidden> <ext:Window ID="winSign" runat="server" Closable="true" Resizable="false" Height="150" Icon="Lock" Title="签字确认" Draggable="false" Width="350" Modal="true" Padding="15" Hidden="true" Layout="Form"> <Items> <ext:TextField ID="UserName" runat="server" FieldLabel="用户名" Width="200" ReadOnly="false" /> <ext:TextField ID="Password" InputType="Password" runat="server" FieldLabel="密码" Width="200" /> </Items> <Buttons> <ext:Button ID="Button1" runat="server" Text="确定" Icon="Accept"> <DirectEvents> <Click OnEvent="btnSign_User"> <EventMask ShowMask="true" Target="CustomTarget" CustomTarget="winSign" /> </Click> </DirectEvents> </ext:Button> <ext:Button ID="Button2" runat="server" Text="取消" Icon="Cancel"> <Listeners> <Click Handler="#{winSign}.hide();" /> </Listeners> </ext:Button> </Buttons> </ext:Window> 后台： protected void Page_Load(object sender, EventArgs e) { if (!X.IsAjaxRequest) { string strsql = "select top 2 name,id as line from users"; DABaseAccess db = new DABaseAccess(); DataTable dt = new DataTable(); dt = db.Query(strsql); Store store = this.grid.GetStore(); store.DataSource = dt; store.DataBind(); } } public void btnSave_Click(object sender, DirectEventArgs e) { string gpOfferPlanJson = e.ExtraParams["grid"]; Dictionary<string, string>[] dicUser = JSON.Deserialize<Dictionary<string, string>[]>(gpOfferPlanJson); List<DesignerPlan> designerPlanList = new List<DesignerPlan>(); DesignerPlan designerPlan; foreach (var item in dicUser) { designerPlan = new DesignerPlan(); designerPlan.Name = item["name"]; designerPlanList.Add(designerPlan); } } public class DesignerPlan { private string name = string.Empty; public string Name { get { return name; } set { name = value; } } } 重庆Mr Lee提供 上一篇 Ext.Net 1.x_Ext.Net.GridPanel - Excel导出方法实现 下一篇 C# ArrayList的用法 顶 0 踩 0 我的同类文章 前端设计 Ext.Net （116） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102188次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926

Recno:: 1
URL:: http://blog.csdn.net/david_520042/article/details/7904847

ParseText::
[EXTNET]Grid行记录自动分行 - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] [EXTNET]Grid行记录自动分行 标签： function css 2012-08-24 17:17 1987人阅读 评论 (0) 收藏 举报 分类： 前端设计 Ext.Net （116） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在 EXTASPNET非同学：有个备注字段较多需要分行显示 结果： EXT.NET如何做呢？ 其实很简单我们直接不都用JS去处理么？那我们也来试试 var template= '<span style="color:{0};font-weight:bold; white-space:normal;overflow:hidden">{1}</span>'; function fenghang(value) { return String.format(template, "Crimson", value).toString(); } 效果： 方法二：CSS  全字段分行 .x-grid3-cell-inner { display: block; white-space: normal !important; }   上一篇 [Ext.Net] 1.x_Ext.Net.Grid之行展开 下一篇 [EXTNET]Grid之百分比 顶 0 踩 0 我的同类文章 前端设计 Ext.Net （116） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102189次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926384 : 看了有不懂的地方可以加入《mysql php技术群》提问, 有专门老师辅导 群号364702379文... [JQ权威指南]第十七天：show()与hide()方法 wangdan199112 : 写的真心好，学习了！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 友情连接 Ext D~b 1加1 雨季不再来 伤寒泪 宜龙坡 DotNet笔记 雪雁 PPE 当奈特专家 LINQ&MVC Kencery M守护神-LINQ 综合 temptation 蒋宇捷 temptation 逆心 前端设计 Dcloudgamer 数据库 黄钊吉 桦仔 zping zhaowenzhong C# lifepoem(Linq) Java HTML5 下一站永远 JQuery jqshare 常用网站 DivCss布局 懒人图库 前沿视频室 梦想天空 W3C ExtNet示例 ext.net论坛 codeproject 文章存档 2015年12月 (10) 2015年11月 (4) 2015年10月 (16) 2015年09月 (13) 2015年08月 (22) 2015年07月 (5) 2015年06月 (10) 2015年05月 (9) 2015年04月 (8) 2015年03月 (9) 2015年02月 (2) 2015年01月 (5) 2014年12月 (5) 2014年11月 (6) 2014年10月 (20) 2014年09月 (14) 2014年08月 (4) 2014年07月 (4) 2014年06月 (8) 2014年05月 (8) 2014年04月 (2) 2014年03月 (9) 2014年01月 (5) 2013年12月 (8) 2013年11月 (10) 2013年10月 (8) 2013年09月 (4) 2013年08月 (1) 2013年07月 (6) 2013年06月 (4) 2013年05月 (14) 2013年04月 (7) 2013年03月 (14) 2013年02月 (1) 2013年01月 (16) 2012年12月 (9) 2012年11月 (7) 2012年10月 (6) 2012年09月 (25) 2012年08月 (19) 2012年07月 (27) 2012年06月 (12) 2012年05月 (13) 2012年04月 (10) 2012年03月 (24) 2012年02月 (84) 2012年01月 (12) 2011年12月 (17) 2011年11月 (25) 2011年10月 (16) 2011年09月 (15) 2011年08月 (7) 2011年07月 (14) 2011年06月 (9) 2011年05月 (4) 2011年04月 (5) 2011年03月 (11) 2011年02月 (9) 2011年01月 (21) 2010年12月 (15) 2010年11月 (232) 2010年10月 (16) 2010年09月 (24) 2010年08月 (5) 2010年07月 (10) 2010年06月 (9) 2010年05月 (9) 2010年04月 (10) 2010年03月 (11) 2009年12月 (12) 2009年11月 (4) 2009年10月 (7) 2009年09月 (4) 2009年08月 (6) 2009年07月 (4) 2009年06月 (4) 2009年05月 (3) 2009年04月 (1) 2009年03月 (9) 2009年02月 (5) 2009年01月 (5) 2008年12月 (16) 2008年11月 (26) 2008年10月 (39) 2008年08月 (3) 2008年07月 (6)

Recno:: 2
URL:: http://blog.csdn.net/david_520042/article/details/7953372

ParseText::
[WinForm]Datagridview 实现二维表头 - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] [WinForm]Datagridview 实现二维表头 标签： winform string float pig struct object 2012-09-07 08:25 1540人阅读 评论 (0) 收藏 举报 分类： .Net Grid/Wbs/Xml （38） 作者同类文章 X public class DataGridViewHelper { public DataGridViewHelper(DataGridView gridview) { gridview.CellPainting += new DataGridViewCellPaintingEventHandler(gridview_CellPainting); } int top = 0; int left = 0; int height = 0; int width1 = 0; public void gridview_CellPainting(object sender, DataGridViewCellPaintingEventArgs e) { #region 重绘datagridview表头 DataGridView dgv = (DataGridView)(sender); if (e.RowIndex != -1) return; foreach (TopHeader item in Headers) { if (e.ColumnIndex >= item.Index && e.ColumnIndex < item.Index + item.Span) { if (e.ColumnIndex == item.Index) { top = e.CellBounds.Top; left = e.CellBounds.Left; height = e.CellBounds.Height; } int width = 0; for (int i = item.Index; i < item.Span + item.Index; i++) { width += dgv.Columns[i].Width; } Rectangle rect = new Rectangle(left, top, width, e.CellBounds.Height); using (Brush backColorBrush = new SolidBrush(e.CellStyle.BackColor)) { //抹去原来的cell背景 e.Graphics.FillRectangle(backColorBrush, rect); } using (Pen gridLinePen = new Pen(dgv.GridColor)) { e.Graphics.DrawLine(gridLinePen, left, top, left + width, top); e.Graphics.DrawLine(gridLinePen, left, top + height / 2, left + width, top + height / 2); width1 = 0; e.Graphics.DrawLine(gridLinePen, left, top, left, top + height); for (int i = item.Index; i < item.Span + item.Index; i++) { width1 += dgv.Columns[i].Width; e.Graphics.DrawLine(gridLinePen, left + width1, top + height / 2, left + width1, top + height); } SizeF sf = e.Graphics.MeasureString(item.Text, e.CellStyle.Font); float lstr = (width - sf.Width) / 2; float rstr = (height / 2 - sf.Height) / 2; //画出文本框 if (item.Text != "") { e.Graphics.DrawString(item.Text, e.CellStyle.Font, new SolidBrush(e.CellStyle.ForeColor), left + lstr, top + rstr, StringFormat.GenericDefault); } width = 0; width1 = 0; for (int i = item.Index; i < item.Span + item.Index; i++) { string columnValue = dgv.Columns[i].HeaderText; width1 = dgv.Columns[i].Width; sf = e.Graphics.MeasureString(columnValue, e.CellStyle.Font); lstr = (width1 - sf.Width) / 2; rstr = (height / 2 - sf.Height) / 2; if (columnValue != "") { e.Graphics.DrawString(columnValue, e.CellStyle.Font, new SolidBrush(e.CellStyle.ForeColor), left + width + lstr, top + height / 2 + rstr, StringFormat.GenericDefault); } width += dgv.Columns[i].Width; } } e.Handled = true; } } #endregion } private List<TopHeader> _headers = new List<TopHeader>(); public List<TopHeader> Headers { get { return _headers; } } public struct TopHeader { public TopHeader(int index, int span, string text) { this.Index = index; this.Span = span; this.Text = text; } public int Index; public int Span; public string Text; } } 使用： DataTable dt = new DataTable(); dt.Columns.Add("id", typeof(int)); dt.Columns.Add("sum", typeof(int)); dt.Columns.Add("product", typeof(string)); dt.Rows.Add(1, 2, "milk"); dt.Rows.Add(3, 4, "pig"); dataGridView1.DataSource = dt; DataGridViewHelper rowMergeView = new DataGridViewHelper(dataGridView1); rowMergeView.Headers.Add(new DataGridViewHelper.TopHeader(1, 2, "总计")); 转自 http://www.cnblogs.com/tewuapple/archive/2012/09/05/2671560.html 上一篇 Ext.Net 1.x_Ext.Net.GridPanel之模拟2.x列汇总 下一篇 [C#]常见的字符串方法 顶 0 踩 0 我的同类文章 .Net Grid/Wbs/Xml （38） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102190次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926384 : 看了有不懂的地方可以加入《mysql php技术群》提问, 有专门老师辅导 群号364702379文... [JQ权威指南]第十七天：show()与hide()方法 wangdan199112 : 写的真心好，学习了！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 友情连接 Ext D~b 1加1 雨季不再来 伤寒泪 宜龙坡 DotNet笔记 雪雁 PPE 当奈特专家 LINQ&MVC Kencery M守护神-LINQ 综合 temptation 蒋宇捷 temptation 逆心 前端设计 Dcloudgamer 数据库 黄钊吉 桦仔 zping zhaowenzhong C# lifepoem(Linq) Java HTML5 下一站永远 JQuery jqshare 常用网站 DivCss布局 懒人图库 前沿视频室 梦想天空 W3C ExtNet示例 ext.net论坛 codeproject 文章存档 2015年12月 (10) 2015年11月 (4) 2015年10月 (16) 2015年09月 (13) 2015年08月 (22) 2015年07月 (5) 2015年06月 (10) 2015年05月 (9) 2015年04月 (8) 2015年03月 (9) 2015年02月 (2) 2015年01月 (5) 2014年12月 (5) 2014年11月 (6) 2014年10月 (20) 2014年09月 (14) 2014年08月 (4) 2014年07月 (4) 2014年06月 (8) 2014年05月 (8) 2014年04月 (2) 2014年03月 (9) 2014年01月 (5) 2013年12月 (8) 2013年11月 (10) 2013年10月 (8) 2013年09月 (4) 2013年08月 (1) 2013年07月 (6) 2013年06月 (4) 2013年05月 (14) 2013年04月 (7) 2013年03月 (14) 2013年02月 (1) 2013年01月 (16) 2012年12月 (9) 2012年11月 (7) 2012年10月 (6) 2012年09月 (25) 2012年08月 (19) 2012年07月 (27) 2012年06月 (12) 2012年05月 (13) 2012年04月 (10) 2012年03月 (24) 2012年02月 (84) 2012年01月 (12) 2011年12月 (17) 2011年11月 (25) 2011年10月 (16) 2011年09月 (15) 2011年08月 (7) 2011年07月 (14) 2011年06月 (9) 2011年05月 (4) 2011年04月 (5) 2011年03月 (11) 2011年02月 (9) 2011年01月 (21) 2010年12月 (15) 2010年11月 (232) 2010年10月 (16) 2010年09月 (24) 2010年08月 (5) 2010年07月 (10) 2010年06月 (9) 2010年05月 (9) 2010年04月 (10) 2010年03月 (11) 2009年12月 (12) 2009年11月 (4) 2009年10月 (7) 2009年09月 (4) 2009年08月 (6) 2009年07月 (4) 2009年06月 (4) 2009年05月 (3) 2009年04月 (1) 2009年03月 (9) 2009年02月 (5) 2009年01月 (5) 2008年12月 (16) 2008年11月 (26) 2008年10月 (39) 2008年08月 (3) 2008年07月 (6)

Recno:: 3
URL:: http://blog.csdn.net/david_520042/article/details/7960626

ParseText::
[EXTNET]GridPanel行选择事件 - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] [EXTNET]GridPanel行选择事件 标签： string function 2012-09-09 16:31 2254人阅读 评论 (0) 收藏 举报 分类： 前端设计 Ext.Net （116） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 1.隐藏域 <Listeners> <RowSelect Handler="#{txtValue}.setValue(record.data.Item+'|'+record.data.Description+'|'+record.data.Specifications+'|'+record.data.ShortcutCode+'|'+record.data.WareHouse+'|'+record.data.WareHouseName+'|'+record.data.Box+'|'+record.data.SellingPrice+'|'+record.data.CostPrice+'|'+record.data.Remark+'|'+record.data.Status+'|'+record.data.Checked)" /> </Listeners> 后台分解： string item = e.ExtraParams.GetParameter("Item").Value; string[] strValue = txtValue.Text.Split('|'); 2.JS处理 <Listeners> <RowSelect Handler="getData()" /> </Listeners> 函数 function getData() { var items = ItemGrid.getSelectionModel().selections.items; if (items.length == 0) { Ext.Msg.alert("提示", "请选中一行数据"); return; } // for (var i = 0; i < items.length; i++) { // alert(Ext.encode(items[i].json)); // } //单选所以item[0] Ext.getCmp("txtItem").setValue(items[0].json.Item); }   上一篇 [MSSQL]阻止保存要求重新创建表的更改 下一篇 [Ext.Net]Extjs VType自带的几种默认验证 顶 0 踩 0 我的同类文章 前端设计 Ext.Net （116） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102191次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926384 : 看了有不懂的地方可以加入《mysql php技术群》提问, 有专门老师辅导 群号364702379文... [JQ权威指南]第十七天：show()与hide()方法 wangdan199112 : 写的真心好，学习了！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 友情连接 Ext D~b 1加1 雨季不再来 伤寒泪 宜龙坡 DotNet笔记 雪雁 PPE 当奈特专家 LINQ&MVC Kencery M守护神-LINQ 综合 temptation 蒋宇捷 temptation 逆心 前端设计 Dcloudgamer 数据库 黄钊吉 桦仔 zping zhaowenzhong C# lifepoem(Linq) Java HTML5 下一站永远 JQuery jqshare 常用网站 DivCss布局 懒人图库 前沿视频室 梦想天空 W3C ExtNet示例 ext.net论坛 codeproject 文章存档 2015年12月 (10) 2015年11月 (4) 2015年10月 (16) 2015年09月 (13) 2015年08月 (22) 2015年07月 (5) 2015年06月 (10) 2015年05月 (9) 2015年04月 (8) 2015年03月 (9) 2015年02月 (2) 2015年01月 (5) 2014年12月 (5) 2014年11月 (6) 2014年10月 (20) 2014年09月 (14) 2014年08月 (4) 2014年07月 (4) 2014年06月 (8) 2014年05月 (8) 2014年04月 (2) 2014年03月 (9) 2014年01月 (5) 2013年12月 (8) 2013年11月 (10) 2013年10月 (8) 2013年09月 (4) 2013年08月 (1) 2013年07月 (6) 2013年06月 (4) 2013年05月 (14) 2013年04月 (7) 2013年03月 (14) 2013年02月 (1) 2013年01月 (16) 2012年12月 (9) 2012年11月 (7) 2012年10月 (6) 2012年09月 (25) 2012年08月 (19) 2012年07月 (27) 2012年06月 (12) 2012年05月 (13) 2012年04月 (10) 2012年03月 (24) 2012年02月 (84) 2012年01月 (12) 2011年12月 (17) 2011年11月 (25) 2011年10月 (16) 2011年09月 (15) 2011年08月 (7) 2011年07月 (14) 2011年06月 (9) 2011年05月 (4) 2011年04月 (5) 2011年03月 (11) 2011年02月 (9) 2011年01月 (21) 2010年12月 (15) 2010年11月 (232) 2010年10月 (16) 2010年09月 (24) 2010年08月 (5) 2010年07月 (10) 2010年06月 (9) 2010年05月 (9) 2010年04月 (10) 2010年03月 (11) 2009年12月 (12) 2009年11月 (4) 2009年10月 (7) 2009年09月 (4) 2009年08月 (6) 2009年07月 (4) 2009年06月 (4) 2009年05月 (3) 2009年04月 (1) 2009年03月 (9) 2009年02月 (5) 2009年01月 (5) 2008年12月 (16) 2008年11月 (26) 2008年10月 (39) 2008年08月 (3) 2008年07月 (6)

Recno:: 4
URL:: http://blog.csdn.net/david_520042/article/details/7975185

ParseText::
[ExtNet] GridPanel怎么实现服务器端分页、排序、查询?--Oracel存储过程分页 - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] [ExtNet] GridPanel怎么实现服务器端分页、排序、查询?--Oracel存储过程分页 标签： 存储 服务器 parameters string random 2012-09-13 15:30 1834人阅读 评论 (1) 收藏 举报 分类： .Net ADO.NET （36） 作者同类文章 X 前端设计 Ext.Net （116） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 A.前端aspx文件 i.store定义 <ext:Store ID="StoreIma" runat="server" OnRefreshData="StoreIma_OnRefreshData"> <Reader> <ext:JsonReader> <Fields> <ext:RecordField Name="ID" Mapping="ID" Type="String" /> <ext:RecordField Name="RANDOM_STRING" Mapping="RANDOM_STRING" Type="String" /> </Fields> </ext:JsonReader> </Reader> <Proxy> <ext:PageProxy> </ext:PageProxy> </Proxy> </ext:Store>   ii.Gridpanel定义 <ext:GridPanel ID="GpItem" runat="server" Width="1024" Height="500" StripeRows="true" StoreID="StoreIma"> <ColumnModel ID="ColumnModel1" runat="server"> <Columns> <ext:Column Header="ID号" DataIndex="ID" Width="120"> </ext:Column> <ext:Column Header="RANDOM_STRING" DataIndex="RANDOM_STRING" Width="320"> </ext:Column> </Columns> </ColumnModel> <SelectionModel> <ext:RowSelectionModel ID="RowSelectionModel1" runat="server" /> </SelectionModel> <LoadMask ShowMask="true" /> <BottomBar> <ext:PagingToolbar ID="PagingToolBar1" StoreID="StoreIma" PageSize="100" runat="server" /> </BottomBar> </ext:GridPanel> B.后端aspx.cs文件 protected void StoreIma_OnRefreshData(object sender, StoreRefreshDataEventArgs e) { int PageSize = this.PagingToolBar1.PageSize; //获取当前在页面中PagingToolBar 的PageSize的值 int Count = 0; int CurPage = e.Start / PageSize + 1; //获取当前的页码是多少，也就是第几页 var store = this.GpItem.GetStore(); Model.PageBar page = new Model.PageBar(); page.Tables = "myTestTable"; page.Filter = " 1=1 "; page.PrimaryKey = "ID"; page.Sort = "ASC"; page.CurrentPage = CurPage; page.PageSize =PageSize; page.Fields = "ID,RANDOM_STRING"; DataTable dt = GetListByPage(page); //连接数据库 e.Total = page.Count; //this.PagingToolBar1.DisplayMsg = CurPage + " - " + PageSize + "页 共 " + e.Total + " 条"; if (page.Count > 0) { store.DataSource = dt;//绑定数据 store.DataBind(); } else { X.Msg.Alert("查询结果", "<font style='color:red;'>没有找到任何数据!</font>").Show(); } } /// <summary> /// 分页获取数据列表 /// </summary> /// <param name="model">分页实体对象</param> /// <returns>数据列表</returns> public DataTable GetListByPage(Model.PageBar model) { OracleParameter[] parameters = { new OracleParameter("p_tableName", OracleType.NVarChar),//名字 new OracleParameter("p_strWhere", OracleType.NVarChar),//查询条件(注意: 不要加 where) new OracleParameter("p_orderColumn", OracleType.NVarChar),//排序字段 new OracleParameter("p_orderStyle", OracleType.NVarChar), //排序类型 new OracleParameter("p_curPage", OracleType.Number), //当前第几页，页码 new OracleParameter("p_pageSize", OracleType.Number),//每页显示数据条数 new OracleParameter("p_fields", OracleType.NVarChar),//要显示的字段名(不要加select) new OracleParameter("p_totalRecords", OracleType.Number), //总记录数 new OracleParameter("p_totalPages", OracleType.Number),//总页码 new OracleParameter("v_cur",OracleType.Cursor)}; parameters[0].Direction = ParameterDirection.Input; parameters[1].Direction = ParameterDirection.Input; parameters[2].Direction = ParameterDirection.Input; parameters[3].Direction = ParameterDirection.Input; parameters[4].Direction = ParameterDirection.Input; parameters[5].Direction = ParameterDirection.Input; parameters[6].Direction = ParameterDirection.Input; parameters[7].Direction = ParameterDirection.Output; parameters[8].Direction = ParameterDirection.Output; parameters[9].Direction = ParameterDirection.Output; parameters[0].Value = model.Tables; parameters[1].Value = model.Filter; parameters[2].Value = model.PrimaryKey; parameters[3].Value = model.Sort; parameters[4].Value = model.CurrentPage; parameters[5].Value = model.PageSize; parameters[6].Value = model.Fields; DataSet ds = new DataSet(); OracleConnection connection = new OracleConnection(OracleHelper.ConnectionStringERPTransaction); OracleCommand cmd = new OracleCommand("PCK_System.USP_GetRecordByPage", connection); cmd.CommandType = CommandType.StoredProcedure; OracleDataAdapter adapter = new OracleDataAdapter(cmd); connection.Open(); if (parameters != null && parameters.Length > 0) adapter.SelectCommand.Parameters.AddRange(parameters.ToArray()); OracleDataReader read = cmd.ExecuteReader(CommandBehavior.SchemaOnly);//ODP驱动时如果查询的字段有参数则会报ORA-01036: 非法的变量名/编号错误,先执行以下ExecuteReader可避免 read.Close(); read.Dispose(); connection.Close(); adapter.Fill(ds); //返回记录总数 model.Count = int.Parse(parameters[7].Value.ToString()); //返回结果集 return ds.Tables[0]; } C.存储过程SQL create or replace package PCK_System is -- Author : eb5mj -- Created : 2011-1-26 11:31:28 -- Purpose : 系统包 type T_Curor is ref Cursor; Procedure USP_GetRecordByPage ( p_tableName in varchar2, --表名 p_strWhere in varchar2, --查询条件 p_orderColumn in varchar2, --排序的列 p_orderStyle in varchar2, --排序方式 p_curPage in Number, --当前页 p_pageSize in Number, --每页显示记录条数 p_fields in varchar2, --要查询的列 p_totalRecords out Number, --总记录数 p_totalPages out Number, --总页数 v_cur out T_Curor --返回的结果集 ); end PCK_System; create or replace package body PCK_System is PROCEDURE USP_GetRecordByPage (p_tableName in varchar2, --表名 p_strWhere in varchar2, --查询条件 p_orderColumn in varchar2, --排序的列 p_orderStyle in varchar2, --排序方式 p_curPage in Number, --当前页 p_pageSize in Number, --每页显示记录条数 p_fields in varchar2, --要查询的列 p_totalRecords out Number, --总记录数 p_totalPages out Number, --总页数 v_cur out T_Curor) --返回的结果集 IS v_sql VARCHAR2(1000) := ''; --sql语句 v_startRecord Number(4); --开始显示的记录条数 v_endRecord Number(4); --结束显示的记录条数 BEGIN --记录中总记录条数 v_sql := 'SELECT TO_NUMBER(COUNT(*)) FROM ' || p_tableName || ' where '; IF p_strWhere IS NOT NULL or p_strWhere <> '' THEN v_sql := v_sql || p_strWhere; END IF; EXECUTE IMMEDIATE v_sql INTO p_totalRecords; /* --验证页面记录大小 IF p_pageSize < 0 THEN p_pageSize := 0; END IF;*/ --根据页大小计算总页数 IF MOD(p_totalRecords,p_pageSize) = 0 THEN /*p_totalPages := p_totalRecords / p_pageSize;*/ p_totalPages:=trunc(p_totalRecords,p_pageSize); ELSE /*p_totalPages := p_totalRecords / p_pageSize + 1;*/ p_totalPages:=trunc(p_totalRecords,p_pageSize)+1; END IF; /* --验证页号 IF p_curPage < 1 THEN p_curPage := 1; END IF; IF p_curPage > p_totalPages THEN p_curPage := p_totalPages; END IF;*/ --实现分页查询 v_startRecord := (p_curPage - 1) * p_pageSize + 1; v_endRecord := p_curPage * p_pageSize; v_sql := 'SELECT * FROM (SELECT A.*, rownum r FROM ' || '(SELECT '|| p_fields ||' FROM ' || p_tableName; IF p_strWhere IS NOT NULL or p_strWhere <> '' THEN v_sql := v_sql || ' WHERE ' || p_strWhere; END IF; IF p_orderColumn IS NOT NULL or p_orderColumn <> '' THEN v_sql := v_sql || ' ORDER BY ' || p_orderColumn || ' ' || p_orderStyle; END IF; v_sql := v_sql || ') A WHERE rownum <= ' || v_endRecord || ') B WHERE r >= ' || v_startRecord; DBMS_OUTPUT.put_line(v_sql); OPEN v_cur FOR v_sql; END USP_GetRecordByPage; end PCK_System; D.生成10W条数据 create table myTestTable as select rownum as id,                to_char(sysdate + rownum/24/3600, 'yyyy-mm-dd hh24:mi:ss') as inc_datetime,                trunc(dbms_random.value(0, 100)) as random_id,                dbms_random.string('x', 20) random_string           from dual         connect by level <= 100000; E.Page public class PageBar { private string _Tables; public string Tables { get { return _Tables; } set { _Tables = value; } } private string _Filter; public string Filter { get { return _Filter; } set { _Filter = value; } } private string _PrimaryKey; public string PrimaryKey { get { return _PrimaryKey; } set { _PrimaryKey = value; } } private string _Sort; public string Sort { get { return _Sort; } set { _Sort = value; } } private int _CurrentPage; public int CurrentPage { get { return _CurrentPage; } set { _CurrentPage = value; } } private int _PageSize; public int PageSize { get { return _PageSize; } set { _PageSize = value; } } private string _Fields; public string Fields { get { return _Fields; } set { _Fields = value; } } private int _Count; public int Count { get { return _Count; } set { _Count = value; } } F:结果 但是点击最后一页的时候 提示异常.，还请各位指教 秋的思雨 2013/5/22 18:26:49 好了，德仔，问题解决了，还是我数据库连接的问题，也存在你博客中说的：“但是点击最后一页的时候 提示异常”的问题,后将原存储中以下两条语名中的Number 位数由“4”改大一点就可以了，将是将其改为：10，最后一页就不报错了。 v_startRecord Number(4); --开始显示的记录条数     v_endRecord Number(4); --结束显示的记录条数   谢谢了，以后还要向你多多请教呀 上一篇 [Ext.Net]Extjs VType自带的几种默认验证 下一篇 Ext.Net 1.x_Ext.Net.GridPanel如何后台遍历GridPanel中的数据? 顶 0 踩 1 我的同类文章 .Net ADO.NET （36） 前端设计 Ext.Net （116） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102187次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926384 : 看了有不懂的地方可以加入《mysql php技术群》提问, 有专门老师辅导 群号364702379文... [JQ权威指南]第十七天：show()与hide()方法 wangdan199112 : 写的真心好，学习了！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 友情连接 Ext D~b 1加1 雨季不再来 伤寒泪 宜龙坡 DotNet笔记 雪雁 PPE 当奈特专家 LINQ&MVC Kencery M守护神-LINQ 综合 temptation 蒋宇捷 temptation 逆心 前端设计 Dcloudgamer 数据库 黄钊吉 桦仔 zping zhaowenzhong C# lifepoem(Linq) Java HTML5 下一站永远 JQuery jqshare 常用网站 DivCss布局 懒人图库 前沿视频室 梦想天空 W3C ExtNet示例 ext.net论坛 codeproject 文章存档 2015年12月 (10) 2015年11月 (4) 2015年10月 (16) 2015年09月 (13) 2015年08月 (22) 2015年07月 (5) 2015年06月 (10) 2015年05月 (9) 2015年04月 (8) 2015年03月 (9) 2015年02月 (2) 2015年01月 (5) 2014年12月 (5) 2014年11月 (6) 2014年10月 (20) 2014年09月 (14) 2014年08月 (4) 2014年07月 (4) 2014年06月 (8) 2014年05月 (8) 2014年04月 (2) 2014年03月 (9) 2014年01月 (5) 2013年12月 (8) 2013年11月 (10) 2013年10月 (8) 2013年09月 (4) 2013年08月 (1) 2013年07月 (6) 2013年06月 (4) 2013年05月 (14) 2013年04月 (7) 2013年03月 (14) 2013年02月 (1) 2013年01月 (16) 2012年12月 (9) 2012年11月 (7) 2012年10月 (6) 2012年09月 (25) 2012年08月 (19) 2012年07月 (27) 2012年06月 (12) 2012年05月 (13) 2012年04月 (10) 2012年03月 (24) 2012年02月 (84) 2012年01月 (12) 2011年12月 (17) 2011年11月 (25) 2011年10月 (16) 2011年09月 (15) 2011年08月 (7) 2011年07月 (14) 2011年06月 (9) 2011年05月 (4) 2011年04月 (5) 2011年03月 (11) 2011年02月 (9) 2011年01月 (21) 2010年12月 (15) 2010年11月 (232) 2010年10月 (16) 2010年09月 (24) 2010年08月 (5) 2010年07月 (10) 2010年06月 (9) 2010年05月 (9) 2010年04月 (10) 2010年03月 (11) 2009年12月 (12) 2009年11月 (4) 2009年10月 (7) 2009年09月 (4) 2009年08月 (6) 2009年07月 (4) 2009年06月 (4) 2009年05月 (3) 2009年04月 (1) 2009年03月 (9) 2009年02月 (5) 2009年01月 (5) 2008年12月 (16) 2008年11月 (26) 2008年10月 (39) 2008年08月 (3) 2008年07月 (6)

Recno:: 5
URL:: http://blog.csdn.net/david_520042/article/details/7978737

ParseText::
Ext.Net 1.x_Ext.Net.GridPanel如何后台遍历GridPanel中的数据? - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] Ext.Net 1.x_Ext.Net.GridPanel如何后台遍历GridPanel中的数据? 标签： string json button object server 2012-09-14 13:22 2052人阅读 评论 (0) 收藏 举报 分类： 前端设计 Ext.Net （116） 作者同类文章 X A: 参见 http://examples.ext.net/#/GridPanel/Selection_Models/Submitting_Values/ http://examples.ext.net/#/GridPanel/Selection_Models/Row_Selection/ 要点，前台提取数据，后台解析JSON字符串。 前台: <Buttons> <ext:Button runat="server" Text="Submit selection"> <DirectEvents> <Click OnEvent="SubmitSelection"> <ExtraParams> <ext:Parameter Name="Values" Value="Ext.encode(#{GridPanel1}.getRowsValues({selectedOnly : true}))" Mode="Raw" /> </ExtraParams> </Click> </DirectEvents> </ext:Button> </Buttons> 后台: protected void SubmitSelection(object sender, DirectEventArgs e) { string json = e.ExtraParams["Values"]; if (string.IsNullOrEmpty(json)) { return; } //XML will be represent as //<records> // <record><Name>Alcoa Inc</Name><Price>29.01</Price><Change>0.42</Change><PctChange>1.47</PctChange></record> // ... // <record>...</record> //</records> XmlNode xml = JSON.DeserializeXmlNode("{records:{record:" + json + "}}"); foreach (XmlNode row in xml.SelectNodes("records/record")) { string name = row.SelectSingleNode("Name").InnerXml; string price = row.SelectSingleNode("Price").InnerXml; string change = row.SelectSingleNode("Change").InnerXml; string pctChange = row.SelectSingleNode("PctChange").InnerXml; //handle values } List<Company> companies = JSON.Deserialize<List<Company>>(json); foreach (Company company in companies) { string name = company.Name; double price = company.Price; double change = company.Change; double pctChange = company.PctChange; //handle values } Dictionary<string, string>[] companies1 = JSON.Deserialize<Dictionary<string, string>[]>(json); foreach (Dictionary<string, string> row in companies1) { string name = row["Name"]; string price = row["Price"]; string change = row["Change"]; string pctChange = row["PctChange"]; //handle values } this.ResourceManager1.AddScript("Ext.Msg.alert('Submitted', 'Please see source code how to handle submitted data');"); } 上一篇 [ExtNet] GridPanel怎么实现服务器端分页、排序、查询?--Oracel存储过程分页 下一篇 [Ext.NET]之动态绑定GridPanel 顶 0 踩 0 我的同类文章 前端设计 Ext.Net （116） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102193次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926384 : 看了有不懂的地方可以加入《mysql php技术群》提问, 有专门老师辅导 群号364702379文... [JQ权威指南]第十七天：show()与hide()方法 wangdan199112 : 写的真心好，学习了！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 友情连接 Ext D~b 1加1 雨季不再来 伤寒泪 宜龙坡 DotNet笔记 雪雁 PPE 当奈特专家 LINQ&MVC Kencery M守护神-LINQ 综合 temptation 蒋宇捷 temptation 逆心 前端设计 Dcloudgamer 数据库 黄钊吉 桦仔 zping zhaowenzhong C# lifepoem(Linq) Java HTML5 下一站永远 JQuery jqshare 常用网站 DivCss布局 懒人图库 前沿视频室 梦想天空 W3C ExtNet示例 ext.net论坛 codeproject 文章存档 2015年12月 (10) 2015年11月 (4) 2015年10月 (16) 2015年09月 (13) 2015年08月 (22) 2015年07月 (5) 2015年06月 (10) 2015年05月 (9) 2015年04月 (8) 2015年03月 (9) 2015年02月 (2) 2015年01月 (5) 2014年12月 (5) 2014年11月 (6) 2014年10月 (20) 2014年09月 (14) 2014年08月 (4) 2014年07月 (4) 2014年06月 (8) 2014年05月 (8) 2014年04月 (2) 2014年03月 (9) 2014年01月 (5) 2013年12月 (8) 2013年11月 (10) 2013年10月 (8) 2013年09月 (4) 2013年08月 (1) 2013年07月 (6) 2013年06月 (4) 2013年05月 (14) 2013年04月 (7) 2013年03月 (14) 2013年02月 (1) 2013年01月 (16) 2012年12月 (9) 2012年11月 (7) 2012年10月 (6) 2012年09月 (25) 2012年08月 (19) 2012年07月 (27) 2012年06月 (12) 2012年05月 (13) 2012年04月 (10) 2012年03月 (24) 2012年02月 (84) 2012年01月 (12) 2011年12月 (17) 2011年11月 (25) 2011年10月 (16) 2011年09月 (15) 2011年08月 (7) 2011年07月 (14) 2011年06月 (9) 2011年05月 (4) 2011年04月 (5) 2011年03月 (11) 2011年02月 (9) 2011年01月 (21) 2010年12月 (15) 2010年11月 (232) 2010年10月 (16) 2010年09月 (24) 2010年08月 (5) 2010年07月 (10) 2010年06月 (9) 2010年05月 (9) 2010年04月 (10) 2010年03月 (11) 2009年12月 (12) 2009年11月 (4) 2009年10月 (7) 2009年09月 (4) 2009年08月 (6) 2009年07月 (4) 2009年06月 (4) 2009年05月 (3) 2009年04月 (1) 2009年03月 (9) 2009年02月 (5) 2009年01月 (5) 2008年12月 (16) 2008年11月 (26) 2008年10月 (39) 2008年08月 (3) 2008年07月 (6)

Recno:: 6
URL:: http://blog.csdn.net/david_520042/article/details/7979264

ParseText::
[Ext.NET]之动态绑定GridPanel - 德仔 - 博客频道 - CSDN.NET 德仔 It is never too old to learn 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] [Ext.NET]之动态绑定GridPanel 标签： server random ext button autoload header 2012-09-14 15:14 1908人阅读 评论 (0) 收藏 举报 分类： 前端设计 Ext.Net （116） 作者同类文章 X 经常会有朋友问 如何动态绑定GridPanel ，由于一直很忙，这次索性发帖来统一回答。 使用过Ext.NET的都知道，Ext.NET中的控件GridPanel很强大，也很好用，可以实现各种功能，但是相比GridView，比较欠缺的是，GridPanel无法自动绑定列与数据。 在使用GridView时，我们可以将DataTable、List等绑定到GridView并自动生成列显示，但是GridPanel是不具备这个功能的。因此在某些需要动态绑定数据的地方，很多朋友都遇到麻烦——比如某些高级查询情景，用户可以选择显示的列名并输入每列的筛选数据。简单的方法是引发页面回传，但是这样会导致页面刷新，用户体验很差。 那么Ext.NET的GridPanel可以实现这个功能吗？答案显然是可以的。 首先看下面这个示例，如图： 从图中可以看出，每次单击按钮时，列的数量、列名、行数都不同，而且是ajax刷新的。那么这是如何做到的呢？关键代码如下： /// <summary> /// 生成字段和列，并绑定数据源 /// </summary> /// <param name="_rptData"></param> /// <param name="_gp"></param> /// <param name="_store"></param> private void BindData( DataTable _rptData, GridPanel _gp, Store _store) { //清除旧数据与记录集 _store.Reader.Clear(); _gp.SelectionModel.Clear(); _gp.ColumnModel.Columns.Clear(); //_store.Model.Clear(); var _jsonReader = new JsonReader (); foreach ( DataColumn _dataColumn in _rptData.Columns) { //创建字段 _jsonReader.Fields.Add( new RecordField (_dataColumn.ColumnName)); //创建列 var _column = new Column { Header = Server.HtmlEncode(_dataColumn.ColumnName), DataIndex = _dataColumn.ColumnName, }; _gp.ColumnModel.Columns.Add(_column); } _store.Reader.Add(_jsonReader); _store.DataSource = _rptData.DefaultView; _store.DataBind(); // 重绘【必须调用】 _gp.Render(); }   上面代码首先清空了数据、记录集、选择项、列模型，然后创建了JSON读取器，动态创建了列与字段，再绑定到记录集，最后重绘GridPanel。上面代码只是一个很粗浅的编写，用于实现动态绑定GridPanel。在实际应用中，随着业务逻辑的复杂性，你可能要做很多的判断并且做相应的处理，比如根据数据类型生成相应的列类型，或者生成编辑字段等等，这就需要读者自己去完成了。 接下来每次都调用这个方法来绑定数据即可，比如： protected void BindData_Click( object sender, DirectEventArgs e) { var rowCount = new Random ().Next(10, 20); var colCount = new Random ().Next(20, 40); DataTable dt = new DataTable (); for ( int i = 0; i < rowCount; i++) { var dr = dt.NewRow(); for ( int j = 0; j < colCount; j++) { if (i == 0) { var col = new Random (j).Next(1, 100000).ToString(); if (!dt.Columns.Contains(col)) dt.Columns.Add(col); } dr[j] = new Random ((i + 1) * (j + 2)).Next(1, 100000); } dt.Rows.Add(dr); } BindData(dt, gpRPTData, Store1); } 上面这段代码是生成随机数据进行绑定的。绑定的代码调用的是BindData方法。 页面代码如下： < form id ="form1" runat ="server"> < ext : ResourceManager ID ="ResourceManager1" runat ="server" /> < div > < ext : Viewport runat ="server" Layout ="FitLayout"> < Items > < ext : GridPanel ID ="gpRPTData" AutoScroll ="true" Layout ="Fit" TrackMouseOver ="true" runat ="server" ColumnLines ="true" StripeRows ="true" Header ="false" Title ="数据报表"> < Store > < ext : Store ID ="Store1" ShowWarningOnFailure ="false" AutoLoad ="true" runat ="server" /> </ Store > < LoadMask ShowMask ="true" /> < ColumnModel ID ="ctl120" /> < TopBar > < ext : Toolbar runat ="server" ID ="tbShow" IDMode ="Static"> < Items > < ext : Button runat ="server" Text ="加载数据" Flat ="false" ID ="Button1" Icon ="Accept"> < DirectEvents > < Click OnEvent ="BindData_Click"> < EventMask ShowMask ="true" Msg ="正在生成数据，请稍后... ..." /> </ Click > </ DirectEvents > </ ext : Button > </ Items > </ ext : Toolbar > </ TopBar > <% --<Listeners> <CellClick Fn="cellclick" /> </Listeners>-- %> < BottomBar > < ext : PagingToolbar ID ="PagingToolbar1" runat ="server" PageSize ="50"> < Items > < ext : Label ID ="Label1" runat ="server" Text ="分页数:" /> < ext : ToolbarSpacer ID ="ToolbarSpacer1" runat ="server" Width ="10" /> < ext : ComboBox ID ="ComboBox1" runat ="server" Width ="80"> < Items > < ext : ListItem Text ="30" /> < ext : ListItem Text ="50" /> < ext : ListItem Text ="100" /> </ Items > < SelectedItem Value ="50" /> < Listeners > < Select Handler ="#{PagingToolbar1}.pageSize = parseInt(this.getValue()); #{PagingToolbar1}.doLoad();" /> </ Listeners > </ ext : ComboBox > </ Items > </ ext : PagingToolbar > </ BottomBar > </ ext : GridPanel > </ Items > </ ext : Viewport > </ div > </ form > 最后，需要Demo的朋友请 点此下载 。 很久没有用Ext.NET，也许这是最后一次发表这方面的博客吧。大家如果碰到Ext.NET方面的问题，其实大可在官方论坛发帖求助，先关问题也可以在老外论坛搜索。国内这方面的资料还是相对欠缺的。 ------------------------------------------------------------------------- http://www.cnblogs.com/codelove/archive/2012/08/27/2657885.html 上一篇 Ext.Net 1.x_Ext.Net.GridPanel如何后台遍历GridPanel中的数据? 下一篇 Ext.Net 1.x_Ext.Net.常用控件属性集合 顶 0 踩 0 我的同类文章 前端设计 Ext.Net （116） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 david_520042 访问： 1102188次 积分： 18493 等级： 积分：18493 排名： 第243名 原创： 737篇 转载： 446篇 译文： 6篇 评论： 204条 文章搜索 博客专栏 Windows Server 2012 活动目录 文章：8篇 阅读：6089 Sql Server 文章：125篇 阅读：79725 Ext.Net 文章：43篇 阅读：68914 易飞 文章：33篇 阅读：45326 文章分类 设计模式与架构 (2) Java (8) .Net C# (87) .Net C#面向对象 (95) .Net ADO.NET (37) .Net 委托/反射/Generic (45) .Net Grid/Wbs/Xml (39) .Net 邮件/文件/正则/会话 (27) .Net ASP.NET (28) .Net WinForm (23) .Net Asp.Net MVC (0) .Net 第三方控件 (7) .Net Linq (2) 报表管理 图表 (15) 报表管理 报表 (32) 前端设计 Css/Html (38) 前端设计 JavaScript (23) 前端设计 Ext.Net (117) 前端设计 JQuery (22) 数据库管理(ORC/SQL) (251) 嵌入式 (2) 手机开发 (0) ERP (37) ERP-Syteline (8) ERP-鼎捷 (115) 财务会计基础 (6) 网络与硬件 (27) 活动目录 (8) 软考备战 (32) 我的项目 (11) 德仔杂谈 (45) 最新评论 [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [易飞]包材Forcast四周滚动需求 u010850027 : 谢谢楼主的分享，学习了`(*∩_∩*)′ [网络管理]windows server backup mojie1207 : 目标服务器有什么要求呢？必须在一个局域网内吗？ [易飞]指定日期结存 xzg307514464 : 你查询库存函数没有考虑，现行年月问题，有BUG [MSSQL]SQL Server 事务语法 u012308971 : 数据库的知识很有趣 [MSSQL]SQL Server 事务语法 u013926384 : 看了有不懂的地方可以加入《mysql php技术群》提问, 有专门老师辅导 群号364702379文... [JQ权威指南]第十七天：show()与hide()方法 wangdan199112 : 写的真心好，学习了！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 励志电影二 zhanghongjie0302 : 谢谢您的分享！ 友情连接 Ext D~b 1加1 雨季不再来 伤寒泪 宜龙坡 DotNet笔记 雪雁 PPE 当奈特专家 LINQ&MVC Kencery M守护神-LINQ 综合 temptation 蒋宇捷 temptation 逆心 前端设计 Dcloudgamer 数据库 黄钊吉 桦仔 zping zhaowenzhong C# lifepoem(Linq) Java HTML5 下一站永远 JQuery jqshare 常用网站 DivCss布局 懒人图库 前沿视频室 梦想天空 W3C ExtNet示例 ext.net论坛 codeproject 文章存档 2015年12月 (10) 2015年11月 (4) 2015年10月 (16) 2015年09月 (13) 2015年08月 (22) 2015年07月 (5) 2015年06月 (10) 2015年05月 (9) 2015年04月 (8) 2015年03月 (9) 2015年02月 (2) 2015年01月 (5) 2014年12月 (5) 2014年11月 (6) 2014年10月 (20) 2014年09月 (14) 2014年08月 (4) 2014年07月 (4) 2014年06月 (8) 2014年05月 (8) 2014年04月 (2) 2014年03月 (9) 2014年01月 (5) 2013年12月 (8) 2013年11月 (10) 2013年10月 (8) 2013年09月 (4) 2013年08月 (1) 2013年07月 (6) 2013年06月 (4) 2013年05月 (14) 2013年04月 (7) 2013年03月 (14) 2013年02月 (1) 2013年01月 (16) 2012年12月 (9) 2012年11月 (7) 2012年10月 (6) 2012年09月 (25) 2012年08月 (19) 2012年07月 (27) 2012年06月 (12) 2012年05月 (13) 2012年04月 (10) 2012年03月 (24) 2012年02月 (84) 2012年01月 (12) 2011年12月 (17) 2011年11月 (25) 2011年10月 (16) 2011年09月 (15) 2011年08月 (7) 2011年07月 (14) 2011年06月 (9) 2011年05月 (4) 2011年04月 (5) 2011年03月 (11) 2011年02月 (9) 2011年01月 (21) 2010年12月 (15) 2010年11月 (232) 2010年10月 (16) 2010年09月 (24) 2010年08月 (5) 2010年07月 (10) 2010年06月 (9) 2010年05月 (9) 2010年04月 (10) 2010年03月 (11) 2009年12月 (12) 2009年11月 (4) 2009年10月 (7)

Recno:: 7
URL:: http://blog.csdn.net/domypp/article/details/49337885

ParseText::
微信支付不再免费，浅谈它的四年发展史 - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 微信支付不再免费，浅谈它的四年发展史 标签： 微信 支付宝 转账 超级表格 张小龙 2015-10-22 19:56 2182人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 微信公众号： chaojibiaoge 2015年10月，关于微信转账需要额外加收手续费的消息就已经传得沸沸扬扬。然而，这绝对不是一场空穴来风。 微信转账官方说明称，账户转出每月前20000不收取手续费，超过20000之后的金额需要支付0.1%的手续费。针对此问题，腾讯回应称，10月17日， 微信支付开始逐步测试转账新规。 此次对超额部分收费并不是微信支付追求营收之举，而是完全用于支付银行手续费的，微信支付团队也表示无奈，正在积极与银行方面密切沟通，争取早日恢复转账交易完全免费。 由于红包转账金额较小，不会受到任何影响。 谈起微信，不得不提到微信背后的男人——张小龙 张小龙，1969年12月生于湖南，毕业于华中科技大学电信系，分别获得学士、硕士学位。 1997年，张小龙开发的邮件客户端软件，05年3月16日被腾讯收购，是中国最著名的软件产品之一，中文版使用人数超过400万，英文版的用户遍布20多个国家，名列“十大国产软件”，被 太平洋电脑网评为五星级软件 2011年1月12日第一次发布，截止到2015年第一季度，微信已经覆盖中国 90% 以上的智能手机，月活跃用户达到 5.49 亿，用户覆盖 200 多个国家、超过 20 种语言。此外，各品牌的微信公众账号总数已经超过 800 万个，移动应用对接数量超过 85000 个，微信支付用户则达到了 4 亿左右 2000年4月18日，张小龙以1200万元的价格把Foxmail卖给博大公司，并任公司副总裁。 2005年3月16日，腾讯收购Foxmail软件，张小龙加盟腾讯公司，担任广州研发部总经理，全面负责并带领QQ邮箱团队。 微信是如何诞生的？ 它绝对是在千军万马的搏斗中挺过来的。 当时黑莓平台上有即时讯息交流工具BlackBerry Messenger，但由于不能跨平台，因此Kik Messenger应运而生。而由于Kik在用户安装后会自动检 索通讯录提示哪些联系人已经安装，因此用户量飞速上涨。也是因此Kik从自家App World下架。 几乎同时Talkbox出现，依靠更加迅捷和即时的语音传递，从而更能表达用户的情感。 然而，就像大多数创业团队经常被天使投资人问到的问题一样：“如果腾讯复制了这个项目，你们打算怎么办？” 结果腾讯真的来了！！ 在Talkbox发布后仅三天，腾讯发布了首款微信客户端。 让我们看看这么些年微信一直都是在如何发展着的。 最后值得一提的是，支付宝并没有在移动端有转账收费的考虑，目前使用支付宝钱包付款，不会收取任何手续费。 而使用支付宝在网页版转账，需要收取手续费，根据到账时间的长短，费用不同。其中，实时到账和2小时内到账的服务费均为0.2%，次日到账的服务费为0.15%，最低2元/笔，最高25元封顶。 多人协作的在线表格 优美的企业办公软件 点击 www.chaojibiaoge.com 加入我们的大家庭吧。  欢迎关注超级表格微信公众号： chaojibiaoge 上一篇 王健林=马云+2个刘强东—《2015胡润百富榜》 下一篇 跟支持创业的政府官员打交道是怎样的体验 顶 0 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203894次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 8
URL:: http://blog.csdn.net/domypp/article/details/49614367

ParseText::
滴滴柳青、58同城、美团创始人引领《财富》商界精英 - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 滴滴柳青、58同城、美团创始人引领《财富》商界精英 标签： 滴滴打车 美团 柳青 58同城 超级表格 2015-11-03 12:13 613人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 北京时间11月2日晚，《财富》（中文版）正式公布了2015年“中国40位40岁以下的商界精英” 榜单。可以看到的是滴滴快的的CEO程维、总裁柳青并列榜首，58同城创始人兼CEO姚劲波和美团 创始人兼CEO王兴分列第二、三。 NO.1 滴滴快的的CEO程维、总裁柳青 柳青——“中国IT教父”柳传志之女。1996年，柳青考入北京大学计算机系；2000年，在哈佛大学获得硕士学位，后来成为高盛历史上最年轻的董事长。今年2月4日，出任滴滴公司总裁。在上个月，柳青发内部信，透露自己检查出乳腺癌，她表示已经做完肿瘤摘除手术，目前感觉“还挺好的”。 程维——毕业于北京化工大学，05年进入阿里巴巴旗下B2B公司从事销售工作，6年后就任支付宝B2C事业部副总经理，视野逐渐从前端销售开始向全面运营转变。12年6月，陈维离开支付宝并创立了智能出行的滴滴打车项目的小桔科技公司。 NO.2 58同城创始人兼CEO姚劲波 姚劲波——1999年毕业于中国海洋大学，获得计算机应用及化学双学位。2005年，创立了分类信息网站58同城。2015年2月11日，入围“2014年中国互联网年度人物”活动年度人物奖。 NO.3 美团创始人兼CEO王兴 王兴——1997年，被保送到清华大学电子工程系无线电专业，2003年放弃美国学业回国创立校内网，06年被千橡集团收购；07年创办饭否网；10年创办团购网站美团网。2014年，王兴入围2014年度华人经济领袖。 我们再看看整体榜单排名！ 《财富》是一本由美国人亨利·鲁斯创办于1930年，主要刊登经济问题研究文章的杂志。自从其1954年推出全球500强排行榜之后，历来都成为经济界关注的焦点，影响巨大。它们的运作模式也是通过计算公司的总资产。由于上市公司的财务报表都是公开的，所以对上市公司的计算是最方便的，数据也是很准确的。但是每一个上市公司都有很多大大小小的分公司，每个分公司又有不尽相同的销售额，成为了统计计算时非常困难的一项。 有很多人可能会有质疑，似乎各个统计机构例如享誉世界的《福布斯》《胡润百富榜》等等最后出来的排行都不尽相同，这也是和他们每次统计时的对象以及方式，甚至是货币兑换汇率的标准不同所导致的。 更有意思的是《财富》有非常独特的公司结构。它由两个独立并行、互不干扰的序列组成。一个最高首脑是总编辑，另一个是总裁。总裁虽然负责市场推广和赚钱但绝对不能对总编辑施加任何影响，甚至干预报道。《财富》多次牺牲巨大商业利润也要坚持客观报道，使得它在工商界中树立了权威和公信力极大。 请点击这里 ，立即享受轻松办公的体验。 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号：chaojibiaoge 版权声明：本文为博主原创文章，未经博主允许不得转载。 上一篇 创业在腾讯、在阿里巴巴、在团中央机构！ 下一篇 创业的路上，女子并不让须眉！ 顶 0 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203892次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 9
URL:: http://blog.csdn.net/domypp/article/details/49743499

ParseText::
创业的路上，女子并不让须眉！ - 超级表格官方博客ChaojiBiaoge.com - 博客频道 - CSDN.NET 超级表格官方博客ChaojiBiaoge.com 一个互联网公司的创业史记 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 创业的路上，女子并不让须眉！ 标签： 超级表格 中关村 潘越 2015-11-09 20:27 803人阅读 评论 (0) 收藏 举报 分类： 创业故事 （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 超 级 表 格 微信公众号： chaojibiaoge 超级表格-潘越 2015年的整个夏天，北京城几乎都沐浴在奢侈的蓝天白云里。从梦中醒来的每个清晨 都让人觉得美好和温暖。坐落在中关村创业大街的超级表格工作室也跟着活跃起来，像跳跃的旋律，贯穿在每个人敲打的键盘间、绘画的图纸间……   彻骨寒与扑鼻香 伴随着这样的旋律，工程师小凯总能哼出一些音符，甚至连续单句循环一整个下午。潘越就坐在小凯边上，“听着小凯的自嗨，我整个人都清醒了不少。”她笑着描述自己的感想。潘越原本就喜欢这样自由无羁的工作氛围。当产品有了好成绩时，我们团队一起去KTV飙高音；遇上一个小假期，我们又约好去小凯家玩电动。超级表格带给她的不仅仅是一份工作，还包括暖暖的情谊。 然而，不经历一番彻骨寒，又何来梅花扑鼻香？ 来到超级表格之前，刚刚大学毕业的潘越也找了许多工作，先后进了两家金融公司因为各种原因离职，后来又到了一家国有控股的大公司里做部门助理。几乎和所有的传统企业一样，当员工只是为了一份工作，一叠工资而上班时，每个人都“严格”地秉行着“事不关己，高高挂起”的心态，在公司里尸位素餐，就差搬个垫子到办公室里练瑜伽好了。刚刚大学毕业的潘越在工作中投入的活力和激情与公司里腐朽的气息显得尤为格格不入。 “他们几乎不会做任何决定，这样也就不会承担任何风险。我的任务就是全世界找总经理，然后把各种文件拿给他签字。”潘越回忆道，“但是，总经理岂是你想找，想找就能找？我还是得巴巴地等上一周，当恰好他在办公室里，我也要从一栋大楼里出来，转过几个街道，再进入一栋大楼里。他于是花了两秒钟签了一个几百块钱的支出许可。” 干满一个月后，潘越就决定要离开。   世界那么大，谁不想去看看？ 当接到超级表格创始人陈坤极面试邀请的时候，她已经开始办离职手续。她按照面试的地点来到了北京中关村创业大街，这个北京最火热的创业孵化中心，李克强总理也在10月19号第二次来到这里，参加了全国大众创业万众创新活动周。潘越说，“我一直喜欢这个地方，我曾经差点就在这里创业了”。 那是在更早之前，热爱唱歌的她在创业大街寻觅到一个以儿童音乐培训为项目的创业团队。团队一共有4个人，都是毕业不久的大学生，给小孩子做音乐培训指导，老师都来自北京著名的音乐高校。潘越差点就留在那里做行政了，但是整个北京乃至全国大大小小的音乐培训机构都是举不胜数，你能看到有多少家正在开张就能想到有多少家正在倒闭。所以当她妈妈得知她的想法后就立即反对。尽管如此，潘越也偷偷溜过去好几次…… 心里面可能就有一股要创业的劲。 当潘越第一次推开超级表格大门的时候，小凯就站在门边上。她瞧见小凯后，准确的说是小凯极具特色的长发后，就知道这个团队的气氛应该是轻松和活泼的。坤哥当时就很热情地跟潘越进行了面试，她至今都还记得，因为当时她不知道是坤哥亲自跟她面试。 “你对我们公司有哪些了解呢？”坤哥问她。 “我知道超级表格的创始人叫陈坤极，公司是上海铀尼信息科技有限公司，注册地是上海。” “你是怎么记住‘陈坤极’这个名字的？” “因为陈坤。” 坤哥笑了笑说：“我就是陈坤极！”（此处略去潘越惊呆的表情）   朝花夕拾，恍然如梦 上海作为中国国家中心城市，中国经济、金融、贸易和航运中心，一直在中国的华东地区像钻石般璀璨夺目，把中国也照耀的熠熠生辉。13年的10月份，坤哥拖着行李，小凯拖着自己，超级表格在上海便开始了最初的研发，从一无所有到产品成型基本上都在上海完成，漫漫的酷暑和凛冽的寒冬是靠用户们的支持和信赖撑过来的。上海对他们来说，有着更加特殊的意义。 而在三个月之前，潘越也到上海了，当时她才刚刚大二结束，在学校安排的一家五星级酒店PBS实习。这是她人生中第一份工作，坐在酒店的一间小办公室里进行顾客身份信息核对。作为五星级的酒店，每天都要接待世界各地的人，他们来自台湾、香港、日本、德国、美国、西班牙等等。潘越也花时间学习英语，去和世界各地的外宾沟通。“我要去管他们要护照、去查他们在中国的留华时间、去引导他们做入住登记。”潘越说，“英语也好了不少，更珍贵的是认识了很多人，交了很多朋友。” 上海用它的绚烂多姿在吸引全世界外宾的同时，也有更多的人在这个被称为“魔都”的地方摸爬滚打。坤哥和小凯两个人在上海度过了一段超级表格最艰辛的时光，而潘越也经历着一段辛苦的日子。她们被统一安排在酒店的地下室里住宿，十人一间。窗户窄到只有一条缝，每个人的柜子跟窗户一样窄。所有人只能把行李放在下铺的最下面。并且整个半年里，潘越的工作时间和同宿舍的其她9个女孩都不一样。“她们是从早上7点到下午3点，我是从下午2点到晚上11点。所以，常常是我醒来的时候她们早都不见了，而我回来的时候，她们都已经睡觉了。”潘越笑着说。所以我一度怀疑，在一个宿舍里住了大半年后，潘越会不会都不认识她们。好在她们本来是一个学校的，彼此之间也都熟悉。 她也说那段时间给了她很多帮助，虽然最开始的时候，她是被学校逼着来到了上海，但是离开的时候，她还是极其舍不得。告别上海后，她继续开始学业，在大四实习的时候，潘越同时收到去哪儿网以及一家国企的两封offer，正犹豫不决间，她妈妈为了她能有一个更好的前程，让她与更吸引她的互联网公司去哪儿网失之交臂。 然而，有关前程的事从来不能规划的好。 虽然潘越从小在北京长大，但是外地的户口让她在半年后没办法转正成为正式员工。她的优秀被部门经理看在眼里，为了留住潘越，他甚至去找到总经理希望能有一个额外的名额。然而国企冗长繁复的规章制度就像一道没缝的铁门将她拒之门外。 生活总不是一帆风顺的，她在最高端的五星级的酒店安排的最差的地下室里和其她9个女孩挤着住了半年，在国企做助理时遭遇外地户口歧视而不能成为正式员工，在第一家金融公司工作时由于要准备学校答辩而被停职，到另一家金融公司里连续坐了一个星期的冷板凳，那一周里，她没有工位，没有电脑，也没有人给她办任何入职手续。来到超级表格之前的最后一家公司几乎把潘越的精力耗尽，临走前还让她做好交接，带着新人熟悉业务，苦口婆心地讲了大半天后，拉到部门经理面前，她就什么都不知道了，潘越差点气的背过去。   那些阅历都让她迅速成长 在历经过那样多类似美工刀的工作后，潘越逐渐被勾勒出成熟和稳重的模样。当我问到她之前她都是在国企甚至上市的公司里做助理，而第一次来到创业型的公司，有什么样的感慨时，潘越说：“这里的气氛正是我喜欢的样子。当时坤哥就跟我说，在创业公司里，成长的速度会是普通人的三倍。而我也真正体会到了。” 她在超级表格团队里需要做客服、做行政、做前台、做人事。你常常能看到她在公司里“飞檐走壁”，左手敲着键盘解决用户的问题，右腿已经迈出大门准备外出做公司地址变更、同时拿起电话准备寄包裹去上海，还要安排谁谁谁来公司里面试，顺便再打个电话让人来修个门，订个餐什么的…… 2015年北京的夏天已经结束，那些看上去或幼稚或愚蠢，或无奈或黑暗的日子也都跟着离去了，然而我们如今摆脱的过去并不代表有一条平坦的前路，在超级表格里的生活依然也会遇到困难和障碍，但是大家都在一起互相帮助必定会渡过所有的难关。 请点击这里 ，立即享受轻松办公的体验。 多人协作的在线表格 优美的企业办公软甲 点击这里，立即体验 关注超级表格公众号：chaojibiaoge 上一篇 滴滴柳青、58同城、美团创始人引领《财富》商界精英 下一篇 法国巴黎反恐机制被批令人震惊，盘点这些年发生的十大恐怖袭击！ 顶 2 踩 0 我的同类文章 创业故事 （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 文章搜索 阅读排行 我与刘强东的故事：他的1000亿和我的5000万 (74659) 2013，我的创业记忆片段 (3811) 上海商报:超级表格创始人叫板Excel (3699) 超级表格全新界面全新体验 (3472) 一支巧乐兹引发的感想(这个标题实在没有创意) (3405) 只有在中华帝都才能免费享受到的北大商业课程：财富定律与愿景规划 (3173) 在中关村创业大街Binggo这半年 (3100) 直击中关村创业大街，新街头霸王来了 (3037) 《一见》采访超级表格创始人陈坤极 (2948) 从软件工程师的角度看MacBook Air的几个设计亮点 (2948) 个人资料 kongki 访问： 203893次 积分： 2690 等级： 积分：2690 排名： 第7676名 原创： 99篇 转载： 1篇 译文： 0篇 评论： 233条 最新评论 即将被裁掉，她是如何替他力挽狂澜？ zzznnn : 嗯,软文 即将被裁掉，她是如何替他力挽狂澜？ weixin_33492943 : 这广告打的啪啪的 我与刘强东的故事：他的1000亿和我的5000万 alex159s : 公司用，感觉的确不错吧。互联网多人协作的模式，完全摒弃了办公中各人生在全国各地的问题，每天自己按时上... 从普通程序员到估值上亿的公司老板，他只用了1年！ u010927640 : 希望这个超大能量场能遍及世界各地。 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @qq_25223941:恩啊。人生就是不断拼搏的过程！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ kongki : @allan_chan:没错！ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ allan_chan : 只有向前~~~ 稳定高薪vs追求梦想，当你在犹豫时别人已经放弃新加坡绿卡！ qq_25223941 : 就是要拼 人生才有意义！ 超级表格全新界面全新体验 kongki : @zjy15203167987:你喜欢就好啊！哈哈 当你躲在被窝里点外卖时，看看比你忙碌100倍的领导者们是如何坚持跑步的？！ kongki : @u010786678:只要对您有价值，我们就值了。

Recno:: 10
URL:: http://blog.csdn.net/foruok/article/details/50272567

ParseText::
如何成为技术领导者 - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何成为技术领导者 标签： 项目经理 管理 技术 程序员 2015-12-12 06:25 1166人阅读 评论 (0) 收藏 举报 分类： 泛技术 （10） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 假如一个人刚刚从技术岗位被提拔为项目经理或部门经理，那下面的人就会问（想）：这家伙哪点比我强？而新上任的领导则会问自己：我怎样才能建有领导力？怎样才能解决即将出现的各种问题？ 《成为技术领导者（掌握全面解决问题的方法）》会给你答案，它是温伯格技术思想三部曲中的一本，全书分定义、创新、激励、组织、转变五个部分，详细入微的讨论了一个技术领导要解决问题的各种方法，让你看到，技术领导会面临什么样的问题，又是如何炼成的。 我对其中所说的领导的职责非常认同： 领导的职责就是创造这样一个环境，每个人都能在其中发挥出更多的能力。 我也对它有关“力量”的讨论非常感兴趣。 我还对书里关于转变的那些章节非常喜爱，比如从哪里寻找改进的时间，如何记录并观察自己的成长…… 我还对激励这部分中的交互模型的分析十分赞同（我的微信订阅号“程序视界”发过一篇文章讨论了类似的话题，进入程序视界，回复10063可查看）…… …… 我想说的很多，千言万语汇成一句话： 这是讲如何成为技术领导的最棒的书，没有之一 。 但，这本书的读者，却不限于技术领导或想成为技术领导的人，它里面的讨论的问题，其实每个人都可能遇到，作为普通的技术工作者，假如你了解了这些问题和解决问题的方法，也有助于理解技术领导是如何看待和解决问题的，从而能够反哺自身，大大提高与技术领导沟通的效果。 上一篇 加班到底有什么用 下一篇 一招搞定多Offer选择 顶 4 踩 1 我的同类文章 泛技术 （10） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1819947次 积分： 20930 等级： 积分：20930 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3193条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911300 Qt Quick简明教程 文章：30篇 阅读：192477 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35167 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022) 漫谈程序员系列：看看你离优秀有多远 (25604) 月薪3万的程序员都避开了哪些坑 (23708) 评论排行 漫谈程序员系列：一个老程序员的2014年终总结 (137) 漫谈程序员系列：一张图道尽程序员的出路 (84) 月薪3万的程序员都避开了哪些坑 (83) 程序员保值的4个秘密 (79) 漫谈程序员系列：咦，你也在混日子啊 (75) 漫谈程序员系列：看看你离优秀有多远 (74) 漫谈程序员系列：怎样成为技术达人 (74) 程序员跳槽神级攻略 (64) 大龄程序员的未来在何方 (60) 漫谈程序员系列：请区别对待女程序员 (59)

Recno:: 11
URL:: http://blog.csdn.net/foruok/article/details/50384161

ParseText::
做自己想做的工作，你也可以 - 程序视界，漫谈程序人生，原创，有趣，有料，有能量 - 博客频道 - CSDN.NET 程序视界，漫谈程序人生，原创，有趣，有料，有能量 关注程序员的职业规划，愿更多人找到适合自己的修行路 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 做自己想做的工作，你也可以 标签： 目标 理想的工作 职业 求职 找工作 2015-12-23 07:31 2574人阅读 评论 (9) 收藏 举报 分类： 随笔 （68） 作者同类文章 X 版权声明：本文为foruok原创文章，未经博主允许不得转载。 注：这篇文章根据我2015年12月12日在中国黑客联盟和12月17日在CSDN的公开课“做自己想做的工作”整理而来，整理时做了不少调整，与讲课内容大有出入，甚至可以当做一篇新文章来看。 我们大多数人都面临一个严肃的事实：在离开学校后，我们必须在长达40到50年的时间里努力地工作。假如在这么漫长的岁月里，在我们最有精力最有活力的这段人生里，一直做着自己不喜欢的工作（这并不罕见），那就是浪费时间、浪费生命。所以， 找到一份适合自己的工作非常重要，只有在做自己想做的工作时，才能获得职业满足，才能完成自我实现 。 “找到你挚爱的工作，那么，太阳还没升起时，你就迫不及待地去做你热爱的工作了。”这是史蒂夫•乔布斯说的话，表达了同样的意思，而且乔布斯的一生也在践行这样的理念，他最终通过苹果改变了世界。 既然做自己想做的工作如此之重要，那么，怎么样才能做自己想做的工作呢？ 这里面有两个问题：怎样找到适合自己的工作？怎样验证当前的工作是否是自己想要的？ 在四五十年这样漫长的生涯里，大多数人的职业都会经历多次变化，一旦你面临职业选择，就必须面对上面两个问题。 我们先提供四种方法，帮助验证当前的工作是否是自己想要的。 当前工作是你想要的吗？ 四种方法，一个一个来。 星期天的忧郁度测试 这个方法来自《首先，打破一切常规》这本书，它的作者非常牛X，是美国的马库斯•白金汉，他掀起了席卷全球的“优势革命”。他还有另外两本书，《现在，发现你的优势》、《现在，发挥你的优势》，全部是超级畅销书。 星期天的忧郁度测试简单有效易执行。 首先是体会自己的感觉，如果星期天晚上 没有任何抑郁和痛楚，并且盼望着下个星期的到来 感到忧郁，想起周一要上班就会想逃避 不论你的感觉是1或2，都这么做： 问问自己为什么？ 将答案记录下来，供下次求职时参考 当你盼着下星期到来，盼着上班时，一定有一些明确的原因，比如同事关系特别融洽，工作内容特别喜欢，工作环境（物质）特别好，领导特别赏识……记录下来，这些东西最可能是一份适合你的工作必备的要素，以后再求职时是非常棒的参考。 当你想到第二天要上班就有抗拒就不爽时，一定是什么原因让你不爽了，和你的性格、习惯、爱好等冲突了，比如办公室政治很严重，比如大家都在混日子天天无所事事，比如你喜欢开发公司偏让你带团队……这些都是反向指标，他们的反面就可能是你所在意的理想工作的要点，再次求职时可以参考。 盖洛普的Q12 不存在绝对好的工作，没有哪一份工作适合所有人、让所有人都满意，但，一定有一份工作令你满意。 盖洛普公司的Q12针对员工敬业度和工作环境进行测量。回答这12个问题，你就能发现当前的工作是否令人满意。 我知道对我的工作要求吗？ 我有做好我的工作所需要的材料和设备吗？ 在工作中，我每天都有机会做我最擅长做的事吗？ 在过去的七天里，我因工作出色而受到表扬吗？ 我觉得我的主管或同事关心我的个人情况吗？ 工作单位有人鼓励我的发展吗？ 在工作中，我觉得我的意见受到重视吗？ 公司的使命目标使我觉得我的工作重要吗？ 我的同事们致力于高质量的工作吗？ 我在工作单位有一个最要好的朋友吗？ 在过去的六个月内，工作单位有人和我谈及我的进步吗？ 过去一年里，我在工作中有机会学习和成长吗？ 实际的Q12测量比较复杂，每个问题测试点不一样，可能需要单独分析。而最简单的做法是给每个题目5分，5分代表最满意，0是最不满意。我们回答每道题，计算总分。 职业压力测试 这个测试可以了解下，当你在工作中觉得特别不爽或星期天的忧郁度测试结果很糟时，可以把它拿出来测测。 这个测量是后向测试，在已经感到不爽时可以用来测测你到底有多不爽。因为压力肯定会导致生理和心理反应，所以这个测试的题目都考察身体和心理反应等。 注意，要根据最近两周到一个月的具体情况来对照下列题目： 时常有头晕 时常有肩痛 时常感到口渴 有时感到胸闷 手脚有些发麻迹象 手脚有时有发抖现象 腰痛 拉肚子或便秘交替 全身无力疲惫 早晨比往常清醒 早晨心情低沉 感到学习（工作）没劲 没有耐心与毅力 对事物不能决定 不安、容易生气 宁可离开这个世界 对今后缺乏自信 不能轻松的与人会面 结果的解读是这样的： 10点及10点以上——有严重的职业压力症，需要马上采取措施，进行心理治疗 5至9点——轻度职业压力症，可以自我治疗，要注意修养。 5点以下——没有职业压力症，在正常范围内 测试当前工作是否理想 最后提供一个简单有效的方法，根据你的感觉和表现来测定你是否找到了理想的工作。假如你已经找到了理想的工作，你应该： 期盼着去工作 因工作而感到兴奋、充实（绝大多数时间如此） 感到你的付出被尊重和赏识 当向别人描述你的工作时感到自豪 喜欢并且尊重你的同事 对未来充满信心 请牢记这几条标准，求职时可以用来对照。 怎样找到合适的工作？ 这个问题比较复杂，前面我们提到马库斯•白金汉的三本书，对找到合适工作非常有帮助。马库斯•白金汉一直强调的“发现你的天赋，发挥你的优势”，其实核心理念就是“认识你自己”。当我们正确认识了自己，再学习一些实际的求职策略，就可以找到合适的职业。 那认识自己，比较经典的有两个理论： 性格类型理论 霍兰德职业兴趣理论 来了解一下。 MBTI性格类型 MBTI用来测试人的性格类型，它基于荣格的《心理类型》，由凯瑟琳•布里格斯和伊莎贝尔•布里格斯这对母女结合打量的调研实践和测试发展而来。经过70多年发展，已成为世界通用的性格测试，被广泛运用于自我了解与发展、职业规划、专业选择、团队建设管理和领导培训、解决问题、人际关系辅导、教育及课程研发、多元化和多文化的培训等诸多领域。 关于MBTI的详情，简单的入门和应用，参考百度百科吧： http://baike.baidu.com/view/1462757.htm 。 MBTI将性格分为4个维度、8种偏好、16种类型。下图是性格类型表： 每种性格类型都对应有典型的职业，可以参考这些典型职业来寻找自己的方向，但求职的目的是定在某一个具体的目标职业上，所以，MBTI结果的解读有一定的专业性和难度，如果自己搞不定，可以找专业人士咨询。 一个人有三个维度的我： 经验中的我 理想中的我 本来的我 荣格认为性格偏好是天生的，古语也常说“江山易改禀性难移”，MBTI测的呢，是本我，就是天生的那个我。 后天训练可能会导致偏好认知偏差，在进行MBTI测试时，应该让自己处在最放松最自然的状态，发现内心的、本然的偏好。比如你觉得躺在碧海蓝天之下的沙滩上最放松，就想像自己在那个情境里，让自己放松下来；比如你觉得一个人坐在山间小溪中突出的石头上最放松，就想像自己在那个情境里，让自己放松下来。 如果MBTI测试结果和你在工作、生活中的表现不一致，和你想像中的自己也不一致，可以多测几次，或者找专业人士咨询。 霍兰德职业兴趣理论 霍兰德职业兴趣理论来自约翰•霍兰德，霍兰德认为人的人格类型、兴趣与职业密切相关，兴趣是人们活动的巨大动力，凡是具有职业兴趣的职业，都可以提高人们的积极性，促使人们积极地、愉快地从事该职业，且职业兴趣与人格之间存在很高的相关性。霍兰德认为人格可分为现实型(R)、研究型(I)、艺术型(A)、社会型(S)、企业型(E)和常规型(C)六种类型。 下图简要说明了霍兰德职业人格类型： 百度百科有两个词条可以参考： 霍兰德职业兴趣理论 霍兰德职业兴趣测试 当个人职业兴趣与所从事职业不匹配时，会比较痛苦。 历史上著名的木匠皇帝朱由校、南唐后主李煜都是典型的例子。 2014年11月17日，《中国青年报》报道了周浩的故事，他放弃北京大学，转读北京工业技师学院。就是因为北大的专业和他的兴趣完全不匹配——他从小就喜欢拆分机械组装电器。如果周浩做霍兰德职业兴趣测试的话，应该是R型。 霍兰德应用在学生群体上特别适合，对工作多年的职场人士，如果根据职业兴趣进行调整时，需要考虑的转换成本比较高，有时可能难以抉择，需要仔细衡量或者找人咨询。 做准备的重要性 摩西奶奶说，“你最愿意做的那件事，才是你真正的天赋所在”。 摩西奶奶还说，“人生永远没有太晚的开始”。做自己想做的工作，在适合自己的工作中获取职业满足完成自我实现，从现在开始，一点儿也不晚。 然而， 很多人虽然对现有工作极度不满，也感到某种工作可能是自己想要的，并花了很多时间想象自己实现梦想后会怎么样，但却从不思考追求梦想的过程会给他们带来什么样的感受 。比如说，如果你的梦想是做一个软件开发工程师，那么你是否准备好了在一天中产生强烈的情绪变化——从用代码实现一个功能的兴奋，到面对测试人员所提Bug的沮丧，再到产品经理不断调整需求而崩溃的情绪？又比如，你是否准备好了在一个地方一坐就是七八小时？又比如你是否能承担必须自己亲手解决Bug的压力，是否能接受Bug解决不了晚上做梦还在调试的状态？ 每一份我们所谓的理想的职业，都会有一些不那么理想的成分在里面，你需要调整自己的心态，接纳做一些自己不喜欢的事的状况，我们得明白，理想的工作，并非时时刻刻都让人HAPPY，而是，大部分时候如此。而我们能不能加纳那些自己不喜欢的内容，就需要提前去了解去体会。怎么去了解、体会？比较好的一个做法，就是“生涯人物访谈”，简单明白的说，就是找一个前辈，详细地了解从事某种职业时的工作情景、可能出现的状况、面对这些状况时的感受，然后返观自己是否能接受。 还有一个需要考虑的问题是：你会如何开始？你是打算一个猛子扎进水里，还是先把脚伸进去试试？你是打算一边做自己的老本行一边为理想中的工作储备知识、技能，还是来一场说走就走的旅行一下子就彻底切过去不给自己留后路？这很大程度上取决你所面临的各种因素：你对改变的认识、你的财务储备和支撑、家人和朋友的支持，以及你是否能不顾一切地投入全新的生活。 不管怎样，做好准备迈出第一步非常重要，晚上想想千条路，早上起来走老路，最后的结果就是自己总是走不到自己想要的路上来。 一旦你准备好了，迈出了第一步，有了一个开始，就成功了一半，你想要的工作，就会最终到来。要相信，美好的未来终会到来。我非常喜欢诗人食指的《相信未来》这首诗，摘录一段与大家共勉： 当蜘蛛网无情地查封了我的炉台 ， 当灰烬的余烟叹息着贫困的悲哀 ， 我依然固执地铺平失望的灰烬 ， 用美丽的雪花写下：相信未来 。 当我的紫葡萄化为深秋的露水 ， 当我的鲜花依偎在别人的情怀 ， 我依然固执地用凝霜的枯藤 ， 在凄凉的大地上写下：相信未来 。 我要用手指那涌向天边的排浪 ， 我要用手撑那托起太阳的大海 ， 摇曳着曙光那支温暖漂亮的笔杆 ， 用孩子的笔体写下：相信未来 。 更多精彩文章，参看“ 漫谈程序员 ”专栏。 困惑、成长、发展、增值、新知，尽在微信订阅号“程序视界”： 上一篇 VS 2013+Qt 5.4.1 下一篇 Qt SDK的x64与x86版本以及与VS的配合 顶 8 踩 0 我的同类文章 随笔 （68） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 我的微信订阅号“程序视界” 微信扫一扫： IT职业咨询QQ群：522419415 个人资料 foruok 访问： 1819945次 积分： 20930 等级： 积分：20930 排名： 第189名 原创： 244篇 转载： 3篇 译文： 13篇 评论： 3193条 我的课程 更多 Qt Quick 4小时入... 难度：初级 类型：技术教程 Qt网络编程实战之HTTP... 难度：中级 类型：实战教学 JavaScript fo... 难度：中级 类型：实战教学 我的视频课程 Qt基础与Qt on Android入门 Node.js(MEAN)全栈开发入门 视频：Qt基础与Qt on Android入门 我的图书 《Qt on Android核心编程》 京东 当当 《Qt Quick核心编程》 京东 当当 友情链接 渡世白玉 多多指教-寒山居士 彩阳 QTCN 一去二三里 Jason's Home 鸿洋的Android世界 去问津找我 博客专栏 Node.js开发入门 文章：21篇 阅读：33252 漫谈程序员 文章：62篇 阅读：911300 Qt Quick简明教程 文章：30篇 阅读：192477 Qt on Android 文章：38篇 阅读：255870 C语言面向对象编程 文章：6篇 阅读：35167 文章分类 android开发 (55) Qt (79) 研发管理 (11) C/C++ (15) 设计 (10) 网络编程 (36) win32 (8) 泛技术 (11) 脚本语言 (9) 随笔 (69) 多媒体 (0) 翻译 (10) 生活 (3) 阅读排行 漫谈程序员系列：咦，你也在混日子啊 (164303) Windows下Qt 5.2 for Android开发入门 (57117) 漫谈程序员系列：怎样成为技术达人 (37205) 漫谈程序员系列：一张图道尽程序员的出路 (35020) Android开源框架AsyncHttpClient (android-async-http)使用 (31754) 漫谈程序员系列：怎么告别“混日子” (29749) 漫谈程序员系列：一个老程序员的2014年终总结 (26488) Qt Quick 之 QML 与 C++ 混合编程详解 (26022) 漫谈程序员系列：看看你离优秀有多远 (25604) 月薪3万的程序员都避开了哪些坑 (23708) 评论排行 漫谈程序员系列：一个老程序员的2014年终总结 (137) 漫谈程序员系列：一张图道尽程序员的出路 (84) 月薪3万的程序员都避开了哪些坑 (83) 程序员保值的4个秘密 (79) 漫谈程序员系列：咦，你也在混日子啊 (75) 漫谈程序员系列：看看你离优秀有多远 (74) 漫谈程序员系列：怎样成为技术达人 (74) 程序员跳槽神级攻略 (64) 大龄程序员的未来在何方 (60) 漫谈程序员系列：请区别对待女程序员 (59)

Recno:: 12
URL:: http://blog.csdn.net/haomengzhu/article/details/46572067

ParseText::
【端午巨献】Cocos2d-x手游Xcode开发记录 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 【端午巨献】Cocos2d-x手游Xcode开发记录 标签： cocos2d-x 手游 xcode 游戏开发 源码 2015-06-20 09:43 715人阅读 评论 (1) 收藏 举报 分类： 软件开发 （5） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 端午节快乐，白天呵呵哒，晚上啪啪啪（手游）。 萌主巨献，经典虐心卡通娱乐邪恶怀旧等多款手游（爱慕扫瑞，苹果机才能玩呢）。 欢迎来踩， 您的支持是我前进的动力。 游戏官方下载： http://dwz.cn/RwTjl ， 游戏视频预览： http://dwz.cn/RzHHd ， 游戏开发博客： http://dwz.cn/RzJzI ， 游戏源码"开源"： http://dwz.cn/Nret1 ， 好人帮忙转发推广下，不甚感激。   郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 上一篇 SDWebImage源码解析之SDWebImageManager的注解 下一篇 UITableView代理cellForRowAtIndexPath不执行的相关解决方案 顶 0 踩 0 我的同类文章 软件开发 （5） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261993次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 13
URL:: http://blog.csdn.net/haomengzhu/article/details/47359239

ParseText::
iOS多线程与网络开发之使用POST上传JSON数据 & 多值参数 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 iOS多线程与网络开发之使用POST上传JSON数据 & 多值参数 标签： 多线程 网络 数据 ios开发 json 2015-08-08 16:06 300人阅读 评论 (0) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 A.上传JSON 1.思路： 必须使用POST方法才能上传大量JSON数据 设置请求头：设置Content-Type 设置请求体，JSON实际相当于字典，可以用NSDictionary NSJSONSerialization把字典数据转换成JSON二进制     2.实现 1 // 2 // ViewController.m 3 // PostJsonDemo 4 // 5 // Created by haomengzhu on 15/1/28. 6 // Copyright (c) 2015年 haomengzhu. All rights reserved. 7 // 8 9 #import " ViewController.h " 10 11 @interface ViewController () 12 - (IBAction)postJson; 13 14 @end 15 16 @implementation ViewController 17 18 - ( void )viewDidLoad { 19 [super viewDidLoad]; 20 // Do any additional setup after loading the view, typically from a nib. 21 } 22 23 - (IBAction)postJson { 24 // 1.创建请求 25 NSURL *url = [NSURL URLWithString: @" http://192.168.0.21:8080/MyTestServer/acceptJson " ]; 26 NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url]; 27 // 设置post发送 28 request.HTTPMethod = @" POST " ; 29 30 // 2.设置请求头 31 [request setValue: @" application/json " forHTTPHeaderField: @" Content-Type " ]; 32 33 // 3.设置请求体 34 NSDictionary *json = @{ @" name " : @" tom " , 35 @" age " : @" 21 " }; 36 request.HTTPBody = [NSJSONSerialization dataWithJSONObject:json options:NSJSONWritingPrettyPrinted error:nil]; 37 38 39 // 4.发送请求 40 [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse *response, NSData *data, NSError * connectionError) { 41 NSLog( @" %@ " , [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:nil]); 42 }]; 43 44 } 45 @end     B.多值参数 1.概念 一个参数名对应多个参数值 http://localhost:8080/MyTestServer/upload?type=aaa&type=bbb&type=ccc 这样在服务器接收到的就是一个数组   郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 iOS多线程与网络开发之小文件上传 下一篇 iOS多线程与网络开发之NSURLCache 顶 1 踩 0 我的同类文章 从零开始iOS8编程 （52） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261985次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警）

Recno:: 14
URL:: http://blog.csdn.net/haomengzhu/article/details/47359317

ParseText::
iOS多线程与网络开发之NSURLCache - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 iOS多线程与网络开发之NSURLCache 标签： ios开发 json 多线程 网络 NSURLCache 2015-08-08 16:11 325人阅读 评论 (0) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 A.基本知识 1.为什么需要缓存?   有时候一个url会请求多次，得到的内容确实一样的   2.缓存的概念     3.缓存数据的过程     当服务器返回数据时，需要做以下步骤 （1）使用服务器的数据（比如解析、显示） （2）将服务器的数据缓存到硬盘（沙盒） 此时缓存的情况是：内存缓存中有数据，硬盘缓存中有数据。 再次请求数据分为两种情况： （1）如果程序并没有被关闭，一直在运行 　　那么此时内存缓存中有数据，硬盘缓存中有数据。如果此时再次请求数据，直接使用内存缓存中的数据即可 （2）如果程序重新启动 　　那么此时内存缓存已经消失，没有数据，硬盘缓存依旧存在，还有数据。如果此时再次请求数据，需要读取内存中缓存的数据。 提示：从硬盘缓存中读取数据后，内存缓存中又有数据了   B.实现 1.什么请求需要缓存?      一般只对GET请求进行缓存，而不对POST请求进行缓存      由于GET请求一般用来查询数据，POST请求一般是发大量数据给服务器处理（变动性比较大） 　　在iOS中，可以使用NSURLCache类缓存数据 　　iOS 5之前：只支持内存缓存。从iOS 5开始：同时支持内存缓存和硬盘缓存   2.NSURLCache iOS中得缓存技术用到了NSURLCache类。 缓存原理：一个NSURLRequest对应一个NSCachedURLResponse 缓存技术：把缓存的数据都保存到数据库中。   3.NSURLCache的常见用法 （1）获得全局缓存对象（没必要手动创建）NSURLCache *cache = [NSURLCache sharedURLCache];  （2）设置内存缓存的最大容量（字节为单位，默认为512KB）- (void)setMemoryCapacity:(NSUInteger)memoryCapacity; （3）设置硬盘缓存的最大容量（字节为单位，默认为10M）- (void)setDiskCapacity:(NSUInteger)diskCapacity; （4）硬盘缓存的位置：沙盒/Library/Caches （5）取得某个请求的缓存- (NSCachedURLResponse *)cachedResponseForRequest:(NSURLRequest *)request;  （6）清除某个请求的缓存- (void)removeCachedResponseForRequest:(NSURLRequest *)request; （7）清除所有的缓存- (void)removeAllCachedResponses;   4.缓存 GET请求 　　要想对某个GET请求进行数据缓存，非常简单 　　NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url]; 　　// 设置缓存策略 　　request.cachePolicy = NSURLRequestReturnCacheDataElseLoad; 　　只要设置了缓存策略，系统会自动利用NSURLCache进行数据缓存   5.iOS对 NSURLRequest提供了7种缓存策略：（实际上能用的只有4种） NSURLRequestUseProtocolCachePolicy // 默认的缓存策略（取决于协议） NSURLRequestReloadIgnoringLocalCacheData // 忽略缓存，重新请求 NSURLRequestReloadIgnoringLocalAndRemoteCacheData // 未实现 NSURLRequestReloadIgnoringCacheData = NSURLRequestReloadIgnoringLocalCacheData // 忽略缓存，重新请求 NSURLRequestReturnCacheDataElseLoad// 有缓存就用缓存，没有缓存就重新请求 NSURLRequestReturnCacheDataDontLoad// 有缓存就用缓存，没有缓存就不发请求，当做请求出错处理（用于离线模式） NSURLRequestReloadRevalidatingCacheData // 未实现   6.缓存的注意事项 缓存的设置需要根据具体的情况考虑，如果请求某个URL的返回数据： 　　（1）经常更新：不能用缓存！比如股票、彩票数据 　　（2）一成不变：果断用缓存 　　（3）偶尔更新：可以定期更改缓存策略 或者 清除缓存 提示：如果大量使用缓存，会越积越大，建议定期清除缓存     1 // 2 // ViewController.m 3 // NSURLCacheDemo 4 // 5 // Created by haomengzhu on 15/1/28. 6 // Copyright (c) 2015年 haomengzhu. All rights reserved. 7 // 8 9 #import " ViewController.h " 10 11 @interface ViewController () 12 - (IBAction)downloadData; 13 14 @end 15 16 @implementation ViewController 17 18 - ( void )viewDidLoad { 19 [super viewDidLoad]; 20 // Do any additional setup after loading the view, typically from a nib. 21 } 22 23 - ( void )didReceiveMemoryWarning { 24 [super didReceiveMemoryWarning]; 25 // Dispose of any resources that can be recreated. 26 } 27 28 - (IBAction)downloadData { 29 // 1.创建请求 30 NSURL *url = [NSURL URLWithString: @" http://192.168.0.21:8080/MyTestServer/video?type=json " ]; 31 NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url]; 32 33 // 2.设置缓存策略 34 request.cachePolicy = NSURLRequestReturnCacheDataElseLoad; // 有缓存就不请求 35 36 // 获得全局缓存 37 NSURLCache *cache = [NSURLCache sharedURLCache]; 38 39 // 定期处理缓存 40 // if (超过一定时期) { 41 // [cache removeCachedResponseForRequest:request]; 42 // } 43 44 // 获得某个request的response 45 NSCachedURLResponse *response = [cache cachedResponseForRequest:request]; 46 if (response) { 47 NSLog( @" 有缓存 " ); 48 } else { 49 NSLog( @" 没有缓存 " ); 50 } 51 52 // 3.发送请求 53 [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse *response, NSData *data, NSError * connectionError) { 54 55 NSLog( @" %@ " , [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:nil]); 56 }]; 57 58 } 59 @end   郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1   上一篇 iOS多线程与网络开发之使用POST上传JSON数据 & 多值参数 下一篇 为什么你要拒绝我 ——苹果AppStore被拒理由大全 顶 1 踩 0 我的同类文章 从零开始iOS8编程 （52） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261992次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇

Recno:: 15
URL:: http://blog.csdn.net/haomengzhu/article/details/50034861

ParseText::
为什么你要拒绝我 ——苹果AppStore被拒理由大全 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 为什么你要拒绝我 ——苹果AppStore被拒理由大全 标签： ios ios开发 app store 苹果appstore 拒绝 2015-11-25 11:48 821人阅读 评论 (4) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 简而言之 截图中出现了Android 截图中出现了hack苹果的内容 评论中出现了“屌丝”等不雅词汇 App中包含谈论Android系统的内容 你修改了状态栏，不行 只有第三方登录，没有自己的注册登陆功能，不行 您的应用包括色情内容（色情交易，色情展示） 有微信分享功能，结果因为要强制用户安装微信，才能使用该功能，被拒 应用内用了圆角按钮，无情被拒 你给我解释解释，应用里的积分从哪里来，到哪里去？ 应用里面表示有广告，但是审核者玩了后说没广告，后来申述成功，因为第二次游戏的时候才会出现广告（虐心重复向游戏），你丫就不能玩两遍么，一遍就几十秒~~ 有第三方支付（支付宝）果断被拒！！！ 因为集成了友盟 友盟获取用户mac地址被拒了。 您的内容因为没有举报功能、含有色情内容不能通过。 使用第三方的logo被拒(由于涉及到联通运营方面 果断在关于里面加了个联通的logo 标识合作伙伴 果断被拒 要求提供联通的书面证明。) 没给测试帐号  QR CODE里边有android的下载地址（直接转跳iTunes后通过） 不符合iOS UI审美观（改UI） 只有第三方登陆，没有自己的注册登陆功能...（新增登陆注册功能通过） 你的软件加了强制评论功能：就一个按钮点击进入评论，必须改成先提示框提醒用户是否进入评论. 存放文档的地方由于iCloud会自动备份而被拒绝，只有用户自己使用和创建出来的才允许放在Document文件夹下。 审核员打不开我的接口，换海外vps，过最蛋疼的。 因为截图里面放了iPhone的模型被拒。  游戏运行崩溃； 游戏截图中有“测试字样”； 游戏太简单； 一次提交多个相同的游戏； 游戏中使用其他版权图片（使用了flappybird原图） 加了广告框架，游戏中缺没有广告显示（其实是在game over时候显示，结果测试人员就一直不知道怎么能死）； 内购不能使用； game center不能使用。 App Store显示名字和软件名称不符合。 支付时不得强制获取用户信息（比如 登陆、注册），必须在看到价格之前让用户登陆、注册。 App内购，产品类型不对。 内购没有Restore按钮； 有登陆注册功能，但没有提供测试账户（大意了） 有去除广告的按钮，但没发现有广告。(后来截了个图，回复审核那边，两小时之内就通过审核了) 版权问题。没有提供相关的版权文件 评级问题：提交的时候是评级4星，后来被拒，改成12星，通过审核了。 关键字不符合要求 内容太简单，说是浪费用户时间 界面风格不符合iOS风格 应用评级，从4+改成12+，再改成16+最后说我不符合16+，我再改回4+，竟然过了... Splash上放了个蝙蝠侠蜘蛛侠，版权问题未给通过，后让UI改画了一个猥琐男人，通过了。 应用内有个保存图片至相册的按钮，然后plist里有个Application supports iTunes file sharing设为了yes，无情被拒。 用户在应用里自己下载的文档都不能存放在Document文件夹下，被拒。 为了获得审查应用程序的完整功能，我们需要相关的硬件。 我以前都是录制一个操作视频上传然后就通过了，这回我录了2次都是相同的回复，不知道抽什么风。 做了款社交的软件，上线的时候没有提供账号和密码，导致审核的时候进不去,reject. ps:那么大个注册 看不到么？看不到么？ 论坛模块里由用户发的活动贴提到安卓平台和WP平台被拒，然后我说我没问题，他说三个工作日之内电话联系，过去4-5天了，还没联系。 按钮位置不符合ios风格。 一个笑话APP，开机画面上有“逗比”这两个字，苹果审核说含有粗俗不文明的文字，然后被拒了。 QQ登陆功能，但是没下载QQ就不行。  第一次没有给用户举报的功能。加了只有新浪和qq登录没有自己的登录注册系统（QQ SDK的没装QQ提示的是下载）。好像还有没有用户协议巴拉巴拉，反正那次审核就耗一月的时间。 审核人员打开app无法加载内容，一般是因为国内服务器的问题。解决方法是录个app的操作视频，放到youtube上，发给苹果，屡试不爽。 界面太丑被拒，换了张背景图通过了。 iPad 写成了IPad。 没提供注册功能，被拒...开放注册通过； 按钮图片类似iPhone桌面图标被拒； 因为iCloud云备份的问题被拒绝，将备份功能关闭通过。 使用第三方SDK，有个提示信息遮挡了状态栏。 图片上有链接。 因为有android关键字被拒绝了，因为描述中有android关键字被拒绝了，因为有swfit关键字是个没发布的语言被拒绝了。因为按钮点击无效被拒绝了。 内容包含苹果产品iPad 有竖中指的图片 IDFA展示广告没有提供视频  注册页未添加pravicy声明文件。 iTunes升级后，分级莫名奇妙由12+变成了4+。 用了显眼的词语,其实就是"Beautiful girl"之类的，说内容令人反感。 引导页文案与内容不符。 因为应用截图被拒。美术偷懒给了4张android的截图，虽然app内容是一样的，但是顶部的状态栏是Android的！ 名字不符合，包含不良信息，包含与当前app不符的内容，包含特殊含义的歧义字符 App中有积分墙 App中有第三方支付(如短信支付，积分墙支付) App的功能过于单一或仅仅是一个demo 在注册时强制获取用户信息 需要提供原作者的版权授权书 App中有IAP内购，但是没有恢复内购的按钮 强制玩家给App评5星好评 没有兼容iOS 做了一款智能家居的应用，没有提供应用控制智能设备的视频地址没拒，每一次提交新版都要确保你的视频地址是否有效，有一次我就没有确认(YouTube的个人视频上传之后如果不设置成公共视频过一段时间就会转为私有的，除了自己别人无法访问)，然后视频地址刚好无效了。。。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 iOS多线程与网络开发之NSURLCache 下一篇 Photoshop CS6最新官方正式中文破解版（32位、64位） 顶 10 踩 0 我的同类文章 从零开始iOS8编程 （52） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261991次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 16
URL:: http://blog.csdn.net/haomengzhu/article/details/50072563

ParseText::
Photoshop CS6最新官方正式中文破解版（32位、64位） - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Photoshop CS6最新官方正式中文破解版（32位、64位） 标签： photoshop 破解 Adobe Photoshop CS6 2015-11-27 17:03 856人阅读 评论 (1) 收藏 举报 分类： 软件开发 （5） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 Photoshop是强大的图形处理软件，在前端开发领域中，主要用于页面的图形设计与网站UI切图。 目前最新版为Adobe Photoshop CS6 在CS6中整合了其Adobe专有的 Mercury图像引擎，通过显卡核心GPU提供了强悍的图片编辑能力。 但是相对于CS5来说，操作上发生了一定程度的变化，所以建议使用时仔细查看说明文档。 此次提供的版本为官方正式中文版，非汉化版、精简版、绿色版。包含Photoshop CS6中的所有组件与素材。 安装时请断开网络，并选择安装试用版。待软件全部安装完毕后，将下载的破解补丁解压，并复制到软件根目录，替换相应文件即可完成破解。 Photoshop CS6最新官方正式中文破解版（32位、64位） Adobe CS6全系列通用破解补丁（32位、64位） 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 为什么你要拒绝我 ——苹果AppStore被拒理由大全 下一篇 Dreamweaver CS6最新官方正式中文破解版（32位、64位） 顶 1 踩 0 我的同类文章 软件开发 （5） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261984次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 17
URL:: http://blog.csdn.net/haomengzhu/article/details/50072637

ParseText::
Dreamweaver CS6最新官方正式中文破解版（32位、64位） - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Dreamweaver CS6最新官方正式中文破解版（32位、64位） 标签： dreamweaver 32位 64位 破解 2015-11-27 17:09 583人阅读 评论 (0) 收藏 举报 分类： 软件开发 （5） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 Dreamweaver 是前端开发的必备软件，没有之一。 目前最新版本为CS6，与CS5相比多了对HTML5、CSS3、jquery的关联支持，可以更方便的在Dreamweaver中编写前端代码。 这里提供的是官方正式中文版下载（不提供绿色版、精简版），非汉化版。 安装时请断开网络，并选择安装试用版。待软件全部安装完毕后，将下载的破解补丁解压，并复制到软件根目录，替换相应文件即可完成破解。 Dreamweaver CS6最新官方正式中文破解版（32位、64位） Adobe CS6全系列通用破解补丁（32位、64位） 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 Photoshop CS6最新官方正式中文破解版（32位、64位） 下一篇 [Cocos2d-x/iOS源码]<诸神的挑战>三消新玩法 顶 1 踩 0 我的同类文章 软件开发 （5） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261998次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 18
URL:: http://blog.csdn.net/haomengzhu/article/details/50134197

ParseText::
[Cocos2d-x/iOS源码]<诸神的挑战>三消新玩法 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] [Cocos2d-x/iOS源码]<诸神的挑战>三消新玩法 标签： app store 源码 64位 cocos2d-x 三消 2015-12-01 20:02 1050人阅读 评论 (0) 收藏 举报 分类： 新游戏开发 （6） 作者同类文章 X 萌主的”人生“ （15） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 [源码下载] 代码引擎：cocos2d-x， Xcode【完美支持arm64，可直接发布AppStore】 下载链接： http://dwz.cn/2g3OZb [游戏信息] 游戏名称：《诸神的挑战》 游戏平台：iPad、iPhone、android 游戏类型：益智、策略 游戏类别：单机游戏 操作方式：点击，划动屏幕 美术风格：美式卡通 [游戏简介] 游戏的基础玩法基于“宝石迷阵”，符合三个一消，两个一换的原则，并加入RPG元素， 在原基础上增加“回合制”战斗模式，使游戏的趣味性大大提高。 你将选择扮演一名勇敢的斯巴达勇士或精灵女巫， 在风景如画的希腊大陆上冒险并向希腊天宫诸神发起挑战， 解救水生火热的人类同胞。 [游戏特色] ★角色扮演 本作在传统的对对碰游戏中，加入了角色扮演与战斗元素， 游戏的目的已经不仅仅是消除方块，而是要通过攻击和释放魔法来击败对手。 ★多个消除奖励 当出现“四个一消”或者“五个一消”的情况下，当前消除产生的效果为 三个一消的两倍或五倍。当一次性消除4个或4个以上相同图案时，当前行动方将获得额外一次行动机会。 ★装备系统 在游戏中角色可以装备不同的装备，不同的武器和副手装备将给玩家提供不同的 被动技能，玩家装备帽子和饰品则可以让玩家可以使用特有的魔法技能。 ★无尽之塔 在游戏中当玩家完成主线剧情后可以进入无尽之塔内继续游戏，玩家可以在这接受更多的挑战，获得更多的乐趣。 游戏截图： 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 Dreamweaver CS6最新官方正式中文破解版（32位、64位） 下一篇 [iOS]解决pod search的仓库版本低于github仓库版本的方法 顶 1 踩 0 我的同类文章 新游戏开发 （6） 萌主的”人生“ （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261987次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 19
URL:: http://blog.csdn.net/haomengzhu/article/details/50245887

ParseText::
[iOS]解决pod search的仓库版本低于github仓库版本的方法 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [iOS]解决pod search的仓库版本低于github仓库版本的方法 标签： github ios pod Cocoapods 第三方开源库 2015-12-10 10:13 497人阅读 评论 (0) 收藏 举报 分类： MAC and Xcode全攻略 （9） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 问题描述 我们在用 Cocoapods 做第三方开源库管理的时候，有时候发现 $ pod search XXX 版本低于github上仓库的最新release版本 （注：XXX为仓库名称） 解决方法 升级Cocoapods版本 查看当前系统Cocoapods版本命令: pod --version 升级方法 $ sudo gem update --system $ gem sources --remove https://rubygems.org/  $ gem sources -a http://ruby.taobao.org/  $ sudo gem install cocoapods $ pod setup 其中 $ gem sources --remove https://rubygems.org/  $ gem sources -a http://ruby.taobao.org/  这两句话可以省略，但我们在天朝，还是加上的好。国内网络原因（你懂的）. 如果使用原来的https://rubygems.org/，那么在sudo gem install cocoapods的时候，存放在 Amazon S3 上面的资源文件间歇性连接失败。 升级结束后再次pod --version，会发现 Cocoapods 版本号高于之前的版本，升级成功了。 再次 $ pod search XXX OK，github仓库的最新版已经有了。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 [Cocos2d-x/iOS源码]<诸神的挑战>三消新玩法 下一篇 [iOS]iOS获取设备信息常用方法 顶 3 踩 0 我的同类文章 MAC and Xcode全攻略 （9） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261986次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 20
URL:: http://blog.csdn.net/haomengzhu/article/details/50246167

ParseText::
[iOS]iOS获取设备信息常用方法 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [iOS]iOS获取设备信息常用方法 标签： ios systemVersion 设备信息 UIDevice userInterfaceIdiom 2015-12-10 10:30 577人阅读 评论 (0) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 1. 常用方法 NSLog(@"HostName: %@", [[NSProcessInfo processInfo] hostName]); //globallyUniqueString 唯一的标示符，每次调用都会不一样，可以用作一些临时缓存文件的名字 NSLog(@"GlobalUniqueString: %@", [[NSProcessInfo processInfo] globallyUniqueString]); //操作系统名称 NSLog(@"OperatingSystemName: %@", [[NSProcessInfo processInfo] operatingSystemName]); //操作系统版本 NSLog(@"OperatingSystemVersion: %@", [[NSProcessInfo processInfo] operatingSystemVersionString]); //物理内存 NSLog(@"PhysicalMem: %llu", [[NSProcessInfo processInfo] physicalMemory]); //进程名称 NSLog(@"ProcessName: %@", [[NSProcessInfo processInfo] processName]); //供应商标识 NSLog(@"UniqueId: %@", [UIDevice currentDevice].identifierForVendor); //设备类型（iPhone、iPad） NSLog(@"userInterfaceIdiom: %d", [UIDevice currentDevice].userInterfaceIdiom); //设备名字 NSLog(@"Name: %@", [UIDevice currentDevice].name); //系统名字 NSLog(@"SystemName: %@", [UIDevice currentDevice].systemName); //系统版本 NSLog(@"SystemVersion: %@", [UIDevice currentDevice].systemVersion); //模型 NSLog(@"Model: %@", [UIDevice currentDevice].model); //本地化的模型 NSLog(@"LocalizeModel: %@", [UIDevice currentDevice].localizedModel); //电池状态 NSLog(@"BatteryLevel: %f", [UIDevice currentDevice].batteryLevel); 2. 判断设备是否是9.0以上系统 [[[UIDevice currentDevice] systemVersion] floatValue] >= 9.0f 注意： 假如我们的设备版本号为9.1.1（为字符串类型），对其进行floatValue浮点化后值为9.100000。 3. 判断设备是否是iPhone、iPad iPad：[[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad iPhone: [[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone UIUserInterfaceIdiom in UIDevice.h typedef NS_ENUM(NSInteger, UIUserInterfaceIdiom) { #if __IPHONE_3_2 <= __IPHONE_OS_VERSION_MAX_ALLOWED UIUserInterfaceIdiomPhone, // iPhone and iPod touch style UI UIUserInterfaceIdiomPad, // iPad style UI #endif }; 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 [iOS]解决pod search的仓库版本低于github仓库版本的方法 下一篇 iOS上那些好用的VPN应用 顶 5 踩 0 我的同类文章 从零开始iOS8编程 （52） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261985次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 21
URL:: http://blog.csdn.net/haomengzhu/article/details/50273231

ParseText::
iOS上那些好用的VPN应用 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 iOS上那些好用的VPN应用 标签： vpn ios 网际直通车 GreenVPN ArkVPN 2015-12-12 10:34 803人阅读 评论 (0) 收藏 举报 分类： MAC and Xcode全攻略 （9） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 我的iPhone上有一页屏幕，每每划过总是有一种淡淡的忧伤。这满屏的app，占据着我生活的一部分时间，但是，如果我不交点额外的网费，或者花一番功夫修正网络，让它们好好上网的话，它们将顽皮到让你整个人都好不起来。 尽管除了VPN，还有很多iOS的科学上网方式，高大上如 APN ，极客范如Anyconnect或 Shadowsocks ，亦或是技术宅DIY各种梯子，不过，对于我等网络小白来说，最为接近的方式还是VPN。 那么，问题来了，iOS上VPN哪家强？ Appstores上搜“vpn”，可以看到一大堆xxxVPN和VPNxxx之类的，X来X去，不禁让人眼花缭乱。海外进口的XXXVPN，如Astrill、VyprVPN、ExpressVPN，逼格较高，一般$9/month起步，如果习惯英文倒也不错，但是还得自己有一定的折腾能力，他们都是面向全球用户的，大部分并没有针对国内用户进行优化和本地化支持。其中可能仅有Astrill是做得比较好的，如果你就是不喜欢国货，那么可以尝试看看，本人英语略渣，只能投奔国货怀抱。 那么国内商家怎么样？国内XXVPN也是多如牛毛，其中坑货着实不少，有打了免费的招牌，混迹一段时间然后就玩消失的诸如50vpn，也有一些内嵌各种广告的，还有的是长期连接不上逗你没商量型，这些开发者专注于吸引眼球，没看出是在做一款好应用。观察和使用下来，真正在用心做产品、不断更新的，我个人的推荐是GreenVPN，ArkVPN和网际直通车这3家。 1. GreenVPN GreenVPN是国内做得非常早的VPN商家，其风格偏向于低调沉稳，在VPN服务器方面有着长久的积累，其iOS上的表现也着重于简洁和稳定，没有华丽的界面，也有不少小问题，不过最近升级后，体验提升了很多，看得出一直在努力改进中。 正牌官网 （带尾巴，不喜勿点，网上各种山寨） 大小： 11.0 MB 语言: 简体中文, 英语 开发商: Evergreen Online Limited 直达Appstore下载地址 GreenVPN这次更新后最大的特点是，界面更加简洁了，考虑了很多小白用户的需求，打开app后，无需注册即可进入，app内点击一下即可连接，无需再进入系统设置，体验非常棒。这也是iOS8带来的新特性。 对于新用户，注册后即可免费使用10天，通过签到每天可以增加24小时，基本上可以长期免费使用。内购升级为付费用户后，所有套餐都是不限流量的，可以选择世界各地的服务线路，也更为稳定。客户支持方面，app内提供了中文的QQ客服，随时可以解决问题，这点很难得。 2. 网际直通车（VPN express） 有个国外的ExpressVPN，与这个毫无关系。网际直通车应该算是appstore上比较早的VPN应用，如果你曾经需要用到VPN，那么很可能下载过网际直通车。 大小： 4.8 MB 语言: 简体中文, 繁体中文, 英语 开发商: John Jiang 直达Appstore下载地址 直通车使用必须先注册，注册后会有免费的300M流量，然后可以通过app内“奖励”页面的各种签到/抽奖来获得更多免费流量。 直通车也支持应用内连接，服务器选择方面比Green少了很多，不过直通车提供了流量套餐，对于使用频度不高的人来说，更加经济。通过邮件提供服务支持，问题解决效率会低一些。 3. ArkVPN 相较于前面2家，ArkVPN是上线2个月的新兵蛋子，不过上线后马上获得了很多好评，界面简洁直观，同样支持应用内连接。 ArkVPN官网 大小： 3.2 MB 语言: 简体中文, 繁体中文, 英语 开发商: Cloud Ark Technology Limited 直达Appstore下载地址 ArkVPN采用签到的形式，每天提供一次签到的机会，每次签到可以获得20分钟-10小时的免费使用时间，永不过期。 ArkVPN服务线路不区分免费和收费，一共有6个国家。没有提供联系方式。订阅后可以免费试用1个月。 总的来说，如果偶尔希望免费用一下，上面3家都可以满足，直通车最近貌似有点问题，投诉比较多。如果需要稳定的科学上网工具，可以考虑付费，花的是金钱，省的是时间。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 [iOS]iOS获取设备信息常用方法 下一篇 使用Xcode查找项目中的中文字符串 顶 1 踩 0 我的同类文章 MAC and Xcode全攻略 （9） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261997次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 22
URL:: http://blog.csdn.net/haomengzhu/article/details/50311025

ParseText::
使用Xcode查找项目中的中文字符串 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 使用Xcode查找项目中的中文字符串 标签： xcode NSLocalizedString 国际化 中文字符串 Find Navigator 2015-12-15 10:11 469人阅读 评论 (0) 收藏 举报 分类： MAC and Xcode全攻略 （9） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 项目刚启动的时候 我们一般为了快速开发，会在使用字符串的时候直接选择硬编码到代码中。 比如： self .lblTime .text = @"1分钟前" ; 但是之后，如果有国际化的需求的话，我们又会改成这样： self .lblTime .text = NSLocalizedString ( @"one_min_ago" , @"1分钟前" ); 不过随着代码越来越多，不免有疏漏。 所以有时我们要去搜索一些漏网之鱼 ，这里分享一个快捷的方法： 打开”Find Navigator”  切换搜索模式到 “Find > Regular Expression”  输入@"[^"]*[\u4E00-\u9FA5]+[^"\n]*?" (swift请去掉”@” 输入@"[^"]*[\u4E00-\u9FA5]+[^"\n]*?"就好了) 看看效果 如果你跟我一样嫌NSLocalizedString的comment碍事 也可以用正则替换掉 Find NSLocalizedString\((@"[^\)]*?")\s*,\s*@"[^\)]*"\s*\) Replace With NSLocalizedString\($1, nil\) 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 iOS上那些好用的VPN应用 下一篇 [iOS]APP代码实践：建立一个辅助的APP类,减少对AppDelegate的修改 顶 1 踩 0 我的同类文章 MAC and Xcode全攻略 （9） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261996次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 23
URL:: http://blog.csdn.net/haomengzhu/article/details/50311591

ParseText::
[iOS]APP代码实践：建立一个辅助的APP类,减少对AppDelegate的修改 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [iOS]APP代码实践：建立一个辅助的APP类,减少对AppDelegate的修改 2015-12-15 10:32 532人阅读 评论 (0) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 最开始接触iOS开发的时候,如果需要一些全局变量或者全局函数的时候,总是直接在 AppDelegate 中添加,因为 AppDelegate 可以直接获取 1 [ UIApplication sharedApplication] .delegate 但是时间长了还是觉得这样不太好, AppDelegate 本身有其自己的作用(对于App本身的一些事件进行处理,如启动,切换,推送),这样做感觉怪怪的,所以还是自己弄一个专门处理我们所需的全局变亮或者全局函数的对象会更好一些 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 //APPHelper.h @interface APPHelper + (APPHelper*)call; - ( void ) configureWindow:( UIWindow *)window; @property ( nonatomic , readonly ) AppDelegate *delegate; @property ( strong , readonly ) UIWindow *window; @end //APPHelper.m @interface APPHelper () @end @implementation APPHelper - ( id )init { self = [ super init]; if ( self ) { _delegate = (GGAppDelegate*)[ UIApplication sharedApplication] .delegate ; } return self ; } + (APPHelper *)call { static dispatch_once_t onceQueue; static APPHelper *appInstance; dispatch_once (&onceQueue, ^{ appInstance = [[APPHelper alloc] init]; }); return appInstance; } - ( UIWindow *)window { return self .delegate .window ; } - ( void )configureWindow:( UIWindow *)window { UINavigationController *nav = [[ UINavigationController alloc] init]; ... ... ... window .rootViewController = nav; } @end 然后 在预编译头 *.pch 中加入 1 2 3 4 #import "AppHelper.h" #define APP ([APPHelper call]) 就可以直接在代码的任意一个地方直接使用此类了,如 1 2 3 4 //设置APP为圆角 APP .window .layer .cornerRadius = 5.0 f; APP .window .layer .masksToBounds = YES ; 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1

Recno:: 24
URL:: http://blog.csdn.net/haomengzhu/article/details/50311847

ParseText::
[iOS]iOS的字号转换问题 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [iOS]iOS的字号转换问题 标签： ios px pt 字体 GetDeviceCaps 2015-12-15 10:49 502人阅读 评论 (0) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 一，px和pt转换 px:相对长度单位。像素（Pixel）。（PS字体） pt:绝对长度单位。点（Point）。（iOS字体） 公式如下： pt=(px/96)*72。 二，字体间转换 1in = 2.54cm = 25.4 mm = 72pt = 6pc 具体换算是：  Points     Pixels    Ems     Percent  6pt        8px      0.5em     50%     7pt        9px      0.55em    55%     7.5pt      10px     0.625em   62.5%     8pt        11px     0.7em     70%     9pt        12px     0.75em    75%     10pt       13px     0.8em     80%     10.5pt     14px     0.875em   87.5%     11pt       15px     0.95em    95%     12pt       16px     1em       100%     13pt       17px     1.05em    105%     13.5pt     18px     1.125em   112.5%     14pt       19px     1.2em     120%     14.5pt     20px     1.25em    125%     15pt       21px     1.3em     130%     16pt       22px     1.4em     140%     17pt       23px     1.45em    145%     18pt       24px     1.5em     150%     20pt       26px     1.6em     160%     22pt       29px     1.8em     180%     24pt       32px     2em       200%     26pt       35px     2.2em     220%     27pt       36px     2.25em    225%     28pt       37px     2.3em     230%     29pt       38px     2.35em    235%     30pt       40px     2.45em    245%     32pt       42px     2.55em    255%     34pt       45px     2.75em    275%     36pt      48px      3em       300%   3、像素与毫米的转换  转换还需要知道另一个参数：DPI（每英寸多少点）  象素数 / DPI = 英寸数  英寸数 * 25.4 = 毫米数  对于显示设备，不管是打印机还是屏幕，都有一种通用的方法  先用GetDeviceCaps(设备句柄，LOGPIXELSX)  或者  GetDeviceCaps(设备句柄，LOGPIXELSY)获得设备每英寸的像素数  分别记为：px 和 py  一英寸等于25.4mm  那么毫米换算成像素的公式为   水平方向的换算： x * px /25.4  垂直方向的换算： y * py /25.4  像素换算为毫米 x * 25.4 / px  在程序中这么写  MyControl.Height := 10{mm} * PixelsPerInch * 10 div 254;  分子和分母同乘以10，将浮点数运算转化为整数运算，效率更高  常用的1024x768或800x600等标准的分辨率计算出来的dpi是一个常数：96，因此计算出来的毫米与像素的关系也约等于一个常数：  基本上 1毫米 约等于 3.78像素 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 [iOS]APP代码实践：建立一个辅助的APP类,减少对AppDelegate的修改 下一篇 [iOS]iOS APP上架流程 顶 1 踩 0 我的同类文章 从零开始iOS8编程 （52） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261990次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 25
URL:: http://blog.csdn.net/haomengzhu/article/details/50312201

ParseText::
[iOS]iOS APP上架流程 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [iOS]iOS APP上架流程 标签： ios app 上架 App Store Member Center 2015-12-15 11:04 720人阅读 评论 (0) 收藏 举报 分类： 从零开始iOS8编程 （52） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 前言：作为一名iOS开发者，把开发出来的App上传到App Store是必须的。下面就来详细介绍下具体流程。 1.打开苹果开发者中心： https://developer.apple.com 打开后点击：Member Center 如果你的电脑没有保存密码，则会提示你输入开发者帐号和密码，因为我的电脑已经保存了，所以直接进入。 2.点击：Certificates, Identifiers & Profiles 3.点击Devices 一.创建App IDs和Boudle ID 4.点击App IDs，会进入如下界面，点击右上角的 + 号 5.填写App IDs和Boudle ID 6.点击continue 7.点击Submit 8.点击Done 二.创建发布证书（若已创建过发布证书，现在用的是p12文件，可直接跳到第21步） 9.点击Production后，点击 + 号 10.点击App Store and Ad Hoc 11.点击Continue 12.点击Continue 创建本地证书 13.此时返回到桌面，在点开LaunchPad，在其他中找到钥匙串访问，切记不要关闭浏览器 14.打开钥匙串访问，点击电脑左上角的钥匙串访问–证书助理–从证书颁发机构请求证书 15.会出现如下界面，选择存储到磁盘，点击继续 16.选择存储到桌面，存储 17.点击完成 18.你会在桌面上看到下面的文件 19.然后回到浏览器，点击choose File.. 选择创建好的：CertificateSigningRequest.certSigningRequest 文件，点击Generate 20.点击Download下载创建好的发布证书（cer后缀的文件），然后点击Done，你创建的发布证书就会存储在帐号中。 注：一般一个开发者帐号创建一个发布证书就够了，如果以后需要在其他电脑上上架App，只需要在钥匙串访问中创建p12文件，把p12文件安装到其他电脑上。这相当于给予了其他电脑发布App的权限。 创建PP文件 21.找到Provisioning Profiles ，点击All，然后点击右上角 + 号 22.选择App Store，点击Continue 23.在App ID 这个选项栏里面找到你刚刚创建的：App IDs（Bundle ID） 类型的套装，点击Continue 24.选择你刚创建的发布证书（或者生成p12文件的那个发布证书），点击Continue 25.在Profile Name栏里输入一个名字（这个是PP文件的名字，可随便输入，在这里我用工程名字，便于分别），然后点击Generate 26.Download生成的PP文件，然后点击Done 在App Store开辟空间 27.回到Member Center，点击iTunes Connect 28.点击我的App 29.点击新建 iOSApp 30.依次按提示填入对应信息，然后点击创建 31.依次把不同尺寸的App截图拉入到对应的里面 32.填入App简介 33.按提示依次输入 34.此时这个构建版本还没有生成，我们先把基本信息填写完毕，然后再进入Xcode中把项目打包发送到过来。 注意：填写完一定要点击右上角的保存。 在Xcode中打包工程 找到你刚刚下载的发布证书（后缀为.cer）或者p12文件，和PP文件，双击，看起来没反应，但是他们已经加入到你的钥匙串中。 35.在Xcode中选择模拟器为iOS Device，按照下图提示操作 36.修改.plist文件，两个.plist文件都要修改 37.然后发送到我的App 38.发送成功后返回到我对App，刷新页面，在构建版本处就会有个 + 号，点击 + 号把发送过来的程序添加上去就行了 39.然后在定价处设置你的App上架后是免费还是收费。 40.回到我的App，点击发布就ok了。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 [iOS]iOS的字号转换问题 下一篇 [Xcode 7.2]Xcode菜单栏之你不知道的那点事 顶 2 踩 1 我的同类文章 从零开始iOS8编程 （52） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261994次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城

Recno:: 26
URL:: http://blog.csdn.net/haomengzhu/article/details/50312597

ParseText::
[Xcode 7.2]Xcode菜单栏之你不知道的那点事 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [Xcode 7.2]Xcode菜单栏之你不知道的那点事 标签： xcode 7.2 Menu 菜单栏 iOS 2015-12-15 11:25 589人阅读 评论 (0) 收藏 举报 分类： MAC and Xcode全攻略 （9） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 本文调研Xcode的版本是 7.2，基本是探索了菜单的每一个按钮。虽然从xcode4一直用到了xcode7，但是一般都只是用了一些基础的功能，其实菜单的按钮并不都是没有用，而是很有用只是你不知道罢了。   下面划了删除线的选项是太基础的选项可以忽略， 标红的选项是需要注意的 。 Xcode - Menu  File:   New : 可以新建tap,窗口，新文件，playground，workspace，target等等。 Add Files to XX: 为这个项目中引入文件 Open ：打开文件 Open Recent  ：打开最近的打开的项目或者工作组 Open Quickly  ：通过搜索文件名快速打开一个文件 Close ：这几个选项的都是关闭操作。 Save ：保存 Duplicate：复制 Revert  to Saved：将此文件的修改直接回退到上次保存时 Unlock ：要对第三方库或系统文件进行修改时解锁 Show in Finder ：在Finder 中展示 Open with External Editor  ：使用外部编辑器打开 Save As Workspace： 另存为工作组 Page Setup ：页面设置，为打印而生 Print… ：用打印机打印当前文件    Edit:   Undo: 撤销 Redo ：反撤销 Cut ：剪切 Copy ：拷贝 Paste ：粘贴 Special Paste ：特殊粘贴 ?? Paste and Preserve formatter ：粘贴并匹配样式 Duplicate :复制 Delete :删除 Select All :全选 Filter : 筛选，可以选择在导航栏中筛选和在库中筛选 Sort：排序 (还不知道怎么用) Format ：格式           Font ：可以打开字体和颜色的设置框，可以copy样式。           Text ：可以设置编码的页面左右对齐， 显示顶部标尺 。           Spelling and Grammar ：拼写提示和语法提示。           Substitutions：会出来个仪表盘，提供微操。            Transformations ：可以将英文转成全大写，全小写，首字母大写。           Speech ：开始说话结束说话。 Refactor: 重构           Rename 重命名           Extract 提取           Create Superclass  创建超类           Move Up 上移           Move Down 下移 Convert：转换成ARC,swift等 Encapsulate 封装 Start Dictation: 开始听写 Emoji & symbols：emoji表情和特殊符号                                         View:   Standard Editor ：标准模块 Assistant Editor ：助理模块 Version Editor： 版本模块 Navigators：里面包含了xcode左边8个导航模块的切换。 Debug Area：中下部的调试框和打印输出框。 Untilities: xcode右边的上面两个选项和下面的四个选项。           Show File Inspector：显示文件检查           Show Quick Help Inspector：显示快速帮助           File Template Library  文件模板库           Code Snippet Library  代码片段库           Object Library  对象库           Media Library  媒体库           Hide Utilities  隐藏实体工具 Hide Toolbar  隐藏工具栏（XCode顶部） Hide Tab Bar  隐藏标签栏（用了cmd+T出来的tab切换） Enter Full Screen：全屏                Find:   Find in Workspace… 在工作组中查找 Find and Replace in Workspace… 在工作组中查找和替换 ... 上面4个是在哪地方查找或替换，中间4个是在你几个选中的文件或组中查找， 再下面4个是查找或替换，然后是替换。 Find Call Hierarchy：查找到调用层级。 Hide Find Bar：隐藏查找栏 Use Selection for Find ：使用选择的地方去查找 Use Selection for Replace：使用选择的地方去替换    Navigate:   Reveal in Project Navigator ：在项目导航中揭示出此文件 Reveal in Symbol Navigator  ：在符号导航中揭示出某方法 Open in Assistant Editor：用分屏助理打开 Open in ..   你想怎么打开 Move Focus To Next Area  将焦点移动到下一个区域 Move Focus To Editor   将焦点移动到编辑器 Go Forward  前进，相当于两个手指左划右划 Go back  后退 Jump to Selection 跳转到选择 Jump to Definition 跳转到定义 Jump to OriginalSource 跳到源文件 Jump to Next Issue  跳转到下一个问题 Jump to Previous Issue  跳转到上一个问题 Jump to Next Counterpart  ：?? Jump to Previous Counterpart : ?? Jump to Line in xxx.m ：跳到这个文件的第几行。 Jump to Next Placeholder ：?? Jump to Previous Placeholder：??              Editor:(选中文件状态下)   Show Completions : 显示自动补全 Edit All in Scope: 在当前文件全文修改选中的一个变量或单词 Fix All in Scope: 在当前文件自动处理他能解决的error，相当于点  Show issue: 展示错误和隐藏错误，相当于点左边的按钮  Issues: 可以控制展示全部错误警告，还是仅仅展示警告。 Structure: 构造 Balance Delimiter：直接选中光标所在的整个大括号 Re-Indent : 将格式缩进整理一下 这里还有四个，分别是往前或往后移一个tab，往上往下移一行 Code Folding: 提供各种折叠和取消折叠 Focus Follow Selection：高亮聚焦你光标所在的模块 Syntax Coloring: 设置各个语法的高亮配色 Show Invisibles: 显示所有隐藏的东西，比如空格。 Show Blame for Line: 显示选中的行的修改者和log。 Show Code Coverage: 展示代码的覆盖范围          Editor:(选中xib状态下)   Canvas 画布            Show Selection Highlights: 显示选中控件的高亮    Show Resize Knobs：显示约束旁边的小方块 Show Constraints ：显示约束 Show Involved Views For Selected Constraints：显示约束涉及到的视图           Show Layout Rectangles  布局矩形 Size Class: 屏幕布局相关，相当于点xib下面的按钮 Show Bounds Rectangles  显示边界矩形 Hide Document Outline：隐藏或显示左边的层级图 Reveal in Document Outline：在左边的层级图中揭示出来 Align  对准           Align Left Edges  左边缘对齐           Align Right Edges  右边缘对齐           Align Top Edges  顶部边缘对齐           Align Bottom Edges  底部边缘对齐           Align Horizontal Centers  横向中心对齐           Align Vertical Centers  竖向中心对齐           Align Baselines  基线对齐           Align Horizontal Center In Container   对齐容器中的水平中心           Align Vertical Center In Container   对齐容器中的垂直中心 Arrange : 可以上移下移或移到背景等 Embed ： 嵌入，可以嵌nav，tabbar，scrollView Unembed   解除嵌入 Size to Fit ：大小以适合 Snap to Guides：让引导线具有吸附功能，让控件靠近就自动对齐 Guides：设置引导标尺线 Add Horizontal Guide ： 添加横向标尺线 Add Vertical Guide ： 添加垂直标尺线 Automatically Refresh Views：自动刷新视图 Refresh All Views：刷新所有视图 Debug Selected Views：调试选中的视图？ Resolve Auto Layout issues：解决自动布局的问题，类似于点  Refactor to Storyboard：把VC重构成SB？                                      Product:   Run：运行 Test：?? Profile：打开instrument之类的 Analyze：进行代码分析，可以检测一些不规范的OC语法 Archive：归档 Build for：和上面的功能相似。 Perform Action：?? Build：编译 Clean：清一下之前编译的缓存 Stop：停止    Debug:   Pause : 暂停 会 切换成继续 Continue to Current Line：走到你光标选中的这行 Step Over ： 跨越 Step Into ：步入 Step Out ：走出 Step Over Instruction： 跨过指示 Step Over Thread ：单步执行在线程 Step Into Instruction ：步入指示 Step Into Thread ：单步执行线程 Capture GPU Frame: 捕获GPU位置 Simulate Location: 模拟模拟器的位置 Simulate Background Fetch: 让模拟器去后台 iCloud: 苹果云相关 View Debugging: 关于视图的调试 Take Screenshot of Active Device：截图 Capture View Hierarchy: 用3D图 来捕获视图层次 Show View Frame: 在模拟器上显示各个控件的尺寸大小 Show Alignment Rectangles: 显示对齐矩形 Show View Drawing: 显示查看绘图 Show Responsive Scrolling Status: 显示响应滚动状态 Deactivate Breakpoints  停用中断点。 Breakpoints: 相当于左下角的加号，增加各种断点。 Debug Workflow：可以显示内存和清除打印等操作。 Always Show Disassembly: 这要是勾上就只显示堆栈信息不看代码 Attach to Process by PID or Name: 设置权限id或name Attach to Progress: 附加到进程 Detach: 跳过所有的断点                              Source Control:   第一行是分支管理，可以创建分支合并分支，配置分支的源等等。 Create Working Copy：项目中如果有地方是引用的那就copy一下。 Checkout：可以选择切换分支。 Commit  ：提交 Push ： 上传代码 Pull ：拉代码 Refresh Status：刷新状态 Discard Changes ：放弃所有修改。 Add Selected Files : 将选中的这些问号文件add一下。 Discard Changes  in selected Files : 将选中的这些文件放弃修改。 Mark Selected  Files as Resolved: 相当于合并或rebase过程中的解决。 History：可以看当前分支的log历史。         Window: 

Recno:: 27
URL:: http://blog.csdn.net/haomengzhu/article/details/50312955

ParseText::
[iOS]iOS开发者账号申请与注册流程 - 郝萌主-Cocos2d-x、iOS - 博客频道 - CSDN.NET 郝萌主-Cocos2d-x、iOS 伟大是熬出来的，专注于移动应用和游戏开发的技术博客 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [iOS]iOS开发者账号申请与注册流程 标签： ios ios开发 开发者 developer 账号申请 2015-12-15 11:35 586人阅读 评论 (0) 收藏 举报 分类： MAC and Xcode全攻略 （9） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 首先你要登陆 这个网址 ,进去之后如下图   然后点击上方的Program如下图：     然后点击Enroll进去如下页面：     接下里点击start your enrollment 按钮选择你要注册的企业开发者账号类型如下图     之前你需要申请 D-U-N-S Number  具体流程如下（如果公司已经有D-U-N-S Number可以忽略此步） 1》点击上图种的learn more 按钮， 进入如下页面       2》点击D-U-N-S Number look up tool 按钮进入账号登陆界面，登陆你之前注册的Apple ID(如果没有注册，请先注册，注册Apple ID 此处就不赘述了)。然后你会进入如下页面：   对应将信息填写完整就OK，然后提交以后他们会给你发一份邮件，邮件的内容大意就是他们接下里会联系你确认你的公司信息。但是他们可能会很晚联系你，我建议你主动联系他们的客服400 820 3536，然后和他们客服确认完信息，一般当天就会把邓氏编码发送到你的邮箱，但是需要14个工作日以后才可以使用，接下来就是等待，大概半个月后你就可以继续接下来的步骤，紧接上面的选择完类型以后点击Continue按钮继续以下的步骤： 如果你是公司法人你直接选择第一个选项，如果是公司委派你你选择第二个选项，然后就是填写公司信息和个人信息以及联系方式（这里以公司委派为例）。具体如下图： 一定要确保信息填写准确，然后就可以提交，提交以后等待苹果的技术部的审核，审核期间苹果客服会联系你公司的座机来确认信息。审核完毕后苹果会给你发送邮件，你点击邮件里面的连接进行支付，然后你就注册完毕了！期间有任何问题你都可以联系苹果客服。 郝萌主倾心贡献，尊重作者的劳动成果，请勿转载。 如果文章对您有所帮助，欢迎给作者捐赠，支持郝萌主，捐赠数额随意，重在心意^_^  我要捐赠:  点击捐赠 Cocos2d-X源码下载： 点我传送 游戏官方下载： http://dwz.cn/RwTjl 游戏视频预览： http://dwz.cn/RzHHd 游戏开发博客： http://dwz.cn/RzJzI 游戏源码传送 ： http://dwz.cn/Nret1 上一篇 [Xcode 7.2]Xcode菜单栏之你不知道的那点事 顶 2 踩 0 我的同类文章 MAC and Xcode全攻略 （9） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 danielzzu 访问： 261982次 积分： 4750 等级： 积分：4750 排名： 第3201名 原创： 190篇 转载： 3篇 译文： 1篇 评论： 184条 博客公告 Name:郝萌主 QQ: 120641476 邮箱: imobfun@163.com 加我QQ好友 Cocos2d-x手游源码站 文章搜索 博客专栏 cocos2d-swift游戏开发实战 文章：1篇 阅读：1428 从零开始iOS8编程 文章：11篇 阅读：8125 Objective-C之成魔之路 文章：21篇 阅读：16167 cocos2d-x3.0游戏开发 文章：25篇 阅读：51565 左邻右舍 精品手游源码下载 小塔博客 文章分类 iOS编程之设计模式 (1) Objective-C之成魔之路 (21) 从零开始iOS8编程 (53) MAC and Xcode全攻略 (10) Cocos2dx 3.0游戏开发找小三 (26) cocos2d-x IOS游戏开发-捕鱼达人 (23) Cocos2d-X IOS游戏开发-城市跑酷 (20) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植 (12) 手游<进击的勇士>【cocos2d-x+json】 (6) 新游戏开发 (7) 软件开发 (6) 萌主的”人生“ (16) Cocos2d-X视频专辑+动作类游戏 (4) iOS开发之十万个为什么 (1) 文章存档 2015年12月 (10) 2015年11月 (3) 2015年08月 (5) 2015年07月 (13) 2015年06月 (30) 2015年01月 (1) 2014年12月 (3) 2014年11月 (31) 2014年10月 (5) 2014年07月 (2) 2014年06月 (13) 2014年05月 (16) 2014年03月 (1) 2014年01月 (1) 2013年12月 (59) 阅读排行 cocos2d-x 手游源码站 (6114) Cocos2d-x 手机游戏《疯狂的蝌蚪》源代码 “开源” win32+安卓+iOS三合一 (4222) 【cocos2d-x IOS游戏开发-城市跑酷1】跑酷游戏介绍 (4074) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植1：环境搭建及Parkour介绍 (3985) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植6：Running This Way (3840) Cocos2d-X游戏【泰然网《跑酷》】JS到C++移植5：初始化物理世界【Chipmunk】 (3703) [置顶]【cocos2d-x IOS游戏开发】2013年末开发及学习计划 (3581) 3、Cocos2dx 3.0游戏开发找小三之搭建开发环境 (3315) 【cocos2d-x IOS游戏开发-城市跑酷16】碰撞检测：撞墙 or 从房子上掉下来 (3183) 4、Cocos2dx 3.0游戏开发找小三之Hello World 分析 (3131) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)

Recno:: 28
URL:: http://blog.csdn.net/huyuyang6688/article/details/50339147

ParseText::
【SSH快速进阶】——Hibernate 多对一映射 和 一对多映射 - 点滴汇聚，智在积累。——Danny - 博客频道 - CSDN.NET 点滴汇聚，智在积累。——Danny Stay hungry . Stay foolish . 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 【SSH快速进阶】——Hibernate 多对一映射 和 一对多映射 标签： hibernate 多对一 一对多 ssh 映射 2015-12-22 11:42 206人阅读 评论 (1) 收藏 举报 分类： --------【SSH快速进阶】 （9） 作者同类文章 X ● 架构设计 （6） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 　　上两篇文章说了一对一映射，这里说一下多对一　和　一对多的映射情况。 　　 　　现实中有很多场景需要用到多对一或者一对多，比如上面这两个类图所展现出来的，一般情况下，一个部门会有多名员工，一名员工只在一个部门任职。 多对一关联映射 　　在上面的场景中，对于Employee来说，它跟Department的关系就是多对一。 　　PO对象 　　　Employee.java public class Employee { public int id; public String name; public Department department; //getter、setter } 　　　Department.java public class Department { public int id; public String name; //getter、setter } 　　配置多对一关系时，设计po类时，除了写出最基本的属性（比如Employee的id、name），在对应“多”的那个类（比如Employee.java）中添加对应“一”那个类的引用（比如上面的department）。 　　映射文件 　　　Employee.hbm.xml <hibernate-mapping package= "org.hibernate.test" > < class name = "com.danny.hibernate.Employee" table= "t_employee" > < id name = "id" type= "int" > <generator class = "native" /> </ id > < property name = "name" /> <many- to -one name = "department" column= "departmentid" /> </ class > </hibernate-mapping> 　　　Department.hbm.xml <hibernate-mapping package= "org.hibernate.test" > < class name = "com.danny.hibernate.Department" table= "t_department" > < id name = "id" > <generator class = "native" /> </ id > < property name = "name" /> </ class > </hibernate-mapping> 　　映射文件中的内容基本上跟它关联的类中的字段都是对应的。主键配置在 <id></id> 中，基本字段配置在 <property/> 中，对其他类的引用配置在 <many-to-one/> 中。 　　运行代码执行的建表语句为： alter table t_employee drop foreign key FKFDCF5A196E78D697 drop table if exists t_department drop table if exists t_employee create table t_department (id integer not null auto_increment, name varchar ( 255 ), primary key (id)) create table t_employee (id integer not null auto_increment, name varchar ( 255 ), departmentid integer , primary key (id)) alter table t_employee add index FKFDCF5A196E78D697 (departmentid), add constraint FKFDCF5A196E78D697 foreign key (departmentid) references t_department (id) 　　从建表语句中可以看出来，t_employee表中的外键departmentid与t_department表中的主键相关联。 　　生成的表结构如下： 　　 　　下面进行简单测试 　　 插入测试 session .beginTransaction () ; Department department=new Department() ; department .setName ( "信息部" ) ; Employee employee1=new Employee() ; employee1 .setName ( "小胡" ) ; employee1 .setDepartment (department) ; Employee employee2=new Employee() ; employee2 .setName ( "小玉" ) ; employee2 .setDepartment (department) ; session .save (employee1) ; session .save (employee2) ; session .getTransaction () .commit () ; 　　一执行，发现报错了： org.hibernate.TransientObjectException ，一看错误就知道，这是因为department还在Transient状态时，session是不能对其操作的。所以可以在事务提交之前先save一下department： session .beginTransaction () ; Department department=new Department() ; department .setName ( "信息部" ) ; Employee employee1=new Employee() ; employee1 .setName ( "小胡" ) ; employee1 .setDepartment (department) ; Employee employee2=new Employee() ; employee2 .setName ( "小玉" ) ; employee2 .setDepartment (department) ; session .save (department) ; session .save (employee1) ; session .save (employee2) ; session .getTransaction () .commit () ; 　　这样就可以成功插入了： 　　 　　还有一种更简单的方法，就是在映射文件Employee.hbm.xml的 <many-to-one/> 中配置 cascade 属性，值为 "save-update" ： 　　　Employee.hbm.xml <hibernate-mapping package= "org.hibernate.test" > < class name = "com.danny.hibernate.Employee" table= "t_employee" > < id name = "id" type= "int" > <generator class = "native" /> </ id > < property name = "name" /> <many- to -one name = "department" column= "departmentid" cascade= "save-update" /> </ class > </hibernate-mapping> 　　cascade表示两个对象之间的操作为联动关系，即对一个对象执行了操作之后，对其指定的级联对象也要进行相同的操作。Hibernate文档对cascade的解释为： 　　＂cascade（级联） (可选): 指明哪些操作会从父对象级联到关联的对象。它的值代表着Hibernate基本操作的名称， persist, merge, delete, save-update, evict, replicate, lock, refresh……＂ 　　 查询测试 session .beginTransaction () ; Employee employee=(Employee)session .load (Employee .class , 1 ) ; System .out .println ( "employee的name：" +employee .getName ()) ; System .out .println ( "department的name：" +employee .getDepartment () .getName ()) ; session .getTransaction () .commit () ; 　　测试结果： employee的 name ：小玉 department的 name ：信息部 一对多关联映射 　　既然Employee对Department的关系是多对一，那么反之，Department对Employee就是一对多的关系。 　　所以要在Department的PO类中增加一个Employee对象的集合。这个集合可以是set、list、map甚至array等容器，由于set中的对象不可重复，并且性能更高，所以一般用set。 　　PO对象 　　　Department.java public class Department { public int id; public String name; public Set<Employee> employees; //getter、setter } 　　　Employee.java public class Employee { public int id; public String name; //getter、setter } 　　映射文件 　　　Employee.hbm.xml <hibernate-mapping package= "org.hibernate.test" > < class name = "com.danny.hibernate.Employee" table= "t_employee" > < id name = "id" type= "int" > <generator class = "native" /> </ id > < property name = "name" /> </ class > </hibernate-mapping> 　　　Department.hbm.xml < hibernate-mapping package = "org.hibernate.test" > < class name = "com.danny.hibernate.Department" table = "t_department" > < id name = "id" > < generator class = "native" /> </ id > < property name = "name" /> < set name = employees > < key column = "departmentid" > </ key > <!-- "多"的一方关联"一"的一方的外键 --> < one-to-many class = "com.bjpowernode.hibernate.Employee" /> <!-- 一个Department对象对应多个Employee对象 --> </ set > </ class > </ hibernate-mapping > 　　映射文件Department.hbm.xml中添加了set标签，对应Department类中的集合employees，表示一个Department对象对应多个Employee对象。 　　 插入测试 session .beginTransaction () ; Employee employee1=new Employee() ; employee1 .setName ( "小玉玉" ) ; Employee employee2=new Employee() ; employee2 .setName ( "小洋洋" ) ; Set <Employee> employees=new HashSet<Employee>() ; employees .add (employee1) ; employees .add (employee2) ; Department department=new Department() ; department .setName ( "信息部" ) ; department .setEmployees (employees) ; session .save (employee1) ; session .save (employee2) ; session .save (department) ; session .getTransaction () .commit () ; 　　插入结果： 　　 　　 查询测试 session .beginTransaction () ; Department department=(Department)session .load (Department .class , 1 ) ; System .out .println ( "department的name：" +department .getName ()) ; System .out .println ( "department的employee有：" ) ; for(Employee employee:department .getEmployees ()){ System .out .print ( " " +employee .getName ()) ; } session .getTransaction () .commit () ; 　　控制台输出内容为： Hibernate: select department0_. id as id0_0_, department0_. name as name0_0_ from t_department department0_ where department0_. id =? department的 name ：信息部 department的employee有：Hibernate: select employees0_.departmentid as departme3_1_, employees0_. id as id1_, employees0_. id as id1_0_, employees0_. name as name1_0_ from t_employee employees0_ where employees0_.departmentid=? 小洋洋 小玉玉 　　由此可见，一对多的配置中，默认为延迟加载，相当于lazy=”true”。 　　给映射文件中 <set> 标签的属性 lazy 设置为 false 时，不会延迟加载，即查询Department的时候，会把属于该Department的Employee全部查询出来。控制台输出内容为： Hibernate: select department0_. id as id0_0_, department0_. name as name0_0_ from t_department department0_ where department0_. id =? Hibernate: select employees0_.departmentid as departme3_1_, employees0_. id as id1_, employees0_. id as id1_0_, employees0_. name as name1_0_ from t_employee employees0_ where employees0_.departmentid=? department的 name ：信息部 department的employee有： 小洋洋 小玉玉 比较 　　相同点：映射原理基本一致，建表时，都是在“多”的一端添加外键指向“一”的一端。 　　区别：维护的关系不同 　　多对一维护的关系：多指向一的关系，加载“多”的时候可以把“一”也加载出来； 　　一对多维护的关系：一指向多的关系，加载“一”的时候可以把“多”也加载出来； 【 转载请注明出处——胡玉洋 《【SSH快速进阶】——Hibernate 多对一映射 和 一对多映射》 】 博乐点评 一共有 1位 博乐进行推荐 u011225629    2015-12-24 08:50:53 关于Hibernate的一对多、多对一、一对一、多对多、等等一些列的关联关系，可以说是很让人头疼的事情，很容易将这些关系弄混，博主将这几篇博文讲解的简单明了，可以很快的分清这些关联关系的区别。 上一篇 【SSH快速进阶】——Hibernate一对一映射（one-to-one）——唯一外键关联 顶 0 踩 0 我的同类文章 --------【SSH快速进阶】 （9） ● 架构设计 （6） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 huyuyang6688 访问： 140359次 积分： 5808 等级： 积分：5808 排名： 第2305名 原创： 106篇 转载： 5篇 译文： 0篇 评论： 3466条 与我联系 【新 浪 微 博】 【网 易 博 客】 【Q Q  联 系】 【给 我 写 信】 文章搜索 博客专栏 SSH快速进阶 文章：10篇 阅读：3774 Java基础 文章：11篇 阅读：9874 ASP.NET 文章：6篇 阅读：8974 文章分类 ● 数 据 库 (1) --------【 数 据 库 】 (18) ● 编程语言 (1) --------【 V B 学 习 】 (5) --------【 .NET 实 战 】 (16) --------【 JAVA 积 累 】 (27) --------【 Web 前 端 】 (9) ● 架构设计 (7) --------【 大 数 据 】 (2) --------【 工 作 流 】 (0) --------【 UML 学 习 】 (5) --------【 面 向 对 象 】 (3) --------【 设 计 模 式 】 (3) --------【 软件设计师 】 (5) --------【 WCF 框 架 】 (0) --------【SSH快速进阶】 (10) --------【 Spring MVC 】 (0) --------【一起来学MyBatis】 (0) --------【 EntityFramework 】 (2) ● 其他分类 (1) --------【 项 目 实 战 】 (19) --------【 软 件 工 程 】 (3) --------【 计算机基础 】 (11) --------【 异 常 集 锦 】 (12) --------【 软件 || 工具 】 (5) --------【 学习 || 思考 】 (8)

Recno:: 29
URL:: http://blog.csdn.net/itfootball/article/details/48245137

ParseText::
react-native试玩(8)-列表视图 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 react-native试玩(8)-列表视图 2015-11-21 17:44 1030人阅读 评论 (0) 收藏 举报 分类： native （31） 作者同类文章 X react （37） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 ListView 属性 名称 类型 意义 默认值 dataSource ListViewDataSource 数据集 无 initialListSize number 设置第一页初始化的元素个数 无 onChangeVisibleRows function 当有元素的可见性发生改变的时候，该函数会被调用，(visibleRows, changedRows)参数代表了状态可见，状态改变的行，当visible为true时，代表滑入到视图，当visible为false表示滑出视图 无 onEndReached function 当所有元素展现完或着滑动结束后调用的函数 无 onEndReachedThreshold number 像素的临界值，该属性和onEndReached配合使用，因为onEndReached滑动结束的标志是以该值作为判断条件的 无 pageSize number 每一次循环事件显示的行数(暂没理解该意思) 无 removeClippedSubviews bool 提升性能的一个选项，是一解决溢出的方法，具体做法是隐藏行容器 无 renderFooter function 渲染底部 无 renderHeader function 渲染头部 无 renderRow function 渲染行 无 renderScrollComponent function 返回一个可滚动的组件 无 renderSectionHeader function 不祥 无 renderSeparator function 针对某一特殊元素进行渲染 无 scrollRenderAheadDistance number 渲染的时间 无 实例 'use strict' ; var React = require ( 'react-native' ); var { ListView, AppRegistry, StyleSheet, View, Text, } = React; var helloworld = React.createClass({ getInitialState : function () { var ds = new ListView.DataSource ({rowHasChanged: (r1, r2) => r1 !== r2}) ; return { dataSource : ds . cloneWithRows ([ 'row 1' , 'row 2' , 'row 3' , 'row 4' , 'row 5' , 'row 6' , 'row 7' , 'row 8' , 'row 9' ]) , }; }, render : function () { return ( <ListView dataSource={ this .state.dataSource} renderRow={(rowData) => <Text>{rowData}</Text>} initialListSize={ 5 } pageSize={ 1 } scrollRenderAheadDistance={ 20 } /> ) ; }, }); var styles = StyleSheet . create ({ }) ; AppRegistry . registerComponent ( 'hellowrold' ,() => helloworld) ; Android 适用于Android 上一篇 第一个Shell脚本-lint检查以及报告收集 下一篇 JS-网页中分页栏 顶 0 踩 0 我的同类文章 native （31） react （37） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331327次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 30
URL:: http://blog.csdn.net/itfootball/article/details/48786275

ParseText::
Android性能专项测试之Heap Snapshot工具 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android性能专项测试之Heap Snapshot工具 2015-10-09 17:25 1485人阅读 评论 (3) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Speed up your app Heap Snapshot能做什么? 获取Java堆内存详细信息，可以分析出内存泄漏的问题 Heap Dump启动 在内存面包中，点击图中红色标注的按钮，就会显示我们的Heap Snapshot面包 Heap Snapshot面板 Heap Snapshot详细信息面板 该面板里的信息可以有三种类型:app heap/image heap/zygote heap. 分别代表app 堆内存信息，图片堆内存信息，zygote进程的堆内存信息。 A区域 列举了堆内存中所有的类,一下是列表中列名: 名称 意义 Total Count 内存中该类的对象个数 Heap Count 堆内存中该类的对象个数 Sizeof 物理大小 Shallow size 该对象本身占有内存大小 Retained Size 释放该对象后，节省的内存大小 B区域 当我们点击某个类时，右边的B区域会显示该类的实例化对象，这里面会显示有多少个实体，以及详细信息。 名称 意义 depth 深度 Shallow Size 对象本身内存大小 Dominating Size 管辖的内存大小 当你点击某个对象时，将展开该对象内部含有哪些对象，同时C区域也会显示哪些对象引用了该对象: C区域 的某对象引用树对象，在这里面能看出其没谁引用了，比如在内存泄漏中，可以看出来它被谁引用，比如上图，引用树的第一行，可以看出来，该对象被Object[12]对象引用，索引值为1，那我们展开后，可以看到，该Object[12]是一个ArrayList. Android studio1.4的更新 1.4的面板有一些变化: 较之前添加了一个数据显示方式的选择，可以选择类名排列或者包名排列: 上一篇 Android性能专项测试之Network monitor 下一篇 Android性能专项测试之Batterystats 顶 2 踩 0 我的同类文章 Android性能 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331330次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 31
URL:: http://blog.csdn.net/itfootball/article/details/48915935

ParseText::
Android性能专项测试之Systrace工具 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android性能专项测试之Systrace工具 2015-10-08 16:17 1884人阅读 评论 (0) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Systrace Walkthrough Systrace Analyzing UI Performance with Systrace Speed up your app Systrace能做什么? 计算容器的性能 发现性能的瓶颈 Systrace的使用准备 4.1以上 root Android SDK Tools 20 python环境 Systrace启动 你可以通过命令行或者Device Monitor两种方式收集Systrace信息，以下以命令行为例介绍收集方式(因为我Device Monitor的方式报错)。 首先进入sdk下的platform-tools/systrace目录下: 然后在命令下执行以下命令来收集数据: python systrace.py --time=10 -o mynewtrace.html sched gfx view wm 上面的参数–time为间隔时间,-o为文件名，更详细的参数信息如下: 参数名 意义 -h,--help 帮助信息 -o <FILE> 保存的文件名 -t N,--time=N 多少秒内的数据，默认为5秒，以当前时间点往后倒N个时间 -b N,--buf-size=N 单位为千字节,限制数据大小 -k <KFUNCS> --ktrace=<KFUNCS> 追踪特殊的方法 -l,--list-categories 设置追踪的标签 -a <APP_NAME>,--app=<APP_NAME> 包名 --from-file=<FROM_FILE> 创建报告的来源trace文件 -e <DEVICE_SERIAL>,--serial=<DEVICE_SERIAL> 设备号 其中标签可选项如下: 标签名 意义 gfx Graphics input Input view View webview Webview vm Window Manager am Activity Manager audio Audio video Video camera Camera hal Hardware Modules res Resource Loading dalvik Dalvik VM rs RenderScript sched Cpu Scheduling freq Cpu Frequency membus Memory Bus Utilization idle Cpu Idle disk Disk input and output load Cpu Load sync Synchronization Manager workq Kernel Workqueues 以上标签并不支持所有机型,还有要想在输出中看到任务的名称，需要加上sched. 上面的命令执行完后，会生成一个html文件: 打开该文件后，我们会看到如下页面: systrace快捷键 快捷键 作用 w 放大 s 缩小 a 左移 d 右移 f 返回选中区域，切放大选中区域 Alerts Alerts一栏标记了以下性能有问题的点，你可以点击该点查看详细信息,右边侧边栏还有一个Alerts框，点击可以查看每个类型的Alerts的数量: Frame 在每个包下都有Frame一栏，该栏中都有一个一个的 F 代表每一个 Frame ，用颜色来代表性能的好坏，依次为 绿-黄-红 (性能越来越差),点击某一个 F ,会显示该Frame绘制过程中的一些Alerts信息: 如果你想查看Frame的耗时，可以点击某个F标志，然后按 m 键: 上一篇 Android性能专项测试之MAT 下一篇 Android性能专项测试之GPU Monitor 顶 4 踩 22 我的同类文章 Android性能 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331327次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 32
URL:: http://blog.csdn.net/itfootball/article/details/48976127

ParseText::
Android性能专项测试之GPU Monitor - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android性能专项测试之GPU Monitor 2015-10-09 13:49 1005人阅读 评论 (0) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Testing Display Performance Speed up your app GPU Monitor能做什么? 分析GPU的性能，实时查看绘制每一帧所花费的时间 GPU Monitor使用准备 root 手机 开发者选项中的Gpu profile开关打开 Android Studio 1.4+ GPU Monitor启动 在Android Monitor中点击GPU，就已经打开了该工具，这个时候你在所选App界面中操作的话，面板中就会实时显示绘制数据: GPU Monitor的4类数据 5.1之前的数据只有蓝,红,黄三种颜色，5.1加入了紫色数据 Draw(蓝) 表示View.onDraw()方法的耗时,这部分主要是建立DisplayList对象用的，这些对象将会被转化成OpenGL命令，GPU只能读懂OpenGL命令。 如果这个地方耗时比较大，说明视图比较复杂。 蓝色区域代表的时间，是创建DisplayList对象的时间。 Prepare(紫色) 5.1以后将UI Thread线程所做的事分成了2个线程来做：UI Thread和Render Thread。新加的Render Thread线程会将Draw过程生成的DisplayList对象转化成为OpenGL的命令，然后发送给GPU，这个时候UI Thread可以空闲下来处理下一个frame的数据。如果传送的资源过多的话这个地方耗时就比较大。 紫色区域代表的时间就是UI Thread传送数据给Render Thread所用的时间。 Process(红) 红色区域代表创建OpenGL命令的时间 Execute(黄) 黄色区域代表发送OpenGL命令给GPU所用的时间 上一篇 Android性能专项测试之Systrace工具 下一篇 Android性能专项测试之Network monitor 顶 1 踩 0 我的同类文章 Android性能 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331328次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 33
URL:: http://blog.csdn.net/itfootball/article/details/48999179

ParseText::
Android性能专项测试之Network monitor - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android性能专项测试之Network monitor 2015-10-09 14:56 951人阅读 评论 (0) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Network monitor工具能做什么? 实时监控上传和接收的网速 Network monitor使用条件 root手机 Android studio 1.4+ Network monitor开启 Tx:上传网速 Rx:接受网速 上一篇 Android性能专项测试之GPU Monitor 下一篇 Android性能专项测试之Heap Snapshot工具 顶 0 踩 0 我的同类文章 Android性能 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331324次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 34
URL:: http://blog.csdn.net/itfootball/article/details/49004699

ParseText::
Android性能专项测试之Batterystats - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android性能专项测试之Batterystats 2015-10-14 11:24 3103人阅读 评论 (1) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Batterystats & Battery Historian Walkthrough Battery Historian Charts Android应用的耗电量统计 SupplicantState Viewing Battery Use Data batterystats使用条件 5.0以上系统 battery-historian脚本 batterystats的启动 启动统计Battery数据的话，首先要初始化batterystats数据 adb kill -server > adb devices > adb shell dumpsys batterystats --reset 上面的操作执行完毕后，拔掉手机，操作你的App，操作完成后，重新连接手机，执行下面的命令，收集Battery数据: adb shell dumpsys batterystats > batterystats.txt 得到这些数据后，这个时候使用我们的 battery-historian 来生成我们可见HTML报告: python historian.py batterystats.txt > batterystats.html 得到的报告如下: Battery Historian指标 在 Android性能专项测试之battery-historian试用 一文中已经介绍了一些属性，但是目前又增加很多，下面来看看新加属性的意义: 属性 意义 gps gps是否开启 sync 是否跟后台同步 mobile_radio 是否开启radio wake_reason 唤醒原因 phone_in_call 进行通话 batterystats信息过滤 Battery History 电量相关数据的时间序列: Battery History ( 0 % used, 152 used of 256 KB, 5 strings using 256 ): 0 ( 9 ) RESET:TIME: 2015 - 10 - 09 - 19 - 50 - 15 0 ( 2 ) 009 status = charging health = good plug = usb temp = 324 volt = 3683 + running + wake_lock + wifi_full_lock + audio + screen + plugged data_conn = lte phone_signal_strength = moderate brightness = bright + wifi_running + wifi wifi_signal_strength = 4 wifi_suppl = completed top = u0a34: "com.google.android.googlequicksearchbox" 0 ( 2 ) 009 user = 0 : "0" 0 ( 2 ) 009 userfg = 0 : "0" + 189 ms ( 2 ) 009 volt = 3660 + 216 ms ( 2 ) 009 volt = 3688 + 8 s387ms ( 2 ) 009 + gps conn = 3 : "CONNECTED" + 9 s387ms ( 2 ) 009 -top = u0a34: "com.google.android.googlequicksearchbox" + 9 s387ms ( 2 ) 009 -gps + top = u0a130: "com.example.android.sunshine.app" + 9 s569ms ( 2 ) 009 + mobile_radio conn = 3 : "DISCONNECTED" + 10 s217ms ( 2 ) 009 volt = 3577 + 17 s294ms ( 2 ) 009 volt = 3619 + 20 s216ms ( 2 ) 009 volt = 3576 + 21 s530ms ( 1 ) 009 + wifi_scan + 22 s801ms ( 1 ) 009 -wifi_scan + 29 s842ms ( 1 ) 009 -mobile_radio + 30 s252ms ( 2 ) 009 volt = 3616 Per-PID Stats 每一个进程执行了多长的时间 Per-PID Stats: PID 0 wake time : + 396 ms PID 868 wake time : + 1 s682ms PID 1402 wake time : + 539 ms PID 0 wake time : + 6 s473ms PID 868 wake time : + 3 ms PID 1723 wake time : + 166 ms PID 4841 wake time : + 11 m1s479ms PID 19942 wake time : + 271 ms PID 868 wake time : + 42 ms PID 21564 wake time : + 172 ms PID 15488 wake time : + 67 ms PID 4841 wake time : + 6 s512ms PID 4841 wake time : + 6 s512ms PID 18217 wake time : + 126 ms PID 3876 wake time : + 228 ms PID 868 wake time : + 20 s440ms PID 16547 wake time : + 23 ms PID 22121 wake time : + 288 ms PID 22146 wake time : + 59 ms PID 16424 wake time : + 485 ms Statistics since last charge Statistics since last charge: System starts: 0 , currently on battery: false Time on battery: 0 ms ( 0.0 %) realtime, 0 ms ( 0.0 %) uptime Time on battery screen off: 0 ms ( 0.0 %) realtime, 0 ms ( 0.0 %) uptime Total run time : 34 s 134 ms realtime, 34 s 134 ms uptime Start clock time : 2015 - 10 - 09 - 19 - 50 - 15 Screen on : 0 ms ( --%) 0x, Interactive: 0ms (--%) Screen brightnesses: (no activity) Connectivity changes: 2 Mobile total received: 0 B, sent: 0 B (packets received 0 , sent 0 ) Phone signal levels: (no activity) Signal scanning time : 0 ms Radio types: (no activity) Mobile radio active time : 0 ms ( --%) 0x Mobile radio active adjusted time : 0 ms ( --%) Wi-Fi total received: 0 B, sent: 0 B (packets received 0 , sent 0 ) Wifi on : 0 ms ( --%), Wifi running: 0ms (--%) Wifi states: (no activity) Wifi supplicant states: (no activity) Wifi signal levels: (no activity) Bluetooth on : 0 ms ( --%) Bluetooth states: (no activity) Estimated power use (mAh) 目前只能算比较粗略的估计，不能作为实际消耗数据，期待google更为精准的数据 Estimated power use (mAh): Capacity: 3220 , Computed drain: - 2444.11370879 , actual drain: 0.00000000 Idle: 24.7 Uid u0a46: - 0.01197222 Uid u0a100: - 0.04600000 Uid u0a29: - 0.07444444 Uid u0a118: - 0.14044444 Uid u0a104: - 0.73288889 Uid 1000 : - 2.12172492 Uid u0a14: - 3.36807500 Uid u0a99: - 3.78076692 Phone calls: - 19.54370833 Cell standby: - 107.36537361 Screen: - 2331.64616000 Per-app mobile ms per packet radio唤醒时间除以数据包发送次数，该时间越小代表性能越好，一个高效的App会将所有的流量转化为batches。 All partial wake locks 所有程序中wakelock，关注持续时间和数量 6.0的更新 试用了下6.0的batterystats，现在信息比5.0的更加全面，不但详细列举了不同app的耗电量，还把app中各个子模块的耗电量也输出了: Estimated power use (mAh): Capacity: 3220, Computed drain: 1163, actual drain: 451-644 Screen: 361 Uid u0a99: 189 ( cpu = 13.2 wake=0.000408 radio=102 wifi=6.35 gps=67.8 ) Uid u0a94: 127 ( cpu=6.99 wake=0.00528 radio=118 wifi=0.451 gps=0.181 sensor=0.836 ) Uid 0: 111 ( cpu=30.2 wake=5.13 radio=75.0 wifi=0.242 ) Cell standby: 79.8 ( radio=79.8 ) Uid u0a95: 63.7 ( cpu=10.9 wake=1.59 radio=50.0 wifi=0.0566 camera=1.15 ) Uid 1000: 61.1 ( cpu=59.9 wake=0.642 wifi=0.100 sensor=0.525 ) Uid u0a98: 22.2 ( cpu=0.261 wake=0.00395 radio=21.9 wifi=0.0817 ) Uid u0a100: 19.0 ( cpu=10.4 wake=0.00502 radio=7.90 wifi=0.624 gps=0.00150 sensor=0.0554 ) Uid u0a35: 14.3 ( cpu=14.0 wake=0.158 wifi=0.0804 ) Uid u0a15: 14.1 ( cpu=3.18 wake=1.72 radio=8.71 wifi=0.466 ) Uid u0a108: 13.9 ( cpu=3.23 radio=10.6 wifi=0.0228 ) Uid u0a103: 12.2 ( cpu=2.79 wake=0.00260 radio=8.11 wifi=0.811 gps=0.291 sensor=0.187 ) Uid u0a110: 10.8 ( cpu=0.910 radio=9.92 wifi=0.00682 ) Uid u0a105: 10.6 ( cpu=5.59 radio=4.95 wifi=0.0642 ) Idle: 9.40 上一篇 Android性能专项测试之Heap Snapshot工具 下一篇 Android性能专项测试之耗电量统计API 顶 2 踩 0 我的同类文章 Android性能 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331339次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 35
URL:: http://blog.csdn.net/itfootball/article/details/49155979

ParseText::
Android性能专项测试之耗电量统计API - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android性能专项测试之耗电量统计API 2015-10-19 22:29 1696人阅读 评论 (2) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 参考文章: Android应用的耗电量统计 深入浅出Android App耗电量统计 Battery stats - CPU total vs CPU foreground 深入浅出 Android App 耗电量统计 浅析Wakelock机制与Android电源管理 耗电量API Android 系统中很早就有耗电量的 API ,只不过一直都是隐藏的， Android 系统的 设置-电池功能 就是调用的这个 API ，该 API 的核心部分是调用了 com.android.internal.os.BatteryStatsHelper 类，利用 PowerProfile 类，读取 power_profile.xml 文件，我们一起来看看具体如何计算耗电量，首先从最新版本6.0开始看 6.0的API 源码 BatteryStatsHelper 其中计算耗电量的方法为490行的 processAppUsage ,下来一步一步来解释该方法。 App耗电量的计算探究 private void processAppUsage (SparseArray<UserHandle> asUsers) { 方法的参数是一个 SparseArray 数组，存储的对象是 UserHandle ,官方文档给出的解释是，代表一个用户，可以理解为这个类里面存储了用户的相关信息. final boolean forAllUsers = (asUsers.get(UserHandle.USER_ALL) != null ); 然后判断该次计算是否针对所有用户，通过 UserHandle 的 USER_ALL 值来判断，该值为 -1 ,源码的地址在 https://github.com/DoctorQ/platform_frameworks_base/blob/android-6.0.0_r1/core/java/android/os/UserHandle.java . mStatsPeriod = mTypeBatteryRealtime; 然后给公共变量int类型的 mStatsPeriod 赋值,这个值 mTypeBatteryRealtime 的计算过程又在320行的 refreshStats 方法中: mTypeBatteryRealtime = mStats.computeBatteryRealtime(rawRealtimeUs, mStatsType); 这里面用到了 BatteryStats(mStats) 类中的 computeBatteryRealtime 方法,该方法计算出此次统计电量的时间间隔。好，歪楼了，回到 BatteryStatsHelper 中。 BatterySipper osSipper = null ; final SparseArray<? extends Uid> uidStats = mStats.getUidStats(); final int NU = uidStats.size(); 首先创建一个 BatterySipper 对象 osSipper ,该对象里面可以存储一些后续我们要计算的值，然后通过 BatteryStats 类对象 mStats 来得到一个包含 Uid 的对象的 SparseArray 组数,然后计算了一下这个数组的大小，保存在变量NU中。 for ( int iu = 0 ; iu < NU; iu++) { final Uid u = uidStats.valueAt(iu); final BatterySipper app = new BatterySipper(BatterySipper.DrainType.APP, u, 0 ); 然后 for 循环计算每个 Uid 代表的 App 的耗电量，因为 BatterySipper 可计算的类型有三种:应用, 系统服务, 硬件类型,所以这个地方传入的是 DrainType.APP ,还有其他可选类型如下: public enum DrainType { IDLE, CELL, PHONE, WIFI, BLUETOOTH, FLASHLIGHT, SCREEN, APP, USER, UNACCOUNTED, OVERCOUNTED, CAMERA } 列举了目前可计算耗电量的模块。 mCpuPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mWakelockPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mMobileRadioPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mWifiPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mBluetoothPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mSensorPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mCameraPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; mFlashlightPowerCalculator .calculateApp (app, u, mRawRealtime, mRawUptime, mStatsType) ; 其中 mStatsType 的值为 BatteryStats.STATS_SINCE_CHARGED ,代表了我们的计算规则是从上次充满电后数据，还有一种规则是 STATS_SINCE_UNPLUGGED 是拔掉USB线后的数据。而 mRawRealtime 是当前时间， mRawUptime 是运行时间。6.0的对各个模块的消耗都交给了单独的类去计算，这些类都继承于 PowerCalculator 抽象类： 蓝牙耗电 :BluetoothPowerCalculator .java 摄像头耗电 :CameraPowerCalculator .java Cpu 耗电 :CpuPowerCalculator .java 手电筒耗电 :FlashlightPowerCalculator .java 无线电耗电 :MobileRadioPowerCalculator .java 传感器耗电 :SensorPowerCalculator .java Wakelock 耗电 :WakelockPowerCalculator .java Wifi 耗电 :WifiPowerCalculator .java 这一部分我一会单独拿出来挨个解释，现在我们还是回到 BatteryStatsHelper 继续往下走 final double totalPower = app.sumPower(); BatterySipper#sumPower 方法是统计总耗电量,方法详情如下，其中 usagePowerMah 这个值有点特殊，其他的上面都讲过. /** * Sum all the powers and store the value into `value`. * @return the sum of all the power in this BatterySipper. */ public double sumPower () { return totalPowerMah = usagePowerMah + wifiPowerMah + gpsPowerMah + cpuPowerMah + sensorPowerMah + mobileRadioPowerMah + wakeLockPowerMah + cameraPowerMah + flashlightPowerMah; } 然后根据是否是DEBUG版本打印信息，这个没啥可说的，然后会把刚才计算的电量值添加到列表中: // Add the app to the list if it is consuming power. if (totalPower != 0 || u.getUid() == 0 ) { // // Add the app to the app list, WiFi, Bluetooth, etc, or into "Other Users" list. // final int uid = app.getUid(); final int userId = UserHandle.getUserId(uid); if (uid == Process.WIFI_UID) { mWifiSippers.add(app); } else if (uid == Process.BLUETOOTH_UID) { mBluetoothSippers.add(app); } else if (!forAllUsers && asUsers.get(userId) == null && UserHandle.getAppId(uid) >= Process.FIRST_APPLICATION_UID) { // We are told to just report this user's apps as one large entry. List <BatterySipper> list = mUserSippers.get(userId); if ( list == null ) { list = new ArrayList<>(); mUserSippers.put(userId, list ); } list .add(app); } else { mUsageList.add(app); } if (uid == 0 ) { osSipper = app; } } 首先判断 totalPower 的值和当前 uid号 是否符合规则，规则为总耗电量不为0或者用户id为0.当 uid 表明为WIFI或者蓝牙时，添加到下面对应的列表中，一般情况下正常的应用我们直接保存到下面的 mUsageList 中就行就行，但是也有一些例外: /** * List of apps using power. */ private final List<BatterySipper> mUsageList = new ArrayList<>(); /** * List of apps using wifi power. */ private final List<BatterySipper> mWifiSippers = new ArrayList<>(); /** * List of apps using bluetooth power. */ private final List<BatterySipper> mBluetoothSippers = new ArrayList<>(); 如果我们的系统是单用户系统，且当前的 userId 号不在我们的统计范围内，且其进程 id 号是大于 Process.FIRST_APPLICATION_UID (10000,系统分配给普通应用的其实id号),我们就要将其存放到 mUserSippers 数组中，定义如下: private final SparseArray<List<BatterySipper>> mUserSippers = new SparseArray<>(); 最后判断 uid 为0的话，代表是 Android 操作系统的耗电量，赋值给 osSipper (494行定义)就可以了,这样一个 app 的计算就完成了，遍历部分就不说了,保存这个 osSipper 是为了最后一步计算: if (osSipper != null ) { // The device has probably been awake for longer than the screen on // time and application wake lock time would account for . Assign // this remainder to the OS, if possible. mWakelockPowerCalculator.calculateRemaining(osSipper, mStats, mRawRealtime, mRawUptime, mStatsType); osSipper.sumPower(); } 主流程我们已经介绍完了，下面来看各个子模块耗电量的计算 Cpu耗电量 CpuPowerCalculator.java Cpu的计算要用到 PowerProfile 类,该类主要是解析 power_profile.xml : < device name = "Android" > <!-- Most values are the incremental current used by a feature, in mA (measured at nominal voltage). The default values are deliberately incorrect dummy values. OEM's must measure and provide actual values before shipping a device. Example real-world values are given in comments, but they are totally dependent on the platform and can vary significantly, so should be measured on the shipping platform with a power meter. --> < item name = "none" > 0 </ item > < item name = "screen.on" > 0.1 </ item > <!-- ~200mA --> < item name = "screen.full" > 0.1 </ item > <!-- ~300mA --> < item name = "bluetooth.active" > 0.1 </ item > <!-- Bluetooth data transfer, ~10mA --> < item name = "bluetooth.on" > 0.1 </ item > <!-- Bluetooth on & connectable, but not connected, ~0.1mA --> < item name = "wifi.on" > 0.1 </ item > <!-- ~3mA --> < item name = "wifi.active" > 0.1 </ item > <!-- WIFI data transfer, ~200mA --> < item name = "wifi.scan" > 0.1 </ item > <!-- WIFI network scanning, ~100mA --> < item name = "dsp.audio" > 0.1 </ item > <!-- ~10mA --> < item name = "dsp.video" > 0.1 </ item > <!-- ~50mA --> < item name = "camera.flashlight" > 0.1 </ item > <!-- Avg. power for camera flash, ~160mA --> < item name = "camera.avg" > 0.1 </ item > <!-- Avg. power use of camera in standard usecases, ~550mA --> < item name = "radio.active" > 0.1 </ item > <!-- ~200mA --> < item name = "radio.scanning" > 0.1 </ item > <!-- cellular radio scanning for signal, ~10mA --> < item name = "gps.on" > 0.1 </ item > <!-- ~50mA --> <!-- Current consumed by the radio at different signal strengths, when paging --> < array name = "radio.on" > <!-- Strength 0 to BINS-1 --> < value > 0.2 </ value > <!-- ~2mA --> < value > 0.1 </ value > <!-- ~1mA --> </ array > <!-- Different CPU speeds as reported in /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state --> < array name = "cpu.speeds" > < value > 400000 </ value > <!-- 400 MHz CPU speed --> </ array > <!-- Current when CPU is idle --> < item name = "cpu.idle" > 0.1 </ item > <!-- Current at each CPU speed, as per 'cpu.speeds' --> < array name = "cpu.active" > < value > 0.1 </ value > <!-- ~100mA --> </ array > <!-- This is the battery capacity in mAh (measured at nominal voltage) --> < item name = "battery.capacity" > 1000 </ item > < array name = "wifi.batchedscan" > <!-- mA --> < value > .0002 </ value > <!-- 1-8/hr --> < value > .002 </ value > <!-- 9-64/hr --> < value > .02 </ value > <!-- 65-512/hr --> < value > .2 </ value > <!-- 513-4,096/hr --> < value > 2 </ value > <!-- 4097-/hr --> </ array > </ device > 这个里面存储了Cpu(cpu.speeds)的主频等级，以及每个主频每秒消耗的毫安(cpu.active)，好，现在回到 CpuPowerCalculator 中，先来看构造方法 public CpuPowerCalculator (PowerProfile profile) { final int speedSteps = profile.getNumSpeedSteps(); mPowerCpuNormal = new double [speedSteps]; mSpeedStepTimes = new long [speedSteps]; for ( int p = 0 ; p < speedSteps; p++) { mPowerCpuNormal[p] = profile.getAveragePower(PowerProfile.POWER_CPU_ACTIVE, p); } } 第一步获得 Cpu 有几个主频等级，因为不同等级消耗的电量不一样，所以要区别对待，根据主频的个数，然后初始化 mPowerCpuNormal 和 mSpeedStepTimes ,前者用来保存不同等级的耗电速度，后者用来保存在不同等级上耗时，然后给 mPowerCpuNormal 的每个元素附上值。构造方法就完成了其所有的工作，现在来计算方法 calculateApp , final int speedSteps = mSpeedStepTimes. length ; long totalTimeAtSpeeds = 0 ; for ( int step = 0 ; step < speedSteps; step ++) { mSpeedStepTimes[ step ] = u.getTimeAtCpuSpeed( step , statsType); totalTimeAtSpeeds += mSpeedStepTimes[ step ]; } totalTimeAtSpeeds = Math. max (totalTimeAtSpeeds, 1 ); 首先得到 Cpu 主频等级个数，然后 BatteryStats.Uid 得到不同主频上执行时间，计算 Cpu 总耗时保存在 totalTimeAtSpeeds 中， app .cpuTimeMs = (u .getUserCpuTimeUs (statsType) + u .getSystemCpuTimeUs (statsType)) / 1000 ; Cpu 的执行时间分很多部分，但是我们关注 User 和 Kernal 部分,也就是上面的 UserCpuTime 和 SystemCpuTime 。 double cpuPowerMaMs = 0 ; for ( int step = 0 ; step < speedSteps; step ++) { final double ratio = (double) mSpeedStepTimes[ step ] / totalTimeAtSpeeds; final double cpuSpeedStepPower = ratio * app.cpuTimeMs * mPowerCpuNormal[ step ]; if (DEBUG && ratio != 0 ) { Log .d(TAG, "UID " + u.getUid() + ": CPU step #" + step + " ratio=" + BatteryStatsHelper.makemAh(ratio) + " power=" + BatteryStatsHelper.makemAh(cpuSpeedStepPower / ( 60 * 60 * 1000 ))); } cpuPowerMaMs += cpuSpeedStepPower; } 上面的代码就是将不同主频的消耗累加到一起，但是其中值得注意的是，他并不是用各个主频的消耗时间*主频单位时间内消耗的电量，而是用一个radio变量来计算得到各个主频段执行时间占总时间的百分比，然后用 cpuTimeMs 来换算成各个主频的Cpu实际消耗时间，这比5.0的API多了这么一步，我估计是发现了计算的不严谨性，这也是 Android 迟迟不放出统计电量方式的原因，其实google自己对这块也没有把握，所以才会造成不同 API 计算方式的差异。好，计算完我们的总消耗后，是不是就算完事了？如果你只需要得到一个App的耗电总量，上面的讲解已经足够了，但是6.0的API计算了每个App的不同进程的耗电量，这个我们就只当看看就行，暂时没什么实际意义。 // Keep track of the package with highest drain. double highestDrain = 0 ; app.cpuFgTimeMs = 0 ; final ArrayMap<String, ? extends BatteryStats.Uid.Proc> processStats = u.getProcessStats(); final int processStatsCount = processStats.size(); for ( int i = 0 ; i < processStatsCount; i++) { final BatteryStats.Uid.Proc ps = processStats.valueAt(i); final String processName = processStats.keyAt(i); app.cpuFgTimeMs += ps.getForegroundTime(statsType); final long costValue = ps.getUserTime(statsType) + ps.getSystemTime(statsType) + ps.getForegroundTime(statsType); // Each App can have multiple packages and with multiple running processes. // Keep track of the package who's process has the highest drain. if (app.packageWithHighestDrain == null || app.packageWithHighestDrain.startsWith( "*" )) { highestDrain = costValue; app.packageWithHighestDrain = processName; } else if (highestDrain < costValue && !processName.startsWith( "*" )) { highestDrain = costValue; app.packageWithHighestDrain = processName; } } // Ensure that the CPU times make sense. if (app.cpuFgTimeMs > app.cpuTimeMs) { if (DEBUG && app.cpuFgTimeMs > app.cpuTimeMs + 10000 ) { Log.d(TAG, "WARNING! Cputime is more than 10 seconds behind Foreground time" ); } // Statistics may not have been gathered yet. app.cpuTimeMs = app.cpuFgTimeMs; } 上面统计同一 App 下不同的进程的耗电量，得到消耗最大的进程名，保存到 BatterySipper 对象中,然后得出 App 的 Cpu 的 foreground 消耗时间,将 foreground 时间与之前计算得到的 cpuTimeMs 进行比较，如果 foreground 时间比 cpuTimeMs 还要大，那么就将 cpuTimeMs 的时间改变为 foreground 的值，但是这个值的变化对之前耗电总量的计算没有丝毫影响。 // Convert the CPU power to mAh app.cpuPowerMah = cpuPowerMaMs / (60 * 60 * 1000); 最后的最后，将耗电量用mAh单位来表示，所以在毫秒的基础上除以 60*60*1000 。 总结: Cpu 耗电量的计算是要区分不同主频的，频率不同，单位时间内消耗的电量是有区分的，这一点要明白。还有一点就是不同主频上的执行时间不是通过 BatteryStats.Uid#getTimeAtCpuSpeed 方法得到的，二十是通过百分比和 BatteryStats.Uid#getUserCpuTimeUs 和 getSystemCpuTimeUs 计算得到 cpuTimeMs 乘积得到的。最后一点就是， cpuTimeMs 时间是会在计算完毕后进行比较，比较的对象是 CPU 的 foreground 时间。 WakeLock耗电量的计算 WakelockPowerCalculator.java 从构造方法开始， public WakelockPowerCalculator (PowerProfile profile) { mPowerWakelock = profile.getAveragePower(PowerProfile.POWER_CPU_AWAKE); } 首先得到 power_profile.xml 中 cpu.awake 表示的值，保存在 mPowerWakelock 变量中。构造方法只做了这么点事，下面进入 calculateApp 方法。 @Override public void calculateApp(BatterySipper app, BatteryStats .Uid u, long rawRealtimeUs, long rawUptimeUs, int statsType) { long wakeLockTimeUs = 0 ; final ArrayMap<String, ? extends BatteryStats .Uid .Wakelock > wakelockStats = u .getWakelockStats () ; final int wakelockStatsCount = wakelockStats .size () ; for (int i = 0 ; i < wakelockStatsCount; i++) { final BatteryStats .Uid .Wakelock wakelock = wakelockStats .valueAt (i) ; // Only care about partial wake locks since full wake locks // are canceled when the user turns the screen off. BatteryStats .Timer timer = wakelock .getWakeTime (BatteryStats .WAKE _TYPE_PARTIAL) ; if (timer != null) { wakeLockTimeUs += timer .getTotalTimeLocked (rawRealtimeUs, statsType) ; } } app .wakeLockTimeMs = wakeLockTimeUs / 1000 ; // convert to millis mTotalAppWakelockTimeMs += app .wakeLockTimeMs ; // Add cost of holding a wake lock. app .wakeLockPowerMah = (app .wakeLockTimeMs * mPowerWakelock) / ( 1000 * 60 * 60 ) ; if (DEBUG && app .wakeLockPowerMah != 0 ) { Log .d (TAG, "UID " + u .getUid () + ": wake " + app .wakeLockTimeMs + " power=" + BatteryStatsHelper .makemAh (app .wakeLockPowerMah )) ; } } 首先获得 Wakelock 的数量，然后逐个遍历得到每个 Wakelock 对象，得到该对象后，得到 BatteryStats.WAKE_TYPE_PARTIAL 的唤醒时间，然后累加，其实 wakelock 有4种，为什么只取 partial 的时间,具体代码 google 也没解释的很清楚,只是用一句注释打发了我们。得到总时间后，就可以与构造方法中的单位时间 waklock 消耗电量相乘得到 Wakelock 消耗的总电量。 Wifi耗电量的计算 首先来看构造方法，来了解一下WIFI的耗电量计算用到了 power_profile.xml 中的哪些属性: public WifiPowerCalculator(PowerProfile profile) { mIdleCurrentMa = profile .getAveragePower (PowerProfile .POWER _WIFI_CONTROLLER_IDLE) ; mTxCurrentMa = profile .getAveragePower (PowerProfile .POWER _WIFI_CONTROLLER_TX) ; mRxCurrentMa = profile .getAveragePower (PowerProfile .POWER _WIFI_CONTROLLER_RX) ; } 我们去 PowerProfile.java 找到上面三个常量代表的属性: public static final String POWER_WIFI_CONTROLLER_IDLE = "wifi.controller.idle" ; public static final String POWER_WIFI_CONTROLLER_RX = "wifi.controller.rx" ; public static final String POWER_WIFI_CONTROLLER_TX = "wifi.controller.tx" ; 知道对应的xml的属性后我们直接看 calculateApp 方法: @Override public void calculateApp(BatterySipper app, BatteryStats .Uid u, long rawRealtimeUs, long rawUptimeUs, int statsType) { final long idleTime = u .getWifiControllerActivity (BatteryStats .CONTROLLER _IDLE_TIME, statsType) ; final long txTime = u .getWifiControllerActivity (BatteryStats .CONTROLLER _TX_TIME, statsType) ; final long rxTime = u .getWifiControllerActivity (BatteryStats .CONTROLLER _RX_TIME, statsType) ; app .wifiRunningTimeMs = idleTime + rxTime + txTime ; app .wifiPowerMah = ((idleTime * mIdleCurrentMa) + (txTime * mTxCurrentMa) + (rxTime * mRxCurrentMa)) / ( 1000 * 60 * 60 ) ; mTotalAppPowerDrain += app .wifiPowerMah ; app .wifiRxPackets = u .getNetworkActivityPackets (BatteryStats .NETWORK _WIFI_RX_DATA, statsType) ; app .wifiTxPackets = u .getNetworkActivityPackets (BatteryStats .NETWORK _WIFI_TX_DATA, statsType) ; app .wifiRxBytes = u .getNetworkActivityBytes (BatteryStats .NETWORK _WIFI_RX_DATA, statsType) ; app .wifiTxBytes = u .getNetworkActivityBytes (BatteryStats .NETWORK _WIFI_TX_DATA, statsType) ; if (DEBUG && app .wifiPowerMah != 0 ) { Log .d (TAG, "UID " + u .getUid () + ": idle=" + idleTime + "ms rx=" + rxTime + "ms tx=" + txTime + "ms power=" + BatteryStatsHelper .makemAh (app .wifiPowerMah )) ; } } 这里的计算方式也是差不多，先根据Uid得到时间，然后乘以构造方法里对应的wifi类型单位时间内消耗电量值，没什么难点，就不一一分析，需要注意的是，这里面还计算了 wifi 传输的数据包的数量和字节数。 蓝牙耗电量的计算 蓝牙关注的 power_profile.xml 中的属性如下: public static final String POWER_BLUETOOTH_CONTROLLER_IDLE = "bluetooth.controller.idle" ; public static final String POWER_BLUETOOTH_CONTROLLER_RX = "bluetooth.controller.rx" ; public static final String POWER_BLUETOOTH_CONTROLLER_TX = "bluetooth.controller.tx" ; 但是还没有单独为App计算耗电量的，所以这个地方是空的。 @Override public void calculateApp (BatterySipper app, BatteryStats.Uid u, long rawRealtimeUs, long rawUptimeUs, int statsType) { // No per-app distribution yet. } 摄像头耗电量的计算 CameraPowerCalculator.java 摄像头的耗电量关注的是 power_profile.xml 中 camera.avg 属性代表的值，保存到 mCameraPowerOnAvg , public static final String POWER_CAMERA = "camera.avg" ; 计算方式如下: @Override public void calculateApp (BatterySipper app, BatteryStats.Uid u, long rawRealtimeUs, long rawUptimeUs, int statsType) { // Calculate camera power usage. Right now, this is a (very) rough estimate based on the // average power usage for a typical camera application. final BatteryStats.Timer timer = u.getCameraTurnedOnTimer(); if (timer != null ) { final long totalTime = timer.getTotalTimeLocked(rawRealtimeUs, statsType) / 1000 ; app.cameraTimeMs = totalTime; app.cameraPowerMah = (totalTime * mCameraPowerOnAvg) / ( 1000 * 60 * 60 ); } else { app.cameraTimeMs = 0 ; app.cameraPowerMah = 0 ; } } 先计算摄像头打开的时间 totalTime ，然后根据这个值乘以 mCameraPowerOnAvg 得到摄像头的耗电量。 手电筒耗电量的计算 FlashlightPowerCalculator.java public static final String POWER_FLASHLIGHT = "camera.flashlight" ; 跟摄像头类似，也是先得到时间，然后乘积，不想说了，没意思。 无线电耗电量的计算 MobileRadioPowerCalculator.java 关注的是 power_profile.xml 中如下三个属性: /** * Power consumption when screen is on, not including the backlight power. */ public static final String POWER_SCREEN_ON = "screen.on" ; /** * Power consumption when cell radio is on but not on a call. */ public static final String POWER_RADIO_ON = "radio.on" ; /** * Power consumption when cell radio is hunting for a signal. */ public static final String POWER_RADIO_SCANNING = "radio.scanning" ; 当无限量连接上时，根据信号强度不同，耗电量的计算是有区别的，所以在构造方法，当无线电的状态为on时，是要特殊处理的，其他两个状态(active和scan)就正常取值就可以了。 /** * Power consumption when screen is on, not including the backlight power. */ public static final String POWER_SCREEN_ON = "screen.on" ; /** * Power consumption when cell radio is on but not on a call. */ public static final String POWER_RADIO_ON = "radio.on" ; /** * Power consumption when cell radio is hunting for a signal. */ public static final String POWER_RADIO_SCANNING = "radio.scanning" ; 计算的方式分两种，以无线电处于 active 状态的次数为区分，当 active 大于0，我们用处于 active 状态的时间来乘以它的单位耗时。另一种情况就要根据网络转化的数据包来计算耗电量了。 传感器耗电量的计算 SensorPowerCalculator.java 只关注一个属性: public static final String POWER_GPS_ON = "gps.on" ; 计算方式如下: @Override public void calculateApp (BatterySipper app, BatteryStats.Uid u, long rawRealtimeUs, long rawUptimeUs, int statsType) { // Process Sensor usage final SparseArray<? extends BatteryStats.Uid.Sensor> sensorStats = u.getSensorStats(); final int NSE = sensorStats.size(); for ( int ise = 0 ; ise < NSE; ise++) { final BatteryStats.Uid.Sensor sensor = sensorStats.valueAt(ise); final int sensorHandle = sensorStats.keyAt(ise); final BatteryStats.Timer timer = sensor.getSensorTime(); final long sensorTime = timer.getTotalTimeLocked(rawRealtimeUs, statsType) / 1000 ; switch (sensorHandle) { case BatteryStats.Uid.Sensor.GPS: app.gpsTimeMs = sensorTime; app.gpsPowerMah = (app.gpsTimeMs * mGpsPowerOn) / ( 1000 * 60 * 60 ); break ; default : final int sensorsCount = mSensors.size(); for ( int i = 0 ; i < sensorsCount; i++) { final Sensor s = mSensors.get(i); if (s.getHandle() == sensorHandle) { app.sensorPowerMah += (sensorTime * s.getPower()) / ( 1000 * 60 * 60 ); break ; } } break ; } } } 当传感器的类型为GPS时，我们计算每个传感器的时间然后乘以耗电量，和所有的耗电量计算都是一样，不同的是，当传感器不是GPS时，这个时候计算就根据 SensorManager 得到所有传感器类型，这个里面保存有不同传感器的单位耗电量，这样就能计算不同传感器的耗电量。 总结 至此我已经把App耗电量的计算讲完了(还有硬件)，前后花费3天时间，好痛苦(此处一万只草泥马)，不过好在自己也算对这个耗电量的理解有了一定的认识。google官方对耗电量的统计给出的解释都是不能代表真实数据，只能作为参考值，因为受power_profile.xml的干扰太大，如果手机厂商没有严格设置这个文件，那可想而知出来的值可能是不合理的。 提示 腾讯的GT团队前几天推出了耗电量的计算APK，原理是一样的，大家可以试用下 GT

Recno:: 36
URL:: http://blog.csdn.net/itfootball/article/details/49277207

ParseText::
Android静态代码检查-Lint - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android静态代码检查-Lint 2015-10-21 19:40 1446人阅读 评论 (0) 收藏 举报 分类： android自动化测试 （31） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 参考文章: Improving Your Code with lint lint 使用 lint 增强你的代码 Android Lint简介 gradle lint gradle 中有 lint 任务，可以直接执行lint静态代码检查，但是前提是你的 build.gradle 设置了 lintOptions 选项: android { compileSdkVersion 23 buildToolsVersion "21.1.2" lintOptions { abortOnError false } 然后我们在项目的根目录下执行 gradle lint ： localhost:Sunshine-Version-2 wuxian$ gradle lint :app:preBuild UP-TO-DATE :app:preDebugBuild UP-TO-DATE :app:checkDebugManifest :app:preReleaseBuild UP-TO-DATE :app:prepareComAndroidSupportAppcompatV72102Library UP-TO-DATE :app:prepareComAndroidSupportSupportV42102Library UP-TO-DATE :app:prepareDebugDependencies :app:compileDebugAidl UP-TO-DATE :app:compileDebugRenderscript UP-TO-DATE :app:generateDebugBuildConfig UP-TO-DATE :app:generateDebugAssets UP-TO-DATE :app:mergeDebugAssets UP-TO-DATE :app:generateDebugResValues UP-TO-DATE :app:generateDebugResources UP-TO-DATE :app:mergeDebugResources UP-TO-DATE :app:processDebugManifest UP-TO-DATE :app:processDebugResources UP-TO-DATE :app:generateDebugSources UP-TO-DATE :app:processDebugJavaRes UP-TO-DATE :app:compileDebugJavaWithJavac UP-TO-DATE :app:compileLint :app:checkReleaseManifest :app:prepareReleaseDependencies :app:compileReleaseAidl UP-TO-DATE :app:compileReleaseRenderscript UP-TO-DATE :app:generateReleaseBuildConfig UP-TO-DATE :app:generateReleaseAssets UP-TO-DATE :app:mergeReleaseAssets UP-TO-DATE :app:generateReleaseResValues UP-TO-DATE :app:generateReleaseResources UP-TO-DATE :app:mergeReleaseResources UP-TO-DATE :app:processReleaseManifest UP-TO-DATE :app:processReleaseResources UP-TO-DATE :app:generateReleaseSources UP-TO-DATE :app:processReleaseJavaRes UP-TO-DATE :app:compileReleaseJavaWithJavac UP-TO-DATE :app:lint Ran lint on variant release: 58 issues found Ran lint on variant debug: 58 issues found Wrote HTML report to file:/Users/wuxian/Documents/sourcecode/self/Sunshine-Version-2/app/build/outputs/lint-results.html Wrote XML report to /Users/wuxian/Documents/sourcecode/self/Sunshine-Version-2/app/build/outputs/lint-results.xml BUILD SUCCESSFUL Total time: 17.941 secs This build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle _daemon.html 在 build/outputs/ 目录下会生成一个 lint-result.html 文件,打开一看如下： 报告做的太次了 更多参数 lintOptions { // set to true to turn off analysis progress reporting by lint quiet true // if true , stop the gradle build if errors are found abortOnError false // if true , only report errors ignoreWarnings true // if true , emit full / absolute paths to files with errors ( true by default ) //absolutePaths true // if true , check all issues, including those that are off by default checkAllWarnings true // if true , treat all warnings as errors warningsAsErrors true // turn off checking the given issue id 's disable ' TypographyFractions ',' TypographyQuotes ' // turn on the given issue id' s enable 'RtlHardcoded' , 'RtlCompat' , 'RtlEnabled' // check * only * the given issue id 's check ' NewApi ', ' InlinedApi ' // if true, don' t include source code lines in the error output noLines true // if true , show all locations for an error, do not truncate lists, etc. showAll true // Fallback lint configuration ( default severities, etc.) lintConfig file( "default-lint.xml" ) // if true , generate a text report of issues ( false by default ) textReport true // location to write the output ; can be a file or 'stdout' textOutput 'stdout' // if true, generate an XML report for use by for example Jenkins xmlReport false // file to write report to (if not specified, defaults to lint-results.xml) xmlOutput file("lint-report.xml") // if true, generate an HTML report (with issue explanations, sourcecode, etc) htmlReport true // optional path to report (default will be lint-results.html in the builddir) htmlOutput file("lint-report.html") // set to true to have all release builds run lint on issues with severity=fatal // and abort the build (controlled by abortOnError above) if fatal issues are found checkReleaseBuilds true // Set the severity of the given issues to fatal (which means they will be // checked during release builds (even if the lint target is not included) fatal 'NewApi' , 'InlineApi' // Set the severity of the given issues to error error 'Wakelock' , 'TextViewEdits' // Set the severity of the given issues to warning warning 'ResourceAsColor' // Set the severity of the given issues to ignore (same as disabling the check ) ignore 'TypographyQuotes' } 总结 这种方式适合自动化CI系统中采集结果。 手动分析 选在分析代码后，弹出对话框，你可以选择分析整个项目/单个模块/文件bulabula: 点击OK后，等待一段时间后分析完毕，会自动弹出结果窗口 会根据检查类型不同分不同菜单，点击相应菜单进入不同的问题点: 点击问题点后右边会出现该问题的详细信息，文件名，文件位置，出现问题的点在文件中的位置以及问题描述，还会告诉你忽略这个问题的解决方法，有可能还会显示解决方法。 总结 这个方法适合开发自查！ lint命令行 lint 工具位于 sdk 目录下的 tools 下，如果在命令行执行lint找不到该命令，那么需要将 lint 的根目录配置到环境变量中,配置成功后，执行 lint 命令输出如下: 58 deMacBook-Pro- 5 :tools wuxian$ lint Usage: lint [flags] <project directories> Flags: --help This message. --help <topic> Help on the given topic, such as "suppress". --list List the available issue id's and exit. --version Output version information and exit. --exitcode Set the exit code to 1 if errors are found. --show List available issues along with full explanations. --show <ids> Show full explanations for the given list of issue id 's . Enabled Checks: --disable <list> Disable the list of categories or specific issue id 's . The list should be a comma-separated list of issue id 's or categories. --enable <list> Enable the specific list of issues. This checks all the default issues plus the specifically enabled issues. The list should be a comma-separated list of issue id 's or categories. --check <list> Only check the specific list of issues. This will disable everything and re-enable the given list of issues. The list should be a comma-separated list of issue id 's or categories. -w, --nowarn Only check for errors (ignore warnings) -Wall Check all warnings, including those off by default -Werror Treat all warnings as errors --config <filename> Use the given configuration file to determine whether issues are enabled or disabled. If a project contains a lint.xml file , then this config file will be used as a fallback. Output Options: --quiet Don't show progress. --fullpath Use full paths in the error output. --showall Do not truncate long messages, lists of alternate locations, etc. --nolines Do not include the source file lines with errors in the output. By default , the error output includes snippets of source code on the line containing the error, but this flag turns it off. --html <filename> Create an HTML report instead. If the filename is a directory ( or a new filename without an extension), lint will create a separate report for each scanned project. --url filepath=url Add links to HTML report, replacing local path prefixes with url prefix. The mapping can be a comma-separated list of path prefixes to corresponding URL prefixes, such as C:\temp\Proj1=http://buildserver/sources/temp/Proj1. To turn off linking to files, use --url none --simplehtml <filename> Create a simple HTML report --xml <filename> Create an XML report instead. Project Options: --resources <dir> Add the given folder (or path) as a resource directory for the project. Only valid when running lint on a single project. --sources <dir> Add the given folder (or path) as a source directory for the project. Only valid when running lint on a single project. --classpath <dir> Add the given folder (or jar file, or path) as a class directory for the project. Only valid when running lint on a single project. --libraries <dir> Add the given folder (or jar file, or path) as a class library for the project. Only valid when running lint on a single project. Exit Status: 0 Success. 1 Lint errors detected. 2 Lint usage. 3 Cannot clobber existing file . 4 Lint help. 5 Invalid command-line argument. 上一篇 Android性能专项测试之耗电量统计API 下一篇 Android内存泄漏检测-LeakCanary 顶 0 踩 0 我的同类文章 android自动化测试 （31） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331333次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有

Recno:: 37
URL:: http://blog.csdn.net/itfootball/article/details/49361401

ParseText::
Android内存泄漏检测-LeakCanary - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android内存泄漏检测-LeakCanary 2015-10-23 18:23 1516人阅读 评论 (6) 收藏 举报 分类： Android性能 （13） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 square/leakcanary udacity/Sunshine-Version-2 添加LeakCanary依赖包 在主模块app下的build.gradle下添加如下依赖: debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1' releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' 开启LeakCanary 添加Application子类 首先创建一个ExampleApplication，该类继承于Application,在该类的onCreate方法中添加如下代码开启LeakCanary监控: LeakCanary.install( this ); 在配置文件中注册ExampleApplication 在 AndroidManifest.xml 中的 application 标签中添加如下信息: android: name= ".ExampleApplication" 这个时候安装应用到手机，会自动安装一个Leaks应用，如下图: 制造一个内存泄漏的点 建立一个 ActivityManager 类，单例模式，里面有一个数组用来保存 Activity ： package com.example.android.sunshine.app; import android.app.Activity; import android.util.SparseArray; import android.view.animation.AccelerateInterpolator; import java.util.List; /** * Created by wuxian on 15/10/23. */ public class ActivityManager { private SparseArray<Activity> container = new SparseArray<Activity>(); private int key = 0 ; private static ActivityManager mInstance; private ActivityManager (){} public static ActivityManager getInstance (){ if (mInstance == null ){ mInstance = new ActivityManager(); } return mInstance; } public void addActivity (Activity activity){ container.put(key++,activity); } } 然后在 DetailActivity 中的 onCreate 方法中将当前 activity 添加到 ActivityManager 的数组中: @Override protected void onCreate(Bundle savedInstanceState) { super .onCreate (savedInstanceState) ; setContentView(R .layout .activity _detail) ; ActivityManager .getInstance () .addActivity (this) ; if (savedInstanceState == null) { // Create the detail fragment and add it to the activity // using a fragment transaction. Bundle arguments = new Bundle() ; arguments .putParcelable (DetailFragment .DETAIL _URI, getIntent() .getData ()) ; DetailFragment fragment = new DetailFragment() ; fragment .setArguments (arguments) ; getSupportFragmentManager() .beginTransaction () .add (R .id .weather _detail_container, fragment) .commit () ; } } 我们从首页跳转到详情页的时候会进入 DetailActivity 的 onCreate 的方法，然后就将当前 activity 添加到了数组中，当返回时，我们没把他从数组中删除。再次进入的时候，会创建新的 activity 并添加到数组中，但是之前的 activity 仍然被引用，无法释放，但是这个 activity 不会再被使用，这个时候就造成了内存泄漏。我们来看看 LeakCanary 是如何报出这个问题的。 演示 解析的过程有点耗时，所以需要等待一会才会在Leaks应用中，当我们点开某一个信息时，会看到详细的泄漏信息: 上一篇 Android静态代码检查-Lint 下一篇 “陆金所” 之移动应用体检报告 顶 1 踩 1 我的同类文章 Android性能 （13） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331341次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 38
URL:: http://blog.csdn.net/itfootball/article/details/49515345

ParseText::
“陆金所” 之移动应用体检报告 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 “陆金所” 之移动应用体检报告 2015-10-30 18:51 491人阅读 评论 (0) 收藏 举报 分类： 爆破 “陆金所” 之移动应用体检报告 应用本次体检得分（69）分! 1，前言： We are Mr Bug、 We are App Bug Hunter ！！！ 2，目的： 本次活动目的是为了用评分的形式，通过:安全、性能、稳定三个方面去检测评估一款APP，为此还单独组建了一个的项目组一起协作攻破各项难点，覆盖各项检查点 3，活动简介： 主刀医生：Mr Bug项目团队 发起时间：9月25日 　发起方：毛里求斯 体检目标： 陆金所 V 2.8.1 　体健项： 性能，安全，稳定 4，评分规则: 分为三块： 安全、 性能 、 稳定 权重分别为： 40% 、30% 、30% 三个模块下的子节点分数平均分配。 每一模块下的子节点的总分根据测试过程评估以及结合发现问题严重程度两个维度进行单项评分！最后以每一项的最终得分的总分为本次体检的最终成绩。 安全标准 网络传输数据均需要经过加密和校验，不能获取有效信息或伪造数据重要类型的网络数据均经过加密和进行校验 涉及敏感数据外其他数据都必须加密 需要通过 https 传输。不能单单只靠最基本的认证手段（如 token） 所有数据明文传输，需加密或认证。所有数据均不能去伪造 数据库不能通过简单的一些入侵方式破解 数据需要加密，且不能使用通用的、已可被破解的加密方式（如 md5） 数据/数据库不能存储任何明文敏感信息 本地缓存中不能存储部分敏感信息 性能标准 重绘标准:3x和4x的页面不超过1/3 耗电量:一小时不超过300mAh 内存:不超过80M 流量:页面消耗不大于200KB 内存抖动:不出现内存抖动的现象，横向评比抖动的频率,如果其他App在该功能点不抖动或者抖动经过优化，说明待测App有问题 内存泄漏:不出现内存泄漏现象 首页场景加载-冷启动（全新安装，未登录，点击图标至手势密码界面+进入首页所有元素加载耗时） 6s 首页场景加载-热启动（非全新安装，已登录，点击图标至手势密码界面+进入首页所有元素加载耗时）3s 其他一般普通场景操作标准3s 其他体验标准 在测试过程中无明显crash，卡顿，等体验问题！ 持续运行monkey测试发生异常概率高于（异常次数/模拟事件数） 10000分之7 5，评估图表: 6，BugList： 7，结论： 安全 1 ,没有任何重打包方面的检测，存在被重打包然后加入恶意代码的风险。 2 ,网络数据包没有防伪造检测，能通过抓包的方式获取到用户数据包并进行篡改 3、客户端无壳无第三方加固，apk可被直接反编译，得到相对完整的源码； 4、由于无壳无加固，反编译的源码可被植入恶意代码或第三方广告（如下图），并进行二次打包上架 5、日志部分肉眼检查，未发现特别敏感的信息。 性能 1,资源消耗方面，手势密码界面的内存有优化的地方，常驻内存较大。 2,主页、投资理财页面、我的账户页面等布局有很严重的重绘现象，这样会造成界面加载时间过长。 3,与微信扫描二维码功能的内存情况进行比较，很明显陆金所使用二维码扫描功能时内存出现了比较严重的抖动，算法需要优化。 4 ,每次启动，普遍耗时4S以上，并且基本不跟网络相关，跟其他的APP相比，明显略长。 5 ,在网络情况良好（宽带，4G情况），响应表现不错。但是在网络情况差（2G）时，耗时成几倍增加，应该是没有对这种情况做优化。 稳定 1, 通过使用Monkey和自动化脚本模拟50万以上的随机事件通过事件数/异常数计算异常概率为3/10000。 2,通过用Monkey脚本时间间隔时间1s左右持续执行12小时左右未发现异常。 上一篇 Android内存泄漏检测-LeakCanary 下一篇 React-native单元测试框架-Jest 顶 0 踩 0 我的同类文章 http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331331次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 39
URL:: http://blog.csdn.net/itfootball/article/details/49645229

ParseText::
React-native单元测试框架-Jest - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 React-native单元测试框架-Jest 2015-11-04 22:37 865人阅读 评论 (0) 收藏 举报 分类： react （37） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Jest 安装 使用命令 npm install jest-cli --save-dev 来安装 Jest 命令行: localhost: TesterHome wuxian$ npm install jest- cli --save-dev jest- cli @0 .7 .1 node_modules/jest- cli ├── jasmine-pit @2 .0 .2 ├── object-assign @4 .0 .1 ├── graceful-fs @4 .1 .2 ├── through @2 .3 .8 ├── resolve @1 .1 .6 ├── diff @2 .2 .0 ├── optimist @0 .6 .1 (wordwrap @0 .0 .3 , minimist @0 .0 .10 ) ├── json-stable-stringify @1 .0 .0 (jsonify @0 .0 .0 ) ├── mkdirp @0 .5 .1 (minimist @0 .0 .8 ) ├── which @1 .2 .0 (is-absolute @0 .1 .7 ) ├── worker-farm @1 .3 .1 (xtend @4 .0 .1 , errno @0 .1 .4 ) ├── node-haste @1 .2 .8 (esprima-fb @4001 .1001 .0 -dev-harmony-fb) ├── lodash .template @3 .6 .2 (lodash._basetostring @3 .0 .1 , lodash._reinterpolate @3 .0 .0 , lodash._basecopy @3 .0 .1 , lodash._basevalues @3 .0 .0 , lodash .restparam @3 .6 .1 , lodash .templatesettings @3 .1 .0 , lodash .escape @3 .0 .0 , lodash._isiterateecall @3 .0 .9 , lodash .keys @3 .1 .2 ) ├── sane @1 .3 .0 (watch @0 .10 .0 , minimist @1 .2 .0 , exec-sh @0 .2 .0 , walker @1 .0 .7 , minimatch @0 .2 .14 , fb-watchman @1 .6 .0 ) ├── cover @0 .2 .9 (which @1 .0 .9 , underscore @1 .2 .4 , underscore .string @2 .0 .0 , cli -table @0 .0 .2 ) ├── istanbul @0 .3 .22 (abbrev @1 .0 .7 , wordwrap @1 .0 .0 , nopt @3 .0 .4 , async @1 .5 .0 , once @1 .3 .2 , esprima @2 .5 .0 , escodegen @1 .7 .0 , supports-color @3 .1 .2 , fileset @0 .2 .1 , js-yaml @3 .4 .3 , handlebars @4 .0 .4 ) └── jsdom @7 .0 .2 (acorn-globals @1 .0 .9 , webidl-conversions @2 .0 .0 , xml-name-validator @2 .0 .1 , browser-request @0 .3 .3 , abab @1 .0 .0 , cssom @0 .3 .0 , symbol-tree @3 .1 .3 , nwmatcher @1 .3 .6 , tough-cookie @2 .2 .0 , parse5 @1 .5 .0 , acorn @2 .5 .2 , cssstyle @0 .2 .30 , whatwg-url-compat @0 .6 .5 , escodegen @1 .7 .0 , htmlparser2 @3 .8 .3 , request @2 .65 .0 ) 单元测试文件夹 Jest 默认执行 __tests__ (左右各两个下划线)文件下的单测 case ，所以在你的根目录下创建该目录: 编写case 目标文件为 sum.js : // sum.js function sum (value1, value2) { return value1 + value2; } module. exports = sum ; 在 __tests__ 目录下编写单元测试类 sum-test.js : // __tests__/sum-test.js jest.dontMock( '../sum' ); describe( 'sum' , function () { it( 'adds 1 + 2 to equal 3' , function () { var sum = require ( '../sum' ); expect(sum( 1 , 2 )).toBe( 3 ); }); }); 执行单测 命令为 npm test : localhost: TesterHome wuxian$ npm test > TesterHome @0 .0 .1 test /Users/wuxian/Documents/sourcecode/self/react-native/TesterHome > jest Using Jest CLI v0 .7 .1 PASS __tests__/sum-test .js ( 0.018 s) 1 test passed ( 1 total in 1 test suite, run time 0.555 s) 上一篇 “陆金所” 之移动应用体检报告 下一篇 Android安全专项测试之反编译 顶 0 踩 0 我的同类文章 react （37） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331337次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 40
URL:: http://blog.csdn.net/itfootball/article/details/49806269

ParseText::
Android安全专项测试之反编译 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android安全专项测试之反编译 2015-11-13 10:50 1097人阅读 评论 (5) 收藏 举报 分类： 安全 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 apktool 反编译APK 使用 apktool d <apk文件名> ,默认会生成和APK文件名同名的文件夹，里面会存放反编译后的文件: localhost: apk wuxian$ apktool d com .wangyin .payment - 3.11 .1 .apk I: Using Apktool 2.0 .1 on com .wangyin .payment - 3.11 .1 .apk I: Loading resource table... I: Decoding AndroidManifest .xml with resources... I: Loading resource table from file: /Users/wuxian/Library/apktool/framework/ 1. apk I: Regular manifest package... I: Decoding file-resources... I: Decoding values * /* XMLs... I: Baksmaling classes.dex... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... 反编译后的文件目录 assets:文件资源 lib:依赖库文件 original:原生文件 res:资源文件 smali:dalvik文件 unknown:其他 主要关注res文件夹和smail文件夹 res目录中的字符串文件篡改 Android中的字符串都保存在 res/values/strings.xml 中,如果可以修改这个文件，且能重新打包，那么我们的应用就被篡改了。我将应用名更改为 TesterHome ,且将 马上登录 改成了 马上登录TesterHome ; 重新编译 命令: apktool b <反编译后的目录> ： localhost: apk wuxian$ apktool b com .wangyin .payment - 3.11 .1 I: Using Apktool 2.0 .1 I: Checking whether sources has changed... I: Smaling smali folder into classes .dex ... I: Checking whether resources has changed... I: Building resources... I: Copying libs... (/lib) I: Building apk file... I: Copying unknown files/dir... 会在反编译目录下的 dist 目录下生成一个APK: 安装 这个时候安装会报错: localhost: dist wuxian$ adb install com .wangyin .payment - 3.11 .1 .apk 992 KB/s ( 27039435 bytes in 26.616 s) pkg: /data/local/tmp/ com .wangyin .payment - 3.11 .1 .apk Failure [INSTALL_PARSE_FAILED_NO_CERTIFICATES] 因为没有证书，我们需要给应用签名。 重签名 重签名需要如下几个文件: signapk.jar,testkey.x509.pem,testkey.pk8 三个文件，有了这个文件后执行如下命令给应用签名( auto_sign )。 重签命令: java -jar signapk.jar testkey.x509.pem testkey.pk8 com.wangyin.payment-3.11.1.apk testerhome.apk 签名成功后，会生成一个新的 apk:testerhome.apk 。这个时候安装就成功了。 效果 上一篇 React-native单元测试框架-Jest 下一篇 Android安全专项测试之Dex2jar 顶 0 踩 0 我的同类文章 安全 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331339次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 41
URL:: http://blog.csdn.net/itfootball/article/details/49815179

ParseText::
Android安全专项测试之Dex2jar - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Android安全专项测试之Dex2jar 2015-11-13 11:51 513人阅读 评论 (0) 收藏 举报 分类： 安全 （1） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 dex2jar 辅助工具 JD-GUI dex2jar包 下载完dex2jar包后，解压缩后得到下面的目录: 反编译 讲APK包后缀名改为 .zip 文件，然后解压缩，解压缩后得到的文件目录如下: 这个里面和 apktool 工具反编译的文件是有区别的，比如 AndroidManifest.xml 文件没有之前那么清晰，看不到原来数据: 当然这个地方我们不关心这个，我们主要看 classes.dex 文件,把这个文件 copy 到 dex2jar 目录下。 给 d2j_invoke.sh 添加执行权限，后执行如下命令: chmod + x d2j_invoke .sh sh d2j-dex2jar .sh classes .dex 然后会生成一个jar包: JD-GUI打开 剩下的就是分析了。 更新 其实 dex2jar 可以直接把APK文件转成jar包。 58 deMacBook-Pro- 7 :dex2jar- 2.0 wuxian$ sh d2j-dex2jar .sh classes .dex dex2jar classes .dex -> ./classes-dex2jar .jar 58 deMacBook-Pro- 7 :dex2jar- 2.0 wuxian$ sh d2j-dex2jar .sh a_1 .apk dex2jar a_1 .apk -> ./a_1-dex2jar .jar 上一篇 Android安全专项测试之反编译 下一篇 第一个Shell脚本-lint检查以及报告收集 顶 0 踩 0 我的同类文章 安全 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331326次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 42
URL:: http://blog.csdn.net/itfootball/article/details/49929293

ParseText::
第一个Shell脚本-lint检查以及报告收集 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 第一个Shell脚本-lint检查以及报告收集 2015-11-19 16:14 448人阅读 评论 (0) 收藏 举报 分类： Shell 版权声明：本文为博主原创文章，未经博主允许不得转载。 作用 在不需要开发修改android项目配置文件的情况下，执行Android lint检查，检查完后，将各个aar包下的检查结果从远程机器copy到节点机器上来。 源码 #!/bin/sh #用于Android Lint检查项目中，将构建任务中的lint文件copy到当前job中 #从pmo机器中将所有的build文件保存到本地机器上来 #lint文件所在的根目录 work_dir= $1 #需要移动到目标目录 target_dir= $2 echo "lint源目录 : " + $work_dir echo "lint将要移动到的目录 : " + $target_dir echo "============================start=============" # 清空结果目录 delete_report_dir (){ if [ ! -d $target_dir /report ]; then mkdir $target_dir /report fi for dir2del in $target_dir /report/* ; do if [ -d $dir2del ]; then rm -rf $dir2del fi done } echo "================delete_report_dir_end============" #移动文件到报告目录 move_dir_lint_file (){ currenDir= $1 for i in `find $currenDir `; do if [[ " ${i##*/} " =~ "lint-results" ]]; then dir_file= $target_dir /report/ ${currenDir##*/} # echo "目标存放目录"+$dir_file # echo "目标文件:" + $i mkdir -p $dir_file cp -rf $i $dir_file fi done } echo "================move_dir_lint_file============" list_alldir (){ for file2 in `ls -a $work_dir ` do if [ x " $file2 " != x "." -a x " $file2 " != x ".." ]; then if [ -d " $work_dir / $file2 " ]; then echo " $work_dir / $file2 " move_dir_lint_file $work_dir / $file2 fi fi done } echo "================list_alldir_end============" 上一篇 Android安全专项测试之Dex2jar 下一篇 react-native试玩(8)-列表视图 顶 0 踩 0 我的同类文章 http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 qhshiniba 访问： 331323次 积分： 7957 等级： 积分：7957 排名： 第1303名 原创： 428篇 转载： 1篇 译文： 9篇 评论： 307条 文章搜索 博客专栏 Android性能专项测试 文章：11篇 阅读：13514 react-native试玩 文章：36篇 阅读：13353 UI Testing in Xcode7 文章：8篇 阅读：3201 gradle 文章：31篇 阅读：25318 Appium之android平台的源码分析 文章：17篇 阅读：16712 Cts框架解析 文章：24篇 阅读：21360 文章分类 ios (3) cts (24) swift (13) android自动化测试 (32) android (38) 谋略 (6) 算法与数据结构 (40) mac (2) python (26) appium (37) java (6) 设计模式 (11) android studio 1.0 (3) gradle (40) R语言 (7) uiautomator (22) instrumentation (7) monkeytalk (1) objective-c (6) CI (8) node-js (8) git (12) infer (19) docker (4) iOS-ui (8) iOS自动化测试 (1) native (32) react (38) Android性能 (14) 爆破 (1) 安全 (2) Shell (1) web (1) 文章存档 2015年12月 (1) 2015年11月 (5) 2015年10月 (10) 2015年09月 (39) 2015年08月 (5) 2015年07月 (10) 2015年06月 (35) 2015年05月 (12) 2015年04月 (12) 2015年03月 (17) 2015年02月 (15) 2015年01月 (52) 2014年12月 (43) 2014年11月 (18) 2014年10月 (15) 2014年09月 (12) 2014年08月 (35) 2014年07月 (34) 2014年06月 (12) 2014年05月 (25) 2014年04月 (21) 2014年03月 (12) 阅读排行 android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (10044) Android自动化测试中AccessibilityService获取控件信息（1） (7347) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (5244) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (4303) Android Framework中的Application Framework层介绍 (4178) uiautomator中的UiDevice学习笔记(1) (3760) Cts框架解析(1)-windows下cts配置 (3624) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (3509) appium框架之bootstrap (3356) 利用jsonrpc技术包装uiautomator (3247) 评论排行 Android自动化测试中AccessibilityService获取控件信息（1） (29) uiautomator中的UiDevice学习笔记(1) (26) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（2） (23) JS-网页中分页栏 (21) Android自动化测试中uiautomator修改uiautomatorviewer获取不到动态界面的缺陷 (17) android自动化测试中hierarchyviewer和uiautomatorviewer获取控件信息的方式比对（1） (14) Android自动化测试中AccessibilityService获取控件信息（2）-三种方式对比 (14) 将uiautomator的case日志输出成xml格式的方式 (13) 利用jsonrpc技术包装uiautomator (12) FaceBook/infer-安装说明 (10) 最新评论 FaceBook/infer-安装说明 qhshiniba : @Miehalu:嗯 FaceBook/infer-安装说明 Miehalu : 这个工具windows环境不能用吗 JS-网页中分页栏 xiaofanku : @qhshiniba:不懂重构，写不出你这种代码。但不能代表我种菜鸟分不清代码好坏 JS-网页中分页栏 qhshiniba : @xiaofanku:别什么重构不重构的了，说的好像你懂似的 JS-网页中分页栏 xiaofanku : @qhshiniba:精练的代码是不是更可以传达编码人的设计意图。看过我写的东东你判定我水平低能力差... JS-网页中分页栏 xiaofanku : @qhshiniba:有人觉得我的文字或言语不能接受我承人。毕竟我们都没有深仇大伤。故意中伤人不是我... JS-网页中分页栏 qhshiniba : @xiaofanku:我还是那句话，重点在思考的部分，而不在于代码。 JS-网页中分页栏 xiaofanku : @qhshiniba:如果有人对我的笔记或代码提出建议。我很高兴。起码人家花时间看了我写的东东。分页... JS-网页中分页栏 qhshiniba : @xiaofanku:如果你说的对，当然是会接受的，本来公开的东西是要接受吐槽的，但是重点你没把握住... JS-网页中分页栏 xiaofanku : @qhshiniba:大家互相学习吗！如果有人说我能力差或写的哪不好我自已努力。听不得有人说不好的话...

Recno:: 43
URL:: http://blog.csdn.net/itfootball/article/details/50358483

ParseText::
JS-网页中分页栏 - D.Q的专栏 - 博客频道 - CSDN.NET D.Q的专栏 专注移动互联网测试领域,请关注testerhome.com社区 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 JS-网页中分页栏 2015-12-19 16:26 616人阅读 评论 (21) 收藏 举报 分类： web 版权声明：本文为博主原创文章，未经博主允许不得转载。 原理 三部分 我给分页栏分成了3部分 上一页:调用prePage()函数 下一页:调用nextPage()函数 带有数字标识的部，调用skipPage()函数 prePage函数 function prePage () { var val = $( '#pageLi li.active' ).text(); // 获取当前li的索引值 if (val == 1 ) { return ; } var page = val - 1 ; var ind = $( '#pageLi li.active' ).index(); ele = $( '#pageLi li' ).eq(ind - 1 ).children(); console.log( "page : " + page + ",ele :" + ele); skipPage(page, ele); } 该函数首先判断是否已到第一个，如果已经是第一个了，就不再做处理，否则，需要得到当前页的上一页的值和上一页所在的 li 控件，最后调用 skipPage() nextPage函数 function nextPage (page) { var val = $( '#pageLi li.active' ).text(); if (val == $( '#lastPage' ).text()) { return ; } // 获取当前li的索引值 var ind = $( '#pageLi li.active' ).index(); var page = Number (val) + 1 ; ele = $( '#pageLi li' ).eq(ind + 1 ).children(); console.log( "page : " + page + ",ele :" + ele); skipPage(page, ele); } 下一页是向下翻页，首先判断时候已到最后一页，如果到了最后一页，我们就不在处理，否则获取当前页的下一页值和’li’控件。 skipPage函数 function skipPage(id, ele) { var page = $( ele).text(); $( '#pageLi li' ).removeClass( "disabled" ); $( '#pageLi li' ).removeClass( "active" ); // $( '#pageLi li' ).addClass( "active" ); $( ele).parent().addClass( "active" ); // 给 "上一页" 按钮添加不可点击样式 if (page == 1 ) { $( '#pageLi li:first' ).addClass( "disabled" ); } // 给 "下一页" 添加不可点击样式 // console.log( "最大页 :" + $( '#lastPage' ).text()) if (page == $( '#lastPage' ).text()) { $( "#pageLi li:last-child" ).addClass( "disabled" ); // $( '#lastLi' ).addClass( "disabled" ); } // $( '#omitLi' ).addClass( "disabled" ); refreshLi(page, $( ele).parent().index()); } 该函数首先得到页码值，然后清楚所有页码的 class 信息,给当前要显示的页码添加 active 样式，使其高亮，然后判断 上一页 和 下一页 是否可点击，一切完成后，来到最重要的步骤，更新分页栏上的页码值，因为要符合实际要求就要，每个页面都能选择，所以来看 refreshLi 方法的实现。 refreshLi函数 function refreshLi (page, ind) { console.log( "total : " + $( '#lastPage' ).text()); if ($( '#lastPage' ).text() <= 10 ) { return ; } var left = false ; if ($( "#leftOmitLi" ).children().text() == "..." ) { left = true ; } var right = false ; if ($( "#omitLi" ).children().text() == "..." ) { right = true ; } parse(left, right, ind); } 该函数传入的3个参数分别为： left:左省略号是否存在 right:右省略号是否存在 ind:当前点击的li的索引值 判断的标准就是控件 id 为 leftOmitLi 和 omitLi 的控制中文本值是否为 ... ，然后进入我们的parse函数 parse函数 function parse(left, right, ind) { console. log ( "left : " + left + ",right : " + right + ",ind : " + ind + ",totalSize : " + $( '#lastPage' ).text()); // 总页数 var pageTotalSize = Number( $( '#lastPage' ).text()); if (!left && right) { // 只有右省略 if (ind == rightIndex - 1 ) { // 右省略后的左边第一个,出现左省略,同事右省略左边要+ 1 // 点击右省略左边第一个,右省略左边第一个要+ 1 console. log ( "点击 : " + $( '#pageLi li' ).e q(ind) .children().text()) if (Number( $( '#pageLi li' ).e q(ind) .children().text()) == pageTotalSize - 4 ) { onlyLeft(pageLiCount, pageTotalSize); } else { rightFirstleftAndRight(ind); } } else if (ind < rightIndex - 1 ) { // 点击左边其他，不分页不变化 // no do } else if (ind > rightIndex) { // 右省略右边的,右省略消失,左省略出现 onlyLeft(pageLiCount, pageTotalSize); } } else if (!right && left) { if (ind < leftIndex) { // 左省略左边,左省略小时,右省略出现 onlyRight(pageLiCount, pageTotalSize); } else if (ind == leftIndex + 1 ) { // //左省略右边第一个,出现右省略,同时左省略右边第一个要- 1 if ( $( '#pageLi li' ).e q(ind) .children().text() == 4 ) { onlyRight(pageLiCount, pageTotalSize); } else { leftFirstleftAndRight(ind); } } else if (ind > leftIndex + 1 ) { // 不变化 // no do } } else if (left && right) { if (ind < leftIndex) { // 点击左省略左边,左省略小时,只有右省略 onlyRight(pageLiCount, pageTotalSize); } else if (ind == leftIndex + 1 ) { // 点击左省略的右边第一个,左省略右边第一个要- 1 if ( $( '#pageLi li' ).e q(ind) .children().text() == 4 ) { onlyRight(pageLiCount, pageTotalSize); } else { leftFirstleftAndRight(ind); } } else if (ind == rightIndex - 1 ) { // 点击右省略左边第一个,右省略左边第一个要+ 1 console. log ( "点击 : " + $( '#pageLi li' ).e q(ind) .children().text()) if (Number( $( '#pageLi li' ).e q(ind) .children().text()) == pageTotalSize - 4 ) { onlyLeft(pageLiCount, pageTotalSize); } else { rightFirstleftAndRight(ind); } } else if (ind > rightIndex) { // 点击右省略右边,右省略消失,只有左省略 onlyLeft(pageLiCount, pageTotalSize); } } } 该函数就有点负责了，我变化之前的情况分了3种： 有左省略 有右省略 既有左省略，也有右省略 针对每个情况有分出很多情况 只有左省略 1.我此时点击左省略左边的页码(也就是图中的1，2)，应该变成只有有省略的情况代码如下： // 只有右省略 function onlyRight (pageLiCount, pageTotalSize) { console.log( "onlyRight" ); for ( var i = 1 ; i <= rightIndex; i++) { if (i == leftIndex) { $( '#leftOmitLi' ).removeClass( "disabled" ); $( '#leftOmitLi' ).children().text(leftIndex); } else if (i == rightIndex) { $( '#omitLi' ).addClass( "disabled" ); $( '#omitLi' ).children().text( "..." ); } else { $( '#pageLi li' ).eq(i).children().text(i); } } } 处理完后变成如下所示: 2.如果此时我点击左省略号右边第一个，那么应该是什么样的，应该变成即有左省略，也有右省略，且两个省略号中间的数字要递减1.且被点击的页码高亮效果要想后退一格显示，因为页码递减了。代码如下: // 既有左也有右,左省略号右边第一个 function leftFirstleftAndRight(ind) { console. log ( "leftFirstleftAndRight" ); var text = Number( $( '#pageLi li' ).e q(ind) .children().text()) - 1 ; console. log ( "text : " + text) var d = 0 ; for (var i = leftIndex + 1 ; i < rightIndex; i++) { $( '#pageLi li' ).e q(i) .children().text(text + (d++)); } $( '#pageLi li' ).e q(leftIndex + 1) .removeClass( "active" ); $( '#pageLi li' ).e q(leftIndex + 2) .addClass( "active" ); $( '#leftOmitLi' ).addClass( "disabled" ); $( '#leftOmitLi' ).children().text( "..." ); $( '#omitLi' ).addClass( "disabled" ); $( '#omitLi' ).children().text( "..." ); } 处理完的效果如下: 但是这个时候也有一个情况需要判断就是，当中间第一个的数字和右边的2差两个的话，比如上面我再点击一次5的话，这个时候出现了4，5，6，而4和2相差2，这个时候再点击4的话，需要把左省略去掉了，因为没有多余的数字了，只有一个3了，你还隐藏啥,所以我们做了判断如下，如果是刚才这种情况，直接变成只有右省略的情况， // // 左省略右边第一个,出现右省略,同时左省略右边第一个要- 1 if ( $( '#pageLi li' ).e q(ind) .children().text() == 4 ) { onlyRight(pageLiCount, pageTotalSize); } else { leftFirstleftAndRight(ind); } 变化后的效果如下： 3.第三种情况我们不做处理，原因自己理解。 只有右省略 1.点击右省略左边最靠近的第一个，比如上图中的 7 。 这个时候需要出现左省略，然后中间部分递增+1 这个地方也有一个例外，就是当点击的点与右省略右边第一个相差2个的时候，我们也会变成只有左省略的情况，所以代码中做了判断，如下 if (Number( $( '#pageLi li' ).e q(ind) .children().text()) == pageTotalSize - 4 ) { onlyLeft(pageLiCount, pageTotalSize); } else { rightFirstleftAndRight(ind); } 效果如下： 2.点击右省略右边，变成左省略。那我们就调用左省略函数onlyRight 3.点击右省略左边除最靠近的第一个外，不做处理。 既有左省略，也有右省略 这个地方其实涵盖了上面的所有情况，不再叙说 总结 做这个分页栏的时候，比较容易造成混淆的是，li的索引值和其问文本值是没有关联的，所以在变化值的时候要以文本值来递减(增)，不能以索引值来递减(增)。 最近在写网页，用JS手写了一个分页栏 效果 html代码 < ul class = "pagination pagination-sm" id = "pageLi" > < li class = "disabled" > < a href = "javascript:;" onClick = "prePage()" > &laquo; </ a > </ li > < li class = "active" > < a href = "javascript:;" onClick="skipPage(1,this)" > 1 </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(2,this)" > 2 </ a > </ li > < li id = "leftOmitLi" > < a href = "javascript:;" onClick="skipPage(3,this)" > 3 </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(4,this)" > 4 </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(5,this)" > 5 </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(6,this)" > 6 </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(7,this)" > 7 </ a > </ li > < li class = "disabled" id = "omitLi" > < a href = "javascript:;" onClick="skipPage(9,this)" > ... </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(11,this)" > 11 </ a > </ li > < li > < a href = "javascript:;" onClick = "skipPage(12,this)" id = "lastPage" > 12 </ a > </ li > < li id = "lastLi" > < a href = "javascript:;" onClick = "nextPage()" > &raquo; </ a > </ li > </ ul > Js代码 // 分页栏的数量 var pageLiCount = 10 ; // 左边省略出现的位置 var leftIndex = 3 ; // 右边省略出现的位置 var rightIndex = 8 ; var totalPage = $( '#lastPage' ).text(); function skipPage (id, ele) { var page = $(ele).text(); var tablebody = $( "#resultTable tbody" ); $( '#pageLi li' ).removeClass( "disabled" ); $( '#pageLi li' ).removeClass( "active" ); // $('#pageLi li').addClass("active"); $(ele).parent().addClass( "active" ); // 给"上一页"按钮添加不可点击样式 if (page == 1 ) { $( '#pageLi li:first' ).addClass( "disabled" ); } // 给"下一页"添加不可点击样式 // console.log("最大页 :" + $('#lastPage').text()) if (page == $( '#lastPage' ).text()) { $( "#pageLi li:last-child" ).addClass( "disabled" ); // $('#lastLi').addClass("disabled"); } // $('#omitLi').addClass("disabled"); refreshLi(page, $(ele).parent().index()); $ .get( "/rs/resultByPage/" + page, function (response) { console.log(response); var data = eval (response); if (data.length != 0 ) { tablebody.html( "" ); for ( var i = 0 ; i < data.length; i++) { console.log(data[i]); $( "<tr>" + "<td>" + data[i].id + "</td>" + "<td>" + data[i].uid + "</td>" + "<td>" + data[i].appversionEntity.version + "</td>" + "<td>" + data[i].appversionEntity.productid + "</td>" + "<td>" + data[i].uploadtime + "</td>" + "<td>" + "<button type=\"button\" class=\"btn btn-danger\" onClick=\"deleteViewtypeById(" + data[i].id + ")\">" + "删除</button><button type=\"button\" class=\"btn btn-info\" onClick=\"goUpdateViewtype(" + data[i].id + ")\"" + " id=\"updateViewtypeButton\">" + "详情</button>" + "</td>" + "</tr>" ).appendTo(tablebody); } } }); } function prePage () { var val = $( '#pageLi li.active' ).text(); // 获取当前li的索引值 if (val == 1 ) { return ; } var page = val - 1 ; var ind = $( '#pageLi li.active' ).index(); ele = $( '#pageLi li' ).eq(ind - 1 ).children(); console.log( "page : " + page + ",ele :" + ele); skipPage(page, ele); } function nextPage (page) { var val = $( '#pageLi li.active' ).text(); if (val == $( '#lastPage' ).text()) { return ; } // 获取当前li的索引值 var ind = $( '#pageLi li.active' ).index(); var page = Number (val) + 1 ; ele = $( '#pageLi li' ).eq(ind + 1 ).children(); console.log( "page : " + page + ",ele :" + ele); skipPage(page, ele); } function refreshLi (page, ind) { console.log( "total : " + $( '#lastPage' ).text()); if ($( '#lastPage' ).text() <= 10 ) { return ; } var left = false ; if ($( "#leftOmitLi" ).children().text() == "..." ) { left = true ; } var right = false ; if ($( "#omitLi" ).children().text() == "..." ) { right = true ; } parse(left, right, ind); } function parse (left, right, ind) { console.log( "left : " + left + ",right : " + right + ",ind : " + ind + ",totalSize : " + $( '#lastPage' ).text()); // 总页数 var pageTotalSize = Number ($( '#lastPage' ).text()); if (!left && right) { // 只有右省略 if (ind == rightIndex - 1 ) { // 右省略后的左边第一个,出现左省略,同事右省略左边要+1 // 点击右省略左边第一个,右省略左边第一个要+1 console.log( "点击 : " + $( '#pageLi li' ).eq(ind).children().text()) if ( Number ($( '#pageLi li' ).eq(ind).children().text()) == pageTotalSize - 4 ) { onlyLeft(pageLiCount, pageTotalSize); } else { rightFirstleftAndRight(ind); } } else if (ind < rightIndex - 1 ) { // 点击左边其他，不分页不变化 // no do } else if (ind > rightIndex) { // 右省略右边的,右省略消失,左省略出现 onlyLeft(pageLiCount, pageTotalSize); } } else if (!right && left) { if (ind < leftIndex) { // 左省略左边,左省略小时,右省略出现 onlyRight(pageLiCount, pageTotalSize); } else if (ind == leftIndex + 1 ) { // //左省略右边第一个,出现右省略,同时左省略右边第一个要-1 if ($( '#pageLi li' ).eq(ind).children().text() == 4 ) { onlyRight(pageLiCount, pageTotalSize); } else { leftFirstleftAndRight(ind); } } else if (ind > leftIndex + 1 ) { // 不变化 // no do } } else if (left && right) { if (ind < leftIndex) { // 点击左省略左边,左省略小时,只有右省略 onlyRight(pageLiCount, pageTotalSize); } else if (ind == leftIndex + 1 ) { // 点击左省略的右边第一个,左省略右边第一个要-1 if ($( '#pageLi li' ).eq(ind).children().text() == 4 ) { onlyRight(pageLiCount, pageTotalSize); } else { leftFirstleftAndRight(ind); } } else if (ind == rightIndex - 1 ) { // 点击右省略左边第一个,右省略左边第一个要+1 console.log( "点击 : " + $( '#pageLi li' ).eq(ind).children().text()) if ( Number ($( '#pageLi li' ).eq(ind).children().text()) == pageTotalSize - 4 ) { onlyLeft(pageLiCount, pageTotalSize); } else { rightFirstleftAndRight(ind); } } else if (ind > rightIndex) { // 点击右省略右边,右省略消失,只有左省略 onlyLeft(pageLiCount, pageTotalSize); } } } // --------------变成什么样,如下所示 // 只有左省略 function onlyLeft (pageLiCount, pageTotalSize) { console.log( "onlyLeft" ); for ( var i = pageLiCount; i >= leftIndex; i--) { if (i == leftIndex) { $( '#leftOmitLi' ).addClass( "disabled" ); $( '#leftOmitLi' ).children().text( "..." ); } else if (i == rightIndex) { $( '#omitLi' ).removeClass( "disabled" ); $( '#omitLi' ).children().text(pageTotalSize - 2 ); } else { var inText = pageTotalSize - (pageLiCount - i); $( '#pageLi li' ).eq(i).children().text(inText); } } } // 只有右省略 function onlyRight (pageLiCount, pageTotalSize) { console.log( "onlyRight" ); for ( var i = 1 ; i <= rightIndex; i++) { if (i == leftIndex) { $( '#leftOmitLi' ).removeClass( "disabled" ); $( '#leftOmitLi' ).children().text(leftIndex); } else if (i == rightIndex) { $( '#omitLi' ).addClass( "disabled" ); $( '#omitLi' ).children().text( "..." ); } else { $( '#pageLi li' ).eq(i).children().text(i); } } } // 既有左也有右,左省略号右边第一个 function leftFirstleftAndRight (ind) { console.log( "leftFirstleftAndRight" ); var text = Number ($( '#pageLi li' ).eq(ind).children().text()) - 1 ; console.log( "text : " + text) var d = 0 ; for ( var i = leftIndex + 1 ; i < 8 ; i++) { $( '#pageLi li' ).eq(i).children().text(text + (d++)); } $( '#pageLi li' ).eq(leftIndex + 1 ).removeClass( "active" ); $( '#pageLi li' ).eq(leftIndex + 2 ).addClass( "active" ); $( '#leftOmitLi' ).addClass( "disabled" ); $( '#leftOmitLi' ).children().text( "..." ); $( '#omitLi' ).addClass( "disabled" ); $( '#omitLi' ).children().text( "..." ); } // 既有左也有右,右省略号左边第一个 function rightFirstleftAndRight (ind) { console.log( "rightFirstleftAndRight" ); console.log( "内容为 : " + $( '#pageLi li' ).eq(ind).text()) var text = Number ($( '#pageLi li' ).eq(ind).text()); var d = 1 ; for ( var i = rightIndex - 1 ; i > leftIndex; i--) { console.log( "text : " + text + ",d = " + d) $( '#pageLi li' ).eq(i).children().text(text + (d--)); } $( '#pageLi li' ).eq(rightIndex - 1 ).removeClass( "active" ); $( '#pageLi li' ).eq(rightIndex - 2 ).addClass( "active" ); $( '#leftOmitLi' ).addClass( "disabled" ); $( '#leftOmitLi' ).children().text( "..." ); $( '#omitLi' ).addClass( "disabled" ); $( '#omitLi' ).children().text( "..." ); } 上一篇 react-native试玩(8)-列表视图 顶 1 踩 0 我的同类文章 http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

Recno:: 44
URL:: http://blog.csdn.net/itmyhome1990/article/details/44207407

ParseText::
2015任务清单 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 [置顶] 2015任务清单 标签： 2015 任务清单 2015-03-12 22:10 1486人阅读 评论 (27) 收藏 举报 分类： 工作之余 （10） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 写下这篇文章 2015已过去四分之一有余，不管怎样，计(zhuang)划(bi)还是要有的 一、考驾照：不能再拖了，三八那天已报名 二、学习Maven:  一个牛逼的程序员怎能不懂maven呢，遂学之 三、读书：包括但不局限于如下书籍 Java学习笔记 林信良 著  jQuery高级编程   施宏斌 译  Java与XML 江文 译          SQL案例解析   徐桂详 著     软件随想录 阮一峰 译  研磨设计模式 陈臣 王斌 著          目送 龙应台 著          撒哈拉的沙漠 三毛 著          透过佛法看世界 希阿荣博堪布 著  以上都有纸质书籍，这次要重读他们,说重读实在是惭愧，从买来之后很少翻阅  这次我不会让你们安静的躺在那里了，我要把你翻来覆去O(∩_∩)O 任你虐我千百遍我仍待你如初恋 四、做饭：至少学会做十种菜以上，目前已会：青椒炒蛋、韭菜炒蛋、西红柿炒蛋 五、锻炼：这是一项漫长而艰巨的任务，最终目的是有机会跑个马拉松。 六、待补充 立此为证 最终解释权归本人所有 --------------- 蛋疼的分割线(以下文字逐步介绍清单完成情况...) -------------------------- 2015清单至此已整整一个月了，总结下完成进度 一、正在练习科二 二、已学习完Maven之前奏Ant 三、惭愧，还未进行阅读 四、已会做八种菜，在此不一一列举了，实在是难以拿出手 五、坚持锻炼中                                                                                                                                                                2015-4-12  记 上一篇 JS严格校验身份证号 下一篇 Headroom.js插件使用方法 顶 13 踩 1 我的同类文章 工作之余 （10） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953395次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 45
URL:: http://blog.csdn.net/itmyhome1990/article/details/50011717

ParseText::
jQuery自动触发事件trigger使用 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 jQuery自动触发事件trigger使用 标签： jquery trigger 2015-11-26 22:34 870人阅读 评论 (2) 收藏 举报 分类： jQuery （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 有时候，需要通过模拟用户操作，来达到点击的效果，例如用户进入页面后 就触发click事件，而无需主动点击。 比如以下代码： < body > < a href = "#" onclick = "javascript:document.getElementById('d').innerHTML='x1'" > 点击1 </ a > < a href = "#" onclick = "javascript:document.getElementById('d').innerHTML='x2'" > 点击2 </ a > < a href = "#" onclick = "javascript:document.getElementById('d').innerHTML='x3'" > 点击3 </ a > </ br > < span id = "d" > </ span > </ body > 实现效果为’点击1’页面上将显示x1 ,’点击2’页面上显示x2 … 但需要实现首次进入页面为默认是’点击1’ 在jQuery中，可以使用trigger()方法完成模拟操作。 例如可以使用下面的代码来触发A链接的click事件。 $( 'a' ).first().trigger( "click" ); 这样 当页面加载完毕后，触发第一个A链接的click事件，页面将显示x1 触发自定义事件 trigger()方法不仅能触发浏览器支持的具有相同名称的事件，也可以触发自定义名称的事件。 例如为元素绑定一个”myEvent”的事件,jQuery代码如下： $( '#btn' ).bind( "myEvent" , function () { alert( "自定义事件" ); }); 想要触发这个事件,可以使用以下代码来实现： $( '#btn' ).trigger( "myEvent" ); 传递数据 trigger(type,[data])方法有两个参数， 第1个是事件对象或者要触发的事件类型, 第2个参数是传递给事件处理函数的附加参数,以数组形式传递。通常可以通过传递一个参数给 回调函数来区别这次事件是代码触发的还是用户触发的。 下面是一个传递数据的例子。 $( '#btn' ).bind( "myEvent" , function (event,message1,message2) { alert(message1 + "," + message2); }); $( '#btn' ).trigger( "myEvent" , [ "Hello" , "World!" ]); 作者： itmyhome 上一篇 java.lang.NoSuchFieldError: deferredExpression 下一篇 jQuery获取this当前对象子元素对象 顶 1 踩 0 我的同类文章 jQuery （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953394次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 46
URL:: http://blog.csdn.net/itmyhome1990/article/details/50016453

ParseText::
java.lang.NoSuchFieldError: deferredExpression - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 java.lang.NoSuchFieldError: deferredExpression 标签： jstl 2015-11-25 22:56 486人阅读 评论 (0) 收藏 举报 分类： 异常错误 （28） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 使用JSTL的c:forEach标签JSP报如下错误： java.lang.NoSuchFieldError: deferredExpression at org .apache .taglibs .standard .tag .common .core .ForEachSupport .release (ForEachSupport .java : 178 ) at org .apache .jasper .runtime .TagHandlerPool .release (TagHandlerPool .java : 166 ) at org .apache .jsp .index _jsp._jspDestroy(index_jsp .java : 32 ) at org .apache .jasper .runtime .HttpJspBase .destroy (HttpJspBase .java : 61 ) at org .apache .jasper .servlet .JspServletWrapper .destroy (JspServletWrapper .java : 439 ) at org .apache .jasper .servlet .JspServletWrapper .getServlet (JspServletWrapper .java : 144 ) at org .apache .jasper .servlet .JspServletWrapper .service (JspServletWrapper .java : 340 ) at org .apache .jasper .servlet .JspServlet .serviceJspFile (JspServlet .java : 313 ) at org .apache .jasper .servlet .JspServlet .service (JspServlet .java : 260 ) at javax .servlet .http .HttpServlet .service (HttpServlet .java : 723 ) 原因是项目中有多个jstl.jar,删除一个即可 如果还报错，删除work文件，clean重新编译 作者： itmyhome 上一篇 List<Map<String, Object>> 中文字段排序 下一篇 jQuery自动触发事件trigger使用 顶 0 踩 0 我的同类文章 异常错误 （28） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953390次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 47
URL:: http://blog.csdn.net/itmyhome1990/article/details/50112315

ParseText::
jQuery获取this当前对象子元素对象 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 jQuery获取this当前对象子元素对象 标签： jquery 对象 this 2015-11-30 23:03 727人阅读 评论 (0) 收藏 举报 分类： jQuery （40） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 < select id = "city" > < option value = "beijing" > 北京 </ option > < option value = "shanghai" > 上海 </ option > < option value = "shenzhen" > 深圳 </ option > </ select > $( function () { $( "#city" ).change( function () { ① // 已获取select为当前this元素 }) }) 如果想要在①获取选中option的值可以有如下方法 $( "#city option:selected" ).val(); //使用选择器 $( this ).children( 'option:selected' ).val() //使用this 有时候我们会想当然的这样写 $ (this “a”), $ (“this a”)之类，这样是不对的 作者： itmyhome 上一篇 jQuery自动触发事件trigger使用 下一篇 百度地图API 判断点击的是地图还是覆盖物 顶 1 踩 0 我的同类文章 jQuery （40） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953390次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 48
URL:: http://blog.csdn.net/itmyhome1990/article/details/50114385

ParseText::
百度地图API 判断点击的是地图还是覆盖物 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 百度地图API 判断点击的是地图还是覆盖物 标签： api 百度地图 2015-12-01 23:00 962人阅读 评论 (0) 收藏 举报 分类： 百度地图 （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在百度地图上圆形区域检索，返回圆形覆盖范围内的”公司”检索结果，并展示在地图上 当点击检索结果(标注)进行查看的时候会再次以此为原点进行检索 原因是该覆盖物在地图之上，点击覆盖物也就是点击了地图 所以要判断点击的是地图还是覆盖物。 查看地图事件 我们看到click事件有以上参数，通过这些参数就能判断所点击为何物。 举个栗子： 先创建一个Marker //覆盖物Marker var point = new BMap.Point( 116.323524 , 39.989145 ); var mark = new BMap.Marker(point); map.addOverlay(mark); 然后对地图添加点击事件，如果是覆盖物就弹出相应信息 map.addEventListener( "click" , function (e) { if (e.overlay){ alert( '您点击的是覆盖物：' +e.overlay.toString()); } else { alert( '您点击的是地图' ); } }) 到此时我们只是判断了是覆盖物还是地图，而覆盖物又分为好多种 有 Marker、Polygon、Circle 等等 而如开题所说Marker在Circle之内，如果不想点击Marker触发click事件就需要 再次判断是何种覆盖物 如下代码即可点击Marker不触发click事件 if (e.overlay && e.overlay.toString() != '[object Circle]' ){ } else { map.clearOverlays(); //移除标注 var point_d = new BMap.Point(e.point.lng,e.point.lat) var circle = new BMap.Circle(point_d, 400 ,{fillColor: "blue" , strokeWeight: 1 ,fillOpacity: 0.3 , strokeOpacity: 0.3 }); circle.setRadius( 400 ); map.addOverlay(circle); var local = new BMap.LocalSearch(map, {renderOptions: {map: map, autoViewport: false }}); local.searchNearby( "公司" ,point_d, 400 ); } 效果演示： http://itmyhome.com/baidu_map/ . 作者： itmyhome 上一篇 jQuery获取this当前对象子元素对象 下一篇 百度地图API 判断点是否在圆形内 顶 2 踩 0 我的同类文章 百度地图 （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953396次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 49
URL:: http://blog.csdn.net/itmyhome1990/article/details/50114779

ParseText::
百度地图API 判断点是否在圆形内 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 百度地图API 判断点是否在圆形内 标签： api 百度地图 2015-12-03 22:42 724人阅读 评论 (0) 收藏 举报 分类： 百度地图 （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 /** * @fileoverview GeoUtils类提供若干几何算法，用来帮助用户判断点与矩形、 * 圆形、多边形线、多边形面的关系,并提供计算折线长度和多边形的面积的公式。 * 主入口类是<a href="symbols/BMapLib.GeoUtils.html">GeoUtils</a>， * 基于Baidu Map API 1.2。 * * @author Baidu Map Api Group * @version 1.2 */ /** * @namespace BMap的所有library类均放在BMapLib命名空间下 */ var BMapLib = window.BMapLib = BMapLib || {}; ( function () { /** * 地球半径 */ var EARTHRADIUS = 6370996.81 ; /** * @exports GeoUtils as BMapLib.GeoUtils */ var GeoUtils = /** * GeoUtils类，静态类，勿需实例化即可使用 * @class GeoUtils类的<b>入口</b>。 * 该类提供的都是静态方法，勿需实例化即可使用。 */ BMapLib.GeoUtils = function () { } /** * 判断点是否在矩形内 * @param {Point} point 点对象 * @param {Bounds} bounds 矩形边界对象 * @returns {Boolean} 点在矩形内返回true,否则返回false */ GeoUtils.isPointInRect = function (point, bounds) { //检查类型是否正确 if (!(point instanceof BMap.Point) || !(bounds instanceof BMap.Bounds)) { return false ; } var sw = bounds.getSouthWest(); //西南脚点 var ne = bounds.getNorthEast(); //东北脚点 return (point.lng >= sw.lng && point.lng <= ne.lng && point.lat >= sw.lat && point.lat <= ne.lat); } /** * 判断点是否在圆形内 * @param {Point} point 点对象 * @param {Circle} circle 圆形对象 * @returns {Boolean} 点在圆形内返回true,否则返回false */ GeoUtils.isPointInCircle = function (point, circle) { //检查类型是否正确 if (!(point instanceof BMap.Point) || !(circle instanceof BMap.Circle)) { return false ; } //point与圆心距离小于圆形半径，则点在圆内，否则在圆外 var c = circle.getCenter(); var r = circle.getRadius(); var dis = GeoUtils.getDistance(point, c); if (dis <= r){ return true ; } else { return false ; } } /** * 判断点是否在折线上 * @param {Point} point 点对象 * @param {Polyline} polyline 折线对象 * @returns {Boolean} 点在折线上返回true,否则返回false */ GeoUtils.isPointOnPolyline = function (point, polyline) { //检查类型 if (!(point instanceof BMap.Point) || !(polyline instanceof BMap.Polyline)){ return false ; } //首先判断点是否在线的外包矩形内，如果在，则进一步判断，否则返回false var lineBounds = polyline.getBounds(); if (! this .isPointInRect(point, lineBounds)){ return false ; } //判断点是否在线段上，设点为Q，线段为P1P2 ， //判断点Q在该线段上的依据是：( Q - P1 ) × ( P2 - P1 ) = 0，且 Q 在以 P1，P2为对角顶点的矩形内 var pts = polyline.getPath(); for ( var i = 0 ; i < pts.length - 1 ; i++){ var curPt = pts[i]; var nextPt = pts[i + 1 ]; //首先判断point是否在curPt和nextPt之间，即：此判断该点是否在该线段的外包矩形内 if (point.lng >= Math .min(curPt.lng, nextPt.lng) && point.lng <= Math .max(curPt.lng, nextPt.lng) && point.lat >= Math .min(curPt.lat, nextPt.lat) && point.lat <= Math .max(curPt.lat, nextPt.lat)){ //判断点是否在直线上公式 var precision = (curPt.lng - point.lng) * (nextPt.lat - point.lat) - (nextPt.lng - point.lng) * (curPt.lat - point.lat); if (precision < 2e-10 && precision > - 2e-10 ){ //实质判断是否接近0 return true ; } } } return false ; } /** * 判断点是否多边形内 * @param {Point} point 点对象 * @param {Polyline} polygon 多边形对象 * @returns {Boolean} 点在多边形内返回true,否则返回false */ GeoUtils.isPointInPolygon = function (point, polygon) { //检查类型 if (!(point instanceof BMap.Point) || !(polygon instanceof BMap.Polygon)){ return false ; } //首先判断点是否在多边形的外包矩形内，如果在，则进一步判断，否则返回false var polygonBounds = polygon.getBounds(); if (! this .isPointInRect(point, polygonBounds)){ return false ; } var pts = polygon.getPath(); //获取多边形点 //下述代码来源：http://paulbourke.net/geometry/insidepoly/，进行了部分修改 //基本思想是利用射线法，计算射线与多边形各边的交点，如果是偶数，则点在多边形外，否则 //在多边形内。还会考虑一些特殊情况，如点在多边形顶点上，点在多边形边上等特殊情况。 var N = pts.length; var boundOrVertex = true ; //如果点位于多边形的顶点或边上，也算做点在多边形内，直接返回true var intersectCount = 0 ; //cross points count of x var precision = 2e-10 ; //浮点类型计算时候与0比较时候的容差 var p1, p2; //neighbour bound vertices var p = point; //测试点 p1 = pts[ 0 ]; //left vertex for ( var i = 1 ; i <= N; ++i){ //check all rays if (p.equals(p1)){ return boundOrVertex; //p is an vertex } p2 = pts[i % N]; //right vertex if (p.lat < Math .min(p1.lat, p2.lat) || p.lat > Math .max(p1.lat, p2.lat)){ //ray is outside of our interests p1 = p2; continue ; //next ray left point } if (p.lat > Math .min(p1.lat, p2.lat) && p.lat < Math .max(p1.lat, p2.lat)){ //ray is crossing over by the algorithm (common part of) if (p.lng <= Math .max(p1.lng, p2.lng)){ //x is before of ray if (p1.lat == p2.lat && p.lng >= Math .min(p1.lng, p2.lng)){ //overlies on a horizontal ray return boundOrVertex; } if (p1.lng == p2.lng){ //ray is vertical if (p1.lng == p.lng){ //overlies on a vertical ray return boundOrVertex; } else { //before ray ++intersectCount; } } else { //cross point on the left side var xinters = (p.lat - p1.lat) * (p2.lng - p1.lng) / (p2.lat - p1.lat) + p1.lng; //cross point of lng if ( Math .abs(p.lng - xinters) < precision){ //overlies on a ray return boundOrVertex; } if (p.lng < xinters){ //before ray ++intersectCount; } } } } else { //special case when ray is crossing through the vertex if (p.lat == p2.lat && p.lng <= p2.lng){ //p crossing over p2 var p3 = pts[(i+ 1 ) % N]; //next vertex if (p.lat >= Math .min(p1.lat, p3.lat) && p.lat <= Math .max(p1.lat, p3.lat)){ //p.lat lies between p1.lat & p3.lat ++intersectCount; } else { intersectCount += 2 ; } } } p1 = p2; //next ray left point } if (intersectCount % 2 == 0 ){ //偶数在多边形外 return false ; } else { //奇数在多边形内 return true ; } } /** * 将度转化为弧度 * @param {degree} Number 度 * @returns {Number} 弧度 */ GeoUtils.degreeToRad = function (degree) { return Math .PI * degree/ 180 ; } /** * 将弧度转化为度 * @param {radian} Number 弧度 * @returns {Number} 度 */ GeoUtils.radToDegree = function (rad) { return ( 180 * rad) / Math .PI; } /** * 将v值限定在a,b之间，纬度使用 */ function _getRange (v, a, b) { if (a != null ){ v = Math .max(v, a); } if (b != null ){ v = Math .min(v, b); } return v; } /** * 将v值限定在a,b之间，经度使用 */ function _getLoop (v, a, b) { while ( v > b){ v -= b - a } while (v < a){ v += b - a } return v; } /** * 计算两点之间的距离,两点坐标必须为经纬度 * @param {point1} Point 点对象 * @param {point2} Point 点对象 * @returns {Number} 两点之间距离，单位为米 */ GeoUtils.getDistance = function (point1, point2) { //判断类型 if (!(point1 instanceof BMap.Point) || !(point2 instanceof BMap.Point)){ return 0 ; } point1.lng = _getLoop(point1.lng, - 180 , 180 ); point1.lat = _getRange(point1.lat, - 74 , 74 ); point2.lng = _getLoop(point2.lng, - 180 , 180 ); point2.lat = _getRange(point2.lat, - 74 , 74 ); var x1, x2, y1, y2; x1 = GeoUtils.degreeToRad(point1.lng); y1 = GeoUtils.degreeToRad(point1.lat); x2 = GeoUtils.degreeToRad(point2.lng); y2 = GeoUtils.degreeToRad(point2.lat); return EARTHRADIUS * Math .acos(( Math .sin(y1) * Math .sin(y2) + Math .cos(y1) * Math .cos(y2) * Math .cos(x2 - x1))); } /** * 计算折线或者点数组的长度 * @param {Polyline|Array<Point>} polyline 折线对象或者点数组 * @returns {Number} 折线或点数组对应的长度 */ GeoUtils.getPolylineDistance = function (polyline) { //检查类型 if (polyline instanceof BMap.Polyline || polyline instanceof Array ){ //将polyline统一为数组 var pts; if (polyline instanceof BMap.Polyline){ pts = polyline.getPath(); } else { pts = polyline; } if (pts.length < 2 ){ //小于2个点，返回0 return 0 ; } //遍历所有线段将其相加，计算整条线段的长度 var totalDis = 0 ; for ( var i = 0 ; i < pts.length - 1 ; i++){ var curPt = pts[i]; var nextPt = pts[i + 1 ] var dis = GeoUtils.getDistance(curPt, nextPt); totalDis += dis; } return totalDis; } else { return 0 ; } } /** * 计算多边形面或点数组构建图形的面积,注意：坐标类型只能是经纬度，且不适合计算自相交多边形的面积 * @param {Polygon|Array<Point>} polygon 多边形面对象或者点数组 * @returns {Number} 多边形面或点数组构成图形的面积 */ GeoUtils.getPolygonArea = function (polygon) { //检查类型 if (!(polygon instanceof BMap.Polygon) && !(polygon instanceof Array )){ return 0 ; } var pts; if (polygon instanceof BMap.Polygon){ pts = polygon.getPath(); } else { pts = polygon; } if (pts.length < 3 ){ //小于3个顶点，不能构建面 return 0 ; } var totalArea = 0 ; //初始化总面积 var LowX = 0.0 ; var LowY = 0.0 ; var MiddleX = 0.0 ; var MiddleY = 0.0 ; var HighX = 0.0 ; var HighY = 0.0 ; var AM = 0.0 ; var BM = 0.0 ; var CM = 0.0 ; var AL = 0.0 ; var BL = 0.0 ; var CL = 0.0 ; var AH = 0.0 ; var BH = 0.0 ; var CH = 0.0 ; var CoefficientL = 0.0 ; var CoefficientH = 0.0 ; var ALtangent = 0.0 ; var BLtangent = 0.0 ; var CLtangent = 0.0 ; var AHtangent = 0.0 ; var BHtangent = 0.0 ; var CHtangent = 0.0 ; var ANormalLine = 0.0 ; var BNormalLine = 0.0 ; var CNormalLine = 0.0 ; var OrientationValue = 0.0 ; var AngleCos = 0.0 ; var Sum1 = 0.0 ; var Sum2 = 0.0 ; var Count2 = 0 ; var Count1 = 0 ; var Sum = 0.0 ; var Radius = EARTHRADIUS; //6378137.0,WGS84椭球半径 var Count = pts.length; for ( var i = 0 ; i < Count; i++) { if (i == 0 ) { LowX = pts[Count - 1 ].lng * Math .PI / 180 ; LowY = pts[Count - 1 ].lat * Math .PI / 180 ; MiddleX = pts[ 0 ].lng * Math .PI / 180 ; MiddleY = pts[ 0 ].lat * Math .PI / 180 ; HighX = pts[ 1 ].lng * Math .PI / 180 ; HighY = pts[ 1 ].lat * Math .PI / 180 ; } else if (i == Count - 1 ) { LowX = pts[Count - 2 ].lng * Math .PI / 180 ; LowY = pts[Count - 2 ].lat * Math .PI / 180 ; MiddleX = pts[Count - 1 ].lng * Math .PI / 180 ; MiddleY = pts[Count - 1 ].lat * Math .PI / 180 ; HighX = pts[ 0 ].lng * Math .PI / 180 ; HighY = pts[ 0 ].lat * Math .PI / 180 ; } else { LowX = pts[i - 1 ].lng * Math .PI / 180 ; LowY = pts[i - 1 ].lat * Math .PI / 180 ; MiddleX = pts[i].lng * Math .PI / 180 ; MiddleY = pts[i].lat * Math .PI / 180 ; HighX = pts[i + 1 ].lng * Math .PI / 180 ; HighY = pts[i + 1 ].lat * Math .PI / 180 ; } AM = Math .cos(MiddleY) * Math .cos(MiddleX); BM = Math .cos(MiddleY) * Math .sin(MiddleX); CM = Math .sin(MiddleY); AL = Math .cos(LowY) * Math .cos(LowX); BL = Math .cos(LowY) * Math .sin(LowX); CL = Math .sin(LowY); AH = Math .cos(HighY) * Math .cos(HighX); BH = Math .cos(HighY) * Math .sin(HighX); CH = Math .sin(HighY); CoefficientL = (AM * AM + BM * BM + CM * CM) / (AM * AL + BM * BL + CM * CL); CoefficientH = (AM * AM + BM * BM + CM * CM) / (AM * AH + BM * BH + CM * CH); ALtangent = CoefficientL * AL - AM; BLtangent = CoefficientL * BL - BM; CLtangent = CoefficientL * CL - CM; AHtangent = CoefficientH * AH - AM; BHtangent = CoefficientH * BH - BM; CHtangent = CoefficientH * CH - CM; AngleCos = (AHtangent * ALtangent + BHtangent * BLtangent + CHtangent * CLtangent) / ( Math .sqrt(AHtangent * AHtangent + BHtangent * BHtangent + CHtangent * CHtangent) * Math .sqrt(ALtangent * ALtangent + BLtangent * BLtangent + CLtangent * CLtangent)); AngleCos = Math .acos(AngleCos); ANormalLine = BHtangent * CLtangent - CHtangent * BLtangent; BNormalLine = 0 - (AHtangent * CLtangent - CHtangent * ALtangent); CNormalLine = AHtangent * BLtangent - BHtangent * ALtangent; if (AM != 0 ) OrientationValue = ANormalLine / AM; else if (BM != 0 ) OrientationValue = BNormalLine / BM; else OrientationValue = CNormalLine / CM; if (OrientationValue > 0 ) { Sum1 += AngleCos; Count1++; } else { Sum2 += AngleCos; Count2++; } } var tempSum1, tempSum2; tempSum1 = Sum1 + ( 2 * Math .PI * Count2 - Sum2); tempSum2 = ( 2 * Math .PI * Count1 - Sum1) + Sum2; if (Sum1 > Sum2) { if ((tempSum1 - (Count - 2 ) * Math .PI) < 1 ) Sum = tempSum1; else Sum = tempSum2; } else { if ((tempSum2 - (Count - 2 ) * Math .PI) < 1 ) Sum = tempSum2; else Sum = tempSum1; } totalArea = (Sum - (Count - 2 ) * Math .PI) * Radius * Radius; return totalArea; //返回总面积 } })(); //闭包结束 使用方法： var point = new BMap.Point(x,y) var circle = new BMap.Circle(mPoint, 1000 ,{fillColor: "blue" , strokeWeight: 1 ,fillOpacity: 0.3 , strokeOpacity: 0.3 }); if (BMapLib.GeoUtils.isPointInCircle(point,circle)){ alert( "该point在circle内" ); } 链接： GeoUtils.js 作者： itmyhome 上一篇 百度地图API 判断点击的是地图还是覆盖物 下一篇 百度地图API 自定义标注图标 顶 0 踩 0 我的同类文章 百度地图 （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953404次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28)

Recno:: 50
URL:: http://blog.csdn.net/itmyhome1990/article/details/50233601

ParseText::
Maven - 环境配置 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Maven - 环境配置 标签： maven 2015-12-10 22:55 645人阅读 评论 (2) 收藏 举报 分类： Maven （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Maven 是一个基于Java的工具，所以要做的第一件事情就是安装JDK。 1、检查Java安装 打开控制台，执行下面的Java命令，如果平台输出如下则安装成功 2、设置Java环境 设置 JAVA_HOME 环境变量，并指向你机器上的Java安装目录。例如： 将Java编译器地址添加到系统路径path中。 变量名：Path 变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin; 3、下载Maven文件 地址： http://maven.apache.org/download.cgi 本例版本为3.0.5 PS：Maven对应JDK版本 Maven 3.3 要求 JDK 1.7 或以上 Maven 3.2 要求 JDK 1.6 或以上 Maven 3.0/3.1 要求 JDK 1.5 或以上 4、解压Maven文件 解压文件到你想要的位置来安装 Maven，得到apache-maven-3.0.5子目录。本例为 D:\apache-maven-3.0.5 5、设置Maven环境变量 使用系统属性设置环境变量。 MAVEN_HOME=D:\apache-maven-3.0.5 Path=%MAVEN_HOME%\bin; 6、验证Maven安装 打开控制台，执行 mvn -version 命令。如果正常应该输入如下： 至此，完成了所有Maven设置 作者： itmyhome 上一篇 百度地图API 自定义标注图标 下一篇 Maven - 下载JAR包 顶 0 踩 0 我的同类文章 Maven （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953402次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 51
URL:: http://blog.csdn.net/itmyhome1990/article/details/50233773

ParseText::
Maven - 下载JAR包 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Maven - 下载JAR包 标签： maven 2015-12-12 23:01 694人阅读 评论 (0) 收藏 举报 分类： Maven （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 进入Spring官网 http://projects.spring.io/spring-framework/ 如果我们想下载Spring发现只能 通过Maven或Cradle进行下载了。 下面以Spring为例使用Maven下载JAR文件 方法: 1、任意目录下创建一个文件夹，其下创建一个pom.xml文件(本例为：D:\maven-jar) 2、修改Maven默认的下载位置 打开 D:\apache-maven-3.0.5\conf\settings.xml <!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ~/.m2/repository <localRepository>/path/to/local/repo</localRepository> --> < localRepository > D:/maven-jar </ localRepository > 3、pom.xml < project xmlns = "http://maven.apache.org/POM/4.0.0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" > < modelVersion > 4.0.0 </ modelVersion > < groupId > springframework </ groupId > < artifactId > project </ artifactId > < version > 1.0 </ version > <!-- 下载相应jar包依赖 --> < dependencies > < dependency > < groupId > org.springframework </ groupId > < artifactId > spring-context </ artifactId > < version > 4.2.3.RELEASE </ version > </ dependency > </ dependencies > </ project > 4、打开控制台，执行下面 mvn clean install 命令 完成之后就可以看到下载的Spring有关JAR文件了 作者： itmyhome 上一篇 Maven - 环境配置 下一篇 Maven - 构建Struts2项目 顶 1 踩 0 我的同类文章 Maven （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953405次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 52
URL:: http://blog.csdn.net/itmyhome1990/article/details/50233865

ParseText::
Maven - 构建Struts2项目 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Maven - 构建Struts2项目 标签： maven myeclipse struts 2015-12-13 22:39 862人阅读 评论 (2) 收藏 举报 分类： Maven （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 1、MyEclipse设置本地Maven及仓库 2、新建Web Project 3、修改pom.xml 删除原有pom.xml内容，添加如下struts依赖 <?xml version="1.0" encoding="UTF-8"?> < project xmlns = "http://maven.apache.org/POM/4.0.0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" > < modelVersion > 4.0.0 </ modelVersion > < groupId > maven-struts2 </ groupId > < artifactId > maven-struts2 </ artifactId > < packaging > war </ packaging > < version > 0.0.1-SNAPSHOT </ version > < dependencies > < dependency > < groupId > org.apache.struts </ groupId > < artifactId > struts2-core </ artifactId > < version > 2.3.24.1 </ version > </ dependency > </ dependencies > </ project > 等待下载 稍后就会看到所下jar包 4、修改web.xml 添加Struts配置 < filter > < filter-name > struts2 </ filter-name > < filter-class > org.apache.struts2.dispatcher.FilterDispatcher </ filter-class > </ filter > < filter-mapping > < filter-name > struts2 </ filter-name > < url-pattern > /* </ url-pattern > </ filter-mapping > 5、添加struts.xml <!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN" "http://struts.apache.org/dtds/struts-2.0.dtd"> < struts > < package name = "build" extends = "struts-default" > < action name = "login" > < result name = "success" > index.jsp </ result > </ action > </ package > </ struts > 部署启动 访问 http://localhost:8080/maven-struts2/login.action 构建完成 作者： itmyhome 上一篇 Maven - 下载JAR包 顶 1 踩 0 我的同类文章 Maven （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953397次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 53
URL:: http://blog.csdn.net/itmyhome1990/article/details/50238901

ParseText::
百度地图API 自定义标注图标 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 百度地图API 自定义标注图标 标签： 百度地图 api 标注 2015-12-10 17:56 1034人阅读 评论 (1) 收藏 举报 分类： 百度地图 （2） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 通过Icon类可实现自定义标注的图标，下面示例通过参数MarkerOptions的icon属性进行设置， 也可以使用marker.setIcon()方法。 <script type= "text/javascript" > // 百度地图API功能 var map = new BMap.Map( "allmap" ); // 创建Map实例 map.centerAndZoom( new BMap.Point( 116.323066 , 39.989956 ), 16 ); // 初始化地图,设置中心点坐标和地图级别 map.addControl( new BMap.MapTypeControl()); //添加地图类型控件 map.setCurrentCity( "北京" ); // 设置地图显示的城市 此项是必须设置的 map.enableScrollWheelZoom( true ); //开启鼠标滚轮缩放 var points = [ [ 116.316967 , 39.990748 ], [ 116.323938 , 39.989919 ], [ 116.328896 , 39.988039 ], [ 116.321135 , 39.987072 ], [ 116.332453 , 39.989007 ], [ 116.324045 , 39.987984 ], [ 116.322285 , 39.988316 ], [ 116.322608 , 39.986381 ] ]; // 向地图添加标注 for ( var i = 0 ;i < points.length; i++){ var myIcon = new BMap.Icon( "http://7xic1p.com1.z0.glb.clouddn.com/markers.png" , new BMap.Size( 23 , 25 ), { // 指定定位位置 offset: new BMap.Size( 10 , 25 ), // 当需要从一幅较大的图片中截取某部分作为标注图标时，需要指定大图的偏移位置 imageOffset: new BMap.Size( 0 , 0 - i * 25 ) // 设置图片偏移 }); var point = new BMap.Point(points[i][ 0 ],points[i][ 1 ]); // 创建标注对象并添加到地图 var marker = new BMap.Marker(point,{icon: myIcon}); map.addOverlay(marker); }; </ script > 所使用图片： 演示地址： 点击 作者： itmyhome 上一篇 百度地图API 判断点是否在圆形内 下一篇 Maven - 环境配置 顶 0 踩 0 我的同类文章 百度地图 （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953389次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 54
URL:: http://blog.csdn.net/itmyhome1990/article/details/50330943

ParseText::
jQuery自定义内容滚动条插件 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 jQuery自定义内容滚动条插件 标签： jquery 插件 滚动条 2015-12-16 23:20 654人阅读 评论 (2) 收藏 举报 分类： jQuery插件 （17） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 使用方法： 首先下载插件： http://manos.malihu.gr/jquery-custom-content-scroller/ 一、HTML 引入以下文件 < link rel = "stylesheet" href = "/jquery.mCustomScrollbar.css" /> < script type = "text/javascript" src = "js/jquery-1.11.0.min.js" > </ script > < script type = "text/javascript" src = "js/jquery.mCustomScrollbar.concat.min.js" > </ script > 二、CSS 首先必须要有滚动条出现，给DIV限定高度,并指定overflow样式为auto, 这样当内容超出后就会自动出现滚动条了 < style > .div-height { width : 300 px ; height : 300 px ; overflow : auto ; } </ style > 三、初始化HTML < div class = "content" data-mcs-theme = "dark" > <!-- your content --> </ div > 四、初始化JS <script> $( function () { $( ".content" ).mCustomScrollbar(); }) < /script> 效果演示： jquery_scroller 官网： http://manos.malihu.gr/jquery-custom-content-scroller/ 作者： itmyhome 上一篇 Maven - 构建Struts2项目 下一篇 JS判断是否为JSON对象及是否存在某字段 顶 0 踩 0 我的同类文章 jQuery插件 （17） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953398次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 55
URL:: http://blog.csdn.net/itmyhome1990/article/details/50331057

ParseText::
页面中设置IE浏览器的文档模式 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 页面中设置IE浏览器的文档模式 标签： 浏览器 文档 ie 2015-12-19 22:45 632人阅读 评论 (0) 收藏 举报 分类： 工作相关 （20） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 项目在IE浏览器中打开默认是Quirks模式，导致兼容性不太好 当然可以手动修改为Internet Explorer8 以上模式，但我们不可能引导用户这样去做 可以在代码里通过 设置DTD 声明让浏览器决定用何种模式 将 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 改为 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/html4/strict.dtd"> 这样问题就解决了 PS: 在IE11以及360浏览器文档模式默认为IE7版本，可以通过设置 meta标签 改变为其他模式 < meta http-equiv = "X-UA-Compatible" content = "IE=9" /> 扩展阅读： browser-mode-and-document-mode-in-ie 作者： itmyhome 上一篇 Oracle中对数字加汉字的排序(完善) 下一篇 Oracle的REGEXP_INSTR函数简单用法 顶 0 踩 0 我的同类文章 工作相关 （20） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953390次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 56
URL:: http://blog.csdn.net/itmyhome1990/article/details/50341909

ParseText::
JS判断是否为JSON对象及是否存在某字段 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 JS判断是否为JSON对象及是否存在某字段 标签： json 对象 2015-12-17 22:56 890人阅读 评论 (1) 收藏 举报 分类： JS （41） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 $.ajax({ type: 'POST' , url: url, success( function (data) { //判断是否为JSON对象 if ( typeof (data) == "object" && Object .prototype.toString.call(data).toLowerCase() == "[object object]" && !data.length){ alert( "is JSON 0bject" ); } //判断是否存在某字段 console.info(datas[ "key" ] != undefined ); //此方式不严谨，如果key定义了 并就是赋值为undefined 则会出问题 console.info( "key" in datas); console.info(datas.hasOwnProperty( "key" )); }) }) 作者： itmyhome 上一篇 jQuery自定义内容滚动条插件 下一篇 Oracle中对数字加汉字的排序(完善) 顶 2 踩 0 我的同类文章 JS （41） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953399次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 57
URL:: http://blog.csdn.net/itmyhome1990/article/details/50352805

ParseText::
Oracle中对数字加汉字的排序(完善) - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Oracle中对数字加汉字的排序(完善) 标签： oracle 汉字 数字 排序 2015-12-18 22:27 524人阅读 评论 (0) 收藏 举报 分类： Oracle （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 之前写过一篇 Oracle中对数字加汉字的排序以及REGEXP_SUBSTR介绍 后来在开发的过程中又遇到类似问题，数据不一样了，按之前的用法是不适用的。 之前的是数字在前汉字在后， 最主要的区别是数字没有重复的，而现在的数据中数字是有重复的 比如： 玫瑰园1楼 玫瑰园2楼 兴帝家园1楼 兴帝家园2楼 如果是只抽取数字进行排序 会造成两个1楼在前 两个2楼在后 而想要的结果是先按相同的名字排序 再按楼号排序 第一步：截取汉字 只截取正则表达式中汉字首次出现的位置(下同) REGEXP_SUBSTR(name, '[[:alpha:]]+') 第二步：截取数字 REGEXP_SUBSTR(name, '[0-9]+') 第三步：ORDER BY排序 先按汉字进行排序，相同的再按数字排序 SELECT * FROM ADDRESS_TREE order by REGEXP_SUBSTR(name, '[[:alpha:]]+' ), --汉字排序 cast (REGEXP_SUBSTR(name, '[0-9]+' ) as int ); --数字排序 作者： itmyhome 上一篇 JS判断是否为JSON对象及是否存在某字段 下一篇 页面中设置IE浏览器的文档模式 顶 0 踩 0 我的同类文章 Oracle （46） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953388次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 58
URL:: http://blog.csdn.net/itmyhome1990/article/details/50379729

ParseText::
Oracle的REGEXP_INSTR函数简单用法 - itmyhome的专栏 - 博客频道 - CSDN.NET itmyhome的专栏 我们的生命，就是以不断出发的姿势得到重生 走在路上 无法停息...... 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Oracle的REGEXP_INSTR函数简单用法 标签： oracle 2015-12-22 22:46 591人阅读 评论 (1) 收藏 举报 分类： Oracle （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 REGEXP_INSTR函数让你搜索一个正则表达式模式字符串。函数使用输入字符集定义的字符进行字符串的计算。 它返回一个整数，指示开始或结束匹配的子位置，这取决于return_option参数的值。如果没有找到匹配，则函数返回0。 语法 Oracle数据库中的REGEXP_INSTR函数的语法是： REGEXP_INSTR (source_char, pattern [, position [, occurrence [, return_option [, match_parameter ] ] ] ] ) 参数 source_char 搜索值的字符表达式，可以是任何数据类型CHAR，VARCHAR2，NCHAR，NVARCHAR2，CLOB或NCLOB的。 pattern 正则表达式 Value Description ^ Matches the beginning of a string. If used with a match_parameter of ‘m’, it matches the start of a line anywhere within expression . $ Matches the end of a string. If used with a match_parameter of ‘m’, it matches the end of a line anywhere within expression . * 匹配零个或多个. + 匹配一个或多个出现. ? 匹配零次或一次出现. . 匹配任何字符，除了空. | Used like an "OR" to specify more than one alternative. [ ] Used to specify a matching list where you are trying to match any one of the characters in the list. [^ ] Used to specify a nonmatching list where you are trying to match any character except for the ones in the list. ( ) Used to group expressions as a subexpression. {m} Matches m times. {m,} Matches at least m times. {m,n} Matches at least m times, but no more than n times. \n n is a number between 1 and 9. Matches the nth subexpression found within ( ) before encountering \n. [..] Matches one collation element that can be more than one character. [::] Matches character classes. [==] Matches equivalence classes. \d 匹配一个数字字符. \D 匹配一个非数字字符. \w 匹配包括下划线的任何单词字符. \W 匹配任何非单词字符. \s 匹配任何空白字符，包括空格、制表符、换页符等等. \S 匹配任何非空白字符. \A Matches the beginning of a string or matches at the end of a string before a newline character. \Z Matches at the end of a string. *? Matches the preceding pattern zero or more occurrences. +? Matches the preceding pattern one or more occurrences. ?? Matches the preceding pattern zero or one occurrence. {n}? Matches the preceding pattern n times. {n,}? Matches the preceding pattern at least n times. {n,m}? Matches the preceding pattern at least n times, but not more than m times. position 可选。搜索在字符串中的开始位置。如果省略，则默认为1，这是字符串中的第一个位置。 occurrence 可选。它是模式字符串中的第n个匹配位置。如果省略，默认为1。 return_option 可选 指定Oracle返回的位置： 如果指定0，那么Oracle将返回出现的第一个字符的位置。这是默认的。 如果指定1，则Oracle返回字符之后发生的位置。 match_parameter 可选。它允许你修改REGEXP_INSTR功能匹配的行为。它可以是以下的组合： Value Description ‘c’ 区分大小写的匹配. ‘i’ 不区分大小写的匹配. ‘n’ Allows the period character (.) to match the newline character. By default, the period is a wildcard. ‘m’ expression is assumed to have multiple lines, where ^ is the start of a line and $ is the end of a line, regardless of the position of those characters in expression . By default, expression is assumed to be a single line. ‘x’ Whitespace characters are ignored. By default, whitespace characters are matched like any other character. Examples 匹配单个字符 下面看一个最简单的情况，找到字符串中的第一个”e”字的位置。 SELECT REGEXP_INSTR ( 'hello itmyhome' , 'e' ) FROM dual; -- Result: 2 下面这个例子给出一个字符串， “1”为开始位置 “2”是搜索第二个匹配的，”0”是return_option 返回出现的第一个字符位置 “c”是区分大小写 ，所以将返回13 SELECT REGEXP_INSTR ( 'my is itMyhome' , 'm' , 1 , 2 , 0 , 'c' ) FROM dual; -- Result: 13 Examples 匹配多个字符 我们将使用REGEXP_INSTR函数来匹配多字符模式。 SELECT REGEXP_INSTR ( 'World filled with love' , 'with' , 1 , 1 , 0 , 'i' ) FROM dual; 这个例子将字符串中返回’with’的第一次出现,它将匹配一个词组。 我们可以改变搜索的开始位置，以便我们执行搜索从字符串的中间开始。 For example: SELECT REGEXP_INSTR ( 'my name is itmyhome' , 'my' , 10 , 1 , 0 , 'i' ) FROM dual; 这个例子将开始搜索”my”在字符串中的位置10。在这种情况下，在搜索之前，它会跳过字符串中的前9个字符。 Examples 匹配多个备选 下面的例子,我们将使用 | 模式。该|模式用于像一个”或”指定多个替代方案。 For example: SELECT REGEXP_INSTR ( 'Itmyhome' , 'a|i|o|e|u' ) FROM dual; -- Result: 6 这个例子将返回6，因为它是搜索的第一个元音(a,i,o,e或u)字符串。由于我们没有指定match_parameter值时， REGEXP_INSTR函数将执行区分大小写的搜索，这意味着在”Itmyhome”的’I’将不匹配。 作者： itmyhome 上一篇 页面中设置IE浏览器的文档模式 下一篇 Oracle的REGEXP_REPLACE函数简单用法 顶 2 踩 0 我的同类文章 Oracle （46） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 版权声明 本博客文章可以被转载，但未经本人许可，不得用于商业用途。 如需转载，请保证文章的完整性并注明出处。 友情链接 需要交换友链的请留言 赖信涛的个人网站 淡忘~浅思 程序员访谈录 轩枫阁-前端开发 麦田技术博客 虚位以待... 个人资料 itmyhome 访问： 953393次 积分： 18891 等级： 积分：18891 排名： 第232名 原创： 470篇 转载： 23篇 译文： 26篇 评论： 1385条 我的微博 文章搜索 博客专栏 Git教程 文章：7篇 阅读：15196 ibatis实战 文章：5篇 阅读：8904 springMVC3学习 文章：12篇 阅读：39104 锋利的jQuery 文章：6篇 阅读：14022 面试那些事儿 文章：12篇 阅读：22144 java学习笔记 文章：16篇 阅读：28288 文章分类 Git (14) jekyll (6) 编程语言 (28) JAVA (66) Struts1 (3) Struts2 (17) Hibernate (19) Spring (3) springMVC (12) jQuery (41) IBATIS (5) web前端 (39) EasyUI (19) JS (42) CKEditor (5) jQuery插件 (18) 数据库 (15) Oracle (47) MySQL (5) 架构设计 (7) 工作相关 (21) 异常错误 (29) 移动开发 (1) 工作之余 (11) 框架整合 (5) 关于面试 (12) 腾讯地图 (1) Simditor (2) KindEditor (2) Hexo (5) Coding (2) uploadify (1) Markdown (2) Ant (4) POI (2) 百度地图 (3) Maven (3) 博客统计 3Q  新博客： itmyhome.com  JAVA技术交流：74955800

Recno:: 59
URL:: http://blog.csdn.net/kkdelta/article/details/44221365

ParseText::
linux下挂载（mount）各种文件 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 linux下挂载（mount）各种文件 2015-03-12 14:31 466人阅读 评论 (0) 收藏 举报 分类： Unix/Linux （43） 作者同类文章 X http://blog.csdn.net/tianxiaxingzhe/article/details/7887152 挂接命令(mount) 命令格式： mount [-t vfstype] [-o options] device dir 其中： 1.-t vfstype指定文件系统的类型，通常不必指定。mount会自动选择正确的类型。常用类型有： 　　光盘或光盘镜像：iso9660 　　DOS fat16文件系统：msdos 　　Windows 9x fat32文件系统：vfat 　　Windows NT ntfs文件系统：ntfs 　　Mount Windows文件网络共享：smbfs 　　UNIX(LINUX)文件网络共享：nfs 2.-o options主要用来描述设备或档案的挂接方式。常用的参数有： 　　loop：用来把一个文件当成硬盘分区挂接上系统 　　ro：采用只读方式挂接设备 　　rw：采用读写方式挂接设备 　　iocharset：指定访问文件系统所用字符集 3.device要挂接(mount)的设备。 4.dir设备在系统上的挂接点(mount point)。 挂接光盘镜像文件 在Windows下许多人都习惯把 软件 和资料做成光盘镜像文件通过虚拟光驱来使用。linux系统下制作和使用光盘镜像比Windows系统更方便，不必借用任何第三方软件包。   1、从光盘制作光盘镜像文件。将光盘放入光驱，执行下面的命令。 # cp /dev/cdrom /home/sunky/mydisk.iso 或 # dd if=/dev/cdrom f=/home/sunky/mydisk.iso 注：执行上面的任何一条命令都可将当前光驱里的光盘制作成光盘镜像文件/home/sunky/mydisk.iso 2、将文件和目录制作成光盘镜像文件，执行下面的命令。 # mkisofs -r -J -V mydisk -o /home/sunky/mydisk.iso /home/sunky/ mydir 注：这条命令将/home/sunky/mydir目录下所有的目录和文件制作成光盘镜像文件 /home/sunky/mydisk.iso ，光盘卷标为：mydisk 3、光盘镜像文件的挂接(mount) # mkdir /mnt/vcdrom 注：建立一个目录用来作挂接点(mount point) # mount -o loop -t iso9660 /home/sunky/mydisk.iso /mnt/vcdrom 注：使用/mnt/vcdrom就可以访问盘镜像文件mydisk.iso里的所有文件了。 挂接移动硬盘 对linux系统而言，USB接口的移动硬盘是当作SCSI设备对待的。插入移动硬盘之前，应先用fdisk–l或more /proc/partitions查看系统的硬盘和硬盘分区情况。   [root at pldyrouter /]# fdisk -l 在这里可以清楚地看到系统有一块SCSI硬盘/dev/sda和它的四个磁盘分区/dev/sda1 -- /dev/sda4, /dev/sda5是分区/dev/sda4的逻辑分区。接好移动硬盘后，再用fdisk–l或more /proc/partitions查看系统的硬盘和硬盘分区情况   [root at pldyrouter /]# fdisk -l 大家应该可以发现多了一个SCSI硬盘/dev/sdc和它的两个磁盘分区/dev/sdc1?、/dev/sdc2,其中/dev/sdc5是/dev/sdc2分区的逻辑分区。我们可以使用下面的命令挂接/dev/sdc1和/dev/sdc5。 #mkdir -p /mnt/usbhd1 #mkdir -p /mnt/usbhd2 注：建立目录用来作挂接点(mount point) #mount -t ntfs /dev/sdc1 /mnt/usbhd1 #mount -t vfat /dev/sdc5 /mnt/usbhd2 注：对ntfs格式的磁盘分区应使用-t ntfs参数，对fat32格式的磁盘分区应使用-t vfat参数。若汉字文件名显示为乱码或不显示，可以使用下面的命令格式。 #mount -t ntfs -o iocharset=cp936 /dev/sdc1 /mnt/usbhd1 #mount -t vfat -o iocharset=cp936 /dev/sdc5 /mnt/usbhd2 linux系统下使用fdisk分区命令和mkfs文件系统创建命令可以将移动硬盘的分区制作成linux系统所特有的ext2、ext3格式。这样，在linux下使用就更方便了。使用下面的命令直接挂接即可。 #mount /dev/sdc1 /mnt/usbhd1 挂接U 盘 和USB接口的移动硬盘一样对linux系统而言U盘也是当作SCSI设备对待的。使用方法和移动硬盘完全一样。插入U盘之前，应先用fdisk–l或more /proc/partitions查看系统的硬盘和硬盘分区情况。   [root at pldyrouter root]# fdisk -l 插入U盘后，再用fdisk–l或more /proc/partitions查看系统的硬盘和硬盘分区情况。   [root at pldyrouter root]# fdisk -l 　　 系统多了一个SCSI硬盘/dev/sdd和一个磁盘分区/dev/sdd1,/dev/sdd1就是我们要挂接的U盘。 #mkdir -p /mnt/usb 注：建立一个目录用来作挂接点(mount point) #mount -t vfat /dev/sdd1 /mnt/usb 注：现在可以通过/mnt/usb来访问U盘了,若汉字文件名显示为乱码或不显示，可以使用下面的命令。 #mount -t vfat -o iocharset=cp936 /dev/sdd1 /mnt/usb 挂接Windows 文件共享 Windows网络共享的核心是SMB/CIFS，在linux下要挂接(mount)windows的磁盘共享，就必须 安装 和使用samba软件包。现在流行的linux发行版绝大多数已经包含了samba软件包，如果安装linux系统时未安装samba请首先安装samba。当然也可以到 www.samba.org网站下载......新的版本是3.0.10版。   当windows系统共享设置好以后，就可以在linux客户端挂接(mount)了，具体操作如下： # mkdir –p /mnt/samba 注：建立一个目录用来作挂接点(mount point) # mount -t smbfs -o username=administrator,password=pldy123 //10.140.133.23/c$ /mnt/samba 注：administrator和pldy123是ip地址为10.140.133.23 windows计算机的一个用户名和密码，c$是这台计算机的一个磁盘共享 如此就可以在linux系统上通过/mnt/samba来访问windows系统磁盘上的文件了。以上操作在 redhat as server 3、redflag server 4.1、suse server 9以及windows NT 4.0、windows 2000、windows xp、windows 2003环境下测试通过。 挂接UNIX 系统NFS文件共享 类似于windows的网络共享，UNIX(Linux)系统也有自己的网络共享，那就是NFS(网络文件系统)，下面我们就以SUN Solaris2.8和REDHAT as server 3为例简单介绍一下在linux下如何mount nfs网络共享。 在linux客户端挂接(mount)NFS磁盘共享之前，必须先配置好NFS服务端。 1、Solaris系统NFS服务端配置方法如下：  (1)修改/etc/dfs/dfstab,增加共享目录 share -F nfs -o rw /export/home/sunky  (2)启动nfs服务 # /etc/init.d/nfs.server start  (3)NFS服务启动以后，也可以使用下面的命令增加新的共享 # share /export/home/sunky1 # share /export/home/sunky2 注：/export/home/sunky和/export/home/sunky1是准备共享的目录   2、linux系统NFS服务端配置方法如下：  (1)修改/etc/exports,增加共享目录 /export/home/sunky 10.140.133.23(rw) /export/home/sunky1 *(rw) /export/home/sunky2 linux-client(rw) 注：/export/home/目录下的sunky、sunky1、sunky2是准备共享的目录，10.140.133.23、*、linux- client是被允许挂接此共享linux客户机的IP地址或主机名。如果要使用主机名linux-client必须在服务端主机/etc/hosts文件里增加linux-client主机ip定义。格式如下：10.140.133.23 linux-client  (2)启动与停止NFS服务 /etc/rc.d/init.d/portmap start ( 在REDHAT 中PORTMAP是默认启动的) /etc/rc.d/init.d/nfs start 启动NFS 服务 /etc/rc.d/init.d/nfs stop 停止NFS 服务 注：若修改/etc/export文件增加新的共享，应先停止NFS服务，再启动NFS服务方能使新增加的共享起作用。使用命令exportfs -rv也可以达到同样的效果。   3、linux客户端挂接(mount)其他linux系统或UNIX系统的NFS共享 # mkdir –p /mnt/nfs 注：建立一个目录用来作挂接点(mount point) #mount -t nfs -o rw 10.140.133.9:/export/home/sunky /mnt/nfs 注：这里我们假设10.140.133.9是NFS服务端的主机IP地址，当然这里也可以使用主机名，但必须在本机/etc/hosts文件里增加服务端ip定义。/export/home/sunky为服务端共享的目录。   如此就可以在linux客户端通过/mnt/nfs来访问其它linux系统或UNIX系统以NFS方式共享出来的文件了。以上操作在redhat as server 3、redflag server4.1、suse server 9以及Solaris 7、Solaris 8、Solaris 9 for x86&sparc环境下测试通过。 上一篇 Windows共享文件夹的权限设定 下一篇 inittab命令格式 顶 0 踩 0 我的同类文章 Unix/Linux （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180807次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 60
URL:: http://blog.csdn.net/kkdelta/article/details/45008829

ParseText::
inittab命令格式 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 inittab命令格式 标签： inittab 2015-04-12 12:01 375人阅读 评论 (0) 收藏 举报 分类： Unix/Linux （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 1. inittab命令格式为 id:runlevels:action:command id是任意一个名称（具体是什么并不重要）； runlevels是一个数字串（代表运行级别）； command指定执行的实际命令； action的值可以为以下几种： respawn：启动命令并进行监视命令的执行,当进程退出时,再次执行该命令.比如切换到tty,exit后还会提示终端登陆,就因为tty是 以respaw的action方式运行的:3:2345:respawn:/sbin/mingetty tty3 wait：进入指定运行级别时,启动进程.init会停下来,直到执行完成.这个标记对于设置指定等级下的软件的启动. once：进入指定的任一运行等级时,启动一次进程. boot：该命令在系统引导时运行.这种类型的指令忽略运行等级. bootwait：该命令在系统指导时运行,init等它退出后才能继续做别的事. off：禁用所有运行等级下的某个命令. 例如在inittab最后添加一行，可以在每次启动系统的时候打印一行到/tmp/greeting。 gt::once:echo "greting `date`" >> /tmp/greeting 不过一般建议将这种执行放在 /etc/rc.d/rc.sysinit 2. 在任何时候，可以在文件inittab中添加新的记录项，级别Q/q不改变当前的运行级别，重新检查inittab文件，可以通过命令init Q或init q使init进程立即重新读取并处理文件inittab. 上一篇 linux下挂载（mount）各种文件 下一篇 Linux 参考信息链接 顶 0 踩 0 我的同类文章 Unix/Linux （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180801次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 61
URL:: http://blog.csdn.net/kkdelta/article/details/45079785

ParseText::
Linux 参考信息链接 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Linux 参考信息链接 2015-04-16 19:37 383人阅读 评论 (0) 收藏 举报 分类： Unix/Linux （43） 作者同类文章 X 了解 GNU GPL/GNU LGPL/BSD/MIT/Apache协议 http://blog.csdn.net/flowingflying/article/details/5746151 愷风（Wei）的专栏 http://blog.csdn.net/flowingflying/article/details/4547084 Linux Bash Shell学习（二）：目录和通配符 http://blog.csdn.net/flowingflying/article/details/4576782 常用正则表达式大全 http://blog.csdn.net/onebigday/article/details/5429868 http://mageedu.blog.51cto.com/4265610/1637514 上一篇 inittab命令格式 下一篇 一些常用的脚本示例 顶 0 踩 0 我的同类文章 Unix/Linux （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180800次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 62
URL:: http://blog.csdn.net/kkdelta/article/details/45080479

ParseText::
一些常用的脚本示例 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 一些常用的脚本示例 标签： bash shell 2015-04-16 20:29 403人阅读 评论 (0) 收藏 举报 分类： Unix/Linux （43） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一个脚本实现:创建用户并且设定和用户名相同的密码，如果要创建的用户已经存在，则不创建 #!/bin/bash #echo $u1 if  id $1 &>/dev/null then echo "user: $1 already exists"; else useradd $1 && echo $1 | passwd --stdin $1 echo "$1 added" fi ----------------------------------------------------------------------- 显示一个文件中的空白行 grep -n "^\s*$" filename ^\s*$ 也可以用在很多文本编辑器中去匹配空白行 ----------------------------------------------------------------------- grep -n "^xxx\>" filename : 一个文件中以xxx单词开头的行 grep -n "\<xxx$" filename : 一个文件中以xxx单词结尾的行 ----------------------------------------------------------------------- 上一篇 Linux 参考信息链接 下一篇 Spring Batch 简介 顶 0 踩 1 我的同类文章 Unix/Linux （43） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180813次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 63
URL:: http://blog.csdn.net/kkdelta/article/details/45438491

ParseText::
Spring Batch 简介 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Spring Batch 简介 标签： spring batch 2015-05-02 11:14 508人阅读 评论 (0) 收藏 举报 转http://www.coderli.com/spring-batch-intro-sample/ 官方文档地址： http://docs.spring.io/spring-batch/trunk/reference/html/index.html      层次架构如上图。分三层：应用层，核心层，基础设施层。应用层包括所有的batch任务和用户开发的代码。核心层包括在运行期运行一个任务所需要的类，例如：JobLauncher，Job和Step的实现。应用和核心层都在基础设施层之上，基础设施层包括通用的读写器(readers and writers)以及如RetryTemplate等服务。 Spring Batch中的一些概念： Job Job是Step的容器，用来定义和配置整个任务的信息： Job的名字 定义Step的顺序 定义任务可否重启 Job Config Sample： <job id="footballJob"> <step id="playerload" next="gameLoad"/> <step id="gameLoad" next="playerSummarization"/> <step id="playerSummarization"/></job> JobInstance 是实际运行的Job实例，实例间数据也和业务独立。 JobParameters Job运行的参数。。似乎没什么好解释的。 JobExecution JobExecution是一个技术上的概念，只一次单独的执行任务。执行可以以成功和失败结尾，但是JobInstance只有在JobExecution成功结束的情况下，才被认为是完成的。例如，一个JobInstance第一次执行失败，重新执行，即为另一个JobExecution但是是同一个JobInstance。 Step 一个Job是有一个或者多个Step组成的。Step可复杂可简单。与Job类似，Step也有对应的StepExecution。 StepExecution Step的每一次执行都是即为一个StepExecution。每次Step执行都会创建一个StepExecution。每个execution都包含了相关的Step和JobExecution的引用以及事务相关的数据和起始、结束时间。每个StepExecution也包含了一个ExecutionContext，包含了开发需要持久化的数据。 ExecutionContext key/value对的对象，用于保存需要记录的上下文信息。scope是包括StepExecution和JobExecution。类似于Quartz中的JobDataMap。可以保存执行过程的信息，用于故障时重新执行和继续执行，甚至状态回滚等等，不过需要用户自行记录。任何时刻，一个StepExecution只会有一个ExecutionContext，由Spring Batch框架负责持久化和保证读取的准确性。 另外，需要注意的是，每个JobExectuion都有一个ExecutionContext，每个StepExecution也有一个独立的ExecutionContext。例如： ExecutionContext ecStep = stepExecution.getExecutionContext(); ExecutionContext ecJob = jobExecution.getExecutionContext(); //ecStep does not equal ecJob 上述代码中，两个ExecutionContext是不相等的，Step中的context是在每个提交点上被保存，而job的context会在两个Step执行之间被保存。 JobRepository JobRepository是关于前面提到的Job模版(Stereotypes)的持久化机制。提供了对了JobLauncher，Job和Step实现类的CRUD操作。当初次加载Job的时候，从repository中获取 JobExecution，在执行的过程中，StepExecution和JobExectuion的实现类通过repository持久化。 <job-repository id="jobRepository"/> JobLauncher JobLauncher是用于用指定的JobParameters加载Job的接口。 public interface JobLauncher { public JobExecution run(Job job, JobParameters jobParameters) throws JobExecutionAlreadyRunningException, JobRestartException; } Item Reader、 Item Writer、Item Processor 分别用于读、写和转换业务数据。转换即是进行数据模型的转换。 命名空间（Batch Namesapce） <beans:beans xmlns="http://www.springframework.org/schema/batch" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd"> 完整使用样例： 配置文件 batch-context.xml <beans:beans xmlns= "http://www.springframework.org/schema/batch" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi= "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd"> <beans:bean id ="first-tasklet" class= "com.coderli.spring.batch.firstjob.FirstTasklet" ></beans:bean > <beans:bean id ="jobRepository" class= "org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" > <beans:property name ="transactionManager" ref= "transactionManager" /> </beans:bean > <beans:bean id ="transactionManager" class= "org.springframework.batch.support.transaction.ResourcelessTransactionManager" ></beans:bean > <job id ="onecoder-job"> <step id ="first-step" next="secend-step"> <tasklet ref ="first-tasklet"></ tasklet> </step > <step id ="secend-step" > <tasklet > <chunk reader ="myReader" writer= "myWriter" processor ="myProcessor" commit-interval= "1"></chunk > </tasklet > </step > </job > <beans:bean id ="myReader" class= "com.coderli.spring.batch.firstjob.MyReader" ></beans:bean > <beans:bean id ="myWriter" class= "com.coderli.spring.batch.firstjob.MyWriter" ></beans:bean > <beans:bean id ="myProcessor" class= "com.coderli.spring.batch.firstjob.MyProcessor" ></beans:bean > <beans:bean id ="myFirstJobLauncher" class= "org.springframework.batch.core.launch.support.SimpleJobLauncher" > <beans:property name ="taskExecutor" ref= "syncTaskExecutor" /> <beans:property name ="jobRepository" ref= "jobRepository" /> </beans:bean > <beans:bean id ="syncTaskExecutor" class= "org.springframework.core.task.SyncTaskExecutor" /> <beans:bean id ="jobLauncherTestUtils" class= "org.springframework.batch.test.JobLauncherTestUtils" > <beans:property name ="job" ref= "onecoder-job"></beans:property > </beans:bean > </beans:beans> First-Tasklet类 package com.coderli.spring.batch.firstjob; import lombok.extern.slf4j.Slf4j; import org.springframework.batch.core.StepContribution; import org.springframework.batch.core.scope.context.ChunkContext; import org.springframework.batch.core.step.tasklet.Tasklet; import org.springframework.batch.repeat.RepeatStatus; @Slf4j public class FirstTasklet implements Tasklet { @Override public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception { log.info( "This is tasklet one in step one of job MyJob"); return RepeatStatus.FINISHED; } } Reader类： package com.coderli.spring.batch.firstjob; import lombok.extern.slf4j.Slf4j; import org.springframework.batch.item.ItemReader; import org.springframework.batch.item.NonTransientResourceException; import org.springframework.batch.item.ParseException; import org.springframework.batch.item.UnexpectedInputException; /** * 自定义Reader类 * * @author OneCoder * @date 2014年9月28日 下午2:33:43 */ @Slf4j public class MyReader implements ItemReader<MyModel> { private int count; @Override public MyModel read() throws Exception, UnexpectedInputException, ParseException, NonTransientResourceException { log.info( "This is my reader in step two of job: [MyJob.]"); MyModel model = null; if ( count < 2) { model = new MyModel(); model.setDescription( "My Description"); model.setId( "My ID"); model.setName( "My Name"); count++; } return model; } } writer类 package com.coderli.spring.batch.firstjob; import java.util.List; import lombok.extern.slf4j.Slf4j; import org.springframework.batch.item.ItemWriter; /** * 自定义Writer类 * * @author OneCoder * @date 2014年9月28日 下午2:46:20 */ @Slf4j public class MyWriter implements ItemWriter<String> { @Override public void write(List<? extends String> items) throws Exception { log.info( "This is my writer in step two for job: [MyJob]."); log.info( "Write the JSON string to the console."); for (String item : items) { log.info( "Write item: {}", item); } } } processor类 package com.coderli.spring.batch.firstjob; import lombok.extern.slf4j.Slf4j; import org.springframework.batch.item.ItemProcessor; import com.google.gson.Gson; /** * * @author OneCoder * @date 2014年9月28日 下午2:39:48 */ @Slf4j public class MyProcessor implements ItemProcessor<MyModel, String> { @Override public String process(MyModel item) throws Exception { log.info( "This is my process in step two of job: [MyJob]."); log.info( "Transfer MyModel to JSON string."); Gson gson = new Gson(); return gson.toJson( item); } } 测试类 package com.coderli.spring.batch.firstjob; import org.junit.Assert; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.batch.core.JobExecution; import org.springframework.batch.test.JobLauncherTestUtils; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.test.context.ContextConfiguration; import org.springframework.test.context.junit4.SpringJUnit4ClassRunner; /** * 任务启动器，通过JUnit测试方式启动 * * @author OneCoder * @date 2014年9月28日 下午3:03:03 */ @RunWith(SpringJUnit4ClassRunner. class) @ContextConfiguration(locations = { "../batch-context.xml" }) public class MyFirstJobTest { @Autowired private JobLauncherTestUtils jobLauncherTestUtils; @Test public void testJob() throws Exception { jobLauncherTestUtils.launchJob(); JobExecution jobExecution = jobLauncherTestUtils .launchJob(); Assert. assertEquals("COMPLETED", jobExecution.getExitStatus().getExitCode()); } } 简单介绍上述代码里用到的东西，@SLF4J注解是lombok中的，之前介绍过。测试用的Spring-test和spring-batch-test提供的相关功能。 上一篇 一些常用的脚本示例 下一篇 Kerberos原理和使用 顶 0 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180813次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 64
URL:: http://blog.csdn.net/kkdelta/article/details/46633557

ParseText::
Kerberos原理和使用 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Kerberos原理和使用 2015-06-25 10:36 480人阅读 评论 (0) 收藏 举报 分类： 系统运维 （14） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Kerberos原理 Kerberos 服务是单点登录系统，这意味着您对于每个会话只需向服务进行一次自我验证，即可自动保护该会话过程中所有后续事务的安全。服务对您进行验证后，即无需在每次使用基于 Kerberos 的服务时进行验证。因此，无需在每次使用这些服务时都在网络上发送口令（增强了安全性）。MIT写了一段故事型的对话，比较生动得表述了Kerberos协议的工作原理： Athena和欧里庇得斯关于地狱之门守护者的对话。简而言之，kerbores V5的工作原理如下： Kerbores中有三种角色： KDC：负责分发密钥的密钥分配中心 Client：需要使用kerbores服务的客户端 Service：提供具体服务的服务端 其中，Client需要和KDC和Service都进行通信。协议授权流程分两个部分： (1) 获取原始票据 首先，Client向KDC发送自己的身份信息，KDC从授予票据服务(Ticket Granting Service)得到可用的票据(ticket-granting ticket)，并用协议开始前KDC与Client之间的密钥将票据加密回复给client，client收到KDC回复的加密票据后利用与client先前协议的密钥将票据解密，从而获得票据，此步骤主要是允许client进行Kerberos的验证，是进行访问服务的先决条件。 (2) 获取服务票据以及访问服务 client利用之前获得的票据向KDC请求服务票据，从而通过服务的身份验证。获取服务票据以及访问服务总共有如下四步： ①. client将之前获得的票据和要请求的服务信息发送给KDC，KDC中的授予票据服务将client和service之间生成一个会话密钥(Session Key)用于服务器与client的身份验证。然后KDC将这个会话密钥和用户名，用户地址(IP)，服务名，有效期，时间戳一起包装成一个票据(这张票据用于service对client的身份验证)通过client转发给service。 ②. 为了让票据对client保密，所以KDC用协议开始之前KDC与服务端之间的密钥将票据加密后再发给client，同时为了让client与service之间共享那个会话密钥，KDC用client与它之间的密钥将会话密钥加密返回给client ③. 为了完成票据的传递，client将刚才收到的票据转发到service，由于client不知道KDC与service的密钥，所以它无法修改票据的信息，同时client将收到的会话密钥解压出来，然后将自己的用户名，用户地址(IP)打包成验证包用会话密钥加密也发给service ④. Service收到票据后利用它与KDC之间的密钥将票据中的信息解密出来，从而获得会话密钥和用户名，用户地址(IP)，服务名，有效期。然后再用会话密钥将验证包解密从而获得用户名，用户地址(IP)将其与之前票据中解密出来的用户名，用户地址(IP)做比较从而验证client的身份，如果service有返回结果，将其返回给client. 安装步骤： 1.下载krb5-1.9.5 http://web.mit.edu/kerberos/dist/krb5/1.9/krb5-1.9.5-signed.tar 2.解压 tar -xvf krb5-1.9.5-signed.tar 生成krb5-1.9.5.tar.gz 和 krb5-1.9.5.tar.gz.asc 继续解压tar zxvf krb5-1.9.5.tar.gz 3.编译 cd krb5-1.9.5/src ./configure make && make install 也可以直接用yum 安装,redhat默认自带的 yum 源需要注册,也可以使用centos的yum源. wget http://mirrors.163.com/.help/CentOS6-Base-163.repo KDC server 安装 yum -y krb5-server 客户端安装: yum -y krb5-workstation 4.配置/etc/krb5.conf 这个是Kerberos最主要的配置文件，而且一定要放在/etc下 [logging]  default = FILE:/var/log/krb5libs.log  kdc = FILE:/var/log/krb5kdc.log  admin_server = FILE:/var/log/kadmind.log [libdefaults]  default_realm = KRBTEST.COM  dns_lookup_realm = false  dns_lookup_kdc = false  ticket_lifetime = 24h  forwardable = yes [realms]  KRBTEST.COM = {   kdc = srv4.localdomain.com:88   admin_server = srv4.localdomain.com:749   default_domain = KRBTEST.COM  } [domain_realm]  .localdomain.com = KRBTEST.COM  localdomain.com = KRBTEST.COM   5.配置/usr/local/var/krb5kdc/kdc.conf 由于上面安装时没有选择安装目录，所以默认的安装位置在/usr/local/var/krb5kdc 如果是yum安装,位置在/var/kerberos/krb5kdc [kdcdefaults]  kdc_ports = 88  kdc_tcp_ports = 88 [realms]  KRBTEST.COM = {   max_renewable_life = 7d   master_key_type = aes256-cts   acl_file = /var/kerberos/krb5kdc/kadm5.acl   dict_file = /usr/share/dict/words   admin_keytab = /var/kerberos/krb5kdc/kadm5.keytab   supported_enctypes = aes256-cts:normal aes128-cts:normal des3-hmac-sha1:normal arcfour-hmac:normal des-hmac-sha1:normal des-cbc-md5:normal des-cbc-crc:normal  } 配置acl文件 6.创建一个kerberos数据库 kdb5_util create -r KRBTEST.COM -s   会要求创建数据库的密码。（kerberos）,创建principal保存数据库文件 7.登录kerberos kadmin.local    1）查看用户 listprincs 2）添加用户 addprinc appadmin@KRBTEST.COM (password:kerberos) 8启动服务 service krb5kdc start Starting Kerberos 5 KDC:                         [  OK  ] service kadmin start Starting Kerberos 5 Admin Server:                [  OK  ] 9 验证principle 在其他主机上需要有相同的krb5.conf配置。 kinit appadmin@KRBTEST.COM 官方文档: http://web.mit.edu/kerberos/krb5-current/doc/admin/install_kdc.html#install-and-configure-the-master-kdc 以下面的3台机器做ssh+kerberos测试：从srv5登陆srv6 KDC服务器: srv4.localdomain.com srv5.localdomain.com srv6.localdomain.com KDC服务器的kdc.conf文件如下: kdc_ports = 88 kdc_tcp_ports = 88   [realms]  KRBTEST.COM = {   #master_key_type = aes256-cts   acl_file = /var/kerberos/krb5kdc/kadm5.acl   dict_file = /usr/share/dict/words   admin_keytab = /var/kerberos/krb5kdc/kadm5.keytab   supported_enctypes = aes256-cts:normal aes128-cts:normal des3-hmac-sha1:normal arcfour-hmac:normal des-hmac-sha1:normal des-cbc-md5:normal des-cbc-crc:normal  }   3台机器的hosts文件改为如下 192.168.8.4     srv4.localdomain.com      192.168.8.5     srv5.localdomain.com      192.168.8.6     srv6.localdomain.com 3台机器的/etc/krb5.conf文件如下: [logging]  default = FILE:/var/log/krb5libs.log  kdc = FILE:/var/log/krb5kdc.log  admin_server = FILE:/var/log/kadmind.log [libdefaults]  default_realm = KRBTEST.COM  dns_lookup_realm = false  dns_lookup_kdc = false  ticket_lifetime = 24h  forwardable = yes [realms]  KRBTEST.COM = {   kdc = srv4.localdomain.com:88   admin_server = srv4.localdomain.com:749   default_domain = KRBTEST.COM  } [domain_realm]  .localdomain.com = KRBTEST.COM  localdomain.com = KRBTEST.COM [appdefaults]  pam = {    debug = false    ticket_lifetime = 36000    renew_lifetime = 36000    forwardable = true    krb4_convert = false  }   在srv4.localdomain.com执行下面的命令 addprinc yorker/admin （password:kerberos） 在srv5.localdomain.com执行下面的命令 kinit yorker/admin kadmin yorker/admin addprinc -randkey host/srv5.localdomain.com ktadd -k /etc/krb5.keytab host/srv5.localdomain.com Update the following values in /etc/ssh/sshd_config GSSAPIAuthentication yes GSSAPICleanupCredentials yes 在srv6.localdomain.com执行下面的命令 kinit yorker/admin kadmin yorker/admin addprinc -randkey host/srv6.localdomain.com ktadd -k /etc/krb5.keytab host/srv6.localdomain.com Update the following values in /etc/ssh/sshd_config GSSAPIAuthentication yes GSSAPICleanupCredentials yes 在srv5.localdomain.com和srv6.localdomain.com上重启sshd service sshd restart 在srv5.localdomain.com上 su - yorker kinit yorker 再执行下面的命令不用输入密码就可以登录到srv6.localdomain.com ssh srv6.localdomain.com 其它一些命令 klist kdestroy klist -k -t /etc/krb5.keytab ssh -v http://www.linuxproblems.org/wiki/Ssh_with_kerberos 上一篇 Spring Batch 简介 下一篇 使用ANT编译项目报错 com.sun.image.codec.jpeg does not exist 解决方法 顶 0 踩 0 我的同类文章 系统运维 （14） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180799次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 65
URL:: http://blog.csdn.net/kkdelta/article/details/48324717

ParseText::
使用ANT编译项目报错 com.sun.image.codec.jpeg does not exist 解决方法 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 使用ANT编译项目报错 com.sun.image.codec.jpeg does not exist 解决方法 2015-09-09 22:30 282人阅读 评论 (0) 收藏 举报 分类： J2EE （49） 作者同类文章 X 软件开发杂项 （35） 作者同类文章 X 项目开发中在对图片进行裁切处理的时候，有时候是会使用到 com.sun 包下的类时， 如果项目使用ant编译，会出现错误 com.sun.image.codec.jpeg does not exist 这是因为在JDK1.7+时，Oracle不允许使用sun.*的jar 具体参见http://www.oracle.com/technetwork/java/faq-sun-packages-142232.html 。 项目代码已经写好，且直接运行可以正常使用，只是使用ant编译会出现错误，现在不打算更换项目的具体实现代码，不能更换JDK版本，所以做如下处理即可： 在ANT中明确指定使用这个rt.jar ，而且rt.jar要拷贝到jre路径之外，如下： <!-- 使用ant编译，在使用到com.sun包下类时，需要指定rt.jar文件的位置 --> <path id="JAVA.rt"> <pathelement location="${frameone.runtime}/common/rt.jar" /> </path> <path id="Project.classpath"> <path refid="JAVA.rt" /> <fileset dir="${project.lib.dir}" includes="*.jar" /> </path> <target name="build-project" depends="init"> <echo message="${ant.project.name}: ${ant.file}" /> <javac includeantruntime="false" debug="true" debuglevel="${debuglevel}" destdir="${dist.classes.dir.cms}" source="${source}" target="${target}" encoding="UTF-8"> <src path="${src.dir}" /> <classpath refid="Project.classpath" /> </javac> </target> 上一篇 Kerberos原理和使用 下一篇 几个开源协议的简介 顶 0 踩 0 我的同类文章 J2EE （49） 软件开发杂项 （35） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180799次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 66
URL:: http://blog.csdn.net/kkdelta/article/details/49020101

ParseText::
几个开源协议的简介 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 几个开源协议的简介 标签： GPL BSD MIT Apache 2015-10-10 10:38 179人阅读 评论 (0) 收藏 举报 这里我们来看四种最常用的开源协议及它们的适用范围，供那些准备开源或者使用开源产品的开发人员/厂家参考。 BSD开源协议（original BSD license、FreeBSD license、Original BSD license） BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以”为所欲为”,可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。 但”为所欲为”的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件： 1.   如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。 2.   如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。 3.   不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。 BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。 Apache Licence 2.0（Apache License, Version 2.0、Apache License, Version 1.1、Apache License, Version 1.0） Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似： 1.   需要给代码的用户一份Apache Licence 2.   如果你修改了代码，需要再被修改的文件中说明。 3.   在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。 4.   如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。 Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。 GPL（GNU General Public License） 我们很熟悉的Linux就是采用了GPL。GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。 GPL协议的主要内容是只要在一个软件中使用(”使用”指类库引用，修改后的代码或者衍生代码)GPL 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。 由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。 其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似。 LGPL（GNU Lesser General Public License） LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。 但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。 GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品 MIT（MIT） MIT是和BSD一样宽范的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的 上一篇 使用ANT编译项目报错 com.sun.image.codec.jpeg does not exist 解决方法 下一篇 JS 函数中的arguments,call,apply 顶 2 踩 0 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180815次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 67
URL:: http://blog.csdn.net/kkdelta/article/details/49276787

ParseText::
JS 函数中的arguments,call,apply - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 JS 函数中的arguments,call,apply 标签： javascript arguments call apply 2015-10-20 14:23 550人阅读 评论 (0) 收藏 举报 分类： WEBUI （30） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 JS 函数定义的时候的参数和调用时的关系 调用时实际传递的参数可以比定义的参数多或者少,见下面的两个例子 <script> function test(a,b,c){ console.log(a); } test('a'); test('a','b','c'); </script> <script> function test(a){ console.log(a); } test('a'); test('a','b','c'); </script> JS的方法没有"重载"的概念，后定义的方法会覆盖前面的定义，如下面的例子， 都会执行第二个test方法。 <script> function test(a){ console.log(a); } function test(a,b){ console.log('next definition'); console.log(a); } test('a'); test('a','b','c'); </script> JS方法有一个内置的参数 arguments，这是很多JS框架"赖以生存”的基础， 如下面的例子: <script> function test(){ console.log(arguments); var arg = arguments[0]; if(arg.val1){ console.log(arg.val1); } if(arg.val2){ console.log(arg.val2); } } test('a'); test('a','b','c'); test({val1:'value1'}); </script> call, apply作用就是"借用"别人的方法来调用,就像调用自己的一样. call, apply方法区别是,从第二个参数起, call方法参数将依次传递给借用的方法作参数, 而apply直接将这些参数放到一个数组中再传递, 最后借用方法的参数列表是一样的. 下面的例子可以理解为 obj 有一个test方法，被obj1和obj2"借用"了 <script> var obj = { test: function(){ console.log(this.name); } } var obj1 = {name:'object1 name'}; obj.test.call(obj1); console.log('--------'); var obj2 = {name:'object2 name'}; obj.test.apply(obj2); </script> 上一篇 几个开源协议的简介 下一篇 JS通过prototype实现继承的简单示例: 顶 2 踩 0 我的同类文章 WEBUI （30） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180810次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 68
URL:: http://blog.csdn.net/kkdelta/article/details/49279191

ParseText::
JS通过prototype实现继承的简单示例: - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 JS通过prototype实现继承的简单示例: 标签： Javascript prototype 2015-10-20 16:38 568人阅读 评论 (1) 收藏 举报 分类： WEBUI （30） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 JS通过prototype实现继承的简单示例: var MYJS={}; MYJS.extend=function(baseClass, prop) { if (typeof (baseClass) === "object") { prop = baseClass; baseClass = null; } // 本次调用所创建的类（构造函数） function F() { } // 如果此类需要从其它类扩展 if (baseClass) { F.prototype = new baseClass(); F.prototype.constructor = F; } // 覆盖父类的同名函数 for (var name in prop) { if (prop.hasOwnProperty(name)) { F.prototype[name] = prop[name]; } } return F; }; 使用示例: <script> function Cls1(){ this.name="Cls1 class"; this.fun1 =function(){ console.log("Cls1.fun1"); }; } var Cls2 = MYJS.extend(Cls1, { a:'a', fun2:function(){ console.log("Cls2.fun2"); } }); var Cls3 = MYJS.extend(Cls2, { a:'cls3.b', b:'b', fun3:function(){ console.log("Cls3.fun3"); } }); var obj3 = new Cls3(); console.log(obj3.name); console.log(obj3.a); console.log(obj3.b); obj3.fun1(); obj3.fun2(); obj3.fun3(); </script> 上一篇 JS 函数中的arguments,call,apply 下一篇 Maven常用到的一些方法 顶 1 踩 0 我的同类文章 WEBUI （30） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180794次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 69
URL:: http://blog.csdn.net/kkdelta/article/details/50292791

ParseText::
Maven常用到的一些方法 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Maven常用到的一些方法 标签： Maven常用到的一些方法 2015-12-14 11:45 496人阅读 评论 (2) 收藏 举报 分类： 系统运维 （14） 作者同类文章 X 软件开发杂项 （35） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 将一个jar文件加入到repository中: mvn install:install-file -Dfile=sqljdbc4-4.0.jar -DpomFile=sqljdbc4-4.0.pom 上一篇 JS通过prototype实现继承的简单示例: 下一篇 成为CTO之前怎样炼成一位技术领导人 顶 1 踩 0 我的同类文章 系统运维 （14） 软件开发杂项 （35） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180812次 积分： 13702 等级： 积分：13702 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 70
URL:: http://blog.csdn.net/kkdelta/article/details/50337687

ParseText::
成为CTO之前怎样炼成一位技术领导人 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 成为CTO之前怎样炼成一位技术领导人 2015-12-17 09:53 81人阅读 评论 (0) 收藏 举报 分类： 项目管理 （1） 作者同类文章 X 软件开发杂项 （35） 作者同类文章 X 转载 http://mobile.51cto.com/team-496010.htm 近日，一名有超过 15 年软件开发经验的软件开发人员在 Hacker News 上提出了一个问题：如何才能成为一个好的技术领导者?该问题一经提出，在不到一天的时间内就获得了 160 多条回复。关于技术领导者应该具备的品质和管理技巧，网友们提出了各自的看法和建议，本文择要归纳如下。 如果不能从帮助团队获得满足感，那么就不要成为一名领导者 技术领导者要忙于会议、计划、打断、团队沟通、文档等工作，永远无法达到一个人单独工作时所能达到的那种个体生产力。 技术领导者的工作不再是让自己成为最好的编码人员，而是要尽可能地让其他人成为最好的编码人员。工作分配也要以一种有利于团队和个人成长的方式进行。要负责为团队成员清楚障碍，让他们的工作进入正轨。 技术领导者的满足感来自新人的培养和成长。 将自己视为其他开发人员的导师 即使已经知道了答案，有时候也需要让团队自行决策。许多时候，正确的答案并不唯一。技术领导者的工作不是选择正确的答案，而是确保团队不选择错误的答案。允许团队作为一个整体自行决策有利于保持高涨的士气，让每名成员都更有自豪感和主人翁精神。 在有关技术问题上，团队信任并依赖你的建议/观点。作为技术领导者要了解团队所开发的应用，了解该应用所涉及的领域，了解功能背后的技术，并编写详细的技术文档。 有时候，技术领导者同时也是首席工程师。这时，他所能为团队做的最有价值的事情是在开始和结束时为团队成员提供帮助。 有时候，技术领导者还是架构师。当解释系统或代码的行为时，他需要能够快速改变高度。当同开发人员调试问题时，他要能够深入技术细节;而当向 CEO 解释计划或成本估算时，他要能够在一个更高的层次上谈论系统。 随时准备好回答团队成员的问题 但当你有问题要问他们时要首先询问他们是否方便。这很难做到，因为作为一名技术领导者，你有许多工作要做。但是，为了可以有更多的时间回答他人的问题及为其他人提供支持，可以将复杂的任务委派给团队中更有经验的成员。 很多时候，团队成员的问题本可以在空闲或闲聊的时候提出。为此，引入可异步使用的生产力工具是一种更好的方式，比如，对于一些不太紧急的问题，可以借助 Trello 卡片或 GitHub 问题跟踪器提出。不过，不管采用什么样的沟通机制，关键是要获得其他团队成员的支持，让他们在工作无法进行或完成的时候，可以很舒服地打断你。 为了了解团队成员，技术领导者要定期主动同团队成员进行一对一的沟通。每名开发人员都是不同的，通过沟通可以了解到这种不同。 减少具体的编码工作，但仍然要编码 即使不做很多具体的编码工作，也仍然需要监控和接受所有的 pull request，并利用这个过程，帮助初级开发者修改代码。这是必须的，如果不编码，那么开发人员会质疑你的判断，不容易接受你的建议。 但是，作为技术领导者，你的首要任务是确保团队成员的生产力，而不是自己的生产力。你要为整个团队的输出负责，如果那意味着零编码，那么就不要编码了。同时，这也意味着，即使代价是停下自己的工作，也要帮助处于困境中的团队成员。 要谦逊 要相信，你的团队所具备的能力和理解力都要超过你。 要承认，关于某个主题或组件，有人懂得比你多。成为一名优秀的领导者，并不需要事事都懂得比别人多。 如果团队成员都将你视为权威，那么他们会害怕自己做决策。在这种情况下，你就成了障碍。 要诚实 当你知道答案的时候，就说出来，即使那意味着某些人要重做大量的工作。如果你不知道答案，也要说出来，不能不懂装懂。你获得了当前的职位，就说明你有资格，你永远不需要向其他人证明你的能力。 除了上述这些讨论比较多的观点外，还有一些其它的观点，比如，把令人愉快的任务分给别人，把令人讨厌的任务留给自己;公开表扬，私底下批评;让每个团队成员都清楚地知道你对他们的期望;及时反馈和表扬;与非技术管理人员建立稳固的关系等等。还有一些行为是技术领导者应该避免的，比如，不要抱怨代码库有多糟糕;不要说“我们要重写 XYZ”，技术债务要逐步解决;不要轻易提议使用可选的平台和框架。不过，需要注意的是，不同的组织有不同的企业文化，对技术和技术领导者有不同的看法和预期，技术领导者要以此为出发点考虑问题。 上一篇 Maven常用到的一些方法 下一篇 Java 工程师成神之路 顶 1 踩 0 我的同类文章 项目管理 （1） 软件开发杂项 （35） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180802次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 71
URL:: http://blog.csdn.net/kkdelta/article/details/50337879

ParseText::
Java 工程师成神之路 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Java 工程师成神之路 2015-12-17 10:07 146人阅读 评论 (0) 收藏 举报 分类： 软件开发杂项 （35） 作者同类文章 X J2EE （49） 作者同类文章 X 转载 http://www.hollischuang.com/archives/489 https://linux.cn/article-6739-1.html 一、基础篇 1.1 JVM 1.1.1. Java内存模型，Java内存管理，Java堆和栈，垃圾回收 http://www.jcp.org/en/jsr/detail?id=133   http://ifeve.com/jmm-faq/   1.1.2. 了解JVM各种参数及调优 1.1.3. 学习使用Java工具 jps, jstack, jmap, jconsole, jinfo, jhat, javap, … http://kenai.com/projects/btrace   http://www.crashub.org/   https://github.com/taobao/TProfiler   https://github.com/CSUG/HouseMD   http://wiki.cyclopsgroup.org/jmxterm   https://github.com/jlusdy/TBJMap   1.1.4. 学习Java诊断工具 http://www.eclipse.org/mat/   http://visualvm.java.net/oqlhelp.html   1.1.5. 自己编写各种outofmemory，stackoverflow程序 HeapOutOfMemory Young OutOfMemory MethodArea OutOfMemory ConstantPool OutOfMemory DirectMemory OutOfMemory Stack OutOfMemory Stack OverFlow 1.1.6. 使用工具尝试解决以下问题，并写下总结 当一个Java程序响应很慢时如何查找问题 当一个Java程序频繁FullGC时如何解决问题，如何查看垃圾回收日志 当一个Java应用发生OutOfMemory时该如何解决，年轻代、年老代、永久代解决办法不同，导致原因也不同 1.1.7. 参考资料 http://docs.oracle.com/javase/specs/jvms/se7/html/   http://www.cs.umd.edu/~pugh/java/memoryModel/   http://gee.cs.oswego.edu/dl/jmm/cookbook.html   1.2. Java基础知识 1.2.1. 阅读源代码 java.lang.String java.lang.Integer java.lang.Long java.lang.Enum java.math.BigDecimal java.lang.ThreadLocal java.lang.ClassLoader & java.net.URLClassLoader java.util.ArrayList & java.util.LinkedList java.util.HashMap & java.util.LinkedHashMap & java.util.TreeMap java.util.HashSet & java.util.LinkedHashSet & java.util.TreeSet 1.2.2. 熟悉Java中各种变量类型 1.2.3. 熟悉Java String的使用，熟悉String的各种函数 1.2.4. 熟悉Java中各种关键字 1.2.5. 学会使用List，Map，Stack，Queue，Set 上述数据结构的遍历 上述数据结构的使用场景 Java实现对Array/List排序 java.uti.Arrays.sort() java.util.Collections.sort() Java实现对List去重 Java实现对List去重，并且需要保留数据原始的出现顺序 Java实现最近最少使用cache，用LinkedHashMap 1.2.6. Java IO&Java NIO，并学会使用 java.io.* java.nio.* nio和reactor设计模式 文件编码，字符集 1.2.7. Java反射与javassist 反射与工厂模式 java.lang.reflect.* 1.2.8. Java序列化 java.io. Serializable 什么是序列化，为什么序列化 序列化与单例模式 google序列化protobuf 1.2.9. 虚引用，弱引用，软引用 java.lang.ref.* 实验这些引用的回收 1.2.10. 熟悉Java系统属性 java.util.Properties 1.2.11. 熟悉Annotation用法 java.lang.annotation.* 1.2.12. JMS javax.jms.* 1.2.13. JMX java.lang.management.* javax.management.* 1.2.14. 泛型和继承，泛型和擦除 1.2.15. 自动拆箱装箱与字节码 1.2.16. 实现Callback 1.2.17. java.lang.Void类使用 1.2.18. Java Agent，premain函数 java.lang.instrument 1.2.19. 单元测试 Junit， http://junit.org/   Jmockit， https://code.google.com/p/jmockit/   djUnit， http://works.dgic.co.jp/djunit/   1.2.20. Java实现通过正则表达式提取一段文本中的电子邮件，并将@替换为#输出 java.lang.util.regex.* 1.2.21. 学习使用常用的Java工具库 commons.lang, commons.*… guava-libraries netty 1.2.22. 什么是API&SPI http://en.wikipedia.org/wiki/Application_programming_interface   http://en.wikipedia.org/wiki/Service_provider_interface   1.2.23. 参考资料 JDK src.zip 源代码 http://openjdk.java.net/   http://commons.apache.org/   https://code.google.com/p/guava-libraries/   http://netty.io/   http://stackoverflow.com/questions/2954372/difference-between-spi-and-api   http://stackoverflow.com/questions/11404230/how-to-implement-the-api-spi-pattern-in-java   1.3. Java并发编程 1.3.1. 阅读源代码，并学会使用 java.lang.Thread java.lang.Runnable java.util.concurrent.Callable java.util.concurrent.locks.ReentrantLock java.util.concurrent.locks.ReentrantReadWriteLock java.util.concurrent.atomic.Atomic* java.util.concurrent.Semaphore java.util.concurrent.CountDownLatch java.util.concurrent.CyclicBarrier java.util.concurrent.ConcurrentHashMap java.util.concurrent.Executors 1.3.2. 学习使用线程池，自己设计线程池需要注意什么 1.3.3. 锁 什么是锁，锁的种类有哪些，每种锁有什么特点，适用场景是什么 在并发编程中锁的意义是什么 1.3.4. synchronized的作用是什么，synchronized和lock 1.3.5. sleep和wait 1.3.6. wait和notify 1.3.7. 写一个死锁的程序 1.3.8. 什么是守护线程，守护线程和非守护线程的区别以及用法 1.3.9. volatile关键字的理解 C++ volatile关键字和Java volatile关键字 happens-before语义 编译器指令重排和CPU指令重排 http://en.wikipedia.org/wiki/Memory_ordering   http://en.wikipedia.org/wiki/Volatile_variable   http://preshing.com/20130702/the-happens-before-relation/   1.3.10. 以下代码是不是线程安全？为什么？如果为count加上volatile修饰是否能够做到线程安全？你觉得该怎么做是线程安全的？ public class Sample { private static int count = 0 ; public static void increment (){ count ++; } } 1.3.11. 解释一下下面两段代码的差别 // 代码1 public class Sample { private static int count = 0 ; synchronized public static void increment () { count ++; } } // 代码2 public class Sample { private static AtomicInteger count = new AtomicInteger ( 0 ); public static void increment () { count . getAndIncrement (); } } 1.3.12. 参考资料 http://book.douban.com/subject/10484692/   http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html   二、 进阶篇 2.1. Java底层知识 2.1.1. 学习了解字节码、class文件格式 http://en.wikipedia.org/wiki/Java_class_file   http://en.wikipedia.org/wiki/Java_bytecode   http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings   http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/   http://asm.ow2.org/   2.1.2. 写一个程序要求实现javap的功能（手工完成，不借助ASM等工具） 如Java源代码： public static void main ( String [] args ) { int i = 0 ; i += 1 ; i *= 1 ; System . out . println ( i ); } 编译后读取class文件输出以下代码： public static void main ( java . lang . String []); Code : Stack = 2 , Locals = 2 , Args_size = 1 0 : iconst_0 1 : istore_1 2 : iinc 1 , 1 5 : iload_1 6 : iconst_1 7 : imul 8 : istore_1 9 : getstatic # 2 ; //Field java/lang/System.out:Ljava/io/PrintStream; 12 : iload_1 13 : invokevirtual # 3 ; //Method java/io/PrintStream.println:(I)V 16 : return LineNumberTable : line 4 : 0 line 5 : 2 line 6 : 5 line 7 : 9 line 8 : 16 2.1.3. CPU缓存，L1，L2，L3和伪共享 http://duartes.org/gustavo/blog/post/intel-cpu-caches/   http://mechanical-sympathy.blogspot.com/2011/07/false-sharing.html   2.1.4. 什么是尾递归 2.1.5. 熟悉位运算 用位运算实现加、减、乘、除、取余 2.1.6. 参考资料 http://book.douban.com/subject/1138768/   http://book.douban.com/subject/6522893/   http://en.wikipedia.org/wiki/Java_class_file   http://en.wikipedia.org/wiki/Java_bytecode   http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings   2.2. 设计模式 2.2.1. 实现AOP CGLIB和InvocationHandler的区别， http://cglib.sourceforge.net/   动态代理模式 Javassist实现AOP， http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/   ASM实现AOP， http://asm.ow2.org/   2.2.2. 使用模板方法设计模式和策略设计模式实现IOC 2.2.3. 不用synchronized和lock，实现线程安全的单例模式 2.2.4. nio和reactor设计模式 2.2.5. 参考资料 http://asm.ow2.org/   http://cglib.sourceforge.net/   http://www.javassist.org/   2.3. 网络编程知识 2.3.1. Java RMI，Socket，HttpClient 2.3.2. 用Java写一个简单的静态文件的HTTP服务器 实现客户端缓存功能，支持返回304 实现可并发下载一个文件 使用线程池处理客户端请求 使用nio处理客户端请求 支持简单的rewrite规则 上述功能在实现的时候需要满足“开闭原则” 2.3.3. 了解nginx和apache服务器的特性并搭建一个对应的服务器 http://nginx.org/   http://httpd.apache.org/   2.3.4. 用Java实现FTP、SMTP协议 2.3.5. 什么是CDN？如果实现？DNS起到什么作用？ 搭建一个DNS服务器 搭建一个 Squid 或 Apache Traffic Server 服务器 http://www.squid-cache.org/   http://trafficserver.apache.org/   http://en.wikipedia.org/wiki/Domain_Name_System   2.3.6. 参考资料 http://www.ietf.org/rfc/rfc2616.txt   http://tools.ietf.org/rfc/rfc5321.txt   http://en.wikipedia.org/wiki/Open/closed_principle   2.4. 框架知识 spring，spring mvc，阅读主要源码 ibatis，阅读主要源码 用spring和ibatis搭建java server 2.5. 应用服务器知识 熟悉使用jboss， https://www.jboss.org/overview/   熟悉使用tomcat， http://tomcat.apache.org/    熟悉使用jetty， http://www.eclipse.org/jetty/   三、 高级篇 3.1. 编译原理知识 3.1.1. 用Java实现以下表达式解析并返回结果（语法和Oracle中的select sysdate-1 from dual类似） sysdate sysdate - 1 sysdate - 1 / 24 sysdate - 1 /( 12 * 2 ) 3.1.2. 实现对一个List通过DSL筛选 QList < Map < String , Object >> mapList = new QList < Map < String , Object >>; mapList . add ({ "name" : "hatter test" }); mapList . add ({ "id" : - 1 , "name" : "hatter test" }); mapList . add ({ "id" : 0 , "name" : "hatter test" }); mapList . add ({ "id" : 1 , "name" : "test test" }); mapList . add ({ "id" : 2 , "name" : "hatter test" }); mapList . add ({ "id" : 3 , "name" : "test hatter" }); mapList . query ( "id is not null and id > 0 and name like '%hatter%'" ); 要求返回列表中匹配的对象，即最后两个对象； 3.1.3. 用Java实现以下程序（语法和变量作用域处理都和JavaScript类似）： 代码： var a = 1 ; var b = 2 ; var c = function () { var a = 3 ; println ( a ); println ( b ); }; c (); println ( a ); println ( b ); 输出： 3212 3.1.4. 参考资料 http://en.wikipedia.org/wiki/Abstract_syntax_tree   https://javacc.java.net/   http://www.antlr.org/   3.2. 操作系统知识 Ubuntu Centos 使用linux，熟悉shell脚本 3.3. 数据存储知识 3.3.1. 关系型数据库 MySQL 如何看执行计划 如何搭建MySQL主备 binlog是什么 Derby，H2，PostgreSQL SQLite 3.3.2. NoSQL Cache Redis Memcached Leveldb Bigtable HBase Cassandra Mongodb 图数据库 neo4j 3.3.3. 参考资料 http://db-engines.com/en/ranking   http://redis.io/   https://code.google.com/p/leveldb/   http://hbase.apache.org/   http://cassandra.apache.org/   http://www.mongodb.org/   http://www.neo4j.org/   3.4. 大数据知识 3.4.1. Zookeeper，在linux上部署zk 3.4.2. Solr，Lucene，ElasticSearch 在linux上部署solr，solrcloud，新增、删除、查询索引 3.4.3. Storm，流式计算，了解Spark，S4 在linux上部署storm，用zookeeper做协调，运行storm hello world，local和remote模式运行调试storm topology。 3.4.4. Hadoop，离线计算 Hdfs：部署NameNode，SecondaryNameNode，DataNode，上传文件、打开文件、更改文件、删除文件 MapReduce：部署JobTracker，TaskTracker，编写mr job Hive：部署hive，书写hive sql，得到结果 Presto：类hive，不过比hive快，非常值得学习 3.4.5. 分布式日志收集flume，kafka，logstash 3.4.6. 数据挖掘，mahout 3.4.7. 参考资料 http://zookeeper.apache.org/   https://lucene.apache.org/solr/   https://github.com/nathanmarz/storm/wiki   http://hadoop.apache.org/   http://prestodb.io/   http://flume.apache.org/ http://logstash.net/ http://kafka.apache.org/ http://mahout.apache.org/   3.5. 网络安全知识 3.5.1. 什么是DES、AES 3.5.2. 什么是RSA、DSA 3.5.3. 什么是MD5，SHA1 3.5.4. 什么是SSL、TLS，为什么HTTPS相对比较安全 3.5.5. 什么是中间人攻击、如果避免中间人攻击 3.5.6. 什么是DOS、DDOS、CC攻击 3.5.7. 什么是CSRF攻击 3.5.8. 什么是CSS攻击 3.5.9. 什么是SQL注入攻击 3.5.10. 什么是Hash碰撞拒绝服务攻击 3.5.11. 了解并学习下面几种增强安全的技术 http://www.openauthentication.org/   HOTP http://www.ietf.org/rfc/rfc4226.txt   TOTP http://tools.ietf.org/rfc/rfc6238.txt   OCRA http://tools.ietf.org/rfc/rfc6287.txt   http://en.wikipedia.org/wiki/Salt_(cryptography)   3.5.12. 用openssl签一个证书部署到apache或nginx 3.5.13. 参考资料 http://en.wikipedia.org/wiki/Cryptographic_hash_function   http://en.wikipedia.org/wiki/Block_cipher   http://en.wikipedia.org/wiki/Public-key_cryptography   http://en.wikipedia.org/wiki/Transport_Layer_Security   http://www.openssl.org/   https://code.google.com/p/google-authenticator/   四、 扩展篇 4.1. 相关知识 4.1.1. 云计算，分布式，高可用，可扩展 4.1.2. 虚拟化 https://linuxcontainers.org/   http://www.linux-kvm.org/page/Main_Page   http://www.xenproject.org/   https://www.docker.io/   4.1.3. 监控 http://www.nagios.org/   http://ganglia.info/   4.1.4. 负载均衡 http://www.linuxvirtualserver.org/   4.1.5. 学习使用git https://github.com/   https://git.oschina.net/   4.1.6. 学习使用maven http://maven.apache.org/   4.1.7. 学习使用gradle http://www.gradle.org/   4.1.8. 学习一个小语种语言 Groovy Scala LISP, Common LISP, Schema, Clojure R Julia Lua Ruby 4.1.9. 尝试了解编码的本质 了解以下概念 ASCII, ISO-8859-1 GB2312, GBK, GB18030 Unicode, UTF-8 不使用 String.getBytes() 等其他工具类/函数完成下面功能 public static void main ( String [] args ) throws IOException { String str = "Hello, 我们是中国人。" ; byte [] utf8Bytes = toUTF8Bytes ( str ); FileOutputStream fos = new FileOutputStream ( "f.txt" ); fos . write ( utf8Bytes ); fos . close (); } public static byte [] toUTF8Bytes ( String str ) { return null ; // TODO } 想一下上面的程序能不能写一个转GBK的？ 写个程序自动判断一个文件是哪种编码 4.1.10. 尝试了解时间的本质 时区 & 冬令时、夏令时 http://en.wikipedia.org/wiki/Time_zone   ftp://ftp.iana.org/tz/data/asia   http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9C%8B%E6%99%82%E5%8D%80   闰年，  http://en.wikipedia.org/wiki/Leap_year   闰秒，  ftp://ftp.iana.org/tz/data/leapseconds   System.currentTimeMillis() 返回的时间是什么 4.1.11. 参考资料 http://git-scm.com/   http://en.wikipedia.org/wiki/UTF-8   http://www.iana.org/time-zones   4.2. 扩展学习 4.2.1. JavaScript知识 4.2.1.1. 什么是prototype 修改代码，使程序输出“1 3 5”：  http://jsfiddle.net/Ts7Fk/   4.2.1.2. 什么是闭包 看一下这段代码，并解释一下为什么按Button1时没有alert出“This is button: 1”，如何修改： http://jsfiddle.net/FDPj3/1/   4.2.1.3. 了解并学习一个JS框架 jQuery ExtJS ArgularJS 4.2.1.4. 写一个Greasemonkey插件 http://en.wikipedia.org/wiki/Greasemonkey     4.2.1.5. 学习node.js http://nodejs.org/   4.2.2. 学习html5 ArgularJS， https://docs.angularjs.org/api   4.2.3. 参考资料 http://www.ecmascript.org/   http://jsfiddle.net/   http://jsbin.com/   http://runjs.cn/   http://userscripts.org/   五、 推荐书籍 《深入Java虚拟机》 《深入理解Java虚拟机》 《Effective Java》 《七周七语言》 《七周七数据》 《Hadoop技术内幕》 《Hbase In Action》 《Mahout In Action》 《这就是搜索引擎》 《Solr In Action》 《深入分析Java Web技术内幕》 《大型网站技术架构》 《高性能MySQL》 《算法导论》 《计算机程序设计艺术》 《代码大全》 《JavaScript权威指南》 上一篇 成为CTO之前怎样炼成一位技术领导人 下一篇 如何更改Linux中默认的openjdk为自己安装的JDK 顶 0 踩 0 我的同类文章 软件开发杂项 （35） J2EE （49） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

Recno:: 72
URL:: http://blog.csdn.net/kkdelta/article/details/50365323

ParseText::
如何更改Linux中默认的openjdk为自己安装的JDK - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何更改Linux中默认的openjdk为自己安装的JDK 2015-12-20 19:43 362人阅读 评论 (0) 收藏 举报 分类： Unix/Linux （43） 作者同类文章 X 软件开发杂项 （35） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 (1) /etc/profile export JAVA_HOME=/usr/java/jdk1.7.0_67-cloudera/ export PATH=$PATH:$JAVA_HOME/bin export JRE_HOME="$JAVA_HOME/jre" export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/rt.jar 修改完成后，使用source /etc/profile 命令进行更新； （2）下面这几步比较重要，因为在许多linux系统中都预装了openjdk，所以即使上面进行了这些设置，系统默认的还不是我们要设置的内容；如果要真正使用我们自己的jdk，还需要一下步骤： sudo update-alternatives --install /usr/bin/java java /usr/java/jdk1.7.0_67-cloudera/bin/java 300 sudo update-alternatives --install /usr/bin/javac javac /usr/java/jdk1.7.0_67-cloudera/bin/javac 300 (这里的300只是标识一下，没什么意义，只是下一步要用到) （3）大功告成，使用java -version 命令来查看我们的java环境变量，显示如下内容： java version "1.7.0_05" Java(TM) SE Runtime Environment (build 1.7.0_05-b06) Java HotSpot(TM) Server VM (build 23.1-b03, mixed mode) * 对于更新一个 /usr/bin/xxx 命令指向一个新的路径可以用 sudo update-alternatives --config xxx 上一篇 Java 工程师成神之路 下一篇 怎样成为一个好的技术领导者 顶 0 踩 0 我的同类文章 Unix/Linux （43） 软件开发杂项 （35） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180806次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 73
URL:: http://blog.csdn.net/kkdelta/article/details/50392052

ParseText::
怎样成为一个好的技术领导者 - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 怎样成为一个好的技术领导者 2015-12-24 09:04 71人阅读 评论 (0) 收藏 举报 分类： 软件开发杂项 （35） 作者同类文章 X 项目管理 （1） 作者同类文章 X 如果不能从帮助团队获得满足感，那么就不要成为一名领导者 技术领导者要忙于会议、计划、打断、团队沟通、文档等工作，永远无法达到一个人单独工作时所能达到的那种个体生产力。 技术领导者的工作不再是让自己成为最好的编码人员，而是要尽可能地让其他人成为最好的编码人员。工作分配也要以一种有利于团队和个人成长的方式进行。要负责为团队成员清楚障碍，让他们的工作进入正轨。 技术领导者的满足感来自新人的培养和成长。 将自己视为其他开发人员的导师 即使已经知道了答案，有时候也需要让团队自行决策。许多时候，正确的答案并不唯一。技术领导者的工作不是选择正确的答案，而是确保团队不选择错误的答案。允许团队作为一个整体自行决策有利于保持高涨的士气，让每名成员都更有自豪感和主人翁精神。 在有关技术问题上，团队信任并依赖你的建议/观点。作为技术领导者要了解团队所开发的应用，了解该应用所涉及的领域，了解功能背后的技术，并编写详细的技术文档。 有时候，技术领导者同时也是首席工程师。这时，他所能为团队做的最有价值的事情是在开始和结束时为团队成员提供帮助。 有时候，技术领导者还是架构师。当解释系统或代码的行为时，他需要能够快速改变高度。当同开发人员调试问题时，他要能够深入技术细节;而当向 CEO 解释计划或成本估算时，他要能够在一个更高的层次上谈论系统。 随时准备好回答团队成员的问题 但当你有问题要问他们时要首先询问他们是否方便。这很难做到，因为作为一名技术领导者，你有许多工作要做。但是，为了可以有更多的时间回答他人的问题及为其他人提供支持，可以将复杂的任务委派给团队中更有经验的成员。 很多时候，团队成员的问题本可以在空闲或闲聊的时候提出。为此，引入可异步使用的生产力工具是一种更好的方式，比如，对于一些不太紧急的问题，可以借助 Trello 卡片或 GitHub 问题跟踪器提出。不过，不管采用什么样的沟通机制，关键是要获得其他团队成员的支持，让他们在工作无法进行或完成的时候，可以很舒服地打断你。 为了了解团队成员，技术领导者要定期主动同团队成员进行一对一的沟通。每名开发人员都是不同的，通过沟通可以了解到这种不同。 减少具体的编码工作，但仍然要编码 即使不做很多具体的编码工作，也仍然需要监控和接受所有的 pull request，并利用这个过程，帮助初级开发者修改代码。这是必须的，如果不编码，那么开发人员会质疑你的判断，不容易接受你的建议。 但是，作为技术领导者，你的首要任务是确保团队成员的生产力，而不是自己的生产力。你要为整个团队的输出负责，如果那意味着零编码，那么就不要编码了。同时，这也意味着，即使代价是停下自己的工作，也要帮助处于困境中的团队成员。 要谦逊 要相信，你的团队所具备的能力和理解力都要超过你。 要承认，关于某个主题或组件，有人懂得比你多。成为一名优秀的领导者，并不需要事事都懂得比别人多。 如果团队成员都将你视为权威，那么他们会害怕自己做决策。在这种情况下，你就成了障碍。 要诚实 当你知道答案的时候，就说出来，即使那意味着某些人要重做大量的工作。如果你不知道答案，也要说出来，不能不懂装懂。你获得了当前的职位，就说明你有资格，你永远不需要向其他人证明你的能力。 除了上述这些讨论比较多的观点外，还有一些其它的观点，比如，把令人愉快的任务分给别人，把令人讨厌的任务留给自己;公开表扬，私底下批评;让每个团队成员都清楚地知道你对他们的期望;及时反馈和表扬;与非技术管理人员建立稳固的关系等等。还有一些行为是技术领导者应该避免的，比如，不要抱怨代码库有多糟糕;不要说“我们要重写 XYZ”，技术债务要逐步解决;不要轻易提议使用可选的平台和框架。不过，需要注意的是，不同的组织有不同的企业文化，对技术和技术领导者有不同的看法和预期，技术领导者要以此为出发点考虑问题。 上一篇 如何更改Linux中默认的openjdk为自己安装的JDK 下一篇 HDFS JAVA客户端的权限错误：Permission denied 顶 0 踩 0 我的同类文章 软件开发杂项 （35） 项目管理 （1） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180808次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 74
URL:: http://blog.csdn.net/kkdelta/article/details/50393413

ParseText::
HDFS JAVA客户端的权限错误：Permission denied - 交换一个思想，能得到俩思想 - 博客频道 - CSDN.NET 交换一个思想，能得到俩思想 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 HDFS JAVA客户端的权限错误：Permission denied 2015-12-24 11:38 72人阅读 评论 (0) 收藏 举报 分类： 大数据 （17） 作者同类文章 X HDFS JAVA客户端的权限错误：Permission denied 搭建了一个Hadoop的环境，Hadoop集群环境部署在几个Linux服务器上，现在想使用windows上的Java客户端来操作集群中的HDFS文件，但是在客户端运行时出现了如下的认证错误，被折磨了几天，问题终得以解决。以此文记录问题的解决过程。 （ 如果想看最终解决问题的方法拉到最后，如果想看我的问题解决思路请从上向下看 ） 问题描述 上传文件的代码：      private   static   void  uploadToHdfs()  throws  FileNotFoundException,IOException {          //我的文件地址         String localSrc =  "E:\\快盘\\技术文档\\hadoop\\HDFS初步研究.pdf" ;          //存放在云端的目的地址         String dest =  "hdfs://192.168.2.156:9000/user/HDFS初步研究.pdf" ;         InputStream in =  new  BufferedInputStream( new  FileInputStream(localSrc));          //得到配置对象         Configuration conf =  new  Configuration(); //        conf.set("fs.default.name","hdfs://192.168.2.156:9000");          //文件系统         FileSystem fs = FileSystem.get(URI.create(dest), conf);          //输出流         OutputStream out = fs.create( new  Path(dest),  new  Progressable() {              @Override              public   void  progress() {                 System.out.println( "上传完一个设定缓存区大小容量的文件！" );             }         });          //连接两个流，形成通道，使输入流向输出流传输数据         IOUtils.copyBytes(in, out,  4096 ,  true );     } 错误的详细描述如下： org.apache.hadoop.security.AccessControlException: org.apache.hadoop.security .AccessControlException: Permission denied: user=Administrator, access=WRITE, inode="hadoop": hadoop:supergroup:rwxr-xr-x 其实这个错误的原因很容易看出来，用户Administator在hadoop上执行写操作时被权限系统拒绝. 解决问题的过程 看到这个错误的，第一步就是将这个错误直接入放到百度google里面进行搜索。找到了N多篇文章，但是主要的思路就如此篇文章所写的两个解决办法： http://www.cnblogs.com/acmy/archive/2011/10/28/2227901.html 1、在hdfs的配置文件中，将dfs.permissions修改为False 2、执行这样的操作 hadoop fs -chmod 777 /user/hadoop 对于上面的第一个方法，我试了行不通，不知道是自己设置错误还是其他原因，对我此法不可行，第二个方法可行。第二个方法是让我们来修改HDFS中相应文件夹的权限，后面的/user/hadoop这个路径为HDFS中的文件路径，这样修改之后就让我们的administrator有在HDFS的相应目录下有写文件的权限（所有的用户都是写权限）。 虽然上面的第二步可以解决问题了，上传之后的文件所有者为Administrator，但是总感觉这样的方法不够优雅，而且这样修改权限会有一定的安全问题，总之就是看着不爽，就在想有没有其他的办法？ 问题分析 开始仔细的观察了这个错误的详细信息，看到user=Administrator, access=WRITE。这里的user其实是我当前系统（运行客户端的计算机的操作系统）的用户名，实际期望这里的user=hadoop（hadoop是我的HADOOP上面的用户名），但是它取的是当前的系统的用户名，很明显，如果我将当前系统的用户名改为hadoop，这个肯定也是可以行得通的，但是如果后期将开发的代码部署到服务器上之后，就不能方便的修改用户，此方法明显也不够方便。 现在就想着Configuration这个是一个配置类，有没有一个参数是可以在某个地方设置以哪个用户运行呢？搜索了半天，无果。没有找到相关的配置参数。 最终只有继续分析代码， FileSystem fs = FileSystem.get(URI.create(dest), conf);代码是在此处开始对HDFS进行调用，所以就想着将HADOOP的源码下下来，debug整个调用过程，这个user=Administator是在什么时间赋予的值。理解了调用过程，还怕找不到解决问题的办法么？ 跟踪代码进入 FileSystem.get-->CACHE.get（）-->Key key = new Key(uri, conf);到这里的时候发现key值里面已经有Administrator了，所以关键肯定是在new key的过程。继续跟踪UserGroupInformation.getCurrentUser()-->getLoginUser()-->login.login()到这一步的时候发现用户名已经确定了，但是这个方法是Java的核心源码，是一个通用的安全认证，但对这一块不熟悉，但是debug时看到subject里面有NTUserPrincipal：Administator，所以就想着搜索一下这个东西是啥，结果就找到了下面这一篇关键的文章： http://www.udpwork.com/item/7047.html 在此篇文章里面作者分析了hadoop的整个登录过程，对于我有用的是其中的这一段： 2.login.login(); 这个会调用HadoopLoginModule的login()和commit()方法。 HadoopLoginModule的login()方法是一个空函数，只打印了一行调试日志 LOG.debug("hadoop login"); commit()方法负责把Principal添加到Subject中。 此时一个首要问题是username是什么？ 在使用了kerberos的情况下，从javax.security.auth.kerberos.KerberosPrincipal的实例获取username。 在未使用kerberos的情况下，优先读取HADOOP_USER_NAME这个系统环境变量，如果不为空，那么拿它作username。否则，读取HADOOP_USER_NAME这个java环境变量。否则，从com.sun.security.auth.NTUserPrincipal或者com.sun.security.auth.UnixPrincipal的实例获取username。 如果以上尝试都失败，那么抛出异常LoginException("Can’t find user name")。 最终拿username构造org.apache.hadoop.security.User的实例添加到Subject中。 看完这一段，我明白了执行login.login的时候调用了hadoop里面的HadoopLoginModule方法，而关键是在commit方法里面，在这里优先读取HADOOP_USER_NAME系统环境变量，然后是java环境变量，如果再没有就从NTUserPrincipal等里面取。关键代码为： if  (!isSecurityEnabled() && (user ==  null )) {   String envUser = System.getenv(HADOOP_USER_NAME);    if  (envUser ==  null ) {     envUser = System.getProperty(HADOOP_USER_NAME);   }   user = envUser ==  null  ?  null  :  new  User(envUser); } OK，看到这里我的需求也就解决了，只要在系统的环境变量里面添加HADOOP_USER_NAME=hadoop（HDFS上的有权限的用户，具体看自己的情况），或者在当前JDK的变量参数里面添加HADOOP_USER_NAME这个Java变量即可。我的情况添加系统环境变量更方法。 如果是在Eclipse里面运行，修改完环境变量后，记得重启一下eclipse，不然可能不会生效。 解决办法 最终，总结下来解决办法大概有三种： 1、在系统的环境变量或java JVM变量里面添加HADOOP_USER_NAME，这个值具体等于多少看自己的情况，以后会运行HADOOP上的Linux的用户名。（修改完重启eclipse，不然可能不生效） 2、将当前系统的帐号修改为hadoop 3、使用HDFS的命令行接口修改相应目录的权限，hadoop fs -chmod 777 /user,后面的/user是要上传文件的路径，不同的情况可能不一样，比如要上传的文件路径为hdfs://namenode/user/xxx.doc，则这样的修改可以，如果要上传的文件路径为hdfs://namenode/java/xxx.doc，则要修改的为hadoop fs -chmod 777 /java或者hadoop fs -chmod 777 /，java的那个需要先在HDFS里面建立Java目录，后面的这个是为根目录调整权限。 最好的办法:System.setProperty("HADOOP_USER_NAME", "xxxx"); 上一篇 怎样成为一个好的技术领导者 顶 0 踩 0 我的同类文章 大数据 （17） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kkdelta 访问： 1180801次 积分： 13701 等级： 积分：13701 排名： 第440名 原创： 257篇 转载： 109篇 译文： 0篇 评论： 180条 文章搜索 文章分类 J2EE (50) 设计模式 (9) 系统方案架构 (9) 多线程 (1) 大数据 (18) Network (18) Spring (25) Hibernate_Mybatis (15) Camel (10) WebService与Messaging (11) Portal_LifeRay (3) ORACLE_Admin (46) Oracle_BackupRecover (10) 系统运维 (15) SQL/PLSQL (15) Unix/Linux (44) Android (5) 移动互联网 (1) WEBUI (31) 性能测试调优 (2) WebServer (5) Web安全 XSS (2) English (5) 随笔 (8) 软件开发杂项 (36) 收藏 (1) 项目管理 (2) 杭州攻略 (2) 文章存档 2015年12月 (6) 2015年10月 (3) 2015年09月 (1) 2015年06月 (1) 2015年05月 (1) 2015年04月 (3) 2015年03月 (1) 2015年01月 (2) 2014年12月 (2) 2014年11月 (3) 2014年10月 (4) 2014年09月 (8) 2014年07月 (1) 2014年06月 (2) 2014年03月 (3) 2014年02月 (9) 2014年01月 (3) 2013年12月 (9) 2013年11月 (10) 2013年10月 (3) 2013年09月 (3) 2013年06月 (1) 2013年05月 (6) 2013年04月 (10) 2013年03月 (3) 2013年02月 (1) 2013年01月 (12) 2012年12月 (1) 2012年11月 (6) 2012年09月 (3) 2012年08月 (13) 2012年07月 (19) 2012年06月 (16) 2012年05月 (5) 2012年04月 (13) 2012年03月 (1) 2012年02月 (26) 2012年01月 (35) 2011年12月 (5) 2011年11月 (3) 2011年10月 (5) 2011年09月 (2) 2011年08月 (4) 2011年07月 (2) 2011年02月 (1) 2011年01月 (3) 2010年12月 (1) 2010年09月 (1) 2010年08月 (2) 2010年07月 (6) 2010年06月 (5) 2010年05月 (9) 2010年04月 (12) 2010年03月 (2) 2010年02月 (1) 2009年10月 (4) 2009年09月 (1) 2009年07月 (1) 2009年05月 (2) 2009年04月 (4) 2009年03月 (33) 2009年02月 (7) 阅读排行 Spring加载resource时classpath*:与classpath:的区别 (59847) Spring AOP中pointcut expression表达式解析 (48909) 从JAVA客户端访问Redis示例(入门) (39486) Apache Camel框架入门示例 (26879) /bin,/sbin,/usr/sbin,/usr/bin 目录之简单区别 (26317) 使用keepalived实现双机热备 (22499) Eclipse安装CXF插件开发java web service 集成Spring (22223) MyBatis映射文件的resultMap如何做表关联 (18511) Oracle中Service Name、Database name、Instance Name的区别 (17542) eclipse里报:An internal error occurred during: "Building workspace". Java heap space） (15579) 评论排行 Eclipse安装CXF插件开发java web service 集成Spring (12) JAVA客户端传递对象数组到Oracle存储过程做大数据量插入 (10) Spring加载resource时classpath*:与classpath:的区别 (9) Apache Camel框架入门示例 (8) Spring AOP中pointcut expression表达式解析 (8) 生成Mybatis的Eclipse插件 (7) 从JAVA客户端访问Redis示例(入门) (7) 使用keepalived实现双机热备 (6) Spring的依赖注入 (5) 用link文件安装Eclipse插件 (5) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 使用Heartbeat实现双机热备 dailihua : 在配置资源文件haresources时，“srv5.localdomain IPaddr::192.... Maven常用到的一些方法 wangdan199112 : 长姿势！ Maven常用到的一些方法 zhanghongjie0302 : 文章写得有些短！ 用JAVA代码实现ARP攻击 baidu_33313748 : 博主你好。方便给我说一下大纲吗？每段是编的什么。万分感谢 Apache Camel框架入门示例 u010955843 : 学习 JS通过prototype实现继承的简单示例: u012466304 : 我觉得把什么是phototype讲述一下就比较好了 HTTP基本认证(Basic Authentication)的JAVA示例 china_huimark : 写得非常好，谢谢 Spring加载resource时classpath*:与classpath:的区别 qq_30384697 : 多谢:解决了实际问题 Squid安装(Windows)入门实例简介 u010353145 : 非常好的教程 Eclipse安装CXF插件开发java web service 集成Spring sinat_31245087 : @kkdelta:感激不尽啊！

Recno:: 75
URL:: http://blog.csdn.net/kongqz/article/details/27069737

ParseText::
在CSDN的blog被挂马了，到处都是“精神病医院”的广告，改了一上午都没改完，不改了 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 在CSDN的blog被挂马了，到处都是“精神病医院”的广告，改了一上午都没改完，不改了 2014-05-26 12:00 1342人阅读 评论 (1) 收藏 举报 分类： 随笔 （25） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 在CSDN的blog被挂马了，到处都是“精神病医院”的广告，改了一上午都没改完，向CSDN官方反馈，官方也不搭理，不改了...就这么放着吧 请大家查阅时忽略 上一篇 在linux下配置nginx+java+php的环境 下一篇 阿里云安装SVN服务器,eclipse安装svn客户端 顶 0 踩 0 我的同类文章 随笔 （25） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968795次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 76
URL:: http://blog.csdn.net/kongqz/article/details/50201999

ParseText::
阿里云安装SVN服务器,eclipse安装svn客户端 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 阿里云安装SVN服务器,eclipse安装svn客户端 2015-12-07 08:10 570人阅读 评论 (0) 收藏 举报 分类： linux （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 1.环境   阿里云  操作系统： Aliyun Linux 5.4 64位   2.安装svn   yum -y install subversion 注：到此为止，svn服务器端已经安装完成 3.配置   建立版本库目录   mkdir /alidata/www/svndata svnserve -d -r /alidata/www/svndata 4.建立版本库   创建一个新的Subversion项目   svnadmin create /alidata/www/svndata/myproject 配置允许用户rsync访问   cd /alidata/www/svndata/myproject/conf vi svnserve.conf anon-access=none auth-access=write password-db=passwd 注：修改的文件前面不能有空格，否则启动svn server出错   vi passwd [users] #<用户1> = <密码1> #<用户2> = <密码2> myname=mysercert 5、测试svn服务器是否可以使用 svn服务器默认的端口是3690 你可以在linux中用命令 netstat -ant 查看此端口服务是否启动 也可以使用本地电脑通过telnet远程访问：telnet 192.168.1.8 3690 如果可以访问，证明svn服务器已经可以对外网提供服务了 注：至此服务器端代码仓库已经创建完毕，你可以通过用户名/密码 myname/mysercert 访问了。 6、安装本地客户端 我用的是eclipse的subclipse作为svn的客户端 打开eclipse -> Help ->Install New Software选项， 点击Add按钮 根据需要，添加自己需要的版本svn控制器的版本，填写name和url，点击ok。 Name: Subclipse 1.8.x (Eclipse 3.2+) URL: http://subclipse.tigris.org/update_1.8.x 7、通过eclipse的svn客户端将代码提交 选中项目，右键，team-》share Project... 8、在弹出的对话框中选择SVN,选择创建新的资源库 在URL输入框中输入：svn://192.168.1.8/myproject 注：这个ip地址需要根据你实际情况进行替换，看你放到哪个机器上了 9、这个时候进入了同步的视图。选择提交本地代码就完成了代码仓库的第一个项目的管理。 上一篇 在CSDN的blog被挂马了，到处都是“精神病医院”的广告，改了一上午都没改完，不改了 下一篇 互联网科普-什么是淘宝 顶 1 踩 0 我的同类文章 linux （46） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968787次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 77
URL:: http://blog.csdn.net/kongqz/article/details/50225953

ParseText::
互联网科普-什么是淘宝 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 互联网科普-什么是淘宝 标签： 淘宝 C2C 2015-12-08 23:16 977人阅读 评论 (0) 收藏 举报 分类： 电子商务 （29） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、淘宝的商业模式是什么？ 1、广告费 商业模式分析图如下： 2、请注意，支付宝的交易抽佣是不计算在淘宝电商平台的收入中，所有电商平台中，交易能力是基础集成的能力，只不过支付宝是阿里自建的。但是支付宝已经独立运作了。 二、淘宝为什么叫C2C电商 1、你需要知道有B2C,B2B,B2B2C，C2B，O2O这一大串的电商 （1）B2C：卖家直接向消费者销售 （2）B2B：都是企业级卖家在做交易 （3）B2B2C：最难解释就是这个，你可以把多商户商城（平台提供商-》卖家入住-》消费者购买）称作B2B2C，也可以将供销一体化（供应商-》卖家—》消费者）这个端到端打通的模式称作B2B2C。 （3）C2B：就是按需向企业定制的消费模式，常见的就是运营商按需DIY自己套餐的模式，另外一种模式就是早期的团购模式，也算是C2B模式 （4）O2O：这是一个销售协作的模式，将线上线下有机拉通，只能说他可以覆盖B2C模式的交易，也能覆盖B2B2C模式的交易，不过以B2B2C为主。 （5）C2C：这个是个人向个人销售商品的交易模式，卖家是个人。 2、总结 （1）描述中带有B、C这两个字母的大部分都是按照运营主体划分的。 （2）个人作为卖家在一个多商户商城上开店，面向消费者销售商品构成了C2C交易平台 三、淘宝为什么被称作集市？ 1、商品品类：集市最显著的特点就是什么都有，不但标准商品存在，服务等虚拟商品也存在。 2、卖家主体：集市的卖家参与主体鱼龙混杂，可以是个人也可以是企业。而且以个人为主。 3、品牌入口：集市是一个约定俗成的聚集地，淘宝已经形成了互联网入口与口碑效应。 四、同类厂商还有哪些？拍拍网、易趣、当当网的集市 1、只能说最近刚被京东终结的拍拍算是C2C集市的一个代表，不过市场占有率一直较低。 2、当当网曾经想做的个性些，但是做着做着就做成了集市了...这块业务到现在也没发展起来。 3、看看淘宝在2014年市场占有率，不过淘宝的卖家数量也是连续两年下降了，总体仍旧保持在1000万以上。 市场占有率如下： 五、能力有哪些？ 1、多商户能力：卖家线上开店能力 2、在线交易能力：担保交易能力，简单说就是消费者购物在没收到货之前，消费者的货款是存放在淘宝平台的，消费者正常收货之后，钱款才能到达卖家账户。 3、特殊数字业务（机票、彩票、电信业务）的对接能力：这些与生活相关的数字业务，淘宝用他们来增加平台粘性，同时获取大量的销售酬金。 4、商品代销：很多卖家没有货的情况下，可以申请代销一些供应商的商品。 5、能力开放：采购、营销导流、交易、订单履行、售后端到端的能力开放 六、销售的商品有哪些？ 几乎是包括万象 1、数字业务：电信业务.. 2、民生业务：水电煤 3、个人服务：代跑腿 4、标准商品：服装鞋帽、五金耗材 七、淘宝的模式的弊端是什么？ 1、假货横行：售后保障差，很多商品是非标准化，或者由卖家自己包装发货，出现纠纷时很难裁定。尤其是服务，只能在资金上做一定约束，在互评上做一定信誉约束。 2、货物非标准化：各种商品都有，交易模式主要是即时到帐和担保交易两种形式支撑，在仓储物流上平台很难控制，没有发言权。出现纠纷仲裁困难。 3、个人卖家承担不了企业承担的职责：企业卖家会从长远考虑做好服务，个人卖家属于玩票心理。很难保证服务与商品质量。 4、刷信誉横行：淘宝卖家的评价体制与平台的搜索引擎排名导致了各种作弊手段横生。 八、淘宝的优势小结 1、先发优势：作为中国最早的C2C平台，以免费的方式打败了ebay，形成品牌入口后无人能撼动其市场地位 2、技术优势：作为承载了上千万的卖家、上亿商品的电商平台，技术积累不是一天能完成的。看看偶尔崩溃的京东与经常崩溃的苏宁与国美就知道技术对于商业的重要性。 九、淘宝为什么不怕分享自有的技术架构 1、电商本质：拼的是运营与营销，入口已经形成，打造新的入口不但需要从商品竞争力上考虑，也需要大量的营销资金持续引流。很难有企业能负担的起，同时淘宝已经形成了自己的生态系统，整合了上下游的产业链，地位很难撼动。 2、招业界牛人：淘宝很多技术不是现有硬件厂商堆砌硬件就可以解决的，需要自己结合实际情况摸索，亟需业界能人加入。开放就是招揽高手的最好手段。 3、打造开放生态产业链做铺垫：淘宝的技术架构分享间接推动了其开放平台的发展。为整合产业链做了铺垫，也为他的企业市场布局做了铺垫。 十、阿里对于淘宝现阶段运营定位是什么？ 1、垂直行业的基础孵化器：看看机票行业、保险行业、村淘宝、电器商城，这些都是通过淘宝衍生出来的垂直行业，包括数字业务与标准3C业务 2、会员运营：将用户牢牢锁定在淘宝的相关平台，统一的账号体系，完善的等级特权，提升了用户的粘性。 十一、个人卖家还要做淘宝吗？ 现状是80%~90%的卖家不赚钱，如果想做，那要看你对淘宝的定位。现在还有1000多万的淘宝卖家。 1、销售工具：自产的特色商品（不单单是赚取30%的零售毛利，商品自身销售即盈利），或者垄断性质的商品 2、小农经济：月入3-5k，勤奋的推广加上持续坚持的服务。不过还是需要买一些平台的服务来促进流量，等客商品在淘宝其实也是无法生存的。 3、发家致富：全靠采购眼光和广告转化率了。这个难度太高，一朝失手，很容易赔的底朝天。 十二、淘宝的未来何去何从？ 1、作为电商平台的细分市场继续运作，不断深耕出新的垂直细分市场 （1）电器、化妆品.. （2）超市.. （3）彩票、充值、游戏币、保险、旅游线路、机票.. 2、作为会员运营的孵化器 （1）会员的等级与特权的彰显落地系统 （2）会员个人生活服务的触点 3、作为大数据的基础生产中心 （1）行业与商品的分析数据，将预测与指导行业的发展 （2）金融交易分析数据，将为阿里的金融战略做指导 4、作为阿里生态圈的额基础一环 （1）生态圈靠的是产业链不同的企业的参与 （2）通过双边商业模式，将消费者与卖家聚集到一个入口 上一篇 阿里云安装SVN服务器,eclipse安装svn客户端 下一篇 互联网科普-什么是天猫 顶 1 踩 0 我的同类文章 电子商务 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968782次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 78
URL:: http://blog.csdn.net/kongqz/article/details/50231475

ParseText::
互联网科普-什么是天猫 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 互联网科普-什么是天猫 标签： 天猫 B2B2C 2015-12-09 08:17 921人阅读 评论 (1) 收藏 举报 分类： 电子商务 （29） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、商业模式是什么？ 1、交易抽成：按照商品的品类进行抽成，销售电器与销售袜子的抽成比例肯定不一样。 2、广告费：平台也有关键词竞价、关键广告位的竞拍。 3、技术服务费：进入天猫平台有门槛的，技术服务费就好比想进入超市的进场费一样，有阶段是按照销售额去收取的，有阶段收取的是固定额度。 4、商业模式分解图如下： 二、市场占有率 天猫作为B2C的代表，在2015Q1占据了中国电商市场的半壁江山。 后边会解释，天猫为嘛被叫做B2C。 看下对于B2C市场的两种统计方法 第二种B2C市场份额统计 其实天猫是个平台，自己不采购任何商品进行销售，只是为卖家提供一个销售平台... 京东还是以自营为主，就是自己采购商品进行销售（当然也提供了天猫的能力）... 三、天猫为什么叫做B2C平台 1、这个是从运营角度定位的。 2、因为商品销售的主体是在工商局备案的商家。而非个人 四、为嘛有人又叫他B2B2C 1、这个是IT支撑架构维度的称呼，因为他的IT模型是支持多商家在线开店的。 2、这个B2B2C的特点是平台不但有多商户，还做了多商户入口的聚合。 五、同类厂商还有谁？ 1、京东的POP平台 （1）京东比较有代表性，也是号称B2C，内部夹杂了一个POP平台，做的事情和天猫平台没啥区别。 （2）从IT支撑架构上也是B2B2C模型架构 六、天猫平台的能力有哪些？ 1、多商户能力：卖家线上开店能力 2、在线交易能力：担保交易能力，简单说就是消费者购物在没收到货之前，消费者的货款是存放在淘宝平台的，消费者正常收货之后，钱款才能到达卖家账户。 3、特殊数字业务（机票、彩票、电信业务）的对接能力：这些与生活相关的数字业务，淘宝用他们来增加平台粘性，同时获取大量的销售酬金。 4、商品代销：很多卖家没有货的情况下，可以申请代销一些供应商的商品。 5、能力开放：采购、营销导流、交易、订单履行、售后端到端的能力开放。 6、交易抽成能力：这个可不是支付宝的那个交易手续费，是按照商品所属品类进行销售抽成的一种模式。 小结：除了交易抽成外，基础能力是不是和淘宝很像啊？ 七、销售的核心商品范围有哪些？ 1、数字业务：用来做客户粘性的。如机票、彩票、酒店、游戏充值卡... 2、标准品牌商品：必须是大的正规厂商的商品，厂商必须有自己的品牌，或者代理销售某个品牌 八、天猫模式的弊端在哪里？ 1、保证金：占用品牌商资金。同时还有技术服务费，相当于利用品牌优势，强行收租（本身已经有按照销售额进行抽成的模式）。 2、聚合营销：只有少数商家能被在聚合营销爷们承载做促销，大部分品牌零售商都是分母，渠道入口的热门位置被少数的大厂商占据。 3、侵蚀品牌商利润：作为零售业的一个环节，过于强大的交易平台侵蚀了品牌商的利润，品牌商难免陷入价格战，导致品牌商逐步放弃此渠道。 九、天猫的优势在哪里？ 1、有基础：有淘宝这个孵化器。 2、先发优势：虽然京东在自营B2C走在前面，快速增长，但是天猫有淘宝做底牌，快速建立起自己的品牌购物形象。 3、技术优势：作为承载了上千万的卖家、上亿商品的电商平台，技术积累不是一天能完成的。看看偶尔崩溃的京东与经常崩溃的苏宁与国美就知道技术对于商业的重要性。 十、阿里对天猫现阶段的运营定位是什么？ 1、品牌购 （1）就是所有的卖家都必须厂家或者大的品牌零售商，必须有品牌授权才能销售相关商品。 （2）个人卖家是无法进入天猫进行商品销售，相当于在集市旁边建立了一个大的百货商场，共享了用户流量。 十一、天猫提供什么样的服务 1、消费者：有品质保证的真货 2、品牌商：第三方销售渠道 3、供应商：发展品牌代理商，建立天猫、淘宝分销渠道 十二、天猫的未来何去何从 1、作为品牌电商销售平台继续深耕，保持按照交易抽成 （1）百货公司很难消亡，不停的扩充与缩减商品品类，始终跟随用户，在中端市场占据领先优势 （2）通过平台会找到新的垂直细分市场，如电器城、奢饰品等 2、作为会员运营的孵化器 （1）会员的等级与特权的彰显落地支撑系统 （2）会员个人生活服务的触点 3、作为大数据的基础生产中心 （1）行业与商品的分析数据，将预测与指导行业的发展 （2）金融交易分析数据，将为阿里的金融战略做指导 4、作为阿里生态圈的额基础一环 （1）生态圈靠的是产业链不同的企业的参与 （2）通过双边商业模式，将消费者与卖家聚集到一个入口 上一篇 互联网科普-什么是淘宝 下一篇 互联网科普-淘宝与天猫的对标 顶 3 踩 0 我的同类文章 电子商务 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968782次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 79
URL:: http://blog.csdn.net/kongqz/article/details/50243285

ParseText::
互联网科普-淘宝与天猫的对标 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 互联网科普-淘宝与天猫的对标 标签： 淘宝网 天猫 商业模式 电商 2015-12-09 23:02 710人阅读 评论 (0) 收藏 举报 分类： 电子商务 （29） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、淘宝VS天猫的对比分析 1、从商业模式上看： 都是聚集买家与卖家在一个平台交易的双边商业模式，没差异 2、从价值主张来看： 都是撮合交易，只不过撮合交易双方主体不同，淘宝对于交易双方无资质要求，而天猫对于交易的卖家有企业的资质要求，同时对于商品在天猫销售更加明确为品牌正品。 3、从平台核心收入来看： 淘宝还是以广告收入为主。而天猫是以交易抽成为主，广告收入为辅。 4、商品： 淘宝支持只要不违法的商品都能上架，而天猫的商品必须是正品，或者经过授权的品牌。 5、IT能力： 这里不是指用的开发语言（如JSP,PHP...），指的是IT支撑的业务能力。都是支持多商户开店及担保交易，但是天猫在交易过程中，增加了抽佣的能力。不过这个能力被集成到支付宝了。所以从IT支撑上两个平台是没有本质性区别的。 6、运营定位： 淘宝定位就是集市，而天猫定位是品牌购。从本质上说就是让“谁”在电商平台上卖“什么样的商品”。 二、总结 1、运营确定了进入的细分市场： 一样的支撑模型，不同的运营定位，造就了两个不同的细分市场。 2、万能的IT支撑模型： B2B2C模式的IT架构模型理论上可以支撑互联网电商市场上所有的运营诉求。 3、定位平台电商： 这两个平台与自营B2C最大区别就是，自己都不生产或者采购任何商品在平台销售，获取零售的毛利。淘宝&天猫是真正的平台电商。 上一篇 互联网科普-什么是天猫 下一篇 站在淘宝天猫两大平台背后的平台 顶 0 踩 0 我的同类文章 电子商务 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968798次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 80
URL:: http://blog.csdn.net/kongqz/article/details/50243443

ParseText::
站在淘宝天猫两大平台背后的平台 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 站在淘宝天猫两大平台背后的平台 标签： 供销平台 互联网 淘宝网 天猫 电商 2015-12-09 23:11 865人阅读 评论 (0) 收藏 举报 分类： 电子商务 （29） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、供销平台，站在淘宝与天猫背后的平台 1、域名：http://gongxiao.tmall.com （1）曾经还用过fenxiao.tmall.com等域名，后来想清楚为了哪个渠道服务，直接用上边的域名作为几大交易市场的供应商服务平台 2、供销授权的商品展现 （1）供应商商品可以通过平台授权给分销商（代销、经销）在淘宝、天猫销售。 （2）供应商可以在这个功效平台展现自己的商品，同时招募分销商。 3、跟阿里巴巴的1688批发平台无关！ （1）阿里巴巴的1688平台那个是侧重于商品的批发，很多商品来自于非快速消费品行业。和那个没啥关系。 二、为什么会产生这个平台？ 1、有人想做电商没货源 （1）想在网上开店，有自己的互联网销售渠道，但是没有货源，可以在“供销平台”批发进货。卖家进货后可以在淘宝、天猫直接销售，直接发货。 （2）想在淘宝、天猫开店，销售品牌正品，但是又不想压资金，可以选择代销“供销平台”的商品。销售后，由供应商直接发货。 2、大的零售商想控制渠道（大的生产厂商更加习惯于做批发） （1）大的零售商想快速拓展自己的分销渠道，因为商品的利润空间有限，但是销售的创意是来自于分销商（卖家）自身。靠大的零售商自己很难做各式各样的营销。 （2）淘宝、天猫有意向的卖家可以通过这个平台直接与供应商对接，尝试销售一些品类的商品，试水电商。 三、为什么叫B2B供销平台 1、这个是根据交易双方的资质决定的。 2、货品供应商（厂商或者大的零售商）是第一个B. 3、分销商（代销商、经销商）是第二个B 4、所以供销平台就是一个B2B平台，不同于传统的B2B平台的一点就是，他们的分销商都是在淘宝、天猫有网店的。做到了供销一体化拉通。 四、商业模式是什么？ 1、这个当然是对于阿里来说的。他的商业模式无外乎就是收取这些供应商的技术服务费。 2、同时平台对于加盟做经销、代销模式的代理商来说，赚取广告费，赚取交易抽佣。是一个间接推动的作用。 五、销售的商品主要有哪些？ 1、标准品牌商品 品类包括且不限于“家居日用、家电数码、母婴、运动户外、服装、表、鞋类...” 2、数字类商品？ 淘宝、天猫有这类商品的供销一体化平台，那个独立做的，叫做TBC，主要做Q币充值、手机话费、游戏币三大主力数字产品。 小结：供销平台定位很明确，就是标准商品的品牌购的分销，你可以在淘宝、天猫分销这些商品。 六、核心业务能力有哪些？ 1、代销模式 交易流程： 用户直接与代销商交易，代销商将订单反馈给供应商，供应商完成订单履行 模式特点： 代销商不需要占用自己的库存和资金，按照销售订单收取供应商佣金。 2、经销模式 交易流程： 用户直接与经销商完成交易接触，经销商自行完成订单履行。 模式特点： 经销商通过批发的方式从供应商采购商品，获取较低折扣。可以自主批发零售。 七、优势小结 1、有存量渠道：淘宝、天猫的既有市场，已经形成了入口。新的垂直细分市场如化妆品、电器等自有垂直细分渠道也需要供应商的介入。 2、供应商嫁接水到渠成：供应链整合的天然优势，从供应链角度解决大的零售商与无货代理商的矛盾。 八、供销平台的未来 1、补齐产业链中供应商这个角色 （1）供应商一般都是不想直接做零售的。 （2）供应商都有建立自有渠道的诉求，淘宝、天猫的卖家可以快速填充这块的需求。 2、作为B2B批发模式的一个补充 （1）传统的批发都是一个线上撮合，线下交易履行的过程 （2）这里有机的将批发与淘宝、天猫这两大渠道市场连接，解决了供销一体化支撑 3、为自有电商平台服务 （1）未来对接更多品类的商品 （2）对接到淘宝、天猫之外的自有垂直细分市场，如生鲜、化妆品、电器等 上一篇 互联网科普-淘宝与天猫的对标 下一篇 互联网科普-淘宝的聚划算（团购C2B） 顶 0 踩 0 我的同类文章 电子商务 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968793次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 81
URL:: http://blog.csdn.net/kongqz/article/details/50256925

ParseText::
互联网科普-淘宝的聚划算（团购C2B） - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 互联网科普-淘宝的聚划算（团购C2B） 2015-12-10 23:43 655人阅读 评论 (0) 收藏 举报 分类： 电子商务 （29） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 ﻿﻿ 一、团购市场概述 1、团购市场占有率 公开数据显示，2011年，聚划算交易额突破百亿，活跃用户达千万，占比当年团购市场份额就超过50%。仅过一年、2012年，聚划算交易额达208亿元，是2011年的2倍多，日客户访问峰值突破1600万。2013年，阿里巴巴招股书数据显示，聚划算GMV达到477亿元人民币。 2、现在的聚划算还算是团购吗？ 虽然聚划算被定位为“中国最受欢迎的团购网站”，不过，仅仅用团购平台去定义聚划算并不完整。他作为阿里运营淘宝的利剑，利用他的动态数据建立了各种模型，不仅能预测商品未来走势，还能为卖家提供商品供应链和库存管理指南，帮助商家定价。 3、看看现在的团购市场占比 现在的团购市场基本上已经把聚划算排除在外了。 二、聚划算这类团购网站的商业模式是什么？ 1、核心收入构成：团购网站的核心收入就是针对成交的每一单进行抽成。是不是跟天猫的商业模式很相似？ 2、收入对标天猫：只能说主要收入来源一致。其实天猫除了抽成还有技术服务费、广告费一大堆的边际收入。 3、商业模式类型：简单来说，团购的商业模式也可以称作是双边商业模式。就是聚合了消费者和卖家的一个平台。 4、团购平台特点：团购这个平台最大的特点就是他的商品数量和大的电商平台不是一个量级的，营销方式有些特别。 5、简单分析下团购的商业模式如下： 三、为什么叫做团购？ 1、团购起源：来自美国的groupon主打每天只销售一款超级折扣商品，要求达到一定数量的人支付下单购买，才能触发交易。在美国掀起一阵热潮。 2、中国引入：美团作为中国第一批做团购的电商网站，快速复制美国模式，在中国掀起一阵热潮。 3、中国发展：2011年掀起千团大战，经过多轮资本角逐，剩下的都是成功融下大量资金的团购网站。现在市面不超过10家叫得上名字的网站，如美团、窝窝、大众点评.. 4、中国团购的特点：快速突破美国的模式，在各种品类的商品上掀起团购潮。最终还是聚焦到“吃喝玩乐”主题上。 5、中国团购与美国的不同：我们的商家拓展都是靠人员地推，很多团购网站在各地建立了办事处，按照地域进行团购商品展示。而美国的groupon都是靠商家自己找到团购网站，然后在团购网站申请做特价活动，没有中国这种地推模式的人海战术。 四、为什么又被定义成C2B，同类厂商有哪些？ 1、为什么被定义成C2B （1）C2B命名原因：由消费者的订购数量决定商品的定价，简单可以称作C2B模式。 （2）C2B模式现状：真正让用户自定义的商品很少。只有运营商推出了DIY流量套餐相关的内容。其实也只是做了组合计价而已。一种营销形式而已。 2、同类厂商有哪些？ （1）初始阶段同类厂商：美团、窝窝、大众点评、拉手网大家在同一个领域竞争。但是聚划算快速抛弃与他们在同一个竞争轴打转。开始结合自己的淘宝、天猫两大渠道有所动作。 （2）现阶段同类厂商：我只能说中国市场上只有“唯品会”与“聚划算”在一个竞争轴上PK。 五、曾经出现了多少种团购形式？ 1、每天一个特价商品（初始模式，达到人数后起团）。 2、每个行业每天一个（有些B2B行业电商在这个领域的尝试）。 3、想做活动的就可以团购，可以随时退团的团购（美团第一个尝试这种模式）。 4、不同数量级的人团购价格不同（初始模式的升级） 5、聚合多个品类商品，每个团购网站每天不再只提供一款特价商品（开始突破开始的单一模式）。 6、按照地区进行团购商品分类（地推模式带来的团购效应）。 总结： 1、团购最后定位到“吃喝玩乐”快消品品类。结合地理位置，展现多个团购商品。 2、最后成为一个特价商品电商平台入口了。 六、站在聚划算背后的平台 1、淘宝：淘宝的卖家可以申请上聚划算平台，800多万的活跃卖家成为聚划算平台的最大资源池。 2、天猫：天猫的品牌卖家从销售与品牌推广角度会有上聚划算平台的需求。也形成了品牌促销的最大商家资源池。 3、电器城、化妆品商城等：这些平台的卖家都是可以进入聚划算平台的。 七、聚划算平台能力有哪些？ 1、在线担保交易能力 （1）和淘宝、天猫的担保交易一样，如果你购买了商品，在没有确认收货之前，卖家货款是无法收回的，被平台监管。不过聚划算的模式中，如果是服务或者餐饮套餐，可以随时申请退款。 2、多商户能力 （1）这里如果想上聚划算这个平台，那么你必须是淘宝、天猫的商家。其实变相的来说，就是聚划算这个团购电商平台也算是B2B2C这种双边商业模式平台了。 （2）卖家在进行促销时，需要提前将货备好，接受淘宝、天猫的监管，才能成功在聚划算营销 八、聚划算的运营弊端 1、变成尾货抛售的平台 （1）很多卖家利用聚划算的品牌效应与强大的网站流量，快速的抛售尾货。 2、变成促销打折平台了 （1）商品变多了，品牌增多了，变成了平行于淘宝与天猫首页的新的聚合页，只不过这个聚合首页是以打折为噱头的。 九、聚划算的未来何去何从？ 1、作为网站流量奶牛 （1）持续贡献收入 2、品牌折扣中心 （1）团购市场的拳头产品 （2）品牌打折中心 3、作为会员运营的孵化器 （1）会员个人生活服务的触点 （2）特价品牌购物场所 4、作为大数据的基础生产中心 （1）行业与商品的分析数据，将预测与指导行业的发展，商品销售局势，供应链库存管理 （2）金融交易分析数据，将为阿里的金融战略做指导 5、作为阿里生态圈的基础一环 （1）生态圈靠的是产业链不同的企业的参与 （2）通过双边商业模式，将消费者与卖家聚集到一个入口 十、聚划算与淘宝、天猫的对标 1、区域属性：初期有地域属性作为团购 2、商业模式：与天猫类似，以交易抽成为主。 3、技术架构：开始阶段与天猫营销模型不同，现阶段与天猫几乎一样。 4、运营定位：聚划算是品牌打折购物平台，天猫是品牌购平台，淘宝是集市购物平台。 顶 1 踩 0 我的同类文章 电子商务 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968791次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 82
URL:: http://blog.csdn.net/kongqz/article/details/50302305

ParseText::
互联网科普贴-阿里巴巴国际站是什么 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 互联网科普贴-阿里巴巴国际站是什么 2015-12-14 23:22 340人阅读 评论 (0) 收藏 举报 分类： 电子商务 （29） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 ﻿﻿ 一、什么是阿里巴巴国际站 1、这个是阿里巴巴在1999年创立之初就布局的站点，算是阿里体系最早的业务了。就是为全世界的中小企业提供了一个商机信息发布平台。虽然定位高大上，但是初始阶段大家都是以国内B2B为主。 2、阿里的B2B业务一般指的就是阿里巴巴国际和阿里巴巴中国这两个最早的B2B业务。 3、当时国际站使用的是 www.alibaba.com 域名，中国站使用的是 www.alibaba.com.cn 域名 4、现在阿里巴巴中国站已经更名为 www.1688.com 。 二、市场份额 1、市场占有率的统计，一般都是拿阿里巴巴的国际站+阿里巴巴中国（1688）收入合并后统计。 2、在2015年H1阿里的B2B业务营收42.88亿元，同比增长25.3%；其中，阿里巴巴国际营收24.45亿元，阿里巴巴中国营收18.43亿元。 3、所以阿里巴巴国际站的市场份额应该是22.23%左右，阿里巴巴的1688市场份额应该在16.77%。 三、商业模式是什么？ 1、商业模式的核心就是平台的收入模型，这个商业模式赚取的就是中小企业的广告费。 2、平台通过会员费完成商业模式的构建，不同等级的会员费提供不同级别的服务。 3、商业模式详情参考如下图： 四、同类厂商有哪些？ 1、单从国际站的运营定位，能匹配的可能只有环球资源网了。 2、其他如慧聪网、网盛生意宝等厂商做的都是国内的，或者垂直细分行业的B2B业务。不在一个维度上。 五、能力有哪些？ 1、这里我们单独说阿里巴巴国际，其实提供的就是一个信息服务为主的平台。为买卖双发撮合交易 2、平台提供了两种差异化打包增值服务（出口通29800/年、全球宝59800/年），其实就是广告打包销售。 3、平台利用自己的搜索引擎，包装出很多垂直搜索服务，如标王（关键词搜索结果干扰），直通车等等 六、平台销售的商品是什么？ 1、平台的商品保罗万象，从标准的快消品到化工原料产品都有涉及。 2、平台没有的商品就是数字业务与服务。就是那些不涉及物流的商品无法承载。 七、平台弊端在哪里？ 1、垂直细分领域的交易模式无法很好的支撑。 2、在线交易难题：行业化程度不深，商品不够标准化，交易流程复杂，诚信问题难解，用户习惯难以改变。 3、只能在信息服务上提供能力。 4、B2B类定之后需求增加交易流程复杂度，客户代表沟通购买习惯一时难以改变 八、未来何去何从？ 1、作为传统的B2B服务厂商继续在细分市场占据一席之地 （1）传统的B2B厂商提供的主要服务就是信息匹配服务 （2）收入上还是靠会员费为主的增值服务 2、作为大数据的基础生产中心 （1）行业与商品的分析数据，将预测与指导行业的发展 （2）金融交易分析数据，将为阿里的金融战略做指导（这里是针对B类企业的预测） 3、探索金融 （1）目前B2B主要服务商虽相继推出贷款融资、信用保障等措施以促进在线交易及增值服务的发展，但总体还处于探索期，并未给企业带来营收上的突破。　 4、作为阿里生态圈的额基础一环 （1）生态圈靠的是产业链不同的企业的参与。 （2）通过双边商业模式，将企业级别的供需双方拉到统一平台上。 上一篇 互联网科普-淘宝的聚划算（团购C2B） 顶 0 踩 0 我的同类文章 电子商务 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968783次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 83
URL:: http://blog.csdn.net/kongqz/article/details/6649573

ParseText::
webtrends 分析报告 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 webtrends 分析报告 标签： 引擎 数据库 server 图形 任务 2013-08-12 14:58 1684人阅读 评论 (0) 收藏 举报 分类： 随笔 （25） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 Webtrends 调研报告 1. Webtrends 版本 现在完整的稳定版本 9 ， 正在研发的 10 版本； 公司正在使用的 3.0 版本； 2. Webtrends 部署方案 2.1. Webtrends 产品体系结构： 2.2. 组件 Main Application ： 产生和现实WEbtrends报告，负责系统维护，在各组件中起到核心控制作用。 2.3. 内置 System Database ； 存储webtrends报告数据和配置信息。 2.4. 组件 User Interface （ UI ）  Server 分析引擎，处理对日志的分析任务。当日志量比较大时，您需要分布式安装多个分析引擎以提高处理性能。  2.5. 组件 GeoTrends Server 提供地理信息服务的可选组件 3. Webtrends 原理归纳 3.1. 架构图 3.2. ODBC接口 通过ODBC接口能够方便的将WebTrends数据导出至其他数据库或应用中。 4. Webtrends 使用流程 4.1. 图形摘要 4.2. 可以简单总结为四步： 定义摘要、定义报告、分析日志、生成报告。 4.3. 概况 定义日志摘要，使WebTrends知道从何处查找日志文件，如何处理日志文件以及如何过滤文件。  选择使用默认的报告模式或定制报告的样式，内容，语言，范围，格式和存放地点。  分析日志文件，WebTrends使用预先定义的日志摘要找到日志文件并对文件进行分析和处理。如果用户需要，WebTrends可以对分析结果进行缓存操作以便加快今后对同一日志文件的分析速度。  生成报告，WebTrends按照用户定义的报告设置，把日志分析结果转化为最终的分析报告。  5. Webtrends 解决方案 5.1. 总体图 5.2. 商业分析： v 从其它数据源添加成本数据 v 跟踪每一步的转换 5.3. 内容效果 v 查明每个页面上最受欢迎的内容 v 监控您的单一访问页面 5.4. 导航分析 v 跟踪在注册过程中访问者如何导航 v 在您的网站中访问者采取什么路径? v 访问者如何到达您最重要的页面? v 他们去了哪里? v 哪些特定的路径带来了转化率? v 访问者在您的注册场景中的什么地方离开了? 6. Webtrends 功能模块 6.1. 网站综合访问情况分析 作为网站综合表现情况测评的标准，网站访问次数 (Visits) ，访客数 (Visitor) ，点击率 (Hit) ，页面浏览量 (Page View) 等网站流量指标依然是网站管理者评估网站现状 最重要且最基础的指标。 6.2. 场景分析（业务流程分析） WebTrends 将由几个步骤组成的一个服务流程定义为一个场景，并对这个场景中每 个步骤之间的客户继续比率和流失比率进行分析。 6.3. 浏览习惯分析 6.4. 其它功能： Webtrends demo地址：访问不了 http://210.78.144.22:7099 用户名和密码：sample 7. Webtrends 收费情况 比较高； 收费与 PV 量相关，每天 1KW 的 pv 收费在 300W （包含 1 年的服务费）左右； 8. 现有 webtrends 实现分析（所缺少的功能） 现在 webtrends 的 lesence 版本是 3.0 ，可以满足 访问次数 (Visits) ，访客数 (Visitor) ，点击率 (Hit) ，页面浏览量 (Page View) 等网站流量指标 的分析；缺少对客户访问轨迹分析； 9. 当前需求点分析 Webtrends  对跨网页、 跨域、 加载其它日志信息、导入其它数据源、日志文件的可配置采集等需求都可满足。 JS 采集数据，可以自己灵活配置采集的数据域 可以导入其它数据源： ftp  odbc 10. 可免费使用的 webtrends 组件方案 可复用采集组件，利用 webtrends 的采集器采集信息（采集数据可以自由开发）； 上一篇 如何开启nginx 的https服务 下一篇 hibernate的主键生成策略 顶 0 踩 0 我的同类文章 随笔 （25） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968789次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 84
URL:: http://blog.csdn.net/kongqz/article/details/7074629

ParseText::
nginx负载两个项目 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 nginx负载两个项目 标签： nginx server user 2013-08-12 15:00 1559人阅读 评论 (0) 收藏 举报 分类： linux （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 user  3w; worker_processes  2; pid        /tmp/nginx.pid; events {     worker_connections  1024; } http {     include       mime.types;     default_type  application/octet-stream;     log_format main '$remote_addr - $remote_user [$time_local] "$request" '     '$status $body_bytes_sent "$http_referer" '     '"$http_user_agent" $http_x_forwarded_for';     sendfile        on;     #tcp_nopush     on;     #keepalive_timeout  0;     keepalive_timeout  65;     gzip  on;     upstream demo_wuliuke { server 127.0.0.1:8080;     }     upstream xunkebao { server 127.0.0.1:8081;     }     server {  listen       80;  server_name  demo.wuliuke.com;  index index.html index.htm index.jsp; access_log  /opt/3w/logs/nginx/wuliuke.log; #设定访问日志的存放路径  error_log   /opt/3w/logs/nginx/wuliuke.err;  location ^~ /media/ { alias /opt/3w/wuliuke/current/media/; } location ^~ /widgets/ { alias /opt/3w/wuliuke/current/widgets/; } location / {  client_max_body_size    5m; proxy_connect_timeout   30;  proxy_pass http://demo_wuliuke; } }     server {  listen       80;  server_name  sms.xunkebao.com;  index index.html index.htm index.jsp; access_log  /opt/3w/logs/nginx/xunkebao.log; #设定访问日志的存放路径  error_log   /opt/3w/logs/nginx/xunkebao.err;  location ^~ /media/ { alias /opt/3w/sms/current/media/; } location ^~ /widgets/ { alias /opt/3w/sms/current/widgets/; } location / {  client_max_body_size    5m; proxy_connect_timeout   30;  proxy_pass http://xunkebao; } } } 上一篇 hibernate的主键生成策略 下一篇 工作流的基本知识 顶 0 踩 0 我的同类文章 linux （46） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968796次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 85
URL:: http://blog.csdn.net/kongqz/article/details/7742102

ParseText::
hibernate的主键生成策略 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 hibernate的主键生成策略 2013-08-12 14:59 1006人阅读 评论 (0) 收藏 举报 分类： j2ee （37） 作者同类文章 X spring （12） 作者同类文章 X 1、自动增长identity 适用于MySQL、DB2、MS SQL Server，采用数据库生成的主键，用于为long、short、int类型生成唯一标识 使用SQL Server 和 MySQL 的自增字段，这个方法不能放到 Oracle 中，Oracle 不支持自增字段，要设定sequence（MySQL 和 SQL Server 中很常用） 数据库中的语法如下： MySQL：create table t_user(id int auto_increment primary key, name varchar(20)); SQL Server：create table t_user(id int identity(1,1) primary key, name varchar(20)); <id name="id" column="id" type="long">     <generator class="identity" /> </id>   2、sequence DB2、Oracle均支持的序列，用于为long、short或int生成唯一标识 数据库中的语法如下： Oracle：create sequence seq_name increment by 1 start with 1; 需要主键值时可以调用seq_name.nextval或者seq_name.curval得到，数据库会帮助我们维护这个sequence序列，保证每次取到的值唯一，如： insert into tbl_name(id, name) values(seq_name.nextval, ‘Jimliu’); <id name="id" column="id" type="long">     <generator class="sequence">        <param name="sequence">seq_name</param>    </generator> </id>   如果我们没有指定sequence参数，则Hibernate会访问一个默认的sequence，是hibernate_sequence，我们也需要在数据库中建立这个sequence 此外，sequence还可以有另外一个参数是paramters，可以查看Hibernate的API了解它的用法，见org.hibernate.id.SequenceGenerator 调用数据库的sequence来生成主键，要设定序列名，不然hibernate无法找到： <param name="sequence">NAME_SEQ</param>（Oracle中很常用） 3、hilo 使用一个高/低位算法生成的long、short或int类型的标识符，给定一个表和字段作为高位值的来源，默认的表是hibernate_unique_key，默认的字段是next_hi。它将id的产生源分成两部分，DB+内存，然后按照算法结合在一起产生id值，可以在很少的连接次数内产生多条记录，提高效率 MySQL：create table hi_value(next_hi integer not null); insert into hi_value(next_hi) values(1); <id name="id" column="id">     <generator class="hilo">        <param name="table">hi_value</param>        <param name="column">next_hi</param>        <param name="max_lo">100</param>    </generator> </id>   在hibernate持久化的时候，由hibernate负责生成低位值。hilo标识符生成器在生成标识符时需要从hi_value表中取出next_hi的当前值，然后修改该值，这个操作是在单独的事务中完成的。最大的低值在属性max_lo中配置，但在Hibernate内存中生成的低位值超过此值时，就有需要到数据库的hi_value表中再次读取高位值了 使用hilo生成策略，要在数据库中建立一张额外的表，默认表名为hibernate_unique_key,默认字段为integer类型，名称是next_hi（比较少用） 我们也可以自己设置自定义的表名和字段名 <id name="id" type="integer">    <column name="id"/>    <generator class="hilo">       <param name="my_unique_key"/>       <param column="next_hi"/>    </generator> </id> 4、native 会根据底层数据库的能力，从identity、sequence、hilo中选择一个，灵活性更强，但此时，如果选择sequence或者hilo，则所有的表的主键都会从Hibernate默认的sequence或者hilo表中取。并且，有的数据库对于默认情况主键生成测试的支持，效率并不是很高      对于 oracle 采用 Sequence 方式，对于MySQL 和 SQL Server 采用identity（自增主键生成机制），native就是将主键的生成工作交由数据库完成，hibernate不管（很常用） <id name="id" column="id">     <generator class="native" /> </id>   5、seqhilo sequence和hilo的结合，hilo的高位由sequence产生，所以也需要底层数据库的支持 通过hilo算法实现，但是主键历史保存在Sequence中，适用于支持 Sequence 的数据库，如 Oracle（比较少用） <id name="id" column="id">    <generator class="seqhilo">       <param name="sequence">seq_name</param>       <param name="max_lo">100</param>    </generator> </id>   6、increment 这个是由Hibernate在内存中生成主键，每次增量为1，不依赖于底层的数据库，因此所有的数据库都可以使用，但问题也随之而来，由于是Hibernate生成的，所以只 能有一个Hibernate应用进程访问数据库，否则就会产生主键冲突，不能在集群情况下使用 插入数据的时候hibernate会给主键添加一个自增的主键，但是一个hibernate实例就维护一个计数器，所以在多个实例运行的时候不能使用这个方法 <id name="id" column="id">     <generator class="increment" /> </id>   7、 uuid.hex 使用一个128-bit的UUID算法生成字符串类型的标识符，UUID被编码成一个32位16进制数字的字符串。UUID包含：IP地址、JVM启动时间、系统时间（精确到1/4秒）和一个计数器值（JVM中唯一） hibernate会算出一个128位的唯一值插入 <id name="id" column="id">     <generator class="uuid.hex" /> </id> uuid.string        hibernate会算出一个16位的值插入 8、assigned 由应用程序负责生成主键标识符，往往使用在数据库中没有代理主键，使用的主键与业务相关的情况，如： <id name="id" column="id" type="string">     <generator class="assigned" /> </id>   这种主键的生成方式不建议使用，在数据库表设计时就应该使用代理主键（surrogate key），不应使用自然主键（natural key具有业务含义），在没有指定<generator>标签时，默认就是assigned主键的生成方式 在插入数据的时候主键由用户自己添加，hibernate也不管 9、foreign 使用外部表的字段作为主键 10、select 使用触发器生成主键（主要用于早期的数据库主键生成机制，少用） ps: 代理主键是指与业务无关且能唯一标识数据库中记录,一般是数据库自动生成的,比如mysql可以使用auto_increment,Sql2000可以使用identity生成方式,oracle可以使用sequence生成方式自然主键指业务相关,由用户指定,且能唯一标识数据库中的任意一条记录 简介版： increment：代理主键，适合于所有数据库，由hibernate维护主键自增，和底层数据库无关，但是不适合于2个或以上hibernate进程。 identity：代理主键，适合于Mysql或ms sql server等支持自增的dbms，主键值不由hibernate维护。 sequence：代理主键，适合于oracle等支持序列的dbms，主键值不由hibernate维护，由序列产生。 native：代理主键，根据底层数据库的具体特性选择适合的主键生成策略，如果是mysql或sqlserver，选择identity，如果是oracle，选择sequence。 hilo：代理主键，hibernate把特定表的字段作为hign值，生成主键值 uuid.hex：代理主键，hibernate采用uuid 128位算法生成基于字符串的主键值 assign：适合于应用程序维护的自然主键。 上一篇 webtrends 分析报告 下一篇 nginx负载两个项目 顶 0 踩 0 我的同类文章 j2ee （37） spring （12） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968788次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 86
URL:: http://blog.csdn.net/kongqz/article/details/7889667

ParseText::
工作流的基本知识 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 工作流的基本知识 2013-08-12 15:00 1095人阅读 评论 (0) 收藏 举报 分类： BPM （2） 作者同类文章 X 什么是工作流管理系统（WFMS）   定义 工作流系统是以规格化的流程描述作为输入的软件组件,它维护流程的运行状态,并在人和应用之间分派活动。为了后面的描述，我们先定义一些基本的 术语：流程定义（process definition）和流程实例（process instance）. 一个流程定义是一个业务流程或过程的规格化描述。一个流程实例是流程定义的一个运行实体。 都目前为止，概念还比较清晰是不是？但当再深入一步时，我们就要小心使用文字了。如何阐述流程中的步骤，现在还没有一个统一的方式。这是各种工作流规范和 工具之间主要的分歧。 为什么应当禁止使用术语“活动（activity）”...   流程定义通常用一些活动表述。我认为这是导致工作流领域所有混乱的主要原因。我告诉你为什么：因为术语“活动”混淆了状态（state）和动作 （action）之间的差异。在流程中，状态 (或者说等待状态)代表了一种对外部参与者（actor）的依赖。在流程运行时，这意味着流程引擎必须等待，直到外部参与者通知工作流管理系统指定的状态 完成了。比如，等待可进一步运行的认可。动作是在流程运行过程中，工作流系统为响应指定事件（event）运行的一段程序逻辑（programming logic）。当流程运行过程中指定的事件发生时，工作流系统启动并执行这些动作。比如，当状态分配给一个参与者时，发一封Email。你也能看出，状态 和动作是如此不同，因此使用同样的术语去描述这些概念是一个坏习惯。我的建议是避免使用术语“活动”，使用“状态”或者“动作”代替它。   工作流系统另一个重要的职责是维护每一个流程运行的上下文信息。 流程上下文变量（process context variable） ，或简称变量，是与流程实例相关的变量。如，休假申请的开始日期、数据库中一条记录的键值、文档管理系统中一篇文档的索引等。通常在流程定义中声明这些变 量，然后在流程实例生成时，这些流程变量被实例化。所有成熟的工作流管理系统都支持定制的变量类型。   目标领域（Target usage）   使用工作流管理系统的目的之一是作为企业应用系统集成（EAI）的平台。在当前大部分企业级IT架构中，各种各样的异构 （heterogeneous）应用和数据库运行在企业内网中。在这些系统被应用到组织时，都有一个清晰的目标。例如，客户管理、文档管理、供应链、订 单、支付、资源计划等等。让我们称这些系统为专门应用（ dedi ca ted applications）。每一个专门应用都包含它们所支持业务流程的领域知识。这些专门应用中的自动化流程，被拼装到企业中更大的非自动化流程中。每 当一个这样的专门应用安装并投入使用，都会带来涉及其他多个应用的新功能需求。企业应用系统集成（EAI）就是通过使用多个专门应用满足软件新需求的方 法。有时，这只需要在两个应用之间提供数据通讯的通道。专门应用将很多业务流程硬编码在软件中。   可以这么说，在你购买专门应用时，你是购买了一组固定的自动化业务流程。而工作流管理系统是不必事先知道问题域的相关信息的。工作流系统将业务 流程描述作为输入并管理流程实例的执行，这使得它比专门应用更灵活（当然你也要花精力编写业务流程的规格化描述）。这就是为什么说工作流系统和专门系统是 相互补充的。工作流系统可以用来管理全局的业务流程。如果专门应用支持你所需要的业务流程，那么使用专门应用。在此讨论的工作流系统的第一种使用方式就 是：结合所有的专门应用，使用工作流系统构建一个EAI平台。   工作流系统能够发挥很大价值的第二个使用方式是：协助涉及多人相关任务工作流软件的开发。为了达到这个目的，大部分工作流系统都有一个方便的机 制，来生成执行任务的表单。对于专注于ISO 或者CMM认证的组织，采用这种方式使用工作流系统能够显著提高生产率。 不用将过程用文字的形式写在纸上，工作流系统使你通过流程定义建模实现过程的自动化（如使用基于Web的应用）。 工作流系统的第三种使用方式是：将工作流引擎嵌入到其他应用中。在前面我们谈到，专门应用将指定问题域相关的业务流程固化在软件中。开发专门应 用的公司也可以将工作流引擎嵌入到他们的软件中。在这里，工作流引擎只是作为一个软件组件，对于应用的最终用户是不可见的。将工作流引擎嵌入到应用中的主 要原因是为了重用（不重复发明轮子）和应用软件的可维护性。   The case for workflow 对于引入工作流的组织，能够在软件开发和业务两个层次受益。   方便开发-工作流管理系统能够简化企业级软件开发甚至维护。 降低开发风险 - 通过使用状态和动作这样的术语，业务分析师和开发人员使用同一种语言交谈。这样开发人员就不必将用户需求转化成软件设计了。 实现的集中统一 -业务流程经常变化，使用工作流系统的最大好处是：业务流程的实现代码，不再是散落在各种各样的系统中 。 加快应用开发 - 你的软件不用再关注流程的参与者，开发起来更快，代码更容易维护。   业务流程管理 (BPM)   在自动化业务流程之前，分析并将它们规格化是一件艰苦但会有很好回报的工作。e-workflow.org对于分析流程能够带了的益处有不错的阐述： 提高效率 - 许多流程在自动化过程中会去除一些不必要的步骤 较好的流程控制 - 通过标准的工作方法和跟踪审计，提高了业务流程的管理 改进客户服务 - 因为流程的一致性，提高了对客户响应的可预见性 灵活 - 跨越流程的软件控制，使流程可以按照业务的需要重新设计。 业务流程改进 - 对流程的关注，使它们趋向于流畅和简单 我认为他们还遗漏了一个使用工作流系统最重要的因数：提高对迭代开发的支持。如果软件中业务流程部分不容易更改，组织就会花很大的精力在开发前 的业务流程分析中，希望一次成功。但可悲的是，在任何软件项目开发中，这都很少能实现。工作流系统使得新业务流程很容易部署，业务流程相关的软件可以一种 迭代的方式开发，因此使用工作流系统使开发更有效、风险更低。   缺失的一环（Missing link）   我确实认为工作流系统是企业应用开发中缺失的一环。将企业业务流程逻辑在企业级软件中实现的缺省方式是分散的。这意味着业务流程逻辑散布在各种 系统中，如EJB、数据库触发器、消息代理等等。这样得到的软件难于维护，结果，企业只能将改变业务流程软件作为最后的选择。他们经常能够做的是，改变流 程以适应软件。上述问题也适用于采用大型外部ERP软件包的企业。进一步，假设我们认识到这个问题，并打算将一个流程相关的代码都集中起来。对于一个流程 来说这很不错，但当你要实现多个流程时，你会看到管理状态和流程变量的代码被到处复制。最后，我们会整理这些代码放到一个集中的库中。好，...这就是一 个工作流管理系统了，不用费心自己来实现，你可以从本文后面的列表中选择一个。   A closer look WFMS interfaces   一个工作流管理系统以流程定义作为输入。在这里，可以将流程定义看作UML活动图、UML状态图或者有限状态机。在提交一张费用单据、申请休 假、要求一个报价、...之后，工作流系统负责维护这些流程定义的执行状态和上下文。为此，需要通知工作流系统状态的变化。运行流程的状态变化可以记录下 来，以备监控管理。   Figure 2: Interfaces of a WFMS   定义 工作流系统的定义接口使流程开发人员能够部署流程定义。注意，这里的“流程开发人员”可以是业务分析师和软件开发人员的组合。   圈套（Pitfall） 许多工作流管理系统的开发商想使你相信，通过使用他们的图形化流程开发工具，只要业务分析师就可以生成流程定义。这种幻想源于“编程很难”这样的事实。开 发商的销售人员喜欢说“看，你不用写一行代码”。不用写代码是好事，可大部分开发商在这点上走的太远，忽略了在某些场合提供一种将代码集成到流程定义中的 机制是很适合的。在将工作流系统作为EAI平台时，必须在流程中集成代码。开发流程定义需要业务分析师和软件开发人员的合作。一个好的图形流程设计工具应 该能够支持这种合作。   执行 执行接口使用户和系统可以操作流程实例。流程实例是流程定义的执行。流程定义的控制流通过状态机描述。执行接口的两个主要方法是启动一个流程实例和通知工作流系统一个状态结束了。   应用 应用接口代表了由工作流系统发起的工作流系统和外部系统之间的交互。当一个用户或系统操作一个流程实例的运行时，会生成一些事件（如一个迁移的执行）。流程定义中可以指定一段响应一个事件的可执行代码逻辑，这段代码和组织内外部的其他系统打交道。   监控 管理人员通过监控接口获得流程运行的确切数据。有时，运行日志也可用于审计。 这些是WfMC参考模型（reference model of the WfMC）中定义的五个接口中的四个. 工作流的十大特征 强调一下工作流的十大特征：图形化的工作流定义、角色（任务可指派给“角色”或“职能”）、规则、例外处理、监管、测算（产生工作流状态的报表）、仿真 （系统实施前可在单机上测试）、主动性（主动通知、催办和移交任务）、数据库连接、文档附件（可对文档的流转进行有效的管理，以支持关键流程）。      这十大特征将极大地帮助我们理解分辨何为真正的工作流，因为即使是“工作流管理联盟”的科学表述，好像也不能完全消除对工作流的某些误读。一种普遍的误解 认为，基于消息的群件产品是一种工作流管理方案。事实上，这是不完全的。基于消息的群件产品都具有工作流的概念，但并非完备的工作流管理系统。     如果我们套用工作流的十大特征，将会辨清群件产品只是在“文档附件”方面具备工作流的特性，难以完全满足业务流程的自动化预测、监管等。     对于工作流还有一种常见的分类，即分为“使能型工作流”、“引擎型工作流”、“特定应用工作流”和“通用工作流”。其中“使能型工作流”本质上不属于工作 流产品，但可通过增加逻辑和编码，建立工作流解决方案；“引擎型工作流”则可与其他系统结合，是当前研究的重点。正是从这个分类出发，也有人称群件产品为 “使能型工作流”，或者“单纯的文档型工作流”。 工作流基本功能 它的基本功能体现在几个方面： 　　(1)定义工作流，包括具体的活动、规则等，这些定义是同时被人以及计算机所能够“理解”的。 　　(2)按照工作流的定义创建和运行实际的工作流。 　　(3)监察、控制、管理运行中的业务(工作流)，例如任务、工作量与进度的检察、平衡等。 　　     与以往已经被采用的企业 IT 应用体系，例如 MRPII 或 ERP 相比，WFM是一个相当重要的里程碑。从用户的角度，WFM带来(或将要带来)的变化是极其强烈的，甚至可以形容为一种用户“梦想”的实现。     工作流管理 WFM 系统是一个真正的“人-机”系统，用户是系统中的基本角色，是直接的任务分派对象，他或她可以直接看到电脑针对自己列出的“任务清单”，跟踪每一项任务的 状态，或继续一项任务，而不必从一个模块退出，进入另一个模块，搜索相应任务的线索。前者是面向功能或对象的，而后者是直接面向用户的。这样，用户的任务 分派和任务的完成状态，可以被最大程度地电脑化和受到控制。 　 二、国产工作流系统的主要特点：     与国外工作流系统相比较，国产工作流系统在汲取世界先进的工作流管理理念的同时，加入了许多适合中国国情的应用，功能更贴切中国用户的普遍需求，在操作上 更加简便、易用，并且结合了信息门户、即时消息等系统的应用。工作流系统往往是协同应用软件的血脉和经络，是调合协同软件各功能模块的重要应用部分，是协 同软件实现协同管理的基础。     通过对位居前列的几家国产协同软件综合分析，国产工作流管理WFM系统已经具备与国际主流同类软件相媲美的先进功能，并且具有一些符合中国国情的显著特点，具体如下： 　　 1.强大的工作流引擎：     工作流引擎是工作流管理软件的核心功能，主要用于负责解释、执行各种工作流程，调度、分发和管理任务。  　　 2.工作流程的自由定义：      国产工作流管理 WFM 系统，已经做到任意定义单个员工、部门、事务的工作流程，并且可以定义群组的工作流程。采用流程代码的设定方式，使系统的灵活性和扩展性大大加强。工作流程步骤不受限制，工作流程的事务不受限制。 　　 3.灵活的组织、员工设定和权限管理：     工作流管理 WFM 结合用户管理模块，可以快速定义和修改企业的组织结构、人员协作关系，并设定用户的角色和权限。  　　 4.以任务为管理线索：     所有的工作，都可以分解为单项或者组合任务，每一任务可以自由设定内容。工作流管理 WFM 用户只需打开事件任务中心，就可以查看、管理所有的待办事宜。根据任务的执行情况，可以对任务的责任部分和个人，进行绩效考评和过程改进建议。 　　 5.多种消息提醒方式：     工作流管理 WFM 中的相关消息，包括待办任务、请示批复等消息，可以采用Email、系统短消息、手机短讯等方式提醒，并将提醒和处理结果自动反馈到工作流管理数据中去。 协同系统中的应用 具体表现在： 　　◆信息沟通 　　主要依靠邮件系统，电子邮件作为企业宝贵的知识资源，目前分散在各个PC终端中，缺乏集中统一的管理，检索、共享、交流不方便，邮件的可靠性没有保证，造成沟通效率低，信息安全无法保障； 　　◆文件档案管理 　　企业知识资产没有有效地管理，大量文档资料散落在集团的各个部门，共享、学习、利用程度低，部门之间知识交流和共享缺乏有效的工具和平台。 　　◆协同办公 　　日常办公流程、收发文管理目前采用纸质文件、手工传递的方式，无法满足高效、无空间办公的需求，无法形成效的团队的协作和知识的沉淀和积累； 　　◆信息集成 　　建立了大量的信息系统，人员组织架构不统一，系统之间的关联少，数据交流不畅，缺乏贯穿整体的业务流程管理和协作机制； 　　◆信息管理 　　信息的深层次加工比较初级，对信息的挖掘、分析不够，大量数据缺乏深层次的加工。 工作流管理系统的分类 一、目前在市场上可以见到的工作流系统从技术角度可以分为下面几个类型： 1. 基于Domino的工作流管理系统     由于Domino在群件市场上的普及率，加上莲花公司对工作流概念的大力宣传，人们很容易误认为Domino是一个工作流系统。实际上这种观点是完全错误 的。Domino充其量是一个可以编写带有流程的应用的编程和运行环境，其本身并不具备一个工作流管理系统的特征，如图形化的工作流定义、独立的工作流引 擎、清晰的工作流访问接口等。应用程序所需要的每一个工作流特性，都需要自己手工编写。为了弥补Domino的不足，国内一些OA厂商在Domino上添 加了用其他语言编写的图形化工作流定义组件，但这仍然不能叫做一个工作流管理系统。     基于Domino的工作流管理系统的典型例子实际上还是莲花公司推出的，叫做Domino Workflow™。它运行在Domino平台上，为开发工作流应用提供了很大的便利。当然，人们只能在Domino平台上使用它。在为其他平台开发应用 时，人们必须求助于别的工作流管理系统。 2. 基于消息中间件的工作流管理系统     这方面的典型代表是IBM公司的MQSeries Workflow。它通过MQSeries将不同的应用集成在一起，并形成业务流程。它没有一个集中的工作流引擎。当进行分布式的应用系统的集成时，它是 一个不错的选择。但当你需要为运行在单一服务器上的应用提供工作流功能，而且不想因此而购买一大套消息中间件的时候，你必须考虑别的选择。 3. 基于微软平台的工作流管理系统     这方面的典型代表是Ultimus和微软公司在BizTalk中提供的工作流组件，它们为基于微软平台的工作流应用提供支撑。 4. 基于J2EE的工作流管理系统     这类系统是我们本文讨论的重点。随着Java技术的日趋成熟和应用面的扩大，绝大多数企业级的应用系统开始基于J2EE技术来设计，对在J2EE平台上的 工作流系统的需求也越来越大。这种工作流系统应用能够充分发挥J2EE技术的优势，提供高度的可靠性、可扩展性和安全性。E-way workflow™是属于这种类型的系统。 上一篇 nginx负载两个项目 下一篇 项目管理: Maven 让事情变得简单 顶 0 踩 0 我的同类文章 BPM （2） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968788次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 87
URL:: http://blog.csdn.net/kongqz/article/details/8586951

ParseText::
项目管理: Maven 让事情变得简单 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 项目管理: Maven 让事情变得简单 2013-08-12 15:01 1458人阅读 评论 (0) 收藏 举报 分类： 持续集成 （12） 作者同类文章 X 目前，绝大多数开发人员都把 Ant 当作 Java 编程项目的标准构建工具。遗憾的是，Ant 的项目管理工具（作为 make 的替代工具）不能满足绝大多数开发人员的需要。通过检查 Ant 构建文件，很难发现项目的相关性信息和其它元信息（如开发人员／拥有者、版本或站点主页）。 Maven 除了以程序构建能力为特色之外，还提供 Ant 所缺少的高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven 构建脚本就可以构建简单的项目，而使用 Ant 则需要十几行。事实上，由于 Maven 的面向项目的方法，许多 Apache Jakarta 项目现在使用 Maven，而且公司项目采用 Maven 的比例在持续增长。 一、MAVEN VS ANT 那么，Maven 和 Ant 有什么不同呢？在回答这个问题以前，我要强调一点：Maven 和 Ant 针对构建问题的两个不同方面。Ant 为 Java 技术开发项目提供跨平台构建任务。Maven 本身描述项目的高级方面，它从 Ant 借用了绝大多数构建任务。因此，由于 Maven 和 Ant 代表两个差异很大的工具，所以我将只说明这两个工具的等同组件之间的区别，如表 1 所示。 表1  maven vs ant   Maven Ant 标准构建文件 project.xml 和 maven.xml build.xml 特性处理顺序 ${maven.home}/bin/driver.properties ${project.home}/project.properties ${project.home}/build.properties ${user.home}/build.properties 通过 -D 命令行选项定义的系统特性 最后一个 定义起决定作用。 通过 -D 命令行选项定义的系统特性 由 <property> 任务装入的特性 第一个 定义最先被处理。 构建规则 构建规则更为动态（类似于编程语言）；它们是基于 Jelly 的可执行 XML。 构建规则或多或少是静态的，除非使用 <script> 任务。（请参阅 参考资料 以获得相关教程。） 扩展语言 插件是用 Jelly（XML）编写的。 插件是用 Java 语言编写的。 构建规则可扩展性 通过定义 <preGoal> 和 <postGoal> 使构建 goal 可扩展。 构建规则不易扩展；可通过使用 <script> 任务模拟 <preGoal> 和 <postGoal> 所起的作用。 二、maven的主要组件 既然您了解了 Maven 和 Ant 之间的区别，让我们来研究 Maven 的主要组件，如图 1 所示 图1：maven的主要组件 1、项目对象模型 项目对象模型（Project Object Model，POM）描述项目的各个方面。尽管对于 POM 的物理表示没有内在的限制，但 Maven 开发人员通常使用一个 XML 项目文件（project.xml）。该 XML 文件格式由位于 Maven 安装目录中的 XML 模式（maven-project.xsd）定义。 通常，project.xml 文件由三个主要部分组成： 项目管理部分包括项目的组织、开发人员名单、源代码位置和错误跟踪系统 URL 等信息。 项目相关性部分包括关于项目相关性的信息。当前 Maven 实现（1.0 beta 测试版 8）仅支持 JAR 文件相关性。 项目构建和报告部分包含项目构建信息（如源代码目录、单元测试用例目录）和要在构建中生成的报告。 清单 1 显示了带注释的样本 project.xml 文件。因为 project.xml 文件中的许多元素都是可选的，所以，随着您对 Maven 理解的加深，可以逐步使用不同的 Maven 特性。 注：在以下代码中，可选的元素都以“可选的（OPTIONAL）”标明。 主文档包含项目的唯一标识和组标识。事实证明，当项目包括多个子项目时，组标识非常有用。所有的子项目应共享同一组标识，但每个子项目应有不同的 <id> 。 清单1：主project.xml框架 <?xml version="1.0" encoding="ISO-8859-1"?> <!-- A project file's root element --> <project> <!-- The POM version. This tag is currently unused. --> <pomVersion>3</pomVersion> <!-- A project group id. If present, the id serves as the project's directory name in the repository --> <groupId>crayola-group</groupId> <!-- A unique project identifier. The project identifier and its version number often generate file/directory names during the build. For example, a project JAR file follows the <id>-<version> naming convention. --> <id>crayola</id> <!-- A short name for the project --> <name>Crayola Professional</name> <!-- The project version number. Maven does not enforce a particular version numbering scheme. --> <currentVersion>0.0.1</currentVersion> ... <!-- ---------------------------------------------------------------- --> <!-- Project management section --> <!-- ---------------------------------------------------------------- --> ... <!-- ---------------------------------------------------------------- --> <!-- Project dependency section --> <!-- ---------------------------------------------------------------- --> ... <!-- ---------------------------------------------------------------- --> <!-- Project build and reports section --> <!-- ---------------------------------------------------------------- --> ... </project> 项目管理部分（如清单 2 所示）主要包括可选项。在此部分中指定开发人员名单（带有正确的标识），当您希望获得更改日志（Change Log）报告和开发活动（Development Activity）报告时尤其要这么做。 清单2：项目管理部分 ... <!-- ---------------------------------------------------------------- --> <!-- Project management section --> <!-- ---------------------------------------------------------------- --> <!-- Details of the organization holding the project. Only the name is required. --> <organization> <name>Markers Inc.</name> <url>http://w3.markers.com/</url> <logo>http://w3.markers.com/logo/company-logo.gif</logo> </organization> <!-- (OPTIONAL) Year of inception --> <inceptionYear>2003</inceptionYear> <!-- (OPTIONAL) Project main package --> <package>com.markers.crayola.*</package> <!-- (OPTIONAL) Project logo picture (URL) --> <logo>http://w3.markers.com/logo/crayola.gif</logo> <!-- (OPTIONAL) GUMP repository ID. Useful only if you use GUMP. --> <gumpRepositoryId>crayola</gumpRepositoryId> <!-- (OPTIONAL) Project description --> <description>...</description> <!-- (OPTIONAL) Short project description --> <shortDescription>...</shortDescription> <!-- (OPTIONAL) Project site URL --> <url>http://w3.markers.com/crayola</url> <!-- (OPTIONAL) Issue-tracking system URL --> <issueTrackingUrl>http://w3.markers.com/jira/crayola</issueTrackingUrl> <!-- (OPTIONAL) Project site address. --> <siteAddress>w3.markers.com</siteAddress> <!-- (OPTIONAL) Project-site deploy directory (physical location) --> <siteDirectory>/www/crayola/site/</siteDirectory> <!-- (OPTIONAL) Project distribution directory (physical location) --> <distributionDirectory>/www/crayola/builds/</distributionDirectory> <!-- (OPTIONAL) Project source-repository information --> <repository> <connection> scm:cvs:pserver:anoncvs@cvs.markers.com:/home/cvspublic:crayola </connection> <url>http://cvs.markers.com/viewcvs/crayola/</url> </repository> <!-- (OPTIONAL) Mailing list information --> <mailingLists> <mailingList> <name>Dev List</name> <subscribe>dev-subscribe@crayola.markers.com</subscribe> <unsubscribe>dev-unsubscribe@crayola.markers.com</unsubscribe> </mailingList> ... </mailingLists> <!-- Developers involved in this project --> <developers> <developer> <name>John Smith</name> <id>jsmith</id> <email>jsmith@markers.com</email> </developer> ... </developers> 将清单 3 中的信息与一个中央构件资源库一起使用，将消除几个常见的构建问题（包括错误配置的 CLASSPATH 或相关性-版本不匹配） 清单3：项目相关性部分 <!-- ---------------------------------------------------------------- --> <!-- Project dependency section --> <!-- ---------------------------------------------------------------- --> <dependencies> <!-- This project depends on the JAR file "commons-beanutils-1.5.jar" in the Maven repository's commons-beanutils/jars subdirectory (more about repository later). --> <dependency> <groupId>commons-beanutils</groupId> <artifactId>commons-beanutils</artifactId> <version>1.5</version> </dependency> <!-- This project depends on the JAR file "commons-lib-2.1.jar" in the Maven repository's markers/jars subdirectory. --> <dependency> <groupId>markers</groupId> <artifactId>commons-lib</artifactId> <version>2.1</version> </dependency> </dependencies> 项目构建和报告部分（如清单 4 所示）包含用于配置某些 Maven 插件的重要构建和报告信息。例如，可以配置 Maven 在站点文档生成时包含还是排除某些报告 清单4：项目构建部分 ... <!-- ---------------------------------------------------------------- --> <!-- Project build and reports section --> <!-- ---------------------------------------------------------------- --> <build> <!-- (OPTIONAL) Build notification email address. --> <nagEmailAddress>jsmith@markers.com</nagEmailAddress> <!-- (OPTIONAL) Defines where the Java source resides. --> <sourceDirectory>src/java</sourceDirectory> <!-- (OPTIONAL) Defines where the Java source for unit test-cases resides. --> <unitTestSourceDirectory>test/java</unitTestSourceDirectory> <!-- (OPTIONAL) Unit test-case file pattern. --> <unitTest> <includes> <include>**/*Test.java</include> </includes> </unitTest> <!-- (OPTIONAL) Resources packaged inside the JAR file. --> <resources/> <!-- (OPTIONAL) The reports tag lets you select which reports you want generated for your site. In this case, only the checkstyle report will generate. --> </build> <reports> <report> maven-checkstyle-plugin </report> </reports> 项目依靠库来实现其功能。例如，您的项目可能依靠 log4j 进行日志记录，依靠 Xalan 进行 XSLT 转换。对于 J2EE 项目，Web 组件可能依靠 EJB 组件来执行业务操作。Maven 可以让您用它的 POM 来表示不同的相关性。您可以用表 2 所示的标记在 project.xml 文件中描述每一个相关性。 表2：项目相关性部分： groupId 告诉 Maven 资源库内哪个子目录中包含相关性文件。 artifactId 告诉 Maven 该构件的唯一标识。 version 表示相关性的版本号。 jar （可选的）表示相关性的 JAR 文件。在绝大多数情况下，可以从相关性的 <artifactId> 和 <version> 构造 JAR 文件的名称。 type （可选的）相关性的类型；如 jar 和分发版等。缺省值是 jar。 url （可选的）相关性项目的 URL，在相关性是在因特网上找到的第三方库时非常有用。 资源库： 资源库是另一个主要的 Maven 组件。在有多个项目的基于 Java 的站点中，由第三方库组成的中央资源库常常确保项目之间的一致性。Maven 使资源库的结构符合标准，并且支持驻留在因特网或内部网上的远程资源库。清单 5 显示了资源库的常规结构。 清单5：资源库 repository |-- ant <-- project group ID --> | `-- jars <-- artifact type, followed by 's', | <-- e.g. jars, wars, ears --> | `-- ant-1.5.1.jar <-- actual artifact --> ... 要创建远程资源库，只需将这个资源库的目录部署在网站中。Maven 建议使用远程资源库以便于集中维护，您将会最大程度地实现项目之间资源的共享。为避免每次构建时都要下载文件，Maven 在首次下载必需的相关性资源时就自动地将其高速缓存在本地资源库中。Maven 将表 3 中所示的特性用于远程资源库和本地资源库。 表 3. 用于远程资源库和本地资源库的特性 maven.repo.remote 用以逗号分隔的 URL 列表指定远程资源库；缺省情况下使用 http://www.ibiblio.org/maven。 maven.proxy.host 、 maven.proxy.port 、 maven.proxy.username 和 maven.proxy.password 如果位于防火墙后面并且需要代理认证才能访问因特网，这些设置将派上用场。 maven.repo.local 指定已下载的相关资源的高速缓存位置，缺省值为 ${MAVEN_HOME}/repository 。在 UNIX 环境中，为了与多个团队共享资源库目录，可以为开发人员创建一个特殊的组，然后给予这个组对资源库目录的读／写访问权。 Maven 中的 Ant 任务 Maven 中的 goal 可在其定义中包含任何有效的 Ant 任务，这一点有助于您快速掌握 Maven 以及保护您的 Ant 投入。 goal： Maven 中的 goal 类似 Ant 中的 target 。两者都包含实现 goal（或 target）时会执行的任务。要在命令行中实现特定的 goal，可输入 maven <goal> 。 要列出所有已定义的 goal，可使用 maven -g 。表 4 列出了常用的 goal。 表 4. 常用的 goal java:compile 编译所有 Java 源代码。 jar 创建已编译的源代码的 JAR 文件。 jar:install 将已创建的 JAR 文件发布到本地资源库，使得其它项目可访问该 JAR 文件。 site 创建项目站点文档。缺省站点文档包含关于项目的有用信息，如包／类相关性、编码风格一致性、源代码交叉引用、单元测试结果或 Javadoc。要生成的报告列表是可定制的。 site:deploy 部署生成的站点文档。 Maven 的 goal 是可扩展和可重用的。知道了这一点后，在编写自己的 goal 之前，可先在 Maven 站点上或 ${MAVEN_HOME}/plugins 中查看 Maven 插件列表。另一个关于免费 Maven 插件的较佳资源是 SourceForge 上的 Maven 插件项目。（以上各项的链接可在 参考资料 中获得）。 如果仍不能找到符合您要求的 goal，Maven 给您两种选择： 编写 <preGoal> 或 <postGoal> 来扩展标准 goal 编写自己的 goal 无论选择哪种，都要在项目目录中创建名为 maven.xml 的特殊文件。清单 6 显示了框架 maven.xml。 清单 6. 框架 maven.xml <?xml version="1.0" encoding="ISO-8859-1"?> <project xmlns:j="jelly:core"> ... <goal name=...> ... build rules, e.g. <mkdir dir="${test.result.dir}"/> <echo>Executing JUnit tests</echo> ... </goal> ... <preGoal name=...> ... </preGoal> <postGoal name=...> ... </postGoal> </project> 熟悉 Ant 的开发人员会发现 Maven 的 goal（同样还有 preGoal 和 postGoal ）可在其定义中包含任何有效的 Ant 任务，这有助于快速学习 Maven 并保护在 Ant 上的投入。为了给 Ant 任务添加动态性，Maven 也使用 Jelly 脚本编制语言。“ 基础 Jelly 编程”用一个样本 maven.xml 文件介绍 Jelly 脚本编制语言。 编写 <preGoal> 和 <postGoal> Ant 的 <target> 与 makefile 规则的相似之处在于：定义了规则以后，前提条件和后置条件是固定的。这使得在多个项目间重用构建规则变得更加困难。例如，某个项目中的 compile target 可能依靠 XDoclet 生成源文件，而另一个 compile target 可能不包括任何先决条件。为了克服这种限制，Maven 提供了两个特殊标记： <preGoal> 和 <postGoal> 。从标记的名称可以看出： preGoal 定义在指定的 goal 之前执行的构建规则。另一方面， postGoal 定义实现指定 goal 之后要执行的构建规则。例如，清单 7 中的 preGoal 指示 Maven 在编译源代码之前用 XDoclet 生成源文件。 清单 7. 样本 preGoal 部分 <preGoal name="java:compile"> <attainGoal name="xdoclet:ejbdoclet"/> </preGoal> Maven 还提供与 Ant 的 <antcall> 标记相似的 <attainGoal> 标记，以便在确有必要直接实现 goal 的情况（如上例）下使用。 编写自己的 goal 如果 goal 是特定于项目的，则可在 maven.xml 文件中定义自己的 goal。这些自定义的 goal 会覆盖其它同名的 goal。如果项目包括子项目，子项目也继承这些 goal。 编写插件 为了在项目间共享 goal，可在 Maven 安装插件目录（ ${MAVEN_HOME}/plugins ）中将其打包为插件。典型的 Maven 插件包含 project.xml 和 plugin.jelly 文件。project.xml 文件描述插件的 POM；plugin.jelly 类似 maven.xml 且包含该插件所展示的 goal。插件可以有自己的资源和相关性信息。预先定义的变量 ${plugin.dir} 让用户引用插件目录中的资源。例如，在清单 8 中所示的插件结构中， ${plugin.dir}/dtd/web-app_2_3.dtd 可访问 plugin.jelly 中的 web-app_2_3.dtd 。 清单 8. 样本插件结构 ejbjar-plugin-1.0 |-- dtd | |-- application_1_3.dtd | |-- ejb-jar_2_0.dtd | |-- web-app_2_3.dtd |-- plugin.jelly `-- project.xml 安装 Maven 最近发行的 Maven 1.0-beta-8 基本上是 1.0 的功能完善版。因为 Maven 开发社区每天都在修正错误，如果您遇到任何无法正常工作的问题，则立即从 CVS（Concurrent Version System，并发版本控制系统）获得最新 Maven 版本，然后自行构建（请参阅 参考资料 以获得指示信息）。下载了最新的 Maven 源代码之后，可通过调用以下命令来构建 Maven： ant -f build-bootstrap.xml (set MAVEN_HOME to where you want Maven to reside and use Ant 1.5.1 to perform the build) 如果在防火墙之后操作，请正确设置以下特性： maven.proxy.host 、 maven.proxy.port 、 maven.proxy.username 和 maven.proxy.password 。缺省情况下，Maven 资源库驻留在 ${MAVEN_HOME}/repository 中；通过将 maven.repo.local 特性设置为新位置，可以更改 Maven 资源库的位置。 样本项目文件 请参阅在这个样本 J2EE 项目中使用的 Maven 项目文件。 掌握了到目前为止所学的知识后，就可以着手使用 Maven 了。本节描述如何用 Maven 设置一个样本 J2EE 项目。 清单 9. 样本项目目录布局 在进行详细介绍之前，我先说明一下项目的目录布局。尽管不作要求，但事实证明一致的跨项目目录布局非常有用，因为熟悉了一个项目的开发人员可以轻松地浏览其它项目。更重要的是，一致的目录布局可让您编写通用的构建规则。 Maven 的目录布局指南（请参阅 参考资料）适用于绝大多数项目。作为演示，我使用略微不同的布局，如清单 9 所示。 清单 9. 样本项目目录布局 project | |-- LICENSE.txt |-- project.properties |-- maven.xml |-- project.xml |-- src | `-- java | `-- com/.... | `-- conf | `-- Configuration files for staging environments. |-- test | `-- java | `-- com/.... | `-- conf | `-- Configuration files for unit testing environments. `-- xdocs `-- index.xml 一个 J2EE 项目通常生成 WAR 文件、EJB JAR 文件和 EAR 文件。因为每种文件都包括自己的相关性信息和源文件，所以应将其作为单独项目来构建。通常，通过将子项目存储为主项目的子目录，来构造这一项目／子项目关系。我们的布局如清单 10 所示。 清单 10. Maven 中 J2EE 项目的高级目录布局 j2ee-project | |-- project.xml - Produces the EAR file | |-- util-subproject | | | `-- project.xml - Produces the Utility JAR file | |-- ejb-subproject | | | `-- project.xml - Produces the EJB JAR file | `-- web-subproject | `-- project.xml - Produces the WAR file 项目继承： 项目继承让 POM 以类似于对象继承的方式从主 POM 继承 ― 由于这些项目之间的细微差别（主要是相关性的差别），这一特性在此尤为重要。项目管理部分可在主 project.xml 中集中维护。要使用项目继承，可使用 project.xml 中的 <extend> 标记（请参阅“ 样本项目文件”中的清单 2）。 样本项目的goal： 既然已经定义了 POM，就可以编写它们的 goal。因为这些 goal 使用 POM 中定义的特性，所以在继续之前应该首先理解“ 样本项目文件”中的 project.xml 文件。 Utility 子项目： 由于 Utility 子项目生成一个包含源目录中类的 JAR 文件 ― 由缺省的 jar:jar goal 即可满足要求，因此这里不需要定制的 goal。 因为 Web 子项目和 EJB 子项目都依靠 Utility 子项目，所以，在构建 Web 子项目和 EJB 子项目之前，应该调用 jar:install goal 以将 Utility 子项目 JAR 文件部署到本地资源库。这样，WAR 子项目和 EJB 子项目就可以正确地解析相关性。 Web 子项目： Web 子项目生成一个 WAR 文件，该文件包含源目录的类、 jsp 目录中的 JSP 文件和 conf 目录中的 web.xml 文件。缺省 war:war goal 有更简单的关于项目目录布局的视图。要重用该 goal，可如下定制其行为： 在项目的 project.properties 文件中，将特性 maven.war.src 和 maven.war.webxml 分别设置为 ${maven.build.dir}/webapp 和 ${maven.src.dir}/conf/web.xml 。这告诉 war:war 在哪里查找 Web 来源（JSP 页面、HTML 静态页面和图像等）和 web.xml 文件。 定义一个将所有 JSP 文件复制到 ${maven.build.dir}/webapp 目录中的 preGoal 。以下 maven.xml 可实现这一效果： <?xml version="1.0" encoding="ISO-8859-1"?> <project> <preGoal name="war:init"> <copy todir="${maven.build.dir}/webapp"> <fileset dir="${maven.src.dir}/jsp" include="*.jsp"/> </copy> </preGoal> </project> 当调用 war:war goal 时，请注意 Utility JAR 文件和 commons-beanutils JAR 文件都被打包到 WAR 文件。通过查看 project.xml 文件的相关性部分中的 war.bundle.jar 特性，Maven 知道要在 WAR 文件中包括哪个文件。 EJB子项目： 给 EJB JAR 文件打包和给 JAR 文件打包相似。如果项目设置与缺省 ejb goal 不匹配，可应用以上“Web 子项目”一节中所描述的技术。在这个特定例子中，将 ejb-jar.xml 从 conf 目录复制到 ${maven.build.dir}/ejb/META-INF 目录，并将 maven.ejb.src 特性设置为 ${maven.build.dir}/ejb 。 要将相关性 JAR 文件添加到 EJB JAR 的清单类路径（manifest classpath）中，可在相关性部分中使用 ejb.manifest.classpath 特性。 主（EAR）项目： 在成功编译并部署了子项目（使用 jar:install 、 war:install 和 ejb:install goal）之后，即可创建最终的 EAR 文件。相关性特性 ear.bundle.jar 、 ear.bundle.ejb 和 ear.bundle.war 告诉 ear 插件要在 EAR 文件中包括哪些文件。（对于 Maven 1.0-beta-8，WAR 文件不是受支持的相关性类型，因此 EAR 插件不能正确地给 WAR 文件打包。解决办法：使用 postGoal 手工更新 EAR 文件。） reactor：自动构建子项目： 构建 J2EE 项目需要大量的工作。事实证明，每次项目更改时重复同样的过程耗费时间而且容易出错。为帮助解决这些问题，Maven 的 reactor 功能部件以正确的顺序自动构建子项目，这样就节省了时间且减少了错误。 清单 11 的 maven.xml 演示了定义 reactor 的方法。 清单 11. 样本 reactor 定义 <?xml version="1.0" encoding="ISO-8859-1"?> <project default="all" xmlns:m="jelly:maven"> <goal name="all"> <m:reactor basedir="${basedir}" includes="*/project.xml" goals="install" banner="Building" ignoreFailures="false"/> </goal> </project> 该 reactor 首先在 basedir 目录下搜索 project.xml 文件，然后调用 install goal。执行的顺序取决于每个项目中的相关性部分。此外，通常可以在主项目的 maven.xml 文件中定义 reactor。因为 goal 在子项目中继承，所以选择 goal 的名称时要当心。 上一篇 工作流的基本知识 下一篇 在win7*64下配置php开发环境nginx+php 顶 0 踩 0 我的同类文章 持续集成 （12） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968785次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6)

Recno:: 88
URL:: http://blog.csdn.net/kongqz/article/details/8948847

ParseText::
JAVA中如何保证线程安全以及主键自增有序 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 JAVA中如何保证线程安全以及主键自增有序 2013-05-20 09:37 2899人阅读 评论 (0) 收藏 举报 分类： 架构 （28） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、常见场景 多个线程针对一个i进行主键自增。多线程下如果不做安全策略，将会导致各个现成获取的i值重复，导致脏数据 常见策略 1、增加syschroize进行线程同步 2、使用lock、unlock处理 3、使用reetrantent 锁进行锁定 缺点：容易造成性能低下，或者编写代码容易造成死锁 二、新方案 jdk新提供的功能，atomicInteger（还有其他一atomic开头的原子性操作类） AtomicInteger，一个提供原子操作的Integer的类。在Java语言中，++i和i++操作并不是线程安全的，在使用的时候，不可避免的会用到synchronized关键字。而AtomicInteger则通过一种线程安全的加减操作接口。 原理：通过java的CAS compare and swap，简称cas原语进行操作提升性能，这个也号称乐观锁，不阻塞 观锁实际上并不加锁，当计算遇到冲突或者说前后不一致时会重试 直到成功 CAS有3个操作数 内存值V 要跟内存值做比较的值A 和 新值 B while(true){ if(V == A){ V = B; return ; }else{ A ＝ V; } } CAS的操作对象为volatile类型 volatile类型变量是：CPU直接读写变量所在的内存 而不是把变量copy到寄存器操作 这样对变量的操作所有线程都是可见的 这样做的结果是减少了并发时冲突的概率 但不能完全避免 上一篇 java中引发GC的几种场景 下一篇 架构设计规范 顶 0 踩 0 我的同类文章 架构 （28） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968799次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 89
URL:: http://blog.csdn.net/kongqz/article/details/8955792

ParseText::
架构设计规范 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 架构设计规范 2013-05-21 15:49 1408人阅读 评论 (1) 收藏 举报 分类： 架构 （28） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 简单整理下架构设计相关规范，希望能帮助那些有需要的团队理清思路，参考要素中有些是内部的中间件大家不必追究名字。外部开源的中间件和服务器也有，希望能帮到正在做架构的朋友。 上一篇 JAVA中如何保证线程安全以及主键自增有序 下一篇 中文乱码在java中URLEncoder.encode方法要调用两次解决 顶 0 踩 0 我的同类文章 架构 （28） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968794次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 90
URL:: http://blog.csdn.net/kongqz/article/details/9028111

ParseText::
中文乱码在java中URLEncoder.encode方法要调用两次解决 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 中文乱码在java中URLEncoder.encode方法要调用两次解决 2013-06-05 10:33 6058人阅读 评论 (2) 收藏 举报 分类： j2ee （37） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、场景： 1、我在客户端要通过get方式调用服务器端的url，将中文参数做utf-8编码，需要在js中两次的进行编码，服务器端才能用decode方法一次获取。 例如： var xing=encodeURIComponent(encodeURIComponent(xing)); 2、如果我在客户端用java输出汉字作为参数，并且用http协议，也是需要两次才能在服务器端正常的一次decode xing=URLEncoder.encode(xing,"UTF-8"); xing=URLEncoder.encode(xing,"UTF-8"); 服务器端只需要一次decode xing=URLDecoder.decode(xing, "UTF-8"); 二、原理： 因为在jsp中对中文进行了编码的时候用的是UTF-8的编码方式，而在servlet中调用request.getParameter();方法的时候使用服务器指定的编码格式自动解码一次，所以前台编码一次后台解码一次而解码和编码的方式不用所以造成了乱码的出现， 这就类似于以下代码：             String name = java.net.URLEncoder.encode( " 测试 " , " UTF-8 " ); System.out.println(name); System.out.println(java.net.URLDecoder.decode(name, " ISO-8859-1 " )); 编码后的是%E6%B5%8B%E8%AF%95。。 而用ISO-8859-1解码后的是???è?。。 但是如果调用的是 System.out.println(java.net.URLDecoder.decode(name, " UTF-8 " )); 则结果是打印“测试”。 这就印证了 之前为什么我在servlet中调用java.net.URLDecoder.decode(request.getParameter("name"), "UTF-8")方法和调用java.net.URLDecoder.decode(request.getQueryString(), "UTF-8")所得到的结果是不一样的，就是由于在request.getParameter("name")之前会自动做一次解码的工作，而且是默认的ISO-8859-1。 所以，在使用java.net.URLEncoder.decode()和java.net.URLDecoder.decode(),的时候需要在前端页面中使用两次java.net.URLDecoder.decode()方法。 使用两次编码的过程相当于如下代码： String name = java.net.URLEncoder.encode( " 测试 " , " UTF-8 " ); System.out.println(name); name = java.net.URLEncoder.encode(name, " UTF-8 " ); System.out.println(name); name = java.net.URLDecoder.decode(name, " UTF-8 " ); System.out.println(name); System.out.println(java.net.URLDecoder.decode(name, " UTF-8 " )); 输出为：             %E6%B5%8B%E8%AF%95             %25E6%25B5%258B%25E8%25AF%2595             %E6%B5%8B%E8%AF%95             测试 第一次编码后将汉字编码为%和字母数字的格式，而第二次编码的时候是对%字母数字进行编码，虽然解码的时候使用的是ISO-8859-1，但是对于%和字母数字而言用ISO-8859-1和UTF-8解码出来的是一样的，此时就回到了汉字被编码过一次的字符串了，当再次进行解码的时候使用UTF-8就回将它转会汉字。 顶 0 踩 0 我的同类文章 j2ee （37） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968791次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 91
URL:: http://blog.csdn.net/kongqz/article/details/9208767

ParseText::
android apk的反编译 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 android apk的反编译 2013-06-30 19:18 1315人阅读 评论 (0) 收藏 举报 分类： android （18） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 一、目标 将apk文件反编译成为java文件，进行技术学习 这里我将自己的项目的一个apk进行了反编译演示，apk名称 zhouyi.apk 二、工具软件下载 这里我用的apkdb，安装正常后（具体安装过程请参考官方文档），右键菜单中会有”反编译APK“文件的选项，这里反编译后的产出就是一大堆的smail文件。文件目录自动创建为zhouyi这个目录。 但是这个.smail后缀的文件是无法阅读的还是需要继续反编译 接下来就要展示如何将这个.smail文件继续反编译为java文件 三、操作步骤 1、将zhouyi目录拷贝到 odex目录下 2、经过上一步之后zhouyi目录中会有.smali文件，再使用命令：java -jar smali.jar zhouyi/ -o zy.dex就会得到一个zy.dex文件 这个时候直接右键点击zy.dex文件，看到菜单中的“查看源码”就能看到相关的源码信息了，当然他也会同样自动生成一个zy_dex2jar.jar文件在当前目录中。 以下是手动做法，也同样有效： 3、把这个zy.dex文件考到apkdb的craining目录下，执行命令：d2j-dex2jar.bat zy.dex，便会得到zy_dex2jar.jar文件 4、zy_dex2jar.jar使用jdgui打开就可以看见java代码了 以上仅为参考作用.仅供娱乐与学习 所以最好的程序，建议采用cs结构，用webview的来远程调取才能保证代码算法的不泄露。 上一篇 中文乱码在java中URLEncoder.encode方法要调用两次解决 下一篇 如何开启nginx 的https服务 顶 0 踩 0 我的同类文章 android （18） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968783次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 92
URL:: http://blog.csdn.net/kongqz/article/details/9250689

ParseText::
如何开启nginx 的https服务 - The Last Song 的专栏 - 博客频道 - CSDN.NET The Last Song 的专栏 Where the sun descends along.I run the long long way from home to find a heart that's made of story 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何开启nginx 的https服务 2013-07-05 11:52 3910人阅读 评论 (0) 收藏 举报 分类： linux （46） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。 众所周知，https用的是443端口，如果我们将web服务端口设置为80，同时将443端口开启。那么我们只能在浏览器地址栏看到443这个端口号，但是如果我们将443作为web服务的入口，并进行监听设置，那么浏览器https后的地址栏就不会看到443端口号，大致配置如下。 这里我们除了配置443端口，还购买了versign的证书，一并部署到nginx服务器上。 server { listen 443; server_name www.111.com; ssl on; ssl_certificate /key/server.pem; ssl_certificate_key /key/server.key; ssl_client_certificate /key/root.cer; ssl_session_timeout 5m; ssl_protocols SSLv2 SSLv3 TLSv1; ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; ssl_prefer_server_ciphers on; location / { root /111; index index.html index.htm; } } 上一篇 android apk的反编译 下一篇 webtrends 分析报告 顶 0 踩 0 我的同类文章 linux （46） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 kongqz 访问： 968786次 积分： 10453 等级： 积分：10453 排名： 第769名 原创： 222篇 转载： 52篇 译文： 13篇 评论： 204条 文章搜索 文章分类 zookeeper (5) j2ee (38) java 加解密 (20) jms (8) jquery (8) linux (47) lost (0) 持续集成 (13) memcache (6) ofbiz (8) oracle/mysql (23) spring (13) struts2 (5) webservice (1) 云计算 (2) 电子商务 (30) 算法 (3) 随笔 (26) BPM (3) godaddy (3) android (19) 架构 (29) jms (1) 文章存档 2015年12月 (7) 2014年05月 (1) 2013年08月 (7) 2013年07月 (1) 2013年06月 (2) 2013年05月 (18) 2013年04月 (2) 2013年03月 (6) 2013年02月 (2) 2013年01月 (1) 2012年12月 (2) 2012年11月 (1) 2012年10月 (1) 2012年09月 (5) 2012年08月 (15) 2012年07月 (6) 2012年06月 (2) 2012年05月 (3) 2012年04月 (10) 2012年03月 (2) 2012年01月 (2) 2011年12月 (2) 2011年11月 (4) 2011年10月 (7) 2011年09月 (14) 2011年08月 (11) 2011年07月 (3) 2011年06月 (1) 2011年04月 (10) 2011年03月 (24) 2011年02月 (1) 2011年01月 (1) 2010年12月 (11) 2010年11月 (1) 2010年09月 (1) 2010年06月 (1) 2010年03月 (2) 2010年02月 (2) 2010年01月 (1) 2009年12月 (1) 2009年09月 (1) 2009年05月 (12) 2009年04月 (2) 2009年03月 (37) 2009年02月 (6) 2009年01月 (3) 2008年12月 (6) 2008年10月 (7) 2008年09月 (19) 阅读排行 java的System.getProperty()方法可以获取的值 (105819) ssh-keygen的使用方法 (82210) memcache的一致性hash算法使用 (30844) 建立大型电商团队的参考 (23324) js获取当前系统时间 (19429) 导入maven项目出现 Unsupported IClasspathEntry kind=4 (19318) linux下查看动态链接库so文件的依赖的相关组建 (19214) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (16242) 数字签名算法RSA (15201) 对称加密算法-DES以及DESede算法 (14517) 评论排行 火车票订票系统的几点优化思考 (58) java的System.getProperty()方法可以获取的值 (23) memcache的一致性hash算法使用 (9) hibernate中调用存储过程 (7) jnative在linux下对c程序的动态链接库的调用问题及解决方案 (6) 对称加密算法-AES算法（高级数据加密标准） (6) struts2+jquery+easyui+datagrid+json 组合显示一个列表组件 (5) myeclipse9 创建maven工程出错 (4) Activemq5.2.0的spring开发 (4) ssh-keygen的使用方法 (3) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 互联网科普-什么是天猫 u010926964 : 长知识了 配置nginx+tomcat u010449283 : 谢谢！ myeclipse9 创建maven工程出错 ddtsdd : 我把jar放在org.apache.maven.archetypes这个目录下还是不行啊，cmd就直... java的System.getProperty()方法可以获取的值 wgcnqad : 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 jquery中遍历读取json串中的对象 u010601966 : 学习了 谢谢 非对称加密算法-ElGamal算法 mmliuman : java的System.getProperty()方法可以获取的值 ussoppCaption : 学习啦，谢谢楼主的分享。 java的System.getProperty()方法可以获取的值 u014028063 : 想获取系统内存信息怎么操作啊 memcache的一致性hash算法使用 iijjll : 学习了 在suse下安装mysql5.1.49 kiss_y_o_u : 很久没有见到过这么详细的文章了，实用。

Recno:: 93
URL:: http://blog.csdn.net/leftfist/article/details/49822095

ParseText::
源代码字符编码不一致导致显示乱码 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 源代码字符编码不一致导致显示乱码 标签： 源代码 编码 2015-11-13 19:20 764人阅读 评论 (1) 收藏 举报 分类： .NET （209） 作者同类文章 X 程序人生 （29） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 从服务器端传过来的字符串，显示在网页上，居然是乱码！ 设置网页的编码，不行； 试图将该字符串解码，也不行。 而且更奇怪的是，同样是这份WEB项目，有些同事的机器上跑，却很正常。 当时正在加班，项目很赶，就没有处理。静下来后，想了想，可能是对应的源代码文件编码不对。在VS2015上打开该文件，点菜单栏上的 文件 - 高级保存选项，赫然显示编码是GB2312，而其他代码文件是UTF-8。改过来后，问题修正。 其实，这种因为源代码本身编码不一致导致的乱码也不是第一次遇到了，用java的时候就常常出现。 临事而迷。 上一篇 泛型方法的局限及解决之道 下一篇 晨会 顶 0 踩 0 我的同类文章 .NET （209） 程序人生 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042234次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 94
URL:: http://blog.csdn.net/leftfist/article/details/49839971

ParseText::
操作系统学习笔记：大容量存储器的结构 - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 操作系统学习笔记：大容量存储器的结构 标签： 操作系统 存储 2015-12-02 22:15 1143人阅读 评论 (1) 收藏 举报 分类： 计算机基础 （30） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 一、大容量存储器结构简介 概述次级和三级存储器设备的物理结构 1、磁盘 大容量外存。 传输速率：驱动器和计算机之间的数据传输速率。 定位时间：随机访问时间，由寻道时间（移动磁臂到所要柱面所需时间）和旋转等待时间（等待所要的扇区旋转到磁臂下所需时间）组成。 磁盘驱动器通过一组称为I/O总线（IO bus)的线与计算机相连。有多种总线，如EIDE、ATA、SATA、USB、FC和SCSI。 由称为控制器的特殊处理器执行总线上的数据传输。分为主机控制器和磁盘控制器。主机控制器在计算机上，总线末端；磁盘控制器在磁盘内。计算机通过内存映射端口向主机控制器发送一个命令，主机控制器接着通过消息将命令传送给磁盘控制器，最后由磁盘控制器操纵磁盘驱动器硬件以执行命令。磁盘控制器通常有内置缓存。 2、磁带 二、磁盘结构 可以看做一个一维的逻辑块数组。逻辑块是最小的传输单位，通常为512B。可以通过低级格式化来设置逻辑块大小。 一维逻辑块数组按顺序映射到磁盘的扇区。扇区0是最外面柱面的第一个磁道的第一个扇区，如此由外到内排列。这样理论上能将逻辑块号转换为柱面号+磁道号+扇区号组成的老式磁盘地址。但这种转换实属不易，因为磁盘会有缺陷扇区，映射时必须用其他空闲扇区来顶替；其次是有些磁盘，每个磁道的扇区数并不是一样的。原因是离心远的磁道比较长，扇区数更多。为保持磁盘读写数据速率恒定，有两种方法：1是磁道位密度均匀，读写外磁道时，转速要比相对靠内的磁道快，此为常量线性速度（CLV）；2是转速不变，但外磁道密度降低，此为恒定圆角速度（CAV）。 三、磁盘附属 计算机访问磁盘存储有两种方式，一是通过IO端口或主机附属存储，二是通过分布式文件系统的远程主机， 称为网络附属存储。 1、主机附属存储 通过本地IO端口访问。有多种技术：IDE、ATA、SATA、SCSI或FC。后2种常用在高端工作站和服务器。SCSI是个总线结构；FC是高速串行结构。 有多种存储设备可用于主机附属存储，包括硬盘、RAID阵列、CD、DVD和磁带。 2、网络附属存储 数据网络总远程访问的专用存储系统。客户机通过远程进程调用接口来访问NAS。远程进程调用（RPC）可通过IP网络的TCP或UDP来进行。存储单元通常用带有RPC接口软件的RAID阵列。 网络附加存储为局域网（靠，那云计算是咋回事？）上所有计算机提供了一个共享存储的方便方法。但效率及性能不如主机附加存储。 iSCSI是一种新的网络附加存储协议，使用IP网络协议来实现SCSI协议。 3、存储区域网络 存储区域网络（SAN）是服务器与存储单元之间的私有网络，采用存储协议而不是网络协议。优势在于灵活性，多个主机和存储阵列可以附加在同一SAN上，存储动态分配给主机。SAN能够让服务器集群共享同一存储，或者让存储阵列与多个主机直连。与存储阵列相比，SAN端口更多更低成本。 FC是一种最常见的SAN互联。而Infiniband是一种新兴的专门总线架构，在服务器和存储单元之间提供高速互联网络硬件和软件支持。 四、磁盘调度 访问磁盘的时间包括两个主要部分：寻道时间和旋转延迟。寻道时间是磁臂将磁头移动到包含目标扇区的柱面的时间，旋转延迟是磁盘需要将目标扇区转动到磁头下的时间。磁盘带宽是传输速率。可以通过调整访问顺序来调度磁盘IO，提高速度和带宽。 每当一个进程需要进行磁盘IO，就向操作系统发出一个系统调用。如果磁盘和控制器空闲，那么请求会马上处理，否则会到磁盘请求队列排队。这就牵涉到磁盘调度算法。 1、FCFS调度 先来先服务（FCFS）。公平，但不是最快的。因为磁头可能会疲于奔命，而无法顺路处理。 2、SSTF调度 最短寻道时间优先算法。磁头移动过程中，沿路处理请求。该算法可能导致一些请求永远得不到处理，因为请求源源不断涌来，远处的只能傻傻的等待。 3、SCAN调度 磁臂从一端向另一端移动，沿路处理请求。当到达另一端时，往回走，沿路处理，如此循环往复。又称为电梯算法。 4、C-SCAN调度 SCAN的变种。从磁头移到另一端时，沿路处理请求。到达另一端时，往回走，但并不处理，而是回到原先起点后再开始。 5、LOOK调度 SCAN和C-SCAN其实并不是从一端跑到另一端的终点，而是只移动到一个方向的最远请求点就往回走了。返回时也如是。称为LOOK和C-LOOK。 6、磁盘调度算法的选择 算法多多，如何选择？ 磁盘服务请求很大程度上受文件分配方法影响。连续分配的文件请求点位置相近，而链接或索引文件物理分散，大量的磁头移动。 另外，磁盘调度不仅仅由磁盘控制器决定，也受操作系统控制。 五、磁盘管理 1、磁盘格式化 分为低级格式化和格式化。 低级格式化又称为物理格式化，作用是将新磁盘分成扇区以便磁盘控制器能读和写。每个扇区有相应的数据结构，会有扇区号码和纠错代码。如何划分扇区的大小是个问题。通常磁盘出厂时已被低格处理。 而我们自己进行的格式化，相应地称为逻辑格式化。是操作系统将文件系统写到磁盘上。在此之前，还应该进行分区，将磁盘分为一个或多个柱面组成的分区。 有的操作系统或数据库软件直接将某个分区不经过逻辑分区就使用，此为生磁盘，上面没有任务文件系统数据结构，只作为一个大顺序数组。 为了提高效率，大多数操作系统将块集中到一大块，称为簇。磁盘IO通过块完成，但文件系统IO通过簇完成。 2、引导块 计算机开机或重启时，需要运行一个初始化程序。它初始化系统的各个方面，从CPU寄存器到设备控制器和内存，接着启动操作系统。对大多数计算机而言，自举程序保存在主板的ROM中，但这只是自举程序的小部分，其作用是进一步从磁盘上调入更完整的自举程序。这部分完整程序保存在磁盘的启动块上，启动块位于磁盘的固定位置。拥有启动分区的磁盘称为启动磁盘或系统磁盘。 3、坏块 每个磁盘或多或少存在坏块。对这些块有多种处理方式。比如IDE控制器，逻辑格式化的时候，会在FAT条目中写上标记表示其不可用；SCSI磁盘维护一个坏块链表，使用过程中不断更新。控制器会用备用块来逻辑替代坏块。坏块链表和备用块在低格时就已存在。 六、交换空间管理 交换指内容在磁盘和内存间的移动。当物理内存不够，进程将从内存移到磁盘以释放内存空间。当然，交换与虚拟内存技术和交换页结合，不必对整个进程进行交换。 因为虚拟内存使用磁盘作为内存的扩充，而磁盘比内存要慢得多，所以交换空间会严重影响性能。而交换空间管理是操作系统的一个底层任务，目的正是为虚拟内存提供最佳吞吐量。 1、交换空间的使用 不同操作系统使用方式不同。有的将交换空间用于保存整个进程映像，包括代码段和数据段；也有的用以存储换出的内存页。 2、交换空间位置 可以在普通文件系统上创建，或者在一个独立的磁盘分区上进行；或者干脆使用生磁盘。普通文件系统需要遍历目录结构和磁盘分配数据，效率较低；生磁盘则效率较好。 3、交换空间管理 七、RAID结构 RAID,磁盘冗余阵列。 过去，RAID由许多小的、便宜的磁盘组成，作为大而昂贵磁盘的替代品；现如今，RAID还在使用，是因为其高可靠性和高传输率。 1、通过冗余改善可靠性 如镜像 2、通过并行处理改善性能 如条带化 3、RAID级别 如RAID0，RAID1，RAID5等 八、稳定存储实现 系统为每个逻辑块维护两个物理副本。输出操作按如下方式执行： 1、将信息写到第一块物理块上 2、当第一次写成功完成时，再将同样信息写到第二块物理块上 3、只有在第二次写成功完成时，才声明写操作成功完成 从差错中恢复时，每对物理块都要检查。两块无错且内容相同，万事大吉；一块有错，则用另一块替换；两块无错但内容不同，则用第二块内容替代第一块。 由于等待磁盘写（同步IO）操作的完成相当费时，许多存储阵列增加了NVRAM（非易失）作为缓存。 九、三级存储结构 指可移动存储设备。 1、三级存储设备 1）可移动磁盘 可移动磁盘，光盘等 2）磁带 3）未来技术 2、操作系统支持 操作系统的两个主要任务是管理硬件和为应用程序提供一个虚拟机器的抽象。对于磁盘，操作系统提供了两种抽象，一是生设备，一种是文件系统。那么，当存储介质是可移动时，操作系统如何处理？ 1）应用接口 像处理固定盘一样处理可移动磁盘。而打开整个磁带以作为生设备。 2)文件命名 另一个问题是如何命名可移动介质上的文件。因为不固定，所以不能像固定磁盘那样，通过盘符+路径之类的名字来区分。现代操作系统通常是对可移动介质的命名空间问题不加处理，而由应用系统和用户来决定。 3）层次存储管理 可移动存储通常用来做备份。 3、性能 三级存储器最重要的三个性能指标为速度、可靠性和价格。 上一篇 单元测试 下一篇 sql里的in对应linq的写法 及 IQueryable转化为Dictionary 顶 0 踩 0 我的同类文章 计算机基础 （30） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042231次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 95
URL:: http://blog.csdn.net/leftfist/article/details/49932583

ParseText::
Attribute（特性） - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 Attribute（特性） 标签： .net 2015-11-19 19:42 707人阅读 评论 (0) 收藏 举报 分类： .NET （209） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 一向都觉得.NET的Attribute好神秘。一个方框框住的东西，置身于类、方法的头部，本身不在类或方法里面，但又会起作用，有时作用还很大，仿佛充满了魔力。简直给人一种无冕之王，幕后之黑手的感觉！ 某十几年前已经开始接触C#，却对这个Attribute充满了迷茫。原因固然跟本人懒惰成性，不思进取，从业十几年，不是“有十几年工作经验，而是一条经验用了十几年”有关，也因为我当初自学的C#教材，什么宝典，什么从入门到精通之类，都没有介绍这个东东。就算查，也不知道它叫啥。你看看： 后来有人叫它：特性。总算知道了。 其实Attribute本身就是一个类。换言之，它就是代码。虽然没有放在类、方法里面，只放在头部，好像就是个说明而已，但其实，它们本身就是代码的一部分。编译器、CLR能够识别、并处理它们，做出不同的反应，所以说到底，这有啥好神秘的？我只是脑筋转不过弯来罢了。 就是在我们自己的代码里面，也可以直接使用的： protected override void OnActionExecuting (ActionExecutingContext filterContext) { bool hasPermission = true ; var permissionAttributes = filterContext .ActionDescriptor .GetCustomAttributes( typeof (PermissionAttribute), false ) .Cast<PermissionAttribute>(); if (permissionAttributes == null || permissionAttributes.Count() == 0 ) { //如果action没有指定权限，则继承controller的指定 permissionAttributes = filterContext .ActionDescriptor .ControllerDescriptor .GetCustomAttributes( typeof (PermissionAttribute), false ) .Cast<PermissionAttribute>(); } } 所谓的PermissionAttribute，是自己写的一个跟权限有关的特性 public class PermissionAttribute : FilterAttribute, IActionFilter { public List< int > Permissions { get ; set ; } public PermissionAttribute ( params int [] parameters) { Permissions = parameters.ToList(); } } 可以用在action或controller上 [Permission(( int )EnumBusinessPermission.DictionaryAdmin)] public ActionResult Create () { SysField model = new SysField(); return View( "Edit" , model); } 上一篇 晨会 下一篇 WEB服务器安装oracle jdbc 顶 0 踩 0 我的同类文章 .NET （209） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042230次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 96
URL:: http://blog.csdn.net/leftfist/article/details/49999549

ParseText::
WEB服务器安装oracle jdbc - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 WEB服务器安装oracle jdbc 标签： oracle java 2015-11-23 19:09 672人阅读 评论 (4) 收藏 举报 分类： oracle （5） 作者同类文章 X Java （15） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 WEB服务器，如果想采用jdbc访问另一台Oracle数据库服务器，那么它应该先安装Oracle客户端，或者要安装oracle jdbc。 那么怎样安装oracle jdbc呢？ 1、到oracle下载jdbc包。我们那台WEB服务器装的是JDK6,那么下载的是ojdbc6.jar 2、将ojdbc6拷贝到 $JAVA_HOME\jre\lib\ext ，重启服务器 搞定 上一篇 Attribute（特性） 下一篇 单元测试 顶 0 踩 0 我的同类文章 oracle （5） Java （15） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042232次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 97
URL:: http://blog.csdn.net/leftfist/article/details/50319375

ParseText::
如何才能成为一名架构师？ - 左直拳的马桶_日用桶 - 博客频道 - CSDN.NET 左直拳的马桶_日用桶 我可以把手按在马桶盖上发誓：所有的文章都是我自己屙的 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 如何才能成为一名架构师？ 标签： 架构师 2015-12-16 11:27 1426人阅读 评论 (8) 收藏 举报 分类： 程序人生 （29） 作者同类文章 X 版权声明：本文为博主原屙文章，喜欢你就担走。 如何才能成为一名架构师？ 要搞清这个问题，我觉得不如先弄清楚啥是架构师。因为说要学会哪些技术，就可以或者才能成为一名架构师，这好像有点不靠谱：如何成为架构师应该没有一份明确的清单的吧，如果有，那大家岂不是照单抓药就行啦？结果是架构师满街跑，成为10元2个的廉价货。但这种情况从未出现。 那么，啥是架构师？ 骚瑞，我也不知道，因为我还不是架构师。只能说，我心目中的架构师是酱紫的： 1、首先这是一个技术牛人。会好多好多的技术，仿佛就没有搞不定的问题； 2、其次见闻极广，当前主流技术就不用说了，许多IT技术、IT产品，一般人可能听都没听过，但他却知道，即使没有接触过也能说出个大概，知道是干啥用的，用在何种场景，优点劣处如何。 3、因此，要搞个什么项目，技术选型，搭建框架，甚至人员安排招聘，公司第一个会想到他，即使不是他担纲主演，至少也会咨询他的意见。 第三条是前2条的结果，而1、2之中，重要性又以第2条为最。因为许多人都是解决具体问题的高手，但不全面，因此不能算架构师。 项目我们都做得多了，凡有项目都有架构，就看是啥架构而已。所以搭建过架构的，也不能算架构师。 但如数家珍地会列举各种技术和产品，缺乏实战经验，那是赵括再世，也不能算架构师。 由此可知，成为架构师是一个厚积薄发的过程，有技术，有经验，有眼光的人才能胜任。 我2003年就过了高程（现在叫软件设计师），但这么多年下来，却没有成长为一名架构师，每天都在钻营一些鸡毛蒜皮，这从我的博客也能看出来，都是一些不值一提的雕虫小技。靠积累这些语法，优雅代码，具体应用，永远都不可能成为一名架构师。 那么我应该怎么办？ 上一篇 sql里的in对应linq的写法 及 IQueryable转化为Dictionary 下一篇 如何清空文件上传控件里的选定文件（路径） 顶 1 踩 0 我的同类文章 程序人生 （29） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 leftfist 访问： 1042233次 积分： 18400 等级： 积分：18400 排名： 第244名 原创： 707篇 转载： 0篇 译文： 0篇 评论： 486条 狡兔三桶 左直拳的马桶_夜用桶 左子行述（我的围脖） 马桶里的倒影（我的摄影） 文章搜索 文章分类 系统架构 (14) 计算机基础 (31) 程序人生 (30) 设计模式 (22) 学习笔记 (54) 软件工程 (12) Web (86) .NET (210) Java (16) JavaScript (96) node.js (23) sql server (122) oracle (6) nosql (4) mongoDB (10) Redis (2) mySql (2) Android (8) PhoneGap (4) WCF (6) ASP.NET MVC (15) EF (6) IIS (17) Linux (9) IM (2) oAuth (2) json (8) XML (3) git (2) 应用 (20) WPF (15) 一片冰心在夜壶 (113) 测试 (1) linq (0) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一) 最新评论 node.js应用Redis初步 u012215022 : mark 如何才能成为一名架构师？ hy3225569 : 是啊，前端搞过，后台搞过，没有擅长的，我还是只井底之蛙，学习的道路还很长。 如何才能成为一名架构师？ vipzhxsh : @pwc1996:虽然我也处在这么一个阶段，但我觉得吧，没有人什么都会，只是他们比我们见的多一点，想... 如何才能成为一名架构师？ l1458272482 : @pwc1996:同意，总感觉自己技术高不成底不就 如何才能成为一名架构师？ sinat_29754435 : 从顶层向下学习，底层知识永远学不完 如何才能成为一名架构师？ linyt : 需要公司有这样的职位和相关的工作经验以有项目实践，你才能成长为架构师，我也在努力中。 如何才能成为一名架构师？ cytzrs : 向高人学习了 如何才能成为一名架构师？ zhanghongjie0302 : 10000小时原理！ 如何才能成为一名架构师？ pwc1996 : 我想成为网络工程师，但是也不知道怎么着手，今天学c++，明天研究java，后天又学php，大后天又去... 单元测试 wuye110 : cunit

Recno:: 98
URL:: http://blog.csdn.net/u010850027/article/details/50152375

ParseText::
TortoiseSVN文件夹图标不显示 - 丁国华 廊坊师范学院信息技术提高班 第十期 - 博客频道 - CSDN.NET 丁国华 廊坊师范学院信息技术提高班 第十期 傻丫头和高科技产物小心翼翼的初恋 目录视图 摘要视图 订阅 学院APP首次下载，可得50C币！     欢迎来帮助开源“进步”     当讲师？爱学习？投票攒课吧     认识Atlassian Datacenter产品     深圳小伙伴的福利来啦 TortoiseSVN文件夹图标不显示 2015-12-07 08:04 563人阅读 评论 (3) 收藏 举报 分类： --------【项目实战】 （41） 作者同类文章 X ● 成长之路 （80） 作者同类文章 X 版权声明：本文为博主原创文章，未经博主允许不得转载。        伴随着十二月的脚步，小编带领的市委组织部项目有条不紊的进行着，在最近的项目中遇到一个问题TortoiseSVN文件夹的图标不显示，为什么小编已经安装好TortoiseSVN了，发现文件夹的图标还是系统的默认图标，难道她在跟小编玩捉迷藏，怎么这么淘气nie？抓住每个学习的机会，困难是上天送给小编化了妆了礼物，经过一番百度，小编简单来总结一下TortoiseSVN文件夹图标不显示的问题，希望可以帮助到有需要的小伙伴`(*∩_∩*)′！         第一步、win+r打开运行框，输入regedit打开注册表，如下图所示：                    第二步、在注册表里面查找ShellIconOverlayIdentifiers，如下图所示：                    第三步、睁开小伙伴们美丽的大眼镜，找到所有关于Tortoise项，如下图所示：                    第四步、将TortoiseNormal、TortoiseModified ...... TortoiseUnversioned等项的名字重命名0TortoiseNormal、0TortoiseModified...... 0TortoiseUnversioned，修改完之后重启，看看有怎么样的惊喜等着我们nie，来看一下小编的截图，如下图如示：                   到这里，问题并没有结束，就在小编打开项目的时候，解决方案各个文件夹的前面没有图标，这又是什么鬼？难道刚才的捉迷藏没有玩儿过瘾，既然说到了svn中的图标，小编就来简单的介绍一下svn中的各种小图标代表的意义：          绿色号代表正常；          红色叹号代表修改；          黄色叹号代表冲突；          灰色号代表读文件夹；          红色差号代表删除；          黄色锁代表锁定；          蓝色加号代表新增；          灰色减号代表忽略。接着小编来介绍一下如何解决各个文件夹前面为什么没有小图标，第一步我们找到visualsvn里面的Get Solution from Subversion选项，如下所示：                      第二步、在Repository URL中填写正确的SVN地址，点击ok，如下图所示：                      第三步、点击ok即可，如下图所示：                      最后我们来看一下，我们的小图标有没有淘气了nie，如下所示：                     开心ing，小图标终于出来了，希望对小伙伴们有帮助。          小编寄语： 该博文，小编主要简单介绍了svn的两个小问题，一个是Tortoise文件夹图标不显示的问题，只需要改动一下注册表里面的内容就可以了，第二个小问题，各个解决方案前面的小图标不显示，解决的关键在于，要保证所在项目中svn的地址正确即可。遇到问题，解决问题，一个个小困难是上天化了妆的礼物，要好好珍惜哦`(*∩_∩*)！ 上一篇 如何使用excel画甘特图 下一篇 SSH网上商城---需求分析+表关系分析 顶 2 踩 0 我的同类文章 --------【项目实战】 （41） ● 成长之路 （80） http://blog.csdn.net 猜你在找 查看评论 * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场 个人资料 u010850027 访问： 397327次 积分： 24873 等级： 积分：24873 排名： 第128名 原创： 187篇 转载： 0篇 译文： 0篇 评论： 8837条 博客专栏 CSS+DIV 文章：9篇 阅读：34405 数据库 文章：10篇 阅读：25230 软件设计师 文章：10篇 阅读：18444 VB.NET 文章：12篇 阅读：20363 大话设计模式 文章：22篇 阅读：32288 C# 文章：6篇 阅读：10001 UML 文章：14篇 阅读：25479 软件工程 文章：13篇 阅读：16222 QQ之家 连接我们的ODBC 网易博客带你走进不一样的世界 文章分类 ● 基础知识 (15) --------【数据库】 (10) --------【计算机基础】 (5) ● 编程语言 (12) --------【C #学习】 (6) --------【VB.NET学习】 (2) --------【java】 (4) ● 架构设计 (61) --------【设计模式】 (23) --------【EntityFramework】 (2) --------【Linq】 (1) --------【MVC】 (2) --------【WCF】 (2) --------【UI设计】 (2) --------【Axure】 (2) --------【软件工程】 (13) --------【UML之旅】 (15) ● 成长之路 (81) --------【自考路上】 (2) --------【年终总结】 (3) --------【初雪之恋】 (2) --------【项目实战】 (42) --------【心灵鸡汤】 (14) --------【实习之旅】 (14) --------【伴着书香】 (3) --------【软考路上】 (14) --------【Android】 (14) ● BS之旅 (24) --------【html之路】 (1) --------【ASP.NET学习】 (3) --------【JavaScript】 (2) --------【CSS+DIV】 (9) --------【JQuery】 (6) --------【ajax】 (1) --------【XML】 (2) ● java之恋 (2) --------【SSH】 (2) 文章存档 2015年12月 (5) 2015年11月 (4) 2015年10月 (4) 2015年09月 (5) 2015年08月 (5) 2015年07月 (7) 2015年06月 (5) 2015年05月 (4) 2015年04月 (4) 2015年03月 (5) 2015年02月 (5) 2015年01月 (10) 2014年12月 (11) 2014年11月 (6) 2014年10月 (7) 2014年09月 (4) 2014年08月 (6) 2014年07月 (7) 2014年06月 (4) 2014年05月 (13) 2014年04月 (7) 2014年03月 (10) 2014年02月 (8) 2014年01月 (12) 2013年12月 (10) 2013年11月 (5) 2013年10月 (3) 2013年09月 (4) 2013年08月 (3) 2013年07月 (2) 2013年06月 (2) 阅读排行 未完成的IT路停在回车键---2014年末总结篇 (12823) Android仿淘宝购物车demo (5575) 我的高效编程秘诀 (4892) 红色是个危险色 (4458) 国庆 音标 赖世雄 (4384) 耿建玲视频总结 (4275) 精通CSS+DIV网页样式与布局--图片效果 (4249) 机房收费系统之结尾 (4234) 精通CSS+DIV网页样式与布局--滤镜的使用 (4202) Axure如何建立共享项目、如何编辑共享项目、如何获取共享项目 (4164) 评论排行 初雪之恋 (292) 未完成的IT路停在回车键---2014年末总结篇 (216) 软考之路--开始的开始，我们都是孩子 (156) 存储过程---留住你的美丽(上) (138) 一转眼13年 马踏14间 (132) 一步一步学会系统发布 (128) VB.NET版机房收费系统---导出Excel表格 (124) 大话设计模式之装饰模式 (123) 写博客--用文字整理生命 (102) Android仿淘宝购物车demo (90) 推荐文章 *App竞品技术分析 （6）热修复 *架构设计：系统间通信（17）——服务治理与Dubbo 中篇（分析） *一款炫酷Loading动画--加载失败 *图解堆算法、链表、栈与队列（多图预警） *Android中ContentProvider组件详解 *Android平台Camera实时滤镜实现方法探讨(九)--磨皮算法探讨(一)
